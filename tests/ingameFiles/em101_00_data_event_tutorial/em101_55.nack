importactions Great_Jagras as great_jagras

def node_000
	conclude 
endf 

def node_001
	if self.current_quest().is_rank(rank.MR) 
		>> node_003 
	else 
		>> node_005 
	endif 
	return 
endf 

def node_002
	if self.current_quest().is_rank(rank.MR) 
		>> node_004 
	else 
		>> node_006 
	endif 
	return 
endf 

def node_003
	>> node_152 
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Deviljho) 
						if self.target(49) 
							[RegisterVar2 |-] 
							self.force_area_change2() 
						else 
						endif 
						random (50) >> node_007 
						elser (50) >> node_011 
						elser (0) >> node_009 
						elser (0) >> node_008 
						endr 
					elif self.target_is(em.Savage_Deviljho) 
						if self.target(49) 
							[RegisterVar2 |-] 
							self.force_area_change2() 
						else 
						endif 
						random (50) >> node_007 
						elser (50) >> node_011 
						elser (0) >> node_009 
						elser (0) >> node_008 
						endr 
					elif function#30(2) 
						if self.target.in_combat() 
							if function#101() 
								random (0) >> node_007 
								elser (20) >> node_011 
								elser (80) >> node_009 
								elser (0) >> node_008 
								endr 
							else 
								random (0) >> node_007 
								elser (0) >> node_011 
								elser (0) >> node_009 
								elser (100) >> node_008 
								endr 
							endif 
						else 
							if function#101() 
								random (0) >> node_007 
								elser (60) >> node_011 
								elser (20) >> node_009 
								elser (20) >> node_008 
								endr 
							else 
								random (0) >> node_007 
								elser (0) >> node_011 
								elser (0) >> node_010 
								elser (100) >> node_008 
								endr 
							endif 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (0) >> node_007 
							elser (0) >> node_011 
							elser (100) >> node_009 
							elser (0) >> node_008 
							endr 
						else 
							random (0) >> node_007 
							elser (70) >> node_011 
							elser (30) >> node_010 
							elser (0) >> node_008 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (0) >> node_007 
							elser (20) >> node_011 
							elser (80) >> node_009 
							elser (0) >> node_008 
							endr 
						else 
							random (0) >> node_007 
							elser (60) >> node_011 
							elser (20) >> node_010 
							elser (20) >> node_008 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_004
	>> node_152 
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Deviljho) 
						if self.target(49) 
							[RegisterVar2 |-] 
							self.force_area_change2() 
						else 
							random (50) >> node_007 
							elser (50) >> node_011 
							elser (0) >> node_009 
							elser (0) >> node_008 
							endr 
						endif 
					elif self.target_is(em.Savage_Deviljho) 
						if self.target(49) 
							[RegisterVar2 |-] 
							self.force_area_change2() 
						else 
							random (50) >> node_007 
							elser (50) >> node_011 
							elser (0) >> node_009 
							elser (0) >> node_008 
							endr 
						endif 
					elif function#30(2) 
						if self.target.in_combat() 
							if function#101() 
								random (30) >> node_007 
								elser (20) >> node_011 
								elser (30) >> node_009 
								elser (20) >> node_008 
								endr 
							else 
								random (30) >> node_007 
								elser (0) >> node_011 
								elser (0) >> node_010 
								elser (70) >> node_008 
								endr 
							endif 
						else 
							if function#101() 
								random (30) >> node_007 
								elser (20) >> node_011 
								elser (50) >> node_009 
								elser (0) >> node_008 
								endr 
							else 
								random (30) >> node_007 
								elser (0) >> node_011 
								elser (0) >> node_010 
								elser (70) >> node_008 
								endr 
							endif 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (30) >> node_007 
							elser (0) >> node_011 
							elser (70) >> node_010 
							elser (0) >> node_008 
							endr 
						else 
							random (50) >> node_007 
							elser (0) >> node_011 
							elser (50) >> node_010 
							elser (0) >> node_008 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (30) >> node_007 
							elser (20) >> node_011 
							elser (30) >> node_010 
							elser (20) >> node_008 
							endr 
						else 
							random (30) >> node_007 
							elser (20) >> node_011 
							elser (50) >> node_010 
							elser (0) >> node_008 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_005
	>> node_152 
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Deviljho) 
						if self.target(49) 
							[RegisterVar2 |-] 
							self.force_area_change2() 
						else 
						endif 
						random (50) >> node_007 
						elser (50) >> node_011 
						elser (0) >> node_009 
						elser (0) >> node_008 
						endr 
					elif self.target_is(em.Savage_Deviljho) 
						if self.target(49) 
							[RegisterVar2 |-] 
							self.force_area_change2() 
						else 
						endif 
						random (50) >> node_007 
						elser (50) >> node_011 
						elser (0) >> node_009 
						elser (0) >> node_008 
						endr 
					elif function#30(2) 
						if self.target.in_combat() 
							random (0) >> node_007 
							elser (0) >> node_011 
							elser (0) >> node_009 
							elser (100) >> node_008 
							endr 
						else 
							random (0) >> node_007 
							elser (0) >> node_011 
							elser (0) >> node_010 
							elser (100) >> node_008 
							endr 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (0) >> node_007 
							elser (0) >> node_011 
							elser (100) >> node_009 
							elser (0) >> node_008 
							endr 
						else 
							random (0) >> node_007 
							elser (70) >> node_011 
							elser (30) >> node_010 
							elser (0) >> node_008 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (0) >> node_007 
							elser (20) >> node_011 
							elser (80) >> node_009 
							elser (0) >> node_008 
							endr 
						else 
							random (0) >> node_007 
							elser (60) >> node_011 
							elser (20) >> node_010 
							elser (20) >> node_008 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_006
	>> node_152 
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Deviljho) 
						if self.target(49) 
							[RegisterVar2 |-] 
							self.force_area_change2() 
						else 
							random (50) >> node_007 
							elser (50) >> node_011 
							elser (0) >> node_009 
							elser (0) >> node_008 
							endr 
						endif 
					elif self.target_is(em.Savage_Deviljho) 
						if self.target(49) 
							[RegisterVar2 |-] 
							self.force_area_change2() 
						else 
							random (50) >> node_007 
							elser (50) >> node_011 
							elser (0) >> node_009 
							elser (0) >> node_008 
							endr 
						endif 
					elif function#30(2) 
						if self.target.in_combat() 
							random (30) >> node_007 
							elser (0) >> node_011 
							elser (0) >> node_010 
							elser (70) >> node_008 
							endr 
						else 
							random (30) >> node_007 
							elser (0) >> node_011 
							elser (0) >> node_010 
							elser (70) >> node_008 
							endr 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (30) >> node_007 
							elser (0) >> node_011 
							elser (70) >> node_010 
							elser (0) >> node_008 
							endr 
						else 
							random (50) >> node_007 
							elser (0) >> node_011 
							elser (50) >> node_010 
							elser (0) >> node_008 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (30) >> node_007 
							elser (20) >> node_011 
							elser (30) >> node_010 
							elser (20) >> node_008 
							endr 
						else 
							random (30) >> node_007 
							elser (20) >> node_011 
							elser (50) >> node_010 
							elser (0) >> node_008 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_007
	return 
endf 

def node_008
	if self.in_map(st.Special_Arena).in_area(-1) 
		>> node_010 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
		>> node_010 
	elif self.quest_id(61606) 
		>> node_010 
	else 
		if [RegisterVar2 <= 8] 
			[RegisterVar2 |-] 
			self.force_area_change2() 
		elif [RegisterVar2 <= 5] 
			random (30) 
						[RegisterVar2 |-] 
						self.force_area_change2() 
			elser (70) 
			endr 
		else 
		endif 
		[RegisterVar2 ++] 
		if self.target.in_combat() 
			>> node_010 
			[RegisterVar2 ++] 
		else 
			[RegisterVar2 ++] 
			>> node_011 
		endif 
		self.targetEnemy(target_em.closest_entity) 
		if self.distance_2d_to_target().leq(3000) 
			if self.vertical_distance_to_target().leq(1000) 
				if function#5F() 
					repeat 
				elif self.in_combat() 
				else 
					repeat 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_009
	>> node_010 
	>> node_010 
	random (70) 
	elser (30) 
				return 
	endr 
	>> node_010 
	random (70) 
	elser (30) 
				return 
	endr 
	>> node_010 
	return 
endf 

def node_010
	if self.quest_id(61606) 
		self.targetEnemy(target_em.closest_entity) 
		if function#101() 
			random (50) >> node_231 
			elser (50) >> node_230 
			endr 
		else 
			random (65) >> node_233 
			elser (35) >> node_232 
			endr 
		endif 
	else 
		self.targetEnemy(target_em.closest_entity) 
		if function#101() 
			random (40) >> node_014 
			elser (60) >> node_015 
			endr 
		else 
			random (40) >> node_012 
			elser (60) >> node_013 
			endr 
		endif 
	endif 
	return 
endf 

def node_011
	if self.quest_id(61606) 
		>> node_010 
	else 
		self.targetEnemy(target_em.closest_entity) 
		>> node_042 
		if self.in_combat() 
			>> node_027 
		else 
			if self.target.in_combat() 
				>> node_027 
			else 
				>> node_016 
			endif 
		endif 
	endif 
	return 
endf 

def node_012
	self.targetEnemy(target_em.closest_entity) 
	if self.vertical_distance_to_target().leq(500) 
		if self.distance_2d_to_target().leq(1000) 
			>> node_046 
		else 
			-> great_jagras.run(1,2,0,1000,2000) 
		endif 
	else 
		-> great_jagras.run(1,2,0,1000,2000) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	>> node_069 
	return 
endf 

def node_013
	self.targetEnemy(target_em.closest_entity) 
	if self.vertical_distance_to_target().leq(500) 
		if self.distance_2d_to_target().leq(1000) 
			>> node_046 
		else 
			-> great_jagras.run(1,2,0,1000,2000) 
		endif 
	else 
		-> great_jagras.run(1,2,0,1000,2000) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	>> node_071 
	return 
endf 

def node_014
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(1000) 
		>> node_095 
	else 
		>> node_094 
	endif 
	return 
endf 

def node_015
	self.targetEnemy(target_em.closest_entity) 
	if self.vertical_distance_to_target().leq(500) 
		if self.distance_2d_to_target().leq(1200) 
			>> node_089 
		else 
			>> node_046 
			self.targetEnemy(target_em.closest_entity) 
			-> great_jagras.fat_dash_attack_no_end() 
			self.targetEnemy(target_em.closest_entity) 
			-> great_jagras.fat_overturn_dash() 
		endif 
	else 
		>> node_014 
	endif 
	return 
endf 

def node_016
	if function#101() 
		-> great_jagras.fat_threat() 
	else 
		-> great_jagras.threat() 
	endif 
	return 
endf 

def node_017
	if function#101() 
		-> great_jagras.fat_threat_short() 
	else 
		-> great_jagras.threat_short() 
	endif 
	return 
endf 

def node_018
	if function#AB() 
		function#AA() 
		>> node_017 
	else 
	endif 
	return 
endf 

def node_019
	if function#101() 
		-> great_jagras.fat_lost_search() 
	else 
		-> great_jagras.lost_search() 
	endif 
	return 
endf 

def node_020
	if function#101() 
		-> great_jagras.fat_short_search() 
	else 
		-> great_jagras.short_search() 
	endif 
	return 
endf 

def node_021
	if function#101() 
		-> great_jagras.fat_lost_search() 
	else 
		-> great_jagras.lost_search() 
	endif 
	return 
endf 

def node_022
	if function#101() 
		-> great_jagras.fat_tired() 
	else 
		-> great_jagras.tired() 
	endif 
	return 
endf 

def node_023
	if function#101() 
		-> great_jagras.fat_refresh() 
	else 
		-> great_jagras.refresh() 
	endif 
	return 
endf 

def node_024
	if function#101() 
		-> great_jagras.fat_smell() 
	else 
		-> great_jagras.smell() 
	endif 
	return 
endf 

def node_025
	if self.alert_out_of_combat() 
		if function#101() 
			-> great_jagras.fat_lost_search() 
		else 
			-> great_jagras.lost_search() 
		endif 
	else 
		if function#101() 
			-> great_jagras.fat_search() 
		else 
			-> great_jagras.search() 
		endif 
	endif 
	return 
endf 

def node_026
	if function#101() 
		-> great_jagras.fat_threat_short() 
	else 
		-> great_jagras.threat_short() 
	endif 
	return 
endf 

def node_027
	if function#101() 
		-> great_jagras.fat_wait() 
	else 
		-> great_jagras.wait() 
	endif 
	return 
endf 

def node_028
	if function#101() 
		-> great_jagras.fat_run(1,2,0,600,1500) 
	else 
		-> great_jagras.run(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_029
	if self.distance_3d_to_target().leq(700) 
	else 
		>> node_028 
		repeat 
	endif 
	return 
endf 

def node_030
	if function#101() 
		-> great_jagras.fat_run(1,2,0,600,1500) 
	else 
		-> great_jagras.run(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_031
	>> node_030 
	>> node_030 
	return 
endf 

def node_032
	>> node_030 
	>> node_030 
	>> node_030 
	return 
endf 

def node_033
	if self.distance_2d_to_target().leq(800) 
		return 
	else 
		>> node_030 
	endif 
	if self.distance_2d_to_target().leq(800) 
		return 
	else 
		>> node_030 
	endif 
	if self.distance_2d_to_target().leq(800) 
		return 
	else 
		>> node_030 
	endif 
	return 
endf 

def node_034
	if self.distance_2d_to_target().leq(2000) 
		>> node_039 
	else 
		return 
	endif 
	return 
endf 

def node_035
	if function#101() 
		-> great_jagras.fat_turn() 
	else 
		-> great_jagras.quick_turn() 
	endif 
	return 
endf 

def node_036
	if self.distance_2d_to_target().leq(750) 
		-> great_jagras.battle_turn() 
	else 
		>> node_030 
	endif 
	return 
endf 

def node_037
	if self.distance_2d_to_target().leq(750) 
		-> great_jagras.fat_battle_turn() 
	else 
		>> node_030 
	endif 
	return 
endf 

def node_038
	if function#101() 
		>> node_037 
	else 
		>> node_036 
	endif 
	return 
endf 

def node_039
	if function#101() 
		-> great_jagras.fat_back_turn() 
	else 
		-> great_jagras.back_turn() 
	endif 
	return 
endf 

def node_040
	if function#101() 
		-> great_jagras.fat_turn_life() 
	else 
		-> great_jagras.turn() 
	endif 
	return 
endf 

def node_041
	if self.angle_2d_cw_between(15,345) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_042
	if self.angle_2d_cw_between(30,330) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_043
	if self.angle_2d_cw_between(45,315) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_044
	if self.angle_2d_cw_between(60,300) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_045
	if self.angle_2d_cw_between(75,285) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_046
	if self.angle_2d_cw_between(90,270) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_047
	if self.angle_2d_cw_between(10,320) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_048
	if self.angle_2d_cw_between(15,345) 
		>> node_038 
	else 
	endif 
	return 
endf 

def node_049
	if self.angle_2d_cw_between(30,330) 
		>> node_038 
	else 
	endif 
	return 
endf 

def node_050
	if self.angle_2d_cw_between(45,315) 
		>> node_038 
	else 
	endif 
	return 
endf 

def node_051
	if self.angle_2d_cw_between(60,300) 
		>> node_038 
	else 
	endif 
	return 
endf 

def node_052
	if self.angle_2d_cw_between(75,285) 
		>> node_038 
	else 
	endif 
	return 
endf 

def node_053
	if self.angle_2d_cw_between(90,270) 
		>> node_038 
	else 
	endif 
	return 
endf 

def node_054
	if self.angle_2d_cw_between(10,320) 
		>> node_038 
	else 
	endif 
	return 
endf 

def node_055
	if self.angle_2d_cw_between(15,345) 
		>> node_039 
	else 
	endif 
	return 
endf 

def node_056
	if self.angle_2d_cw_between(30,330) 
		>> node_039 
	else 
	endif 
	return 
endf 

def node_057
	if self.angle_2d_cw_between(45,315) 
		>> node_039 
	else 
	endif 
	return 
endf 

def node_058
	if self.angle_2d_cw_between(60,300) 
		>> node_039 
	else 
	endif 
	return 
endf 

def node_059
	if self.angle_2d_cw_between(90,270) 
		>> node_039 
	else 
	endif 
	return 
endf 

def node_060
	if self.angle_2d_cw_between(15,345) 
		>> node_040 
	else 
	endif 
	return 
endf 

def node_061
	if self.angle_2d_cw_between(30,330) 
		>> node_040 
	else 
	endif 
	return 
endf 

def node_062
	if self.angle_2d_cw_between(45,315) 
		>> node_040 
	else 
	endif 
	return 
endf 

def node_063
	if self.angle_2d_cw_between(60,300) 
		>> node_040 
	else 
	endif 
	return 
endf 

def node_064
	if self.angle_2d_cw_between(90,270) 
		>> node_040 
	else 
	endif 
	return 
endf 

def node_065
	>> node_046 
	if self.angle_2d_cw_between(0,180) 
		-> great_jagras.scratch_l() 
	else 
		-> great_jagras.scratch_r() 
	endif 
	return 
endf 

def node_066
	if self.angle_2d_cw_between(0,180) 
		-> great_jagras.tail_attack_l() 
	else 
		-> great_jagras.tail_attack_r() 
	endif 
	return 
endf 

def node_067
	if self.angle_2d_cw_between(270,90) 
		>> node_065 
	else 
		>> node_066 
	endif 
	return 
endf 

def node_068
	if self.angle_2d_cw_between(270,90) 
		>> node_065 
	else 
		>> node_066 
	endif 
	if self.enraged() 
		>> node_079 
	else 
		>> node_078 
	endif 
	return 
endf 

def node_069
	if self.current_quest().is_rank(rank.MR) 
		>> node_046 
		-> great_jagras.simple_bite() 
	elif self.current_quest().is_rank(rank.HR) 
		>> node_046 
		-> great_jagras.simple_bite() 
	else 
		if self.angle_2d_cw_between(330,30) 
			-> great_jagras.simple_bite() 
		else 
			>> node_035 
			-> great_jagras.very_simple_bite() 
		endif 
	endif 
	return 
endf 

def node_070
	>> node_047 
	-> great_jagras.rush_bite_first() 
	return 
endf 

def node_071
	>> node_045 
	-> great_jagras.hook_bite() 
	return 
endf 

def node_072
	if self.target(44) 
		>> node_071 
	else 
		if self.current_quest().is_rank(rank.MR) 
			if self.distance_2d_to_target().leq(650) 
				>> node_039 
				>> node_073 
			else 
				>> node_073 
			endif 
		elif self.current_quest().is_rank(rank.HR) 
			if self.distance_2d_to_target().leq(650) 
				>> node_039 
				>> node_073 
			else 
				>> node_073 
			endif 
		else 
			>> node_073 
		endif 
	endif 
	return 
endf 

def node_073
	if self.target(44) 
		>> node_071 
	else 
		>> node_046 
		-> great_jagras.catch_attack() 
		>> node_074 
	endif 
	return 
endf 

def node_074
	if self.target.helpless_1() 
		>> node_075 
		>> node_076 
		>> node_077 
	else 
	endif 
	return 
endf 

def node_075
	if self.distance_3d_to_target().leq(800) 
		-> great_jagras.catch_turn() 
	else 
		>> node_029 
	endif 
	return 
endf 

def node_076
	if function#103(1000) 
		-> great_jagras.catch_eat_to_fat() 
		reset 
	else 
		-> great_jagras.catch_eat() 
	endif 
	return 
endf 

def node_077
	if function#101() 
		return 
	else 
		-> great_jagras.catch_release() 
	endif 
	return 
endf 

def node_078
	if self.distance_2d_to_target().leq(800) 
		random (25) >> node_069 
		elser (15) >> node_070 
		elser (10) >> node_071 
		elser (50) 
		endr 
	else 
	endif 
	return 
endf 

def node_079
	if self.distance_2d_to_target().leq(800) 
		random (50) >> node_069 
		elser (30) >> node_070 
		elser (20) >> node_071 
		endr 
	else 
	endif 
	return 
endf 

def node_080
	random (50) >> node_069 
	elser (25) >> node_067 
	elser (25) >> node_071 
	endr 
	return 
endf 

def node_081
	-> great_jagras.tired() 
	return 
endf 

def node_082
	if function#101() 
	else 
		if self.distance_2d_to_target().leq(700) 
		elif self.distance_2d_to_target().leq(1200) 
			if self.target(44) 
			else 
				if self.target.helpless_0() 
					random (50) >> node_073 
					elser (50) 
					endr 
				else 
					random (20) >> node_073 
					elser (80) 
					endr 
				endif 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_083
	-> great_jagras.jump_attack() 
	return 
endf 

def node_084
	if self.current_quest().is_rank(rank.MR) 
		if self.distance_3d_to_target().leq(750) 
			>> node_053 
		else 
			>> node_046 
		endif 
	elif self.current_quest().is_rank(rank.HR) 
		if self.distance_3d_to_target().leq(750) 
			>> node_053 
		else 
			>> node_046 
		endif 
	else 
		>> node_046 
	endif 
	if self.angle_2d_cw_between(0,180) 
		-> great_jagras.fat_scratch_attack_l() 
	else 
		-> great_jagras.fat_scratch_attack_r() 
	endif 
	return 
endf 

def node_085
	if self.angle_2d_cw_between(0,180) 
		-> great_jagras.fat_tail_attack_l() 
	else 
		-> great_jagras.fat_tail_attack_r() 
	endif 
	return 
endf 

def node_086
	if self.angle_2d_cw_between(270,90) 
		>> node_084 
	else 
		>> node_085 
	endif 
	return 
endf 

def node_087
	if self.current_quest().is_rank(rank.MR) 
		if self.distance_3d_to_target().leq(750) 
			>> node_049 
		else 
			>> node_042 
		endif 
		-> great_jagras.fat_body_press() 
	elif self.current_quest().is_rank(rank.HR) 
		if self.distance_3d_to_target().leq(750) 
			>> node_049 
		else 
			>> node_042 
		endif 
		-> great_jagras.fat_body_press() 
	else 
		>> node_042 
		-> great_jagras.fat_body_press() 
	endif 
	return 
endf 

def node_088
	if self.angle_2d_cw_between(0,180) 
		-> great_jagras.fat_overturn_l() 
	else 
		-> great_jagras.fat_overturn_r() 
	endif 
	return 
endf 

def node_089
	if self.angle_2d_cw_between(315,45) 
		>> node_087 
	elif self.angle_2d_cw_between(45,135) 
		>> node_088 
	elif self.angle_2d_cw_between(135,225) 
		>> node_087 
	else 
		>> node_088 
	endif 
	return 
endf 

def node_090
	if self.current_quest().is_rank(rank.MR) 
		if self.distance_3d_to_target().leq(750) 
			>> node_053 
		else 
			>> node_046 
		endif 
		-> great_jagras.fat_dash_attack_no_end() 
		-> great_jagras.fat_overturn_dash() 
	elif self.current_quest().is_rank(rank.HR) 
		if self.distance_3d_to_target().leq(750) 
			>> node_053 
		else 
			>> node_046 
		endif 
		-> great_jagras.fat_dash_attack_no_end() 
		-> great_jagras.fat_overturn_dash() 
	else 
		>> node_046 
		-> great_jagras.fat_dash_attack() 
	endif 
	return 
endf 

def node_091
	-> great_jagras.fat_dash_attack() 
	return 
endf 

def node_092
	-> great_jagras.fat_dash_attack_no_end() 
	-> great_jagras.fat_overturn_dash() 
	return 
endf 

def node_093
	if self.current_quest().is_rank(rank.MR) 
		if self.distance_2d_to_target().leq(600) 
			>> node_053 
			-> great_jagras.fat_back_reverse_petit_start() 
		else 
			>> node_042 
			-> great_jagras.fat_reverse_petit() 
		endif 
	elif self.current_quest().is_rank(rank.HR) 
		if self.distance_2d_to_target().leq(600) 
			>> node_053 
			-> great_jagras.fat_back_reverse_petit_start() 
		else 
			>> node_042 
			-> great_jagras.fat_reverse_petit() 
		endif 
	else 
		>> node_042 
		-> great_jagras.fat_reverse_petit() 
	endif 
	return 
endf 

def node_094
	-> great_jagras.fat_reverse_petit() 
	return 
endf 

def node_095
	-> great_jagras.fat_back_reverse_petit_start() 
	return 
endf 

def node_096
	if self.distance_2d_to_target().leq(1000) 
		random (50) >> node_089 
		elser (50) 
		endr 
	else 
		random (50) >> node_090 
		elser (50) 
		endr 
	endif 
	return 
endf 

def node_097
	if self.distance_2d_to_target().leq(1000) 
		>> node_089 
	else 
		>> node_090 
	endif 
	return 
endf 

def node_098
	-> great_jagras.fat_reverse() 
	return 
endf 

def node_099
	-> great_jagras.fat_back_reverse_start() 
	return 
endf 

def node_100
	*&
	-> great_jagras.fat_overturn_r() 
	return 
endf 

def node_101
	if self.distance_2d_to_target().leq(800) 
		>> node_099 
	else 
		>> node_042 
		>> node_098 
	endif 
	return 
endf 

def node_102
	-> great_jagras.fat_to_slim() 
	return 
endf 

def node_103
	if self.distance_3d_to_target().leq(600) 
	else 
		>> node_104 
		repeat 
	endif 
	return 
endf 

def node_104
	if function#101() 
		-> great_jagras.fat_dying_walk(1,2,0,500,1500) 
	else 
		-> great_jagras.dying_walk(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_105
	if function#C9() 
		if function#101() 
			-> great_jagras.fat_dying_sleep(1,2,0,500,1500) 
		else 
			-> great_jagras.dying_sleep(1,2,0,500,1500) 
		endif 
	else 
		function#CA() 
	endif 
	return 
endf 

def node_106
	self.targetArea(22) @ parameter2:300 
	>> node_035 
	return 
endf 

def node_107
	if function#101() 
		>> node_087 
	else 
		>> node_069 
	endif 
	return 
endf 

def node_108
	if function#101() 
		-> great_jagras.fat_ride_rage_head() 
	else 
		-> great_jagras.ride_rage_head() 
	endif 
	return 
endf 

def node_109
	if function#101() 
		-> great_jagras.fat_ride_rage_body() 
	else 
		-> great_jagras.ride_rage_body() 
	endif 
	return 
endf 

def node_110
	if function#101() 
		-> great_jagras.fat_ride_rage_body_lv2() 
	else 
		-> great_jagras.ride_rage_body_lv2() 
	endif 
	return 
endf 

def node_111
	if self.distance_3d_to_target().leq(300) 
		>> node_039 
	else 
	endif 
	>> node_112 
	return 
endf 

def node_112
	if self.distance_3d_to_target().leq(600) 
	else 
		if function#101() 
			-> great_jagras.fat_run(2,0,0,1000) 
		else 
			-> great_jagras.run(2,0,0,1000) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_113
	if function#101() 
		-> great_jagras.fat_ride_rage_crash_head() 
	else 
		-> great_jagras.ride_rage_crash_head() 
	endif 
	return 
endf 

def node_114
	if function#101() 
		-> great_jagras.fat_ride_rage_crash_head_lv2() 
	else 
		-> great_jagras.ride_rage_crash_head_lv2() 
	endif 
	return 
endf 

def node_115
	if function#101() 
		-> great_jagras.fat_ride_rage_crash_body() 
	else 
		-> great_jagras.ride_rage_crash_body() 
	endif 
	return 
endf 

def node_116
	if function#101() 
		-> great_jagras.fat_ride_rage_crash_body_lv2() 
	else 
		-> great_jagras.ride_rage_crash_body_lv2() 
	endif 
	return 
endf 

def node_117
	if function#101() 
		-> great_jagras.fat_wait() 
	else 
		-> great_jagras.wait() 
	endif 
	return 
endf 

def node_118
	if function#101() 
		-> great_jagras.fat_ride_tired() 
	else 
		-> great_jagras.ride_tired() 
	endif 
	return 
endf 

def node_119
	if function#101() 
		>> node_042 
		if self.fatigued() 
			>> node_022 
		else 
			>> node_027 
		endif 
	else 
		>> node_042 
		if self.fatigued() 
			>> node_022 
		else 
			>> node_027 
		endif 
	endif 
	return 
endf 

def node_120
	if function#101() 
		if self.targetEnemy(target_em.any_monster) 
			random (20) >> node_042 
			elser (80) 
			endr 
		else 
		endif 
		random (20) -> great_jagras.fat_short_search() 
		elser (35) -> great_jagras.fat_anger_search() 
		elser (10) -> great_jagras.fat_smell() 
		elser (20) -> great_jagras.fat_smell_max() 
		elser (15) >> node_027 
		endr 
	else 
		if self.targetEnemy(target_em.any_monster) 
			random (20) >> node_042 
			elser (80) 
			endr 
		else 
		endif 
		random (20) -> great_jagras.short_search() 
		elser (35) -> great_jagras.anger_search() 
		elser (10) -> great_jagras.smell() 
		elser (20) -> great_jagras.smell_max() 
		elser (15) >> node_027 
		endr 
	endif 
	return 
endf 

def node_121
	if function#101() 
		>> node_042 
		random (15) -> great_jagras.fat_anger_search() 
		elser (35) >> node_027 
		elser (50) >> node_017 
		endr 
	else 
		>> node_042 
		random (15) -> great_jagras.anger_search() 
		elser (35) >> node_027 
		elser (50) >> node_017 
		endr 
	endif 
	return 
endf 

def node_122
	if function#101() 
		-> great_jagras.fat_walk(1,2,0,600,1500) 
	else 
		-> great_jagras.walk(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_123
	if function#101() 
		>> node_042 
		-> great_jagras.fat_smell() 
	else 
		>> node_042 
		-> great_jagras.smell() 
	endif 
	return 
endf 

def node_124
	if function#101() 
		self.targetEnemy(58) 
		random (10) >> node_122 
		elser (90) 
		endr 
		self.targetEnemy(22) @ parameter2:2000 
		random (40) >> node_042 
		elser (60) 
		endr 
		random (70) -> great_jagras.fat_short_search() 
		elser (30) -> great_jagras.fat_smell() 
		endr 
	else 
		self.targetEnemy(58) 
		random (10) >> node_122 
		elser (90) 
		endr 
		self.targetEnemy(22) @ parameter2:2000 
		random (40) >> node_042 
		elser (60) 
		endr 
		random (70) -> great_jagras.short_search() 
		elser (30) -> great_jagras.smell() 
		endr 
	endif 
	return 
endf 

def node_125
	if function#101() 
		if self.distance_3d_to_target().leq(800) 
			>> node_039 
		elif self.distance_3d_to_target().leq(1200) 
			>> node_056 
		else 
		endif 
	else 
		if self.distance_3d_to_target().leq(800) 
			>> node_039 
		elif self.distance_3d_to_target().leq(1200) 
			>> node_056 
		else 
		endif 
	endif 
	return 
endf 

def node_126
	if function#101() 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> great_jagras.fat_run(2,6,0,1000,800) 
		endif 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> great_jagras.fat_run(2,6,0,1000,800) 
		endif 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> great_jagras.fat_run(2,6,0,1000,800) 
		endif 
	else 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> great_jagras.run(2,6,0,1000,800) 
		endif 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> great_jagras.run(2,6,0,1000,800) 
		endif 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> great_jagras.run(2,6,0,1000,800) 
		endif 
	endif 
	return 
endf 

def node_127
	if function#101() 
		-> great_jagras.fat_lost_search() 
	else 
		-> great_jagras.lost_search() 
	endif 
	return 
endf 

def node_128
	if function#101() 
		-> great_jagras.fat_lost_search() 
	else 
		-> great_jagras.lost_search() 
	endif 
	return 
endf 

def node_129
	if function#101() 
		-> great_jagras.fat_lost_search() 
	else 
		-> great_jagras.lost_search() 
	endif 
	return 
endf 

def node_130
	if function#101() 
		-> great_jagras.fat_smell() 
	else 
		-> great_jagras.smell() 
	endif 
	return 
endf 

def node_131
	if function#101() 
		-> great_jagras.fat_smell_max() 
	else 
		-> great_jagras.smell_max() 
	endif 
	return 
endf 

def node_132
	if function#101() 
		if self.enraged() 
			-> great_jagras.fat_run(1,2,0,600,500) 
		else 
			-> great_jagras.fat_walk(1,2,0,600,500) 
		endif 
	else 
		if self.enraged() 
			-> great_jagras.run(1,2,0,600,500) 
		else 
			-> great_jagras.walk(1,2,0,600,500) 
		endif 
	endif 
	return 
endf 

def node_133
	if function#101() 
		if self.enraged() 
			-> great_jagras.fat_run(1,2,0,600,1000) 
		else 
			-> great_jagras.fat_walk(1,2,0,600,1000) 
		endif 
	else 
		if self.enraged() 
			-> great_jagras.run(1,2,0,600,1000) 
		else 
			-> great_jagras.walk(1,2,0,600,1000) 
		endif 
	endif 
	return 
endf 

def node_134
	if function#101() 
		if self.enraged() 
			-> great_jagras.fat_peep_grass_search() 
		else 
			-> great_jagras.fat_peep_grass_search() 
		endif 
	else 
		if self.enraged() 
			-> great_jagras.peep_grass_search() 
		else 
			-> great_jagras.peep_grass_search() 
		endif 
	endif 
	return 
endf 

def node_135
	if self.target(10) 
		if function#101() 
			-> great_jagras.fat_run(2,0,0,1000) 
		else 
			-> great_jagras.run(2,0,0,1000) 
		endif 
	else 
	endif 
	if function#101() 
		>> node_042 
		>> node_087 
	else 
		>> node_045 
		>> node_071 
	endif 
	return 
endf 

def node_136
	if function#101() 
		-> great_jagras.fat_tired() 
	else 
		-> great_jagras.tired() 
	endif 
	return 
endf 

def node_137
	if function#101() 
		-> great_jagras.fat_threat_short() 
	else 
		-> great_jagras.threat_short() 
	endif 
	return 
endf 

def node_138
	if function#101() 
		-> great_jagras.fat_threat_short() 
	else 
		-> great_jagras.threat_short() 
	endif 
	return 
endf 

def node_139
	>> node_154 
	>> node_157 
	self.targetEnemy(34) 
	if self.distance_3d_to_target().leq(1000) 
	else 
		if function#101() 
			-> great_jagras.fat_run(1,2,0,900,1500) 
		else 
			-> great_jagras.run(1,2,0,900,1500) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_140
	self.targetEnemy(34) 
	>> node_024 
	>> node_154 
	>> node_157 
	>> node_042 
	>> node_024 
	>> node_154 
	>> node_157 
	>> node_042 
	>> node_024 
	>> node_154 
	>> node_157 
	return 
endf 

def node_141
	>> node_157 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_3d_to_target().leq(1000) 
	else 
		if function#101() 
			-> great_jagras.fat_run(1,2,0,900,1500) 
		else 
			-> great_jagras.run(1,2,0,900,1500) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_142
	if self.target(11) 
		>> node_145 
		conclude 
	else 
		if self.target_is(em.Anjanath) 
			>> node_042 
			>> node_143 
		elif self.target_is(em.Fulgur_Anjanath) 
			>> node_042 
			>> node_143 
		else 
			>> node_042 
			>> node_144 
		endif 
	endif 
	return 
endf 

def node_143
	if self.target(39) 
		>> node_145 
	else 
		-> great_jagras.grapple_start_attack_em100() 
	endif 
	return 
endf 

def node_144
	if function#101() 
		-> great_jagras.fat_search() 
	else 
		-> great_jagras.predator_bite() 
	endif 
	return 
endf 

def node_145
	if function#101() 
		-> great_jagras.fat_search() 
	else 
		-> great_jagras.scratch_attack_l() 
	endif 
	return 
endf 

def node_146
	if self.distance_3d_to_target().leq(1000) 
	else 
		if function#101() 
			-> great_jagras.fat_walk(1,2,0,900,1500) 
		else 
			-> great_jagras.walk(1,2,0,900,1500) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_147
	>> node_041 
	if self.target_is(em.Aptonoth) @ parameter2:2 
		>> node_148 
	elif self.target_is(em.KestodonM) @ parameter2:2 
		>> node_148 
	elif self.target_is(em.KestodonF) @ parameter2:2 
		>> node_148 
	elif function#103(1000) 
		>> node_149 
	else 
		>> node_150 
	endif 
	return 
endf 

def node_148
	-> great_jagras.predator_turn() 
	if function#104() 
		-> great_jagras.predator_eat_to_fat() 
	else 
	endif 
	return 
endf 

def node_149
	-> great_jagras.meat_eat_to_fat() 
	return 
endf 

def node_150
	-> great_jagras.meat_eat() 
	return 
endf 

def node_151
	if function#102() 
		if function#31(0,10000) 
			self.targetEnemy(target_em.closest_entity) 
			if self.target(13) 
			elif self.target(39) 
			else 
				if self.target(4) 
				else 
					if self.target.in_combat() 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								repeat 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								repeat 
							else 
							endif 
						endif 
					elif self.target(19) 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								repeat 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								repeat 
							else 
							endif 
						endif 
					else 
					endif 
				endif 
			endif 
		elif function#31(68,10000) 
			self.targetEnemy(target_em.closest_entity) 
			if self.target(13) 
			elif self.target(39) 
			else 
				if self.target(4) 
				else 
					if self.target.in_combat() 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								repeat 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								repeat 
							else 
							endif 
						endif 
					elif self.target(19) 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								repeat 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								repeat 
							else 
							endif 
						endif 
					else 
					endif 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_152
	if function#102() 
		if function#31(0,10000) 
			self.targetEnemy(target_em.closest_entity) 
			if self.target(13) 
			elif self.target(39) 
			else 
				if self.target(4) 
				else 
					if self.target.in_combat() 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
							else 
							endif 
						endif 
					elif self.target(19) 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
							else 
							endif 
						endif 
					else 
					endif 
				endif 
			endif 
		elif function#31(68,10000) 
			self.targetEnemy(target_em.closest_entity) 
			if self.target(13) 
			elif self.target(39) 
			else 
				if self.target(4) 
				else 
					if self.target.in_combat() 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
							else 
							endif 
						endif 
					elif self.target(19) 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
							else 
							endif 
						endif 
					else 
					endif 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_153
	if function#102() 
		if function#31(0,10000) 
			self.targetEnemy(target_em.closest_entity) 
			if self.target(13) 
			elif self.target(39) 
			else 
				if self.target(4) 
				else 
					if self.target.in_combat() 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								reset 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								reset 
							else 
							endif 
						endif 
					elif self.target(19) 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								reset 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								reset 
							else 
							endif 
						endif 
					else 
					endif 
				endif 
			endif 
		elif function#31(68,10000) 
			self.targetEnemy(target_em.closest_entity) 
			if self.target(13) 
			elif self.target(39) 
			else 
				if self.target(4) 
				else 
					if self.target.in_combat() 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								reset 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								reset 
							else 
							endif 
						endif 
					elif self.target(19) 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								reset 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								reset 
							else 
							endif 
						endif 
					else 
					endif 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_154
	if function#102() 
		if function#31(0,10000) 
			self.targetEnemy(target_em.closest_entity) 
			if self.target(13) 
			elif self.target(39) 
			else 
				if self.target(4) 
				else 
					if self.target.in_combat() 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						endif 
					elif self.target(19) 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						endif 
					else 
					endif 
				endif 
			endif 
		elif function#31(68,10000) 
			self.targetEnemy(target_em.closest_entity) 
			if self.target(13) 
			elif self.target(39) 
			else 
				if self.target(4) 
				else 
					if self.target.in_combat() 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						endif 
					elif self.target(19) 
						if self.in_combat() 
							if self.fatigued() 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_029 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						endif 
					else 
					endif 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_155
	if function#101() 
	else 
		>> node_156 
	endif 
	return 
endf 

def node_156
	if function#6B(50000) 
		self.targetEnemy(26) 
		>> node_159 
		>> node_160 
		>> node_161 
		reset 
	else 
	endif 
	return 
endf 

def node_157
	if function#101() 
	else 
		>> node_158 
	endif 
	return 
endf 

def node_158
	if function#6B(50000) 
		self.targetEnemy(26) 
		>> node_159 
		>> node_160 
		>> node_161 
		conclude 
	else 
	endif 
	return 
endf 

def node_159
	-> great_jagras.smell() 
	return 
endf 

def node_160
	if self.distance_3d_to_target().leq(600) 
	else 
		-> great_jagras.run(2,1,0,1500,500) 
		repeat 
	endif 
	return 
endf 

def node_161
	>> node_151 
	if function#6B(1200) 
		>> node_147 
	else 
	endif 
	return 
endf 

def node_162
	if self.fatigued() 
	else 
		if function#102() 
			[RegisterVar4 ++] 
			if [RegisterVar4 <= 6] 
				if self.targetEnemy(42) 
					if self.distance_2d_to_target().leq(15000) 
						if self.vertical_distance_to_target().leq(1500) 
							random (70) 
							elser (30) 
										[RegisterVar4 |-] 
										>> node_163 
							endr 
						else 
						endif 
					else 
					endif 
				else 
				endif 
			elif [RegisterVar4 <= 4] 
				if self.targetEnemy(42) 
					if self.distance_2d_to_target().leq(15000) 
						if self.vertical_distance_to_target().leq(1500) 
							random (30) 
							elser (70) 
										[RegisterVar4 |-] 
										>> node_163 
							endr 
						else 
						endif 
					else 
					endif 
				else 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_163
	>> node_024 
	>> node_168 
	if function#105() 
		>> node_166 
		>> node_167 
		reset 
	else 
	endif 
	return 
endf 

def node_164
	if self.in_map(st.Ancient_Forest).in_area(1) 
		>> node_165 
	elif self.in_map(st.Ancient_Forest).in_area(2) 
		>> node_165 
	else 
	endif 
	return 
endf 

def node_165
	random (25) 
				self.targetEnemy(42) 
				>> node_024 
				>> node_168 
				if function#105() 
					>> node_166 
					>> node_167 
					reset 
				else 
				endif 
	elser (75) 
	endr 
	return 
endf 

def node_166
	self.targetEnemy(target_em.closest_entity) 
	>> node_168 
	>> node_169 
	if self.target_is(em.Aptonoth) @ parameter2:1 
		if self.target(13) 
		else 
			repeat 
		endif 
	elif self.target_is(em.KestodonM) @ parameter2:1 
		if self.target(13) 
		else 
			repeat 
		endif 
	elif self.target_is(em.KestodonF) @ parameter2:1 
		if self.target(13) 
		else 
			repeat 
		endif 
	else 
	endif 
	return @ comboSetting:256 
endf 

def node_167
	self.targetEnemy(target_em.closest_entity) 
	if self.target(13) 
		>> node_146 
		>> node_147 
	else 
	endif 
	return @ comboSetting:256 
endf 

def node_168
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_3d_to_target().leq(1000) 
	else 
		if function#101() 
			-> great_jagras.fat_run(1,2,0,900,1500) 
		else 
			-> great_jagras.run(1,2,0,900,1500) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_169
	if self.target(11) 
		>> node_145 
		conclude 
	else 
		if self.target_is(em.Anjanath) 
			>> node_042 
			>> node_143 
		else 
			>> node_042 
			>> node_144 
		endif 
	endif 
	return 
endf 

def node_170
	self.targetArea(target_area.nearest_entrance) 
	if function#101() 
		-> great_jagras.fat_walk(1,2,0,500,1500) 
	else 
		-> great_jagras.walk(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_171
	if self.in_map(st.Guiding_Lands).in_area(-1) 
		if function#101() 
			self.targetArea(target_area.nearest_entrance) 
			-> great_jagras.fat_run(1,2,0,500,1500) 
		else 
			>> node_153 
			>> node_155 
			>> node_145 
			>> node_029 
		endif 
	else 
		if function#101() 
			self.targetArea(target_area.nearest_entrance) 
			-> great_jagras.fat_run(1,2,0,500,1500) 
		else 
			>> node_153 
			>> node_155 
			self.targetArea(target_area.nearest_entrance) 
			-> great_jagras.run(1,2,0,500,1500) 
		endif 
	endif 
	return 
endf 

def node_172
	self.targetArea(target_area.nearest_entrance) 
	if function#101() 
		-> great_jagras.fat_run(1,2,0,400,1500) 
	else 
		-> great_jagras.run(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_173
	self.targetArea(17) 
	>> node_061 
	if function#101() 
		-> great_jagras.fat_search() 
	else 
		if function#5A(10) 
			-> great_jagras.hungry_search() 
		else 
			-> great_jagras.search() 
		endif 
	endif 
	return 
endf 

def node_174
	self.targetArea(17) 
	>> node_061 
	if function#101() 
		-> great_jagras.fat_search() 
	else 
		-> great_jagras.search() 
	endif 
	return 
endf 

def node_175
	self.targetArea(17) 
	>> node_061 
	if function#101() 
		-> great_jagras.fat_sleep() 
	else 
		-> great_jagras.sleep() 
	endif 
	return 
endf 

def node_176
	self.targetArea(17) 
	>> node_061 
	if function#101() 
		-> great_jagras.fat_to_slim() 
	else 
		-> great_jagras.smell() 
	endif 
	return 
endf 

def node_177
	self.targetArea(17) 
	>> node_060 
	if function#101() 
		-> great_jagras.fat_reverse_life() 
		-> great_jagras.fat_threat_short() 
	else 
		-> great_jagras.search() 
	endif 
	return 
endf 

def node_178
	random (35) 
				self.targetArea(21) @ parameter2:250 
	elser (35) 
				self.targetArea(22) @ parameter2:250 
	elser (15) 
				self.targetArea(21) @ parameter2:500 
	elser (15) 
				self.targetArea(22) @ parameter2:500 
	endr 
	return 
endf 

def node_179
	random (50) 
				if function#101() 
					-> great_jagras.fat_wait() 
				else 
					-> great_jagras.wait() 
				endif 
	elser (50) 
	endr 
	return 
endf 

def node_180
	if function#101() 
		-> great_jagras.fat_wait() 
	else 
		-> great_jagras.wait() 
	endif 
	return 
endf 

def node_181
	if function#101() 
		-> great_jagras.fat_in_ground() 
	else 
		-> great_jagras.in_ground() 
	endif 
	return 
endf 

def node_182
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5D() 
		>> node_184 
	elif self.target(3) 
		>> node_185 
	elif self.target(4) 
		>> node_185 
	elif self.target(55) 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_188 
		else 
			>> node_189 
		endif 
	elif self.target(14) 
		>> node_190 
	elif self.target(11) 
		>> node_191 
	elif self.target(12) 
	else 
		>> node_192 
	endif 
	return 
endf 

def node_183
	if [RegisterVar3 <= 10] 
		[RegisterVar3 |-] 
	elif [RegisterVar3 <= 1] 
		[RegisterVar3 ++] 
	else 
	endif 
	return 
endf 

def node_184
	if self.distance_2d_to_target().leq(1500) 
		if self.angle_2d_cw_between(300,60) 
		else 
			function#5E() 
			>> node_020 
		endif 
	else 
		if self.angle_2d_cw_between(300,60) 
			function#5E() 
			>> node_020 
		else 
			function#5E() 
			>> node_021 
		endif 
	endif 
	return 
endf 

def node_185
	>> node_186 
	>> node_187 
	reset 
endf 

def node_186
	self.targetArea(19) 
	if self.distance_3d_to_target().leq(1000) 
	else 
		>> node_029 
	endif 
	return 
endf 

def node_187
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_042 
	>> node_020 
	return 
endf 

def node_188
	>> node_193 
	if self.distance_2d_to_target().leq(1000) 
		if self.target(0) 
			if self.above_target() 
				if function#101() 
					>> node_034 
					random (50) >> node_094 
					elser (50) >> node_095 
					endr 
				else 
					-> great_jagras.jump_attack() 
				endif 
			else 
				if function#101() 
					-> great_jagras.fat_fall_attack() 
				else 
					-> great_jagras.fall_attack() 
				endif 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_189
	>> node_193 
	if self.distance_2d_to_target().leq(1000) 
		if self.target(0) 
			if self.above_target() 
				if function#101() 
					>> node_034 
					random (50) >> node_094 
					elser (50) >> node_095 
					endr 
				else 
					-> great_jagras.jump_attack() 
				endif 
			else 
				if function#101() 
					-> great_jagras.fat_run(1,2,0,0,1500) 
				else 
					-> great_jagras.run(1,2,0,0,1500) 
				endif 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_190
	>> node_193 
	if self.distance_2d_to_target().leq(2000) 
		if self.target(14) 
			if self.above_target() 
				if function#101() 
					>> node_034 
					random (50) >> node_094 
					elser (50) >> node_095 
					endr 
				else 
					-> great_jagras.jump_attack() 
				endif 
			else 
				if function#101() 
					-> great_jagras.fat_fall_attack() 
				else 
					-> great_jagras.fall_attack() 
				endif 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_191
	>> node_195 
	return 
endf 

def node_192
	if self.in_map(st.Ancient_Forest).in_area(2) 
		if self.vertical_distance_to_target().leq(300) 
		elif self.target(52) 
			>> node_195 
		else 
			>> node_195 
		endif 
	elif self.in_map(st.Ancient_Forest).in_area(5) 
		if self.vertical_distance_to_target().leq(300) 
		elif self.target(52) 
			>> node_195 
		else 
			>> node_195 
		endif 
	elif self.in_map(st.Ancient_Forest).in_area(6) 
		if self.vertical_distance_to_target().leq(300) 
		elif self.target(52) 
			>> node_195 
		else 
			>> node_195 
		endif 
	elif self.vertical_distance_to_target().leq(450) 
	else 
		>> node_195 
	endif 
	return 
endf 

def node_193
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			>> node_194 
		endif 
	else 
		>> node_194 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			>> node_194 
		endif 
	else 
		>> node_194 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			>> node_194 
		endif 
	else 
		>> node_194 
	endif 
	return 
endf 

def node_194
	if function#101() 
		-> great_jagras.fat_run(1,2,0,500,1500) 
	else 
		-> great_jagras.run(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_195
	if self.distance_3d_to_target().leq(400) 
	else 
		if function#101() 
			-> great_jagras.fat_run(1,2,0,300,1500) 
		else 
			-> great_jagras.run(1,2,0,300,1500) 
		endif 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		if function#101() 
			-> great_jagras.fat_run(1,2,0,500,1500) 
		else 
			-> great_jagras.run(1,2,0,500,1500) 
		endif 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		if function#101() 
			-> great_jagras.fat_run(1,2,0,500,1500) 
		else 
			-> great_jagras.run(1,2,0,500,1500) 
		endif 
	endif 
	return 
endf 

def node_196
	if self.distance_3d_to_target().leq(1200) 
		>> node_053 
	else 
		>> node_046 
	endif 
	if self.angle_2d_cw_between(0,180) 
		-> great_jagras.fat_scratch_attack_r() 
	else 
		-> great_jagras.fat_scratch_attack_l() 
	endif 
	return 
endf 

def node_197
	if self.angle_2d_cw_between(270,90) 
		>> node_196 
	else 
		>> node_085 
	endif 
	return 
endf 

def node_198
	if self.distance_3d_to_target().leq(1100) 
		>> node_049 
	else 
		>> node_042 
	endif 
	-> great_jagras.fat_body_press() 
	return 
endf 

def node_199
	if self.angle_2d_cw_between(315,45) 
		>> node_198 
	elif self.angle_2d_cw_between(45,135) 
		>> node_088 
	elif self.angle_2d_cw_between(135,225) 
		>> node_198 
	else 
		>> node_088 
	endif 
	return 
endf 

def node_200
	if self.distance_3d_to_target().leq(1100) 
		>> node_053 
	else 
		>> node_046 
	endif 
	-> great_jagras.fat_dash_attack_no_end() 
	-> great_jagras.fat_overturn_dash() 
	return 
endf 

def node_201
	if self.distance_2d_to_target().leq(600) 
		>> node_204 
	elif self.distance_2d_to_target().leq(1200) 
		>> node_207 
	elif self.distance_2d_to_target().leq(1800) 
		>> node_205 
	else 
		>> node_208 
	endif 
	return 
endf 

def node_202
	-> great_jagras.fat_back_turn() @ comboSetting:1 
	-> great_jagras.fat_full_burst_short() @ comboSetting:1 
	-> great_jagras.fat_full_burst_long() 
	return 
endf 

def node_203
	if self.distance_2d_to_target().leq(550) 
		>> node_206 
	else 
		>> node_207 
	endif 
	return 
endf 

def node_204
	-> great_jagras.fat_back_turn() @ comboSetting:1 
	-> great_jagras.fat_full_burst_short() 
	return 
endf 

def node_205
	-> great_jagras.fat_back_turn() @ comboSetting:1 
	-> great_jagras.fat_full_burst_long() 
	return 
endf 

def node_206
	>> node_038 
	-> great_jagras.fat_full_burst_short() 
	return 
endf 

def node_207
	>> node_045 
	-> great_jagras.fat_full_burst_short() 
	return 
endf 

def node_208
	>> node_046 
	-> great_jagras.fat_full_burst_long() 
	return 
endf 

def node_209
	-> great_jagras.fat_full_burst_short() @ comboSetting:1 
	-> great_jagras.fat_full_burst_long() 
	return 
endf 

def node_210
	if self.distance_2d_to_target().leq(1000) 
		random (25) >> node_199 
		elser (25) >> node_201 
		elser (50) 
		endr 
	else 
		random (25) >> node_200 
		elser (25) >> node_201 
		elser (50) 
		endr 
	endif 
	return 
endf 

def node_211
	if self.distance_2d_to_target().leq(1000) 
		random (50) >> node_199 
		elser (50) >> node_201 
		endr 
	else 
		random (50) >> node_200 
		elser (50) >> node_201 
		endr 
	endif 
	return 
endf 

def node_212
	-> great_jagras.max_punch() 
	return 
endf 

def node_213
	>> node_053 
	if self.angle_2d_cw_between(0,180) 
		-> great_jagras.scratch_r() 
	else 
		-> great_jagras.scratch_l() 
	endif 
	return 
endf 

def node_214
	if self.angle_2d_cw_between(270,90) 
		>> node_213 
	else 
		>> node_066 
	endif 
	return 
endf 

def node_215
	if self.angle_2d_cw_between(270,90) 
		>> node_213 
	else 
		>> node_066 
	endif 
	if self.enraged() 
		>> node_226 
	else 
		>> node_225 
	endif 
	return 
endf 

def node_216
	>> node_053 
	-> great_jagras.simple_bite() 
	return 
endf 

def node_217
	if self.distance_2d_to_target().leq(1100) 
		>> node_054 
	else 
		>> node_047 
	endif 
	-> great_jagras.rush_bite_first() 
	return 
endf 

def node_218
	if self.angle_2d_cw_between(285,75) 
		-> great_jagras.hook_bite() 
	else 
		if self.distance_2d_to_target().leq(1100) 
			>> node_052 
		else 
			>> node_045 
		endif 
		-> great_jagras.catch_release() 
	endif 
	return 
endf 

def node_219
	if self.target(44) 
		>> node_218 
	else 
		if self.distance_2d_to_target().leq(1170) 
			>> node_039 
			>> node_220 
		else 
			>> node_220 
		endif 
	endif 
	return 
endf 

def node_220
	if self.target(44) 
		>> node_218 
	else 
		>> node_046 
		-> great_jagras.catch_attack() 
		>> node_221 
	endif 
	return 
endf 

def node_221
	if self.target.helpless_1() 
		>> node_222 
		>> node_223 
		>> node_224 
	else 
	endif 
	return 
endf 

def node_222
	if self.distance_3d_to_target().leq(1440) 
		-> great_jagras.catch_turn() 
	else 
		>> node_029 
	endif 
	return 
endf 

def node_223
	-> great_jagras.catch_eat_to_fat() 
	reset 
	return 
endf 

def node_224
	if function#101() 
		reset 
	else 
		-> great_jagras.catch_release() 
	endif 
	return 
endf 

def node_225
	if self.distance_2d_to_target().leq(1000) 
		random (15) >> node_212 
		elser (15) >> node_216 
		elser (10) >> node_217 
		elser (10) >> node_218 
		elser (50) 
		endr 
	else 
	endif 
	return 
endf 

def node_226
	if self.distance_2d_to_target().leq(1000) 
		random (30) >> node_212 
		elser (20) >> node_216 
		elser (20) >> node_217 
		elser (30) >> node_218 
		endr 
	else 
	endif 
	return 
endf 

def node_227
	random (50) >> node_069 
	elser (25) >> node_067 
	elser (25) >> node_071 
	endr 
	return 
endf 

def node_228
	if self.target(44) 
	else 
		if function#101() 
			if self.distance_2d_to_target().leq(2000) 
				if self.enraged() 
					if self.target.helpless_0() 
						random (25) >> node_201 
						elser (25) >> node_199 
						elser (50) 
						endr 
					else 
					endif 
				else 
					if self.target.helpless_0() 
						random (15) >> node_201 
						elser (15) >> node_199 
						elser (70) 
						endr 
					else 
					endif 
				endif 
			else 
			endif 
		else 
			if self.distance_2d_to_target().leq(1000) 
				if self.target.helpless_0() 
					random (30) >> node_212 
					elser (20) >> node_218 
					elser (50) 
					endr 
				else 
				endif 
			elif self.distance_2d_to_target().leq(2000) 
				if self.target.helpless_0() 
					random (30) >> node_220 
					elser (20) >> node_218 
					elser (50) 
					endr 
				else 
					random (20) >> node_220 
					elser (80) 
					endr 
				endif 
			else 
			endif 
		endif 
	endif 
	return 
endf 

def node_229
	if self.enraged() 
	else 
		if self.distance_2d_to_target().leq(550) 
			random (30) >> node_038 
			elser (70) 
			endr 
		else 
		endif 
	endif 
	return 
endf 

def node_230
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(1500) 
	else 
		-> great_jagras.fat_run(6,2,0,1400,2000) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(1500) 
	else 
		-> great_jagras.fat_run(6,2,0,1400,2000) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	>> node_199 
	return 
endf 

def node_231
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(2000) 
	else 
		-> great_jagras.fat_run(6,2,0,1900,2000) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	>> node_201 
	return 
endf 

def node_232
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(2000) 
	else 
		-> great_jagras.run(6,2,0,1900,2000) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(2000) 
	else 
		-> great_jagras.run(6,2,0,1900,2000) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	>> node_045 
	self.targetEnemy(target_em.closest_entity) 
	-> great_jagras.hook_bite() 
	return 
endf 

def node_233
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(1100) 
	else 
		-> great_jagras.run(6,2,0,1000,2000) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(1100) 
	else 
		-> great_jagras.run(6,2,0,1000,2000) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	-> great_jagras.max_punch() 
	return 
endf 

def node_234
	if function#101() 
		-> great_jagras.fat_run(1,2,0,1000,1500) 
	else 
		-> great_jagras.run(1,2,0,1000,1500) 
	endif 
	return 
endf 

def node_235
	>> node_234 
	>> node_234 
	return 
endf 

def node_236
	>> node_234 
	>> node_234 
	>> node_234 
	return 
endf 

def node_237
	>> node_042 
	-> great_jagras.fat_full_burst_short() 
	return 
endf 

def node_238
	>> node_038 
	-> great_jagras.fat_full_burst_short() 
	return 
endf 

def node_239
	>> node_042 
	-> great_jagras.fat_full_burst_long() 
	return 
endf 

def node_240
	-> great_jagras.fat_back_turn() @ comboSetting:1 
	-> great_jagras.fat_full_burst_long() 
	return 
endf 

def node_241
	if self.distance_2d_to_target().leq(800) 
		>> node_242 
	elif self.distance_2d_to_target().leq(1100) 
		>> node_240 
	else 
		>> node_239 
	endif 
	return 
endf 

def node_242
	if self.distance_2d_to_target().leq(600) 
		>> node_238 
	else 
		>> node_237 
	endif 
	return 
endf 

def node_243
	if self.distance_2d_to_target().leq(1000) 
		random (25) >> node_089 
		elser (25) >> node_241 
		elser (50) 
		endr 
	else 
		random (25) >> node_090 
		elser (25) >> node_241 
		elser (50) 
		endr 
	endif 
	return 
endf 

def node_244
	if self.distance_2d_to_target().leq(1000) 
		random (75) >> node_089 
		elser (25) >> node_241 
		endr 
	else 
		random (70) >> node_090 
		elser (30) >> node_241 
		endr 
	endif 
	return 
endf 

def node_245
	if self.current_quest().is_rank(rank.MR) 
		if self.distance_3d_to_target().leq(750) 
			>> node_053 
		else 
			>> node_046 
		endif 
		-> great_jagras.fat_dash_attack_no_end() 
		-> great_jagras.fat_overturn_dash() 
		random (100) >> node_241 
		elser (0) 
		endr 
	elif self.current_quest().is_rank(rank.HR) 
		if self.distance_3d_to_target().leq(750) 
			>> node_053 
		else 
			>> node_046 
		endif 
		-> great_jagras.fat_dash_attack_no_end() 
		-> great_jagras.fat_overturn_dash() 
	else 
		>> node_046 
		-> great_jagras.fat_dash_attack() 
	endif 
	return 
endf 

def node_246
	>> node_247 
	>> node_157 
	self.targetEnemy(34) 
	if function#106() 
		>> node_145 
		conclude 
	else 
		if self.distance_3d_to_target().leq(1000) 
		else 
			if function#101() 
				-> great_jagras.fat_run(1,2,0,900,1500) 
			else 
				-> great_jagras.run(1,2,0,900,1500) 
			endif 
			repeat 
		endif 
	endif 
	return 
endf 

def node_247
	if function#102() 
		if function#31(0,10000) 
			self.targetEnemy(target_em.closest_entity) 
			if self.target(13) 
			elif self.target(39) 
			else 
				if self.target(4) 
				else 
					if self.target.in_combat() 
						if self.in_combat() 
							if self.fatigued() 
								>> node_248 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_248 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						endif 
					elif self.target(19) 
						if self.in_combat() 
							if self.fatigued() 
								>> node_248 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_248 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						endif 
					else 
					endif 
				endif 
			endif 
		elif function#31(68,10000) 
			self.targetEnemy(target_em.closest_entity) 
			if self.target(13) 
			elif self.target(39) 
			else 
				if self.target(4) 
				else 
					if self.target.in_combat() 
						if self.in_combat() 
							if self.fatigued() 
								>> node_248 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_248 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						endif 
					elif self.target(19) 
						if self.in_combat() 
							if self.fatigued() 
								>> node_248 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						else 
							function#54() 
							function#52() 
							function#54() 
							if function#57(1) 
								>> node_248 
								>> node_043 
								-> great_jagras.grapple_start_attack_em100() 
								conclude 
							else 
							endif 
						endif 
					else 
					endif 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_248
	if function#106() 
		>> node_145 
		conclude 
	else 
		if self.distance_3d_to_target().leq(700) 
		else 
			>> node_028 
			repeat 
		endif 
	endif 
	return 
endf 

