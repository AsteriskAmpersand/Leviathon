importactions Jyuratodus as jyuratodus

def node_000 : 73
	conclude 
endf 

def node_001 : 135
	if self.current_quest().is_rank(rank.MR) 
		>> node_103 
	else 
		if self.targetEnemy(target_em.any_monster) 
			if self.target(13) 
			else 
				if self.vertical_distance_to_target().leq(1000) 
					if self.distance_3d_to_target().leq(3000) 
						if self.target.in_combat() 
							>> node_003 
						else 
							>> node_006 
						endif 
					else 
					endif 
				else 
				endif 
			endif 
		elif self.defense_downed() >> node_014 
		endif 
	endif 
	return 
endf 

def node_002 : 168
	if function#45() 
	else 
		>> node_001 
	endif 
	return 
endf 

def node_003 : 136
	if function#30(2) >> node_004 
	else >> node_005 
	endif 
	return 
endf 

def node_004 : 164
	random (35) 
	elser (0) >> node_011 
	elser (10) >> node_009 
	elser (55) >> node_010 
	endr 
	return 
endf 

def node_005 : 165
	random (35) 
	elser (10) >> node_011 
	elser (55) >> node_009 
	elser (0) >> node_010 
	endr 
	return 
endf 

def node_006 : 137
	if function#30(2) >> node_007 
	else >> node_008 
	endif 
	return 
endf 

def node_007 : 166
	random (10) 
	elser (35) >> node_011 
	elser (0) >> node_009 
	elser (55) >> node_010 
	endr 
	return 
endf 

def node_008 : 167
	random (35) 
	elser (55) >> node_011 
	elser (10) >> node_009 
	elser (0) >> node_010 
	endr 
	return 
endf 

def node_009 : 138
	if function#101() 
		>> node_023 
	elif self.distance_3d_to_target().gt(1500) 
		>> node_040 
	else 
		random (70) >> node_040 
		elser (30) >> node_036 
		endr 
	endif 
	return 
endf 

def node_010 : 139
	if [RegisterVar2 <= 3] 
		>> node_065 
		>> node_087 
		self.force_area_change2() 
	elif [RegisterVar2 == 2] 
		>> node_062 
		>> node_053 
		>> node_086 
	else 
		>> node_086 
		if function#102() >> node_040 
		else 
			>> node_062 
			>> node_053 
		endif 
	endif 
	return 
endf 

def node_011 : 140
	>> node_062 
	>> node_053 
	return 
endf 

def node_012 : 145
	if function#101() 
		-> jyuratodus.grapple_with_em044_mediation_threat() 
	else 
		-> jyuratodus.grapple_with_em044_mediation_threat_swim() 
	endif 
	return 
endf 

def node_013 : 209
	>> node_009 
	>> node_086 
	>> node_086 
	>> node_086 
	>> node_010 
	return 
endf 

def node_014 : 162
	function#31(49,1000) 
	self.targetEnemy(target_em.closest_entity) 
	random (50) >> node_068 
	elser (50) >> node_011 
	endr 
	>> node_015 
	return 
endf 

def node_015 : 163
	>> node_062 
	if function#101() >> node_024 
	else >> node_034 
	endif 
	return 
endf 

def node_016 : 147
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5D() 
		function#5E() 
		>> node_068 
		self.targetArea(4) 
	elif self.target.mudded() >> node_017 
	endif 
	return 
endf 

def node_017 : 174
	>> node_031 
	if self.distance_2d_to_target().gt(1200) >> node_061 
	endif 
	random (50) >> node_035 
	elser (50) >> node_037 
	endr 
	return 
endf 

def node_018 : 158
	if self.target(4) >> node_019 
	elif self.target(3) >> node_019 
	elif self.target(12) >> node_020 
	elif self.target(14) >> node_020 
	elif self.target(11) >> node_021 
	elif self.target(0) >> node_020 
	elif self.target(55) >> node_022 
	elif self.target(52) >> node_020 
	elif self.vertical_distance_to_target().gt(500) >> node_020 
	endif 
	return 
endf 

def node_019 : 159
	self.targetArea(9) 
	if function#104() 
	else >> node_052 
	endif 
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> node_058 
		repeat 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_062 
		random (37) >> node_068 
		elser (23) >> node_073 
		elser (40) >> node_053 
		endr 
	endif 
	return 
endf 

def node_020 : 160
	if function#101() >> node_031 
	endif 
	if self.distance_2d_to_target().gt(1000) >> node_060 
	endif 
	>> node_040 
	return 
endf 

def node_021 : 161
	if self.distance_2d_to_target().gt(1000) >> node_061 
	endif 
	if function#101() >> node_023 
	else >> node_035 
	endif 
	return 
endf 

def node_022 : 210
	if function#101() 
		random (35) >> node_024 
		elser (20) >> node_027 
		elser (20) >> node_026 
		elser (25) >> node_025 
		endr 
	else 
		if function#104() 
			random (25) >> node_039 
			elser (25) >> node_042 
			elser (20) >> node_043 
			elser (20) >> node_034 
			elser (10) >> node_040 
			endr 
		else 
			random (45) >> node_039 
			elser (30) >> node_042 
			elser (25) >> node_034 
			endr 
		endif 
	endif 
	reset 
endf 

def node_023 : 111
	>> node_062 
	-> jyuratodus.breath_gimmick() 
	>> node_081 
	return 
endf 

def node_024 : 114
	>> node_062 
	-> jyuratodus.bite() 
	return 
endf 

def node_025 : 103
	-> jyuratodus.double_tail_attack_l() 
	return 
endf 

def node_026 : 108
	>> node_062 
	-> jyuratodus.slide_attack() 
	return 
endf 

def node_027 : 109
	>> node_062 
	-> jyuratodus.slide_homing_attack_pre() 
	return 
endf 

def node_028 : 117
	if function#2D(1) 
		return 
	else 
	endif 
	if self.target(31) 
		random (80) >> node_030 
		elser (20) 
		endr 
	elif self.target.helpless_0() 
		random (30) >> node_030 
		elser (70) 
		endr 
	else 
		random (0) >> node_030 
		elser (100) 
		endr 
	endif 
	return 
endf 

def node_029 : 116
	if function#2D(1) 
		return 
	else 
	endif 
	if self.target(31) 
		random (100) >> node_030 
		elser (0) 
		endr 
	elif self.target.helpless_0() 
		random (50) >> node_030 
		elser (50) 
		endr 
	else 
		random (30) >> node_030 
		elser (70) 
		endr 
	endif 
	return 
endf 

def node_030 : 118
	if function#101() 
		-> jyuratodus.stand_to_swim() 
		>> node_079 
	else 
	endif 
	return 
endf 

def node_031 : 155
	if function#101() 
		-> jyuratodus.stand_to_swim() 
	else 
	endif 
	return 
endf 

def node_032 : 180
	if function#B9() 
		random (100) 
					self.targetEnemy(21) @ parameter2:500 
					>> node_023 
					self.targetEnemy(target_em.random_player_or_cat) 
		elser (0) 
		endr 
	elif self.current_quest().is_rank(rank.MR) 
		random (100) 
					self.targetEnemy(21) @ parameter2:500 
					>> node_023 
					self.targetEnemy(target_em.random_player_or_cat) 
		elser (0) 
		endr 
	else 
	endif 
	return 
endf 

def node_033 : 104
	if self.angle_2d_cw_between(10,180) 
		>> node_065 
	else 
	endif 
	-> jyuratodus.swim_tackle() 
	return 
endf 

def node_034 : 123
	>> node_060 
	>> node_062 
	-> jyuratodus.swim_single_bite() 
	return 
endf 

def node_035 : 125
	>> node_062 
	-> jyuratodus.swim_breath_double() 
	>> node_082 
	return 
endf 

def node_036 : 153
	>> node_062 
	-> jyuratodus.swim_triple_breath() 
	>> node_083 
	return 
endf 

def node_037 : 105
	>> node_062 
	-> jyuratodus.swim_bite() 
	return 
endf 

def node_038 : 82
	-> jyuratodus.swim_tail_attack() 
	return 
endf 

def node_039 : 79
	>> node_085 
	-> jyuratodus.swim_rush_pre() 
	return 
endf 

def node_040 : 142
	>> node_085 
	-> jyuratodus.swim_diving_attack(1,0,0,500) 
	return 
endf 

def node_041 : 143
	if self.angle_2d_ccw_between(60,0) 
		>> node_034 
	else 
		>> node_038 
	endif 
	return 
endf 

def node_042 : 120
	if self.angle_2d_ccw_between(60,0) 
		>> node_037 
	else 
		>> node_038 
	endif 
	return 
endf 

def node_043 : 130
	if self.angle_2d_ccw_between(90,0) 
		>> node_033 
	else 
		>> node_037 
	endif 
	return 
endf 

def node_044 : 146
	if self.angle_2d_ccw_between(60,0) 
		>> node_039 
	else 
		>> node_038 
	endif 
	return 
endf 

def node_045 : 148
	if self.angle_2d_ccw_between(60,0) 
		>> node_035 
	else 
		>> node_038 
	endif 
	return 
endf 

def node_046 : 133
	if function#2D(1) 
		>> node_062 
		>> node_039 
	elif function#104() 
		if self.distance_2d_to_target().leq(500) 
			random (30) >> node_040 
			elser (70) >> node_039 
			endr 
		else 
			>> node_040 
		endif 
	else 
		>> node_060 
		>> node_036 
	endif 
	return 
endf 

def node_047 : 132
	if function#2D(1) 
		return 
	else 
	endif 
	if self.target(31) 
		random (60) >> node_046 
		elser (40) 
		endr 
	elif self.target.helpless_0() 
		random (30) >> node_046 
		elser (70) 
		endr 
	else 
		random (0) >> node_046 
		elser (100) 
		endr 
	endif 
	return 
endf 

def node_048 : 134
	if function#2D(1) 
		return 
	else 
	endif 
	if self.target(31) 
		random (80) >> node_046 
		elser (20) 
		endr 
	elif self.target.helpless_0() 
		random (50) >> node_046 
		elser (50) 
		endr 
	else 
		random (0) >> node_046 
		elser (100) 
		endr 
	endif 
	return 
endf 

def node_049 : 152
	if [RegisterVar1 <= 4] 
		>> node_046 
	endif 
	return 
endf 

def node_050 : 169
	if [RegisterVar1 <= 8] 
		>> node_046 
	endif 
	return 
endf 

def node_051 : 179
	random (90) 
				if function#2D(1) 
				elif self.distance_3d_to_target().gt(1000) >> node_040 
				elif self.angle_2d_cw_between(210,330) -> jyuratodus.swim_triple_breath() 
				else >> node_035 
				endif 
				>> node_085 
				self.targetEnemy(target_em.random_player_or_cat) 
	elser (10) 
	endr 
	return 
endf 

def node_052 : 176
	if function#101() 
	else 
		if self.in_combat() -> jyuratodus.swim_to_stand_combat() 
		else -> jyuratodus.swim_to_stand() 
		endif 
	endif 
	return 
endf 

def node_053 : 144
	>> node_062 
	if function#101() -> jyuratodus.threat_short() 
	else -> jyuratodus.swim_chance_idle() 
	endif 
	return 
endf 

def node_054 : 157
	if function#101() >> node_027 
	else >> node_039 
	endif 
	return 
endf 

def node_055 : 89
	>> node_062 
	if function#101() 
		-> jyuratodus.dash(2,1,0,1500,600) 
	else 
		-> jyuratodus.swim(2,1,5,1500,600) 
	endif 
	return 
endf 

def node_056 : 90
	>> node_062 
	if function#101() 
		-> jyuratodus.dash(2,1,0,3000,600) 
	else 
		-> jyuratodus.swim(2,1,5,3000,600) 
	endif 
	return 
endf 

def node_057 : 91
	>> node_062 
	if function#101() 
		-> jyuratodus.dash(2,1,0,4000,600) 
	else 
		-> jyuratodus.swim(2,1,5,4000,600) 
	endif 
	return 
endf 

def node_058 : 74
	if function#101() 
		if self.in_combat() -> jyuratodus.dash_combat(2,0,0,1000) 
		else -> jyuratodus.dash(2,0,0,1000) 
		endif 
	else -> jyuratodus.swim_dash(2,0,0,1000) 
	endif 
	return 
endf 

def node_059 : 175
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		if function#101() 
			-> jyuratodus.dash(2,1,0,500,500) 
		else 
			-> jyuratodus.swim_dash(2,1,0,500,500) 
		endif 
	endif 
	repeat 
endf 

def node_060 : 141
	if self.distance_2d_to_target().leq(750) 
		return 
	else 
		if function#101() 
			-> jyuratodus.dash(2,1,0,500,600) 
		else 
			-> jyuratodus.swim_dash(2,1,0,500,600) 
		endif 
	endif 
	repeat 
endf 

def node_061 : 156
	if self.distance_2d_to_target().leq(1000) 
		return 
	else 
		if function#101() 
			-> jyuratodus.dash(2,1,0,500,1000) 
		else 
			-> jyuratodus.swim_dash(2,1,0,500,1000) 
		endif 
	endif 
	repeat 
endf 

def node_062 : 87
	if self.angular_15(60,0) 
		if self.distance_2d_to_target().leq(750) 
			>> node_064 
		else 
			>> node_063 
		endif 
	else 
	endif 
	return 
endf 

def node_063 : 88
	if function#101() 
		-> jyuratodus.quick_turn() 
	else 
		-> jyuratodus.swim_turn() 
	else 
	endif 
	return 
endf 

def node_064 : 119
	if function#101() 
		-> jyuratodus.quick_turn() 
	else 
		-> jyuratodus.swim_back_turn() 
	else 
	endif 
	return 
endf 

def node_065 : 102
	self.targetEnemy(10) @ parameter2:1000 
	>> node_064 
	self.targetEnemy(target_em.random_player_or_cat) 
	return 
endf 

def node_066 : 121
	if self.distance_3d_to_target().leq(750) >> node_064 
	else >> node_062 
	endif 
	return 
endf 

def node_067 : 86
	random (20) >> node_068 
	elser (80) 
	endr 
	return 
endf 

def node_068 : 75
	if function#101() -> jyuratodus.search() 
	else -> jyuratodus.swim_search() 
	endif 
	return 
endf 

def node_069 : 78
	>> node_052 
	-> jyuratodus.drink() 
	return 
endf 

def node_070 : 76
	if function#101() -> jyuratodus.meat_eat_ashu() 
	else -> jyuratodus.swim_eat_ashu() 
	endif 
	return 
endf 

def node_071 : 77
	>> node_052 
	-> jyuratodus.sleep() 
	return 
endf 

def node_072 : 93
	-> jyuratodus.tired() 
	return 
endf 

def node_073 : 107
	if function#101() -> jyuratodus.threat() 
	else -> jyuratodus.swim_threat() 
	endif 
	return 
endf 

def node_074 : 106
	if function#101() -> jyuratodus.refresh() 
	else -> jyuratodus.swim_refresh() 
	endif 
	return 
endf 

def node_075 : 98
	>> node_031 
	-> jyuratodus.swim_lost_search() 
	return 
endf 

def node_076 : 171
	if function#102() -> jyuratodus.swim_sniff() 
	else 
		random (25) -> jyuratodus.sniff_s() 
		elser (75) -> jyuratodus.sniff_l() 
		endr 
	endif 
	return 
endf 

def node_077 : 170
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(600) >> node_056 
		repeat 
	else 
	endif 
	return 
endf 

def node_078 : 96
	return 
	if [RegisterVar0 == 10] 
		[RegisterVar0 |-] 
		>> node_079 
	else 
		[RegisterVar0 ++] 
	endif 
	return 
endf 

def node_079 : 97
	if function#106() 
		function#107() 
		>> node_059 
	else 
	endif 
	>> node_062 
	-> jyuratodus.swim_mud_cover() 
	return 
endf 

def node_080 : 99
	random (100) -> jyuratodus.swim_marking() 
	elser (0) 
	endr 
	return 
endf 

def node_081 : 181
	[RegisterVar1 ++] 
	return 
endf 

def node_082 : 149
	[RegisterVar1 ++] 
	[RegisterVar1 ++] 
	return 
endf 

def node_083 : 154
	[RegisterVar1 ++] 
	[RegisterVar1 ++] 
	[RegisterVar1 ++] 
	return 
endf 

def node_084 : 150
	[RegisterVar1 ++] 
	[RegisterVar1 ++] 
	[RegisterVar1 ++] 
	[RegisterVar1 ++] 
	return 
endf 

def node_085 : 151
	[RegisterVar1 |-] 
	return 
endf 

def node_086 : 177
	[RegisterVar2 ++] 
	return 
endf 

def node_087 : 178
	[RegisterVar2 |-] 
	return 
endf 

def node_088 : 173
	[RegisterVar3 ++] 
	return 
endf 

def node_089 : 172
	[RegisterVar3 |-] 
	return 
endf 

def node_090 : 197
	if self.target(4) >> node_019 
	elif self.target(3) >> node_019 
	elif self.target(12) >> node_091 
	elif self.target(14) >> node_091 
	elif self.target(11) >> node_021 
	elif self.target(0) >> node_091 
	elif self.target(55) >> node_022 
	elif self.target(52) >> node_091 
	elif self.vertical_distance_to_target().gt(500) >> node_091 
	endif 
	return 
endf 

def node_091 : 198
	if function#101() >> node_031 
	endif 
	if self.distance_2d_to_target().gt(1000) >> node_060 
	endif 
	>> node_096 
	return 
endf 

def node_092 : 193
	if function#2D(1) 
		return 
	else 
	endif 
	if self.target(31) 
		random (70) >> node_100 
		elser (30) 
		endr 
	elif self.target.helpless_0() 
		random (50) >> node_100 
		elser (50) 
		endr 
	else 
		random (0) >> node_100 
		elser (100) 
		endr 
	endif 
	return 
endf 

def node_093 : 194
	if function#2D(1) 
		return 
	else 
	endif 
	if self.target(31) 
		random (90) >> node_100 
		elser (10) 
		endr 
	elif self.target.helpless_0() 
		random (70) >> node_100 
		elser (30) 
		endr 
	else 
		random (0) >> node_100 
		elser (100) 
		endr 
	endif 
	return 
endf 

def node_094 : 195
	if [RegisterVar1 <= 4] 
		if self.distance_3d_to_target().leq(1500) 
			random (30) >> node_097 
						>> node_098 
			elser (70) >> node_100 
			endr 
		else 
			>> node_100 
		endif 
	endif 
	return 
endf 

def node_095 : 196
	if [RegisterVar1 <= 8] 
		>> node_100 
	endif 
	return 
endf 

def node_096 : 191
	>> node_085 
	-> jyuratodus.swim_diving_attack_g(1,0,0,1000) 
	return 
endf 

def node_097 : 182
	>> node_063 
	-> jyuratodus.snake_stomach_slide_rush() 
	>> node_084 
	return @ unkn11:3 
endf 

def node_098 : 186
	if self.enraged() 
		if self.distance_3d_to_target().leq(1000) 
			random (80) >> node_096 
			elser (20) >> node_039 
			endr 
		else 
			random (35) >> node_096 
			elser (55) >> node_039 
			elser (10) >> node_035 
			endr 
		endif 
	else 
		if self.distance_3d_to_target().leq(1000) 
			random (60) >> node_096 
			elser (40) >> node_039 
			endr 
		else 
			random (20) >> node_096 
			elser (60) >> node_039 
			elser (20) >> node_035 
			endr 
		endif 
	endif 
	return 
endf 

def node_099 : 201
	if self.enraged() 
		if self.distance_3d_to_target().leq(500) 
		elif self.distance_3d_to_target().leq(1300) 
			random (100) >> node_097 
						>> node_098 
			elser (0) 
			endr 
		else 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		elif self.distance_3d_to_target().leq(1300) 
			random (50) >> node_097 
						>> node_098 
			elser (30) >> node_037 
			elser (20) 
			endr 
		else 
		endif 
	endif 
	return 
endf 

def node_100 : 192
	if function#2D(1) 
		>> node_062 
		>> node_039 
	elif function#104() 
		if self.distance_2d_to_target().leq(500) 
			random (30) >> node_096 
			elser (70) >> node_039 
			endr 
		else 
			>> node_096 
		endif 
	else 
		>> node_060 
		>> node_036 
	endif 
	return 
endf 

def node_101 : 190
	random (100) 
				self.targetEnemy(21) @ parameter2:500 
				>> node_023 
				self.targetEnemy(target_em.random_player_or_cat) 
	elser (0) 
	endr 
	return 
endf 

def node_102 : 189
	random (70) 
				if function#2D(1) 
				elif self.distance_3d_to_target().gt(1000) >> node_096 
				elif self.angle_2d_cw_between(210,330) -> jyuratodus.swim_triple_breath() 
				else >> node_035 
				endif 
				>> node_085 
				self.targetEnemy(target_em.random_player_or_cat) 
	elser (30) 
	endr 
	return 
endf 

def node_103 : 202
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.vertical_distance_to_target().leq(1000) 
				if self.distance_3d_to_target().leq(3000) 
					if self.target.in_combat() 
						>> node_104 
					else 
						>> node_107 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	elif self.defense_downed() >> node_014 
	endif 
	return 
endf 

def node_104 : 203
	if function#30(2) >> node_105 
	else >> node_106 
	endif 
	return 
endf 

def node_105 : 204
	random (35) 
	elser (0) >> node_011 
	elser (10) >> node_009 
	elser (55) >> node_010 
	elser (0) >> node_013 
	endr 
	return 
endf 

def node_106 : 205
	random (35) 
	elser (10) >> node_011 
	elser (55) >> node_009 
	elser (0) >> node_010 
	elser (0) >> node_013 
	endr 
	return 
endf 

def node_107 : 206
	if function#30(2) >> node_108 
	else >> node_109 
	endif 
	return 
endf 

def node_108 : 207
	random (10) 
	elser (35) >> node_011 
	elser (0) >> node_009 
	elser (55) >> node_010 
	elser (0) >> node_013 
	endr 
	return 
endf 

def node_109 : 208
	random (35) 
	elser (55) >> node_011 
	elser (10) >> node_009 
	elser (0) >> node_010 
	elser (0) >> node_013 
	endr 
	return 
endf 

