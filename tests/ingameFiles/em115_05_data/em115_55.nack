importactions Blackveil_Vaal_Hazak as blackveil_vaal_hazak

def node_000
	self.targetEnemy(50) 
	-> blackveil_vaal_hazak.dash(1,0,0,3000) 
	conclude 
endf 

def node_001
	if self.flying() 
		if function#AF(5000) 
			-> blackveil_vaal_hazak.landing() 
		else 
			>> node_002 
		endif 
	else 
	endif 
	return 
endf 

def node_002
	self.targetArea(target_area.area_aerial_center) 
	>> node_069 
	self.targetArea(target_area.area_center) 
	-> blackveil_vaal_hazak.landing() 
	return 
endf 

def node_003
	if self.flying() 
	else 
		-> blackveil_vaal_hazak.take_off() 
	endif 
	return 
endf 

def node_004
	if self.flying() 
		-> blackveil_vaal_hazak.quick_turn_fly() 
	else 
		-> blackveil_vaal_hazak.quick_turn() 
	endif 
	return 
endf 

def node_005
	if self.angle_2d_cw_between(30,330) 
		if self.flying() 
			-> blackveil_vaal_hazak.quick_turn_fly() 
		else 
			-> blackveil_vaal_hazak.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_006
	if self.angle_2d_cw_between(60,300) 
		if self.flying() 
			-> blackveil_vaal_hazak.quick_turn_fly() 
		else 
			-> blackveil_vaal_hazak.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_007
	if self.angle_2d_cw_between(90,270) 
		if self.flying() 
			-> blackveil_vaal_hazak.quick_turn_fly() 
		else 
			-> blackveil_vaal_hazak.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_008
	>> node_001 
	-> blackveil_vaal_hazak.dash(5) 
	return 
endf 

def node_009
	>> node_001 
	-> blackveil_vaal_hazak.dash(1,5,0,1000) 
	return 
endf 

def node_010
	>> node_001 
	-> blackveil_vaal_hazak.dash(6,0,0,1000) 
	return 
endf 

def node_011
	>> node_001 
	-> blackveil_vaal_hazak.dash(6,0,0,1500) 
	return 
endf 

def node_012
	>> node_001 
	-> blackveil_vaal_hazak.dash(2,1,5,1500,800) 
	return 
endf 

def node_013
	>> node_001 
	-> blackveil_vaal_hazak.dash(2,5,0,3000) 
	return 
endf 

def node_014
	>> node_005 
	if self.flying() 
		-> blackveil_vaal_hazak.chance_fly() 
	else 
		-> blackveil_vaal_hazak.threat_short() 
	endif 
	return 
endf 

def node_015
	if self.flying() 
		-> blackveil_vaal_hazak.threat_short_fly() 
	else 
		-> blackveil_vaal_hazak.discover() 
	endif 
	return 
endf 

def node_016
	if self.flying() 
		-> blackveil_vaal_hazak.threat_short_fly() 
	else 
		-> blackveil_vaal_hazak.threat_short() 
	endif 
	return 
endf 

def node_017
	>> node_001 
	-> blackveil_vaal_hazak.step_back() 
	return 
endf 

def node_018
	>> node_001 
	>> node_005 
	-> blackveil_vaal_hazak.step_front() 
	return 
endf 

def node_019
	>> node_001 
	>> node_007 
	-> blackveil_vaal_hazak.face_swing() 
	return 
endf 

def node_020
	>> node_001 
	-> blackveil_vaal_hazak.side_scratch() 
	return 
endf 

def node_021
	>> node_001 
	-> blackveil_vaal_hazak.rotate_attack() 
	return 
endf 

def node_022
	>> node_001 
	if self.angle_2d_cw_between(60,120) 
		>> node_020 
	elif self.angle_2d_cw_between(120,240) 
		>> node_021 
	elif self.angle_2d_cw_between(240,300) 
		>> node_020 
	else 
		>> node_019 
	endif 
	return 
endf 

def node_023
	>> node_001 
	>> node_007 
	-> blackveil_vaal_hazak.bite_middle() 
	return 
endf 

def node_024
	>> node_001 
	>> node_007 
	-> blackveil_vaal_hazak.bite_3ren() 
	if self.enraged() 
		>> node_043 
	endif 
	return 
endf 

def node_025
	if [RegisterVar8 == 0] 
		[RegisterVar8 ++] 
		[RegisterVar9 |-] 
		>> node_026 
	elif [RegisterVar9 <= 2] 
		[RegisterVar8 ++] 
		[RegisterVar9 |-] 
		>> node_026 
	else 
		[RegisterVar8 |-] 
		>> node_030 
	endif 
	return 
endf 

def node_026
	>> node_001 
	-> blackveil_vaal_hazak.syouki_breath() 
	if self.enraged() 
		if self.distance_2d_to_target().gt(1500) 
			if self.vertical_distance_to_target().leq(500) 
				>> node_034 
			endif 
		endif 
	endif 
	return 
endf 

def node_027
	>> node_001 
	-> blackveil_vaal_hazak.desperate_tackle_no_breath() 
	return 
endf 

def node_028
	>> node_001 
	-> blackveil_vaal_hazak.desperate_tackle() 
	return 
endf 

def node_029
	>> node_001 
	if self.enraged() 
	else 
		>> node_005 
	endif 
	-> blackveil_vaal_hazak.rush() 
	return 
endf 

def node_030
	>> node_001 
	-> blackveil_vaal_hazak.strong_bite() 
	return 
endf 

def node_031
	>> node_001 
	-> blackveil_vaal_hazak.scratch_bite() 
	return 
endf 

def node_032
	>> node_001 
	-> blackveil_vaal_hazak.tail_to_scratch() 
	return 
endf 

def node_033
	if self.angle_2d_cw_between(60,120) 
		>> node_031 
	elif self.angle_2d_cw_between(120,240) 
		>> node_032 
	elif self.angle_2d_cw_between(240,300) 
		>> node_031 
	else 
		>> node_019 
	endif 
	return 
endf 

def node_034
	>> node_001 
	if self.current_quest().is_rank(rank.AT) 
	else 
		>> node_007 
	endif 
	-> blackveil_vaal_hazak.syouki_laser() 
	if self.enraged() 
		>> node_043 
	endif 
	return 
endf 

def node_035
	>> node_001 
	if self.current_quest().is_rank(rank.AT) 
		if function#102(5000) 
			-> blackveil_vaal_hazak.syouki_drain_laser() 
			if self.enraged() 
				>> node_043 
			endif 
		else 
			>> node_029 
		endif 
	else 
		>> node_007 
		-> blackveil_vaal_hazak.syouki_drain_laser() 
		if self.enraged() 
			>> node_043 
		endif 
	endif 
	return 
endf 

def node_036
	if function#101(1) 
		>> node_034 
	else 
		>> node_035 
	endif 
	return 
endf 

def node_037
	if function#101(1) 
		>> node_034 
	else 
		>> node_013 
	endif 
	return 
endf 

def node_038
	if function#101(1) 
		>> node_034 
	else 
		>> node_028 
	endif 
	return 
endf 

def node_039
	>> node_001 
	-> blackveil_vaal_hazak.dash(6,0,0,800) 
	>> node_022 
	return 
endf 

def node_040
	>> node_001 
	-> blackveil_vaal_hazak.jump_attack_high() 
	return 
endf 

def node_041
	>> node_001 
	-> blackveil_vaal_hazak.jump_attack_wall_down() 
	return 
endf 

def node_042
	random (33) 
				self.targetEnemy(21) @ parameter2:1000 
	elser (25) 
				self.targetEnemy(22) @ parameter2:1000 
	elser (18) 
				self.targetEnemy(11) @ parameter2:1000 
	elser (24) 
				self.targetEnemy(12) @ parameter2:1000 
	endr 
	return 
endf 

def node_043
	self.targetUnknown(48,0) 
	if self.distance_3d_to_target().leq(1000) 
		>> node_033 
	endif 
	return 
endf 

def node_044
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.vertical_distance_to_target().leq(1000) 
				if self.distance_3d_to_target().leq(3000) 
					if self.target.in_combat() 
						>> node_045 
					else 
						>> node_046 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_045
	if function#30(2) 
		random (35) 
		elser (0) >> node_047 
		elser (10) >> node_050 
		elser (55) >> node_049 
		endr 
	elif function#30(4) 
		random (35) 
		elser (10) >> node_047 
		elser (55) >> node_050 
		elser (0) >> node_049 
		endr 
	else 
		random (35) 
		elser (0) >> node_047 
		elser (50) >> node_050 
		elser (0) >> node_049 
		elser (15) >> node_051 
		endr 
	endif 
	return 
endf 

def node_046
	if function#30(2) 
		random (10) 
		elser (35) >> node_047 
		elser (0) >> node_050 
		elser (55) >> node_049 
		endr 
	else 
		random (35) 
		elser (55) >> node_047 
		elser (10) >> node_050 
		elser (0) >> node_049 
		endr 
	endif 
	return 
endf 

def node_047
	>> node_001 
	>> node_006 
	-> blackveil_vaal_hazak.threat_short() 
	return 
endf 

def node_048
endf 

def node_049
	if self.target_is(em.Odogaron) 
		if self.target(39) 
			self.force_area_change2() 
		else 
			>> node_047 
		endif 
	elif self.target_is(em.Ebony_Odogaron) 
		if self.target(39) 
			self.force_area_change2() 
		else 
			>> node_047 
		endif 
	elif self.target_is(em.Savage_Deviljho) 
		if self.target(39) 
			self.force_area_change2() 
		else 
			>> node_047 
		endif 
	elif self.target_is(em.Rajang) 
		if self.target(39) 
			self.force_area_change2() 
		else 
			>> node_047 
		endif 
	elif self.target_is(em.Furious_Rajang) 
		if self.target(39) 
			self.force_area_change2() 
		else 
			>> node_047 
		endif 
	else 
		self.force_area_change2() 
	endif 
	return 
endf 

def node_050
	if self.vertical_distance_to_target().gt(500) 
		random (50) >> node_029 
		elser (50) >> node_018 
		elser (0) 
		endr 
	elif self.distance_3d_to_target().gt(2500) 
		random (50) >> node_030 
		elser (30) >> node_024 
		elser (20) >> node_091 
		elser (0) >> node_015 
		endr 
	else 
		random (50) >> node_088 
		elser (50) >> node_023 
		elser (0) 
		endr 
	endif 
	return 
endf 

def node_051
	>> node_050 
	>> node_049 
	return 
endf 

def node_052
	>> node_001 
	if self.distance_3d_to_target().leq(1000) 
		return 
	else 
		-> blackveil_vaal_hazak.dying_walk(2,1,5,1500,800) 
	endif 
	return 
endf 

def node_053
	>> node_001 
	-> blackveil_vaal_hazak.lost_search() 
	return 
endf 

def node_054
	>> node_001 
	-> blackveil_vaal_hazak.combat_search() 
	return 
endf 

def node_055
	>> node_001 
	-> blackveil_vaal_hazak.anger_search() 
	return 
endf 

def node_056
	>> node_001 
	-> blackveil_vaal_hazak.life_search() 
	return 
endf 

def node_057
	>> node_001 
	-> blackveil_vaal_hazak.tired() 
	return 
endf 

def node_058
	>> node_001 
	-> blackveil_vaal_hazak.refresh() 
	return 
endf 

def node_059
	if self.angle_2d_cw_between(30,330) 
		if self.flying() 
			-> blackveil_vaal_hazak.turn_fly() 
		else 
			-> blackveil_vaal_hazak.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_060
	if self.angle_2d_cw_between(60,300) 
		if self.flying() 
			-> blackveil_vaal_hazak.turn_fly() 
		else 
			-> blackveil_vaal_hazak.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_061
	if self.angle_2d_cw_between(90,270) 
		if self.flying() 
			-> blackveil_vaal_hazak.turn_fly() 
		else 
			-> blackveil_vaal_hazak.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_062
	>> node_001 
	-> blackveil_vaal_hazak.walk(5) 
	return 
endf 

def node_063
	>> node_001 
	-> blackveil_vaal_hazak.walk(1,5,0,1000) 
	return 
endf 

def node_064
	>> node_001 
	-> blackveil_vaal_hazak.walk(2,5,0,3000) 
	return 
endf 

def node_065
	>> node_001 
	-> blackveil_vaal_hazak.eat() 
	return 
endf 

def node_066
	>> node_001 
	-> blackveil_vaal_hazak.rest() 
	return 
endf 

def node_067
	>> node_001 
	-> blackveil_vaal_hazak.sleep() 
	return 
endf 

def node_068
	>> node_001 
	if function#C9() 
		-> blackveil_vaal_hazak.dying_sleep(3,0,0,150) 
	else 
		function#CA() 
	endif 
	return 
endf 

def node_069
	if self.distance_2d_to_target().leq(600) 
	else 
		-> blackveil_vaal_hazak.glide_combat(2,6,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_070
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> blackveil_vaal_hazak.glide_combat(2,6,0,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_071
	if function#5A(20) 
		>> node_072 
	elif function#5A(21) 
		>> node_072 
	elif function#5A(22) 
		>> node_072 
	elif function#5A(23) 
		>> node_072 
	elif function#5A(24) 
		>> node_072 
	elif function#5A(25) 
		>> node_072 
	elif function#5A(30) 
		>> node_073 
	elif function#5A(31) 
		>> node_073 
	elif function#5A(32) 
		>> node_073 
	elif function#5A(33) 
		>> node_073 
	elif function#5A(34) 
		>> node_073 
	elif function#5A(35) 
		>> node_073 
	else 
		>> node_073 
	endif 
	return 
endf 

def node_072
	if self.distance_3d_to_target().leq(12000) 
		>> node_001 
		>> node_074 
	else 
		>> node_073 
	endif 
	return 
endf 

def node_073
	if function#AD() 
		>> node_074 
	else 
		>> node_075 
	endif 
	return 
endf 

def node_074
	if function#5A(10) 
		>> node_003 
	elif function#5A(11) 
		>> node_003 
	elif function#5A(12) 
		>> node_003 
	elif function#5A(13) 
		>> node_003 
	elif function#5A(14) 
		>> node_003 
	elif function#5A(15) 
		>> node_003 
	elif function#5A(30) 
		>> node_003 
	elif function#5A(31) 
		>> node_003 
	elif function#5A(32) 
		>> node_003 
	elif function#5A(33) 
		>> node_003 
	elif function#5A(34) 
		>> node_003 
	elif function#5A(35) 
		>> node_003 
	else 
		>> node_001 
	endif 
	if self.flying() 
		>> node_071 
	else 
		>> node_062 
	endif 
	return 
endf 

def node_075
	>> node_076 
	>> node_077 
	>> node_078 
	>> node_079 
	return 
endf 

def node_076
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_071 
	else 
		self.targetArea(target_area.area_center) 
		>> node_062 
		self.targetArea(target_area.area_aerial_center) 
		>> node_003 
	endif 
	return 
endf 

def node_077
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		self.targetArea(40) 
		>> node_071 
	else 
		self.targetArea(39) 
		>> node_062 
	endif 
	return 
endf 

def node_078
	if function#5A(10) 
	elif function#5A(11) 
	elif function#5A(12) 
	elif function#5A(13) 
	elif function#5A(14) 
	elif function#5A(15) 
	elif function#5A(30) 
	elif function#5A(31) 
	elif function#5A(32) 
	elif function#5A(33) 
	elif function#5A(34) 
	elif function#5A(35) 
	else 
		if self.flying() 
			self.targetArea(target_area.area_center) 
			>> node_001 
		else 
		endif 
	endif 
	return 
endf 

def node_079
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		>> node_071 
	else 
		>> node_062 
	endif 
	return 
endf 

def node_080
	if self.flying() 
		>> node_069 
	else 
		if self.in_combat() 
			>> node_009 
		else 
			>> node_062 
		endif 
	endif 
	return 
endf 

def node_081
	>> node_083 
	>> node_084 
	>> node_085 
	return 
endf 

def node_082
	if self.flying() 
		>> node_069 
	else 
		if self.in_combat() 
			>> node_008 
		else 
			>> node_062 
		endif 
	endif 
	return 
endf 

def node_083
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_069 
	else 
		self.targetArea(target_area.area_center) 
		if self.in_combat() 
			>> node_008 
		else 
			>> node_062 
		endif 
		self.targetArea(target_area.area_aerial_center) 
		>> node_003 
	endif 
	return 
endf 

def node_084
	if self.flying() 
		self.targetArea(40) 
		>> node_069 
	else 
		self.targetArea(39) 
		if self.in_combat() 
			>> node_008 
		else 
			>> node_062 
		endif 
	endif 
	return 
endf 

def node_085
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_001 
	else 
	endif 
	return 
endf 

def node_086
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> node_012 
		repeat 
	else 
	endif 
	return 
endf 

def node_087
	if self.current_quest().is_rank(rank.AT) 
		if function#101(2) 
		elif function#58(0,10) 
			if function#102(5000) 
				>> node_065 
			else 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_088
	if [RegisterVar4 == 0] 
		[RegisterVar4 ++] 
		[RegisterVar5 |-] 
		>> node_089 
	elif [RegisterVar5 <= 2] 
		[RegisterVar4 ++] 
		[RegisterVar5 |-] 
		>> node_089 
	else 
		[RegisterVar4 |-] 
		>> node_030 
	endif 
	return 
endf 

def node_089
	>> node_001 
	-> blackveil_vaal_hazak.spread_syouki_breath() 
	[RegisterVar4 ++] 
	if self.distance_2d_to_target().gt(1500) 
		if self.vertical_distance_to_target().leq(500) 
			random (50) >> node_091 
			elser (50) 
			elser (0) 
			endr 
		endif 
	else 
	endif 
	return 
endf 

def node_090
	>> node_001 
	if self.angle_2d_cw_between(0,180) 
		-> blackveil_vaal_hazak.spread_syouki_breath() @ comboSetting:1 
		-> blackveil_vaal_hazak.upgraded_syouki_laser_damage() 
	else 
		-> blackveil_vaal_hazak.spread_syouki_breath() @ comboSetting:1 
		-> blackveil_vaal_hazak.to_syouki_laser() 
	endif 
	if self.enraged() 
		>> node_043 
	endif 
	return 
endf 

def node_091
	if function#101(1) 
		>> node_092 
	else 
		if [RegisterVar3 == 0] 
			[RegisterVar3 ++] 
			>> node_001 
			-> blackveil_vaal_hazak.upgraded_syouki_drain_laser() 
			*&
		else 
			[RegisterVar3 |-] 
			>> node_092 
		endif 
	endif 
	return 
endf 

def node_092
	>> node_001 
	if self.angle_2d_cw_between(0,180) 
		-> blackveil_vaal_hazak.upgraded_syouki_laser() 
	else 
		-> blackveil_vaal_hazak.syouki_laser() 
	endif 
	if self.enraged() 
		>> node_043 
	endif 
	return 
endf 

def node_093
	>> node_001 
	>> node_004 
	-> blackveil_vaal_hazak.breathe_shoot_all_spores() 
	return 
endf 

def node_094
	if function#101(3) 
		>> node_099 
		if [RegisterVar0 <= 8] 
			random (80) >> node_095 
			elser (20) 
			elser (0) 
			endr 
		elif [RegisterVar0 <= 6] 
			random (40) >> node_095 
			elser (60) 
			elser (0) 
			endr 
		else 
		endif 
	elif function#101(1) 
		>> node_100 
		if [RegisterVar1 <= 10] 
			random (70) >> node_097 
			elser (30) 
			elser (0) 
			endr 
		elif [RegisterVar1 <= 8] 
			random (50) >> node_097 
			elser (50) 
			elser (0) 
			endr 
		else 
		endif 
	else 
		>> node_100 
		if [RegisterVar1 <= 10] 
			random (40) >> node_098 
			elser (60) 
			elser (0) 
			endr 
		elif [RegisterVar1 <= 6] 
			random (30) >> node_098 
			elser (70) 
			elser (0) 
			endr 
		elif [RegisterVar1 <= 4] 
			random (15) >> node_098 
			elser (85) 
			elser (0) 
			endr 
		else 
		endif 
	endif 
	return 
endf 

def node_095
	if self.enraged() 
		>> node_096 
	else 
		>> node_097 
	endif 
	return 
endf 

def node_096
	>> node_001 
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	-> blackveil_vaal_hazak.spore_ball_nova() 
	return 
endf 

def node_097
	>> node_001 
	>> node_005 
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	-> blackveil_vaal_hazak.breathe_shoot_all_spores() 
	return 
endf 

def node_098
	>> node_001 
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	if function#102(5000) 
		-> blackveil_vaal_hazak.eat() 
	else 
	endif 
	return 
endf 

def node_099
	[RegisterVar0 ++] 
	if function#102(5000) 
		[RegisterVar0 ++] 
	else 
	endif 
	return 
endf 

def node_100
	[RegisterVar1 ++] 
	if function#102(5000) 
		[RegisterVar1 ++] 
	else 
	endif 
	return 
endf 

def node_101
	random (0) 
	elser (3) >> node_014 
	elser (0) >> node_017 
	elser (0) >> node_018 
	elser (10) >> node_022 
	elser (15) >> node_023 
	elser (0) >> node_024 
	elser (20) >> node_025 
	elser (0) >> node_029 
	elser (7) >> node_030 
	elser (10) >> node_033 
	elser (35) >> node_088 
	elser (0) >> node_097 
	elser (0) >> node_091 
	elser (0) 
	endr 
	return 
endf 

def node_102
	random (0) 
	elser (0) >> node_014 
	elser (0) >> node_017 
	elser (0) >> node_018 
	elser (10) >> node_022 
	elser (10) >> node_023 
	elser (0) >> node_024 
	elser (20) >> node_025 
	elser (0) >> node_029 
	elser (10) >> node_030 
	elser (10) >> node_033 
	elser (40) >> node_088 
	elser (0) >> node_097 
	elser (0) >> node_091 
	elser (0) 
	endr 
	return 
endf 

def node_103
	random (0) 
	elser (3) >> node_014 
	elser (0) >> node_017 
	elser (0) >> node_018 
	elser (10) >> node_022 
	elser (15) >> node_023 
	elser (5) >> node_024 
	elser (17) >> node_025 
	elser (0) >> node_029 
	elser (10) >> node_030 
	elser (5) >> node_033 
	elser (35) >> node_088 
	elser (0) >> node_097 
	elser (0) >> node_091 
	elser (0) 
	endr 
	return 
endf 

def node_104
	random (0) 
	elser (0) >> node_014 
	elser (0) >> node_017 
	elser (0) >> node_018 
	elser (5) >> node_022 
	elser (15) >> node_023 
	elser (10) >> node_024 
	elser (20) >> node_025 
	elser (0) >> node_029 
	elser (5) >> node_030 
	elser (5) >> node_033 
	elser (40) >> node_088 
	elser (0) >> node_097 
	elser (0) >> node_091 
	elser (0) 
	endr 
	return 
endf 

def node_105
	random (0) 
	elser (3) >> node_014 
	elser (0) >> node_017 
	elser (9) >> node_018 
	elser (0) >> node_022 
	elser (0) >> node_023 
	elser (12) >> node_024 
	elser (13) >> node_025 
	elser (0) >> node_029 
	elser (15) >> node_030 
	elser (0) >> node_033 
	elser (30) >> node_088 
	elser (0) >> node_097 
	elser (18) >> node_091 
	elser (0) 
	endr 
	return 
endf 

def node_106
	random (0) 
	elser (0) >> node_014 
	elser (0) >> node_017 
	elser (6) >> node_018 
	elser (0) >> node_022 
	elser (0) >> node_023 
	elser (10) >> node_024 
	elser (15) >> node_025 
	elser (0) >> node_029 
	elser (12) >> node_030 
	elser (0) >> node_033 
	elser (35) >> node_088 
	elser (0) >> node_097 
	elser (22) >> node_091 
	elser (0) 
	endr 
	return 
endf 

def node_107
	random (0) 
	elser (5) >> node_014 
	elser (0) >> node_017 
	elser (20) >> node_018 
	elser (0) >> node_022 
	elser (0) >> node_023 
	elser (0) >> node_024 
	elser (0) >> node_025 
	elser (40) >> node_029 
	elser (0) >> node_030 
	elser (0) >> node_033 
	elser (0) >> node_088 
	elser (0) >> node_097 
	elser (35) >> node_091 
	elser (0) 
	endr 
	return 
endf 

def node_108
	random (0) 
	elser (0) >> node_014 
	elser (0) >> node_017 
	elser (10) >> node_018 
	elser (0) >> node_022 
	elser (0) >> node_023 
	elser (0) >> node_024 
	elser (0) >> node_025 
	elser (50) >> node_029 
	elser (0) >> node_030 
	elser (0) >> node_033 
	elser (0) >> node_088 
	elser (0) >> node_097 
	elser (40) >> node_091 
	elser (0) 
	endr 
	return 
endf 

def node_109
	random (0) 
	elser (5) >> node_014 
	elser (0) >> node_017 
	elser (0) >> node_018 
	elser (0) >> node_022 
	elser (0) >> node_023 
	elser (0) >> node_024 
	elser (0) >> node_025 
	elser (10) >> node_029 
	elser (0) >> node_030 
	elser (0) >> node_033 
	elser (0) >> node_088 
	elser (0) >> node_097 
	elser (20) >> node_091 
	elser (65) >> node_039 
	elser (0) 
	endr 
	return 
endf 

def node_110
	random (0) 
	elser (0) >> node_014 
	elser (0) >> node_017 
	elser (0) >> node_018 
	elser (0) >> node_022 
	elser (0) >> node_023 
	elser (0) >> node_024 
	elser (0) >> node_025 
	elser (10) >> node_029 
	elser (0) >> node_030 
	elser (0) >> node_033 
	elser (0) >> node_088 
	elser (0) >> node_097 
	elser (20) >> node_091 
	elser (70) >> node_039 
	elser (0) 
	endr 
	return 
endf 

