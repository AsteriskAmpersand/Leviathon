importactions Gajalaka as gajalaka

def node_000 : 15
endf 

def node_001 : 61
	random (33) 
				self.targetEnemy(21) @ parameter2:500 
	elser (25) 
				self.targetEnemy(22) @ parameter2:500 
	elser (18) 
				self.targetEnemy(11) @ parameter2:500 
	elser (24) 
				self.targetEnemy(12) @ parameter2:500 
	endr 
	return 
endf 

def node_002 : 17
endf 

def node_003 : 16
	if function#51(0,1500) 
		if self.distance_3d_to_target().leq(300) 
			>> node_025 => reset 
		elif self.distance_3d_to_target().leq(1500) 
			>> node_020 
			>> node_032 => reset 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_004 : 18
	if self.targetEnemy(33) 
		if self.distance_3d_to_target().leq(3500) 
			if self.distance_3d_to_target().leq(1000) 
				>> node_025 => reset 
			else 
				>> node_048 => reset 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_005 : 19
	[RegisterVar0 |-] 
	if self.target(20) 
		if function#3A() 
			[RegisterVar0 ++] 
		elif self.target(4) 
			[RegisterVar0 ++] 
		elif self.target(7) 
			[RegisterVar0 ++] 
		elif self.target(10) 
			[RegisterVar0 ++] 
		elif self.target(11) 
			if function#B0(14) 
			elif function#B0(15) 
			else 
				[RegisterVar0 ++] 
			endif 
		elif self.target(12) 
			*&
		elif self.target(14) 
			[RegisterVar0 ++] 
		elif self.target(0) 
			if function#B0(14) 
			elif function#B0(15) 
			else 
				[RegisterVar0 ++] 
			endif 
		else 
			[RegisterVar0 |-] 
		endif 
	else 
		if function#B0(14) 
		elif function#B0(15) 
		else 
			[RegisterVar0 ++] 
		endif 
	endif 
	if [RegisterVar0 <= 1] 
		if self.distance_3d_to_target().leq(1000) 
			>> node_025 => reset 
		else 
			>> node_048 => reset 
		endif 
	else 
	endif 
	return 
endf 

def node_006 : 71
	self.targetEnemy(target_em.any_monster) 
	if self.target.helpless_0() 
		>> node_028 
	else 
	endif 
	return 
endf 

def node_007 : 36
endf 

def node_008 : 27
	>> node_038 
	-> action#08(2,1,0,1000,300) 
	return 
endf 

def node_009 : 28
	>> node_038 
	-> action#08(2,1,0,2000,300) 
	return 
endf 

def node_010 : 33
	>> node_038 
	-> action#08(2,1,0,3000,300) 
	return 
endf 

def node_011 : 29
	>> node_038 
	-> action#09(2,1,0,1000,200) 
	return 
endf 

def node_012 : 30
	>> node_038 
	-> action#09(2,1,0,2000,200) 
	return 
endf 

def node_013 : 34
	>> node_038 
	-> action#09(2,1,0,3000,200) 
	return 
endf 

def node_014 : 31
	>> node_038 
	-> action#0A(2,1,0,1000,300) 
	return 
endf 

def node_015 : 32
	>> node_038 
	-> action#0A(2,1,0,2000,400) 
	return 
endf 

def node_016 : 35
	>> node_038 
	-> action#0A(2,1,0,5000,500) 
	return 
endf 

def node_017 : 37
	>> node_038 
	if self.angle_2d_cw_between(10,350) 
		-> action#0B() 
	else 
	endif 
	return 
endf 

def node_018 : 54
	>> node_038 
	if self.angle_2d_cw_between(45,315) 
		-> action#0B() 
	else 
	endif 
	return 
endf 

def node_019 : 55
	>> node_038 
	if self.angle_2d_cw_between(90,270) 
		-> action#0B() 
	else 
	endif 
	return 
endf 

def node_020 : 38
	>> node_038 
	if self.angle_2d_cw_between(20,340) 
		-> action#0C() 
	else 
	endif 
	return 
endf 

def node_021 : 50
	>> node_038 
	if self.angle_2d_cw_between(45,315) 
		-> action#0C() 
	else 
	endif 
	return 
endf 

def node_022 : 51
	>> node_038 
	if self.angle_2d_cw_between(90,270) 
		-> action#0C() 
	else 
	endif 
	return 
endf 

def node_023 : 58
	>> node_038 
	if self.angle_2d_cw_between(60,300) 
		-> action#0C() 
	else 
	endif 
	return 
endf 

def node_024 : 39
	>> node_038 
	>> node_022 
	-> action#0D() 
	return 
endf 

def node_025 : 40
	>> node_038 
	>> node_022 
	-> action#0E() 
	return 
endf 

def node_026 : 41
	>> node_038 
	>> node_022 
	-> action#0F() 
	return 
endf 

def node_027 : 42
	>> node_038 
	>> node_022 
	-> action#10() 
	return 
endf 

def node_028 : 69
	self.targetEnemy(target_em.any_monster) 
	>> node_038 
	if self.distance_2d_to_target().leq(2100) 
		if function#101() 
			>> node_030 
		else 
			>> node_041 
		endif 
	elif self.distance_2d_to_target().leq(3500) 
		-> action#0A(2,1,0,3500,2000) 
		if self.in_combat() 
			if function#101() 
				>> node_030 
			else 
				>> node_041 
			endif 
		else 
		endif 
	elif self.distance_2d_to_target().leq(5000) 
		-> action#0A(2,6,0,5000,2000) 
		if self.in_combat() 
			if function#101() 
				>> node_030 
			else 
				>> node_041 
			endif 
		else 
		endif 
	else 
		-> action#0A(2,6,0,5000,2000) 
		if self.in_combat() 
			if function#101() 
				>> node_030 
			else 
				>> node_041 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_029 : 21
endf 

def node_030 : 43
	>> node_038 
	-> action#11() 
	return 
endf 

def node_031 : 44
	>> node_038 
	-> action#12() 
	return 
endf 

def node_032 : 47
	>> node_038 
	-> action#16() 
	return 
endf 

def node_033 : 56
	>> node_038 
	-> action#19() 
	return 
endf 

def node_034 : 57
	>> node_038 
	-> action#15() 
	return 
endf 

def node_035 : 48
	>> node_038 
	-> action#1A() 
	return 
endf 

def node_036 : 62
	if function#3F() 
	else 
		-> action#24() 
	endif 
	return 
endf 

def node_037 : 63
	if function#3F() 
		if function#B0(8) 
			-> action#27() 
		else 
			-> action#26() 
		endif 
	else 
		-> action#24() 
	endif 
	return 
endf 

def node_038 : 64
	if function#3F() 
		-> action#25() 
	else 
	endif 
	return 
endf 

def node_039 : 65
	>> node_038 
	-> action#17() 
	return 
endf 

def node_040 : 66
	>> node_038 
	-> action#18() 
	return 
endf 

def node_041 : 68
	>> node_038 
	if function#101() 
		>> node_048 
	else 
		if self.in_combat() 
			if [RegisterVar1 <= 2] 
				-> action#3E() 
				[RegisterVar1 |-] 
				-> action#3F() 
			else 
				[RegisterVar1 ++] 
				-> action#3D() 
			endif 
		else 
			if [RegisterVar1 <= 7] 
				-> action#3E() 
				[RegisterVar1 |-] 
				-> action#3F() 
			else 
				[RegisterVar1 ++] 
				-> action#3D() 
			endif 
		endif 
	endif 
	return 
endf 

def node_042 : 70
	>> node_038 
	if [RegisterVar2 <= 2] 
		[RegisterVar2 |-] 
		>> node_041 
	else 
		[RegisterVar2 ++] 
		>> node_048 
	endif 
	return 
endf 

def node_043 : 22
endf 

def node_044 : 45
	>> node_038 
	>> node_018 
	if self.quest_id(50910) 
		if function#B0(14) 
			-> action#13() 
		elif function#B0(15) 
			-> action#13() 
		else 
		endif 
	else 
		-> action#13() 
	endif 
	return 
endf 

def node_045 : 24
	>> node_038 
	-> action#02() 
	return 
endf 

def node_046 : 25
	>> node_038 
	-> action#03() 
	return 
endf 

def node_047 : 26
	>> node_038 
	-> action#04() 
	return 
endf 

def node_048 : 46
	>> node_038 
	>> node_018 
	-> action#14() 
	return 
endf 

def node_049 : 49
	>> node_038 
	>> node_020 
	-> action#1D() 
	return 
endf 

def node_050 : 52
	>> node_038 
	>> node_023 
	-> action#1E() 
	return 
endf 

def node_051 : 53
	>> node_038 
	>> node_020 
	-> action#20() 
	return 
endf 

def node_052 : 60
	>> node_038 
	>> node_048 
	>> node_020 
	-> action#20() 
	return 
endf 

def node_053 : 59
	>> node_038 
	>> node_020 
	-> action#1C() 
	return 
endf 

def node_054 : 72
	>> node_038 
	if self.distance_2d_to_target().leq(500) 
	else 
		>> node_020 
		>> node_014 
	endif 
	>> node_021 
	-> action#1D() 
	return 
endf 

def node_055 : 73
	>> node_038 
	if self.distance_2d_to_target().leq(500) 
	else 
		>> node_020 
		>> node_014 
	endif 
	>> node_021 
	-> action#1C() 
	return 
endf 

def node_056 : 74
	>> node_038 
	-> action#0A(2,6,0,1000,400) 
	return 
endf 

def node_057 : 75
	>> node_038 
	-> action#0A(2,6,0,2000,400) 
	return 
endf 

def node_058 : 76
	>> node_020 
	self.targetEnemy(9) @ parameter2:1000 
	>> node_056 
	return 
endf 

