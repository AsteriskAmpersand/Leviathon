importactions Kulve_Taroth as kulve_taroth

def node_000
	conclude 
endf 

def node_001
	if function#111(1) 
		>> node_002 
	elif function#111(2) 
		>> node_003 
	elif function#111(3) 
		>> node_004 
	elif self.in_map(st.Caverns_Of_El_Dorado).in_area(1) 
		>> node_002 
	else 
	endif 
	return 
endf 

def node_002
	function#108() 
	>> node_074 
	return 
endf 

def node_003
	if self.hp_percent().gt(70) 
		function#108() 
	else 
	endif 
	return 
endf 

def node_004
	if self.hp_percent().gt(40) 
		if function#101() 
		else 
			>> node_086 
		endif 
		function#108() 
	else 
	endif 
	return 
endf 

def node_005
	if function#101() 
		if self.distance_2d_to_target().leq(500) 
			random (20) >> node_134 
			elser (80) 
			endr 
		elif self.distance_2d_to_target().leq(2000) 
		else 
			random (0) >> node_008 
			elser (100) 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(500) 
			random (25) >> node_134 
			elser (75) 
			endr 
		elif self.distance_2d_to_target().leq(2000) 
		else 
			random (0) >> node_008 
			elser (100) 
			endr 
		endif 
	endif 
	return 
endf 

def node_006
	>> node_100 
	if self.in_map(st.Caverns_Of_El_Dorado).in_area(1) 
		self.targetEnemy(target_em.random_player_or_cat) 
	elif self.in_map(st.Caverns_Of_El_Dorado).in_area(2) 
		self.targetEnemy(target_em.random_player_or_cat) 
	else 
	endif 
	return 
endf 

def node_007
	>> node_100 
	>> node_100 
	if self.in_map(st.Caverns_Of_El_Dorado).in_area(1) 
		self.targetEnemy(target_em.random_player_or_cat) 
	elif self.in_map(st.Caverns_Of_El_Dorado).in_area(2) 
		self.targetEnemy(target_em.random_player_or_cat) 
	else 
	endif 
	return 
endf 

def node_008
	>> node_100 
	>> node_100 
	>> node_100 
	if self.in_map(st.Caverns_Of_El_Dorado).in_area(1) 
		self.targetEnemy(target_em.random_player_or_cat) 
	elif self.in_map(st.Caverns_Of_El_Dorado).in_area(2) 
		self.targetEnemy(target_em.random_player_or_cat) 
	else 
	endif 
	return 
endf 

def node_009
	if function#101() 
		if self.distance_2d_to_target().leq(750) 
		elif self.distance_2d_to_target().leq(1500) 
			random (15) >> node_037 
			elser (85) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (15) >> node_037 
			elser (85) 
			endr 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_010
	if function#10F() 
		if self.in_map(st.Caverns_Of_El_Dorado).in_area(4) 
			[RegisterVar9 |-] 
			if [RegisterVar9 -= 11] 
				[RegisterVar9 ++] 
				>> node_039 
				reset 
			elif [RegisterVar9 -= 8] 
				random (25) 
							[RegisterVar9 ++] 
							>> node_039 
							reset 
				elser (75) 
				endr 
			else 
			endif 
		else 
			[RegisterVar9 ++] 
		endif 
	else 
		[RegisterVar9 ++] 
	endif 
	return 
endf 

def node_011
	if self.distance_2d_to_target().leq(500) 
		>> node_031 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_032 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_033 
	else 
		>> node_007 
		>> node_033 
	endif 
	return 
endf 

def node_012
	if self.distance_2d_to_target().leq(500) 
		>> node_013 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_014 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_015 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_016 
	else 
		random (65) >> node_007 
					>> node_014 
		elser (35) >> node_036 
		endr 
	endif 
	return 
endf 

def node_013
	if function#10F() 
		random (0) >> node_195 
		elser (40) >> node_031 
		elser (20) >> node_201 
		elser (40) >> node_197 
		endr 
	else 
		random (0) >> node_195 
		elser (40) >> node_031 
		elser (20) >> node_201 
		elser (40) >> node_197 
		endr 
	endif 
	return 
endf 

def node_014
	if function#10F() 
		if self.angle_2d_cw_between(315,45) 
			random (60) >> node_198 
			elser (0) >> node_195 
			elser (20) >> node_137 
			elser (20) >> node_200 
			endr 
		elif self.angle_2d_cw_between(240,120) 
			random (60) >> node_197 
			elser (0) >> node_195 
			elser (20) >> node_137 
			elser (20) >> node_200 
			endr 
		else 
			random (75) >> node_137 
			elser (25) >> node_200 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(315,45) 
			random (60) >> node_198 
			elser (0) >> node_195 
			elser (15) >> node_137 
			elser (15) >> node_200 
			elser (10) >> node_141 
			endr 
		elif self.angle_2d_cw_between(240,120) 
			random (60) >> node_197 
			elser (0) >> node_195 
			elser (15) >> node_137 
			elser (15) >> node_200 
			elser (10) >> node_141 
			endr 
		else 
			random (70) >> node_137 
			elser (20) >> node_200 
			elser (10) >> node_141 
			endr 
		endif 
	endif 
	return 
endf 

def node_015
	if function#10F() 
		if self.angle_2d_cw_between(270,90) 
			random (30) >> node_193 
			elser (0) >> node_195 
			elser (30) >> node_137 
			elser (20) >> node_200 
			elser (20) >> node_036 
			endr 
		else 
			random (60) >> node_137 
			elser (20) >> node_200 
			elser (20) >> node_036 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (30) >> node_193 
			elser (0) >> node_195 
			elser (30) >> node_137 
			elser (20) >> node_200 
			elser (20) >> node_036 
			endr 
		else 
			random (60) >> node_137 
			elser (20) >> node_200 
			elser (20) >> node_036 
			endr 
		endif 
	endif 
	return 
endf 

def node_016
	if function#10F() 
		if self.angle_2d_cw_between(270,90) 
			random (40) >> node_193 
			elser (35) >> node_137 
			elser (25) >> node_036 
			endr 
		else 
			random (65) >> node_137 
			elser (35) >> node_036 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (40) >> node_193 
			elser (35) >> node_137 
			elser (25) >> node_036 
			endr 
		else 
			random (65) >> node_137 
			elser (35) >> node_036 
			endr 
		endif 
	endif 
	return 
endf 

def node_017
	if self.distance_2d_to_target().leq(500) 
		>> node_018 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_019 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_020 
	elif self.distance_2d_to_target().leq(2500) 
		>> node_021 
	else 
		>> node_022 
	endif 
	return 
endf 

def node_018
	if function#10F() 
		random (35) >> node_035 
		elser (45) >> node_038 
		elser (20) >> node_203 
		endr 
	else 
		random (45) >> node_035 
		elser (35) >> node_142 
		elser (20) >> node_203 
		endr 
	endif 
	return 
endf 

def node_019
	if function#10F() 
		if self.angle_2d_cw_between(225,135) 
			random (35) >> node_035 
			elser (45) >> node_038 
			elser (20) >> node_203 
			endr 
		else 
			random (50) >> node_035 
			elser (50) >> node_038 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(225,135) 
			random (20) >> node_035 
			elser (60) >> node_141 
			elser (20) >> node_203 
			endr 
		else 
			random (40) >> node_035 
			elser (60) >> node_141 
			endr 
		endif 
	endif 
	return 
endf 

def node_020
	if function#10F() 
		if self.angle_2d_cw_between(270,90) 
			random (25) >> node_035 
			elser (40) >> node_038 
			elser (20) >> node_036 
			elser (15) >> node_203 
			endr 
		else 
			random (40) >> node_035 
			elser (20) >> node_036 
			elser (40) >> node_038 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (45) >> node_035 
			elser (5) >> node_141 
			elser (30) >> node_036 
			elser (20) >> node_203 
			endr 
		else 
			random (65) >> node_035 
			elser (30) >> node_036 
			elser (5) >> node_141 
			endr 
		endif 
	endif 
	return 
endf 

def node_021
	if function#10F() 
		if self.angle_2d_cw_between(270,90) 
			random (10) >> node_035 
			elser (40) >> node_038 
			elser (35) >> node_036 
			elser (15) >> node_203 
			endr 
		else 
			random (20) >> node_035 
			elser (45) >> node_036 
			elser (35) >> node_038 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (40) >> node_035 
			elser (0) >> node_141 
			elser (40) >> node_036 
			elser (20) >> node_203 
			endr 
		else 
			random (50) >> node_035 
			elser (50) >> node_036 
			elser (0) >> node_141 
			endr 
		endif 
	endif 
	return 
endf 

def node_022
	if function#10F() 
		random (30) 
					>> node_008 
					>> node_038 
		elser (20) >> node_035 
		elser (35) >> node_036 
		elser (15) >> node_203 
		endr 
	else 
		random (30) 
					>> node_008 
					>> node_141 
		elser (20) >> node_035 
		elser (30) >> node_036 
		elser (20) >> node_203 
		endr 
	endif 
	return 
endf 

def node_023
	>> node_011 
	>> node_012 
	return 
endf 

def node_024
	>> node_011 
	>> node_012 
	>> node_017 
	return 
endf 

def node_025
	>> node_011 
	>> node_017 
	return 
endf 

def node_026
	>> node_012 
	>> node_017 
	return 
endf 

def node_027
	if function#10F() 
		if self.distance_2d_to_target().leq(400) 
			random (50) >> node_011 
			elser (30) >> node_038 
			elser (20) >> node_200 
			endr 
		elif self.distance_2d_to_target().leq(1200) 
			random (30) >> node_011 
			elser (0) >> node_036 
			elser (20) >> node_193 
			elser (30) >> node_137 
			elser (20) >> node_200 
			endr 
		elif self.distance_2d_to_target().leq(2000) 
			random (30) >> node_011 
			elser (20) >> node_036 
			elser (10) >> node_193 
			elser (30) >> node_137 
			elser (10) >> node_200 
			endr 
		else 
			random (20) >> node_137 
			elser (50) >> node_036 
			elser (30) >> node_038 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(400) 
			random (70) >> node_011 
			elser (0) >> node_195 
			elser (30) >> node_200 
			endr 
		elif self.distance_2d_to_target().leq(1200) 
			random (30) >> node_011 
			elser (0) >> node_036 
			elser (0) >> node_195 
			elser (20) >> node_193 
			elser (30) >> node_137 
			elser (20) >> node_200 
			endr 
		elif self.distance_2d_to_target().leq(2000) 
			random (30) >> node_011 
			elser (20) >> node_036 
			elser (10) >> node_193 
			elser (30) >> node_137 
			elser (10) >> node_200 
			endr 
		else 
			random (40) >> node_137 
			elser (60) >> node_036 
			endr 
		endif 
	endif 
	return 
endf 

def node_028
	if self.target(44) 
	else 
		if self.target.helpless_0() 
			random (20) >> node_029 
			elser (80) 
			endr 
		elif function#10D(3,60) 
			random (20) >> node_030 
			elser (80) 
			endr 
		else 
		endif 
	endif 
	return 
endf 

def node_029
	if function#10F() 
		if self.distance_2d_to_target().leq(1500) 
			random (35) >> node_206 
			elser (45) >> node_038 
			elser (20) >> node_203 
			endr 
		elif self.distance_2d_to_target().leq(2800) 
			random (30) >> node_036 
			elser (30) >> node_038 
			elser (20) >> node_037 
			elser (20) >> node_203 
			endr 
		elif self.distance_2d_to_target().leq(4500) 
			random (60) >> node_036 
			elser (40) >> node_203 
			endr 
		else 
		endif 
	else 
		if self.distance_2d_to_target().leq(1500) 
			random (60) >> node_206 
			elser (40) >> node_203 
			endr 
		elif self.distance_2d_to_target().leq(2800) 
			random (40) >> node_036 
			elser (30) >> node_037 
			elser (30) >> node_203 
			endr 
		elif self.distance_2d_to_target().leq(4500) 
			random (60) >> node_036 
			elser (40) >> node_203 
			endr 
		else 
		endif 
	endif 
	return 
endf 

def node_030
	if function#10F() 
		if self.distance_2d_to_target().leq(1500) 
			random (40) >> node_035 
			elser (40) >> node_038 
			elser (20) >> node_203 
			endr 
		elif self.distance_2d_to_target().leq(2800) 
			random (30) >> node_035 
			elser (30) >> node_038 
			elser (20) >> node_037 
			elser (20) >> node_203 
			endr 
		else 
			random (100) >> node_036 
			elser (0) >> node_200 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(1500) 
			random (40) >> node_035 
			elser (40) >> node_141 
			elser (20) >> node_203 
			endr 
		elif self.distance_2d_to_target().leq(2800) 
			random (40) >> node_035 
			elser (40) >> node_037 
			elser (20) >> node_203 
			endr 
		else 
			random (100) >> node_036 
			elser (0) >> node_200 
			endr 
		endif 
	endif 
	return 
endf 

def node_031
	-> kulve_taroth.mr_under_headbutt() 
	return 
endf 

def node_032
	if self.angle_2d_cw_between(330,30) 
		>> node_189 
	elif self.angle_2d_cw_between(270,90) 
		random (50) >> node_189 
		elser (50) >> node_190 
		endr 
	else 
		>> node_190 
	endif 
	return 
endf 

def node_033
	-> kulve_taroth.mr_quick_bite() 
	return 
endf 

def node_034
	-> kulve_taroth.mr_horn_attack() 
	return 
endf 

def node_035
	if self.distance_2d_to_target().leq(1250) 
		>> node_034 
	else 
		>> node_199 
	endif 
	return 
endf 

def node_036
	-> kulve_taroth.mr_straight_breath() 
	return 
endf 

def node_037
	if self.distance_2d_to_target().leq(1500) 
		-> kulve_taroth.back_turn() @ comboSetting:1 
		-> kulve_taroth.mr_sweep_breath() 
	else 
		-> kulve_taroth.mr_sweep_breath() 
	endif 
	if function#10F() 
		random (30) >> node_038 
		elser (70) 
		endr 
	else 
	endif 
	return 
endf 

def node_038
	-> kulve_taroth.mr_super_jump_press_new() 
	return 
endf 

def node_039
	-> kulve_taroth.mr_meteor_shower_start() 
	return 
endf 

def node_040
	if self.distance_2d_to_target().leq(500) 
		>> node_060 
	elif self.distance_2d_to_target().leq(1300) 
		if self.angle_2d_cw_between(330,30) 
			>> node_246 
		elif self.angle_2d_cw_between(270,90) 
			random (50) >> node_246 
			elser (50) >> node_248 
			endr 
		else 
			>> node_248 
		endif 
	elif self.distance_2d_to_target().leq(2000) 
		random (50) >> node_061 
		elser (50) >> node_065 
		endr 
	else 
		>> node_008 
		>> node_246 
	endif 
	return 
endf 

def node_041
	if self.distance_2d_to_target().leq(500) 
		>> node_042 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_043 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_044 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_045 
	else 
		>> node_008 
		>> node_043 
	endif 
	return 
endf 

def node_042
	random (15) >> node_064 
	elser (60) >> node_060 
	elser (25) >> node_252 
	endr 
	return 
endf 

def node_043
	if self.angle_2d_cw_between(240,120) 
		random (30) >> node_063 
		elser (25) >> node_064 
		elser (15) >> node_252 
		elser (30) >> node_166 
		endr 
	else 
		random (40) >> node_063 
		elser (0) >> node_064 
		elser (20) >> node_252 
		elser (40) >> node_166 
		endr 
	endif 
	return 
endf 

def node_044
	if self.angle_2d_cw_between(240,120) 
		random (20) >> node_065 
		elser (25) >> node_063 
		elser (20) >> node_064 
		elser (10) >> node_252 
		elser (25) >> node_166 
		endr 
	else 
		random (20) >> node_065 
		elser (30) >> node_063 
		elser (0) >> node_064 
		elser (20) >> node_252 
		elser (30) >> node_166 
		endr 
	endif 
	return 
endf 

def node_045
	random (20) >> node_065 
	elser (30) >> node_063 
	elser (20) >> node_064 
	elser (0) >> node_253 
	elser (30) >> node_166 
	endr 
	return 
endf 

def node_046
	if self.distance_2d_to_target().leq(500) 
		>> node_047 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_048 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_049 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_050 
	else 
		>> node_051 
	endif 
	return 
endf 

def node_047
	random (35) >> node_068 
	elser (30) >> node_067 
	elser (35) >> node_264 
	endr 
	return 
endf 

def node_048
	random (70) >> node_068 
	elser (20) >> node_067 
	elser (10) >> node_264 
	endr 
	return 
endf 

def node_049
	random (25) >> node_065 
	elser (50) >> node_068 
	elser (15) >> node_067 
	elser (10) >> node_264 
	endr 
	return 
endf 

def node_050
	random (50) >> node_065 
	elser (0) >> node_264 
	elser (50) >> node_069 
	endr 
	return 
endf 

def node_051
	random (50) >> node_065 
	elser (20) >> node_067 
	elser (30) >> node_069 
	endr 
	return 
endf 

def node_052
	>> node_040 
	>> node_041 
	return 
endf 

def node_053
	>> node_040 
	>> node_041 
	>> node_046 
	return 
endf 

def node_054
	>> node_040 
	>> node_046 
	return 
endf 

def node_055
	>> node_041 
	>> node_046 
	return 
endf 

def node_056
	if self.distance_2d_to_target().leq(400) 
		random (50) >> node_040 
		elser (0) >> node_252 
		elser (30) >> node_166 
		elser (20) >> node_260 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (20) >> node_040 
		elser (0) >> node_252 
		elser (20) >> node_061 
		elser (40) >> node_166 
		elser (20) >> node_260 
		endr 
	elif self.distance_2d_to_target().leq(2000) 
		random (20) >> node_061 
		elser (30) >> node_166 
		elser (30) >> node_065 
		elser (20) >> node_260 
		endr 
	else 
		random (20) >> node_166 
		elser (50) >> node_065 
		elser (30) >> node_069 
		endr 
	endif 
	return 
endf 

def node_057
	if self.target(44) 
	else 
		if self.target.helpless_0() 
			random (20) >> node_058 
			elser (80) 
			endr 
		elif function#10D(3,60) 
			random (20) >> node_059 
			elser (80) 
			endr 
		else 
		endif 
	endif 
	return 
endf 

def node_058
	if self.distance_2d_to_target().leq(2000) 
		random (75) >> node_064 
		elser (25) >> node_264 
		endr 
	elif self.distance_2d_to_target().leq(4500) 
		random (50) >> node_065 
		elser (50) >> node_069 
		endr 
	else 
	endif 
	return 
endf 

def node_059
	if self.distance_2d_to_target().leq(2000) 
		random (50) >> node_041 
		elser (50) >> node_046 
		endr 
	else 
		>> node_065 
	endif 
	return 
endf 

def node_060
	-> kulve_taroth.mr_fat_under_headbutt() 
	return 
endf 

def node_061
	-> kulve_taroth.mr_fat_quick_bite() 
	return 
endf 

def node_062
	-> kulve_taroth.fat_back_turn() @ comboSetting:1 
	-> kulve_taroth.mr_fat_quick_bite() 
	return 
endf 

def node_063
	if self.distance_2d_to_target().leq(500) 
		>> node_062 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_061 
	else 
		>> node_061 
	endif 
	return 
endf 

def node_064
	if self.distance_2d_to_target().leq(500) 
		>> node_261 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_260 
	else 
		>> node_006 
		>> node_260 
	endif 
	return 
endf 

def node_065
	-> kulve_taroth.mr_fat_straight_breath() 
	return 
endf 

def node_066
	-> kulve_taroth.fat_back_turn() @ comboSetting:1 
	-> kulve_taroth.mr_fat_straight_breath() 
	return 
endf 

def node_067
	if self.distance_2d_to_target().leq(750) 
		if self.angle_2d_cw_between(0,180) 
			-> kulve_taroth.mr_fat_dash_attack_no_end_reverse() 
		else 
			-> kulve_taroth.fat_dash_attack_no_end() 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			if self.angle_2d_cw_between(0,180) 
				-> kulve_taroth.mr_fat_dash_attack_no_end_reverse() 
			else 
				-> kulve_taroth.fat_dash_attack_no_end() 
			endif 
		else 
			if self.angle_2d_cw_between(0,180) 
				>> node_105 
				-> kulve_taroth.mr_fat_dash_attack_noblend_reverse() 
			else 
				>> node_105 
				-> kulve_taroth.mr_fat_dash_attack_noblend() 
			endif 
		endif 
	endif 
	return 
endf 

def node_068
	if self.distance_2d_to_target().leq(1000) 
	else 
		if self.angle_2d_cw_between(330,30) 
			-> kulve_taroth.fat_quick_turn_to_side() 
		else 
		endif 
	endif 
	if self.angle_2d_cw_between(0,180) 
		-> kulve_taroth.fat_overturn_l() 
	else 
		-> kulve_taroth.fat_overturn_r() 
	endif 
	return 
endf 

def node_069
	if self.angle_2d_cw_between(315,45) 
		>> node_067 
	elif self.angle_2d_cw_between(150,210) 
		>> node_067 
	else 
		>> node_068 
	endif 
	return 
endf 

def node_070
	>> node_086 
	-> kulve_taroth.ex_change_ex_meteo_roar() 
	return 
endf 

def node_071
	>> node_086 
	if function#10E(1,4) 
		if function#110(1,10) 
			random (90) -> kulve_taroth.ex_change_ex_meteo_roar() 
			elser (10) -> kulve_taroth.ex_change_ex_jc_meteo_roar() 
			endr 
		else 
			-> kulve_taroth.meteo_roar() 
		endif 
	else 
		if function#110(1,15) 
			random (90) -> kulve_taroth.ex_change_ex_meteo_roar() 
			elser (10) -> kulve_taroth.ex_change_ex_jc_meteo_roar() 
			endr 
		else 
			-> kulve_taroth.meteo_roar() 
		endif 
	endif 
	return 
endf 

def node_072
	>> node_086 
	-> kulve_taroth.meteo_roar() 
	return 
endf 

def node_073
	if function#101() 
		-> kulve_taroth.threat() 
	else 
		-> kulve_taroth.fat_threat() 
	endif 
	return 
endf 

def node_074
	if function#101() 
		-> kulve_taroth.threat_short() 
	else 
		-> kulve_taroth.fat_threat() 
	endif 
	return 
endf 

def node_075
	if [$V += 0] 
		[$V |-] 
		if self.current_quest().is_rank(rank.MR) 
			if function#101() 
				>> node_074 
			else 
				>> node_086 
			endif 
		else 
			>> node_074 
		endif 
	else 
	endif 
	return 
endf 

def node_076
	if function#101() 
		-> kulve_taroth.lost_search() 
	else 
		-> kulve_taroth.fat_lost_search() 
	endif 
	return 
endf 

def node_077
	if function#101() 
		-> kulve_taroth.short_search() 
	else 
		-> kulve_taroth.fat_short_search() 
	endif 
	return 
endf 

def node_078
	if function#101() 
		-> kulve_taroth.lost_search() 
	else 
		-> kulve_taroth.fat_lost_search() 
	endif 
	return 
endf 

def node_079
	if function#101() 
		-> kulve_taroth.tired() 
	else 
		-> kulve_taroth.fat_tired() 
	endif 
	return 
endf 

def node_080
	if function#101() 
		-> kulve_taroth.refresh() 
	else 
		-> kulve_taroth.fat_refresh() 
	endif 
	return 
endf 

def node_081
	if function#101() 
		-> kulve_taroth.smell() 
	else 
		-> kulve_taroth.fat_smell() 
	endif 
	return 
endf 

def node_082
	if self.alert_out_of_combat() 
		if function#101() 
			-> kulve_taroth.lost_search() 
		else 
			-> kulve_taroth.fat_lost_search() 
		endif 
	else 
		if function#101() 
			-> kulve_taroth.search() 
		else 
			-> kulve_taroth.fat_search() 
		endif 
	endif 
	return 
endf 

def node_083
	if function#101() 
		-> kulve_taroth.wait() 
	else 
		-> kulve_taroth.fat_wait() 
	endif 
	return 
endf 

def node_084
	if function#101() 
		-> kulve_taroth.wait() 
	else 
		-> kulve_taroth.fat_wait() 
	endif 
	return 
endf 

def node_085
	if function#101() 
		[RegisterVar0 ++] 
		[RegisterVar1 ++] 
		[RegisterVar3 ++] 
		function#104() 
		function#109() 
		-> kulve_taroth.slim_to_fat() 
	else 
		[RegisterVar0 ++] 
		[RegisterVar1 ++] 
		[RegisterVar3 ++] 
		function#104() 
		function#109() 
		-> kulve_taroth.fat_in_out_ground() 
	endif 
	return 
endf 

def node_086
	if function#101() 
	else 
		[RegisterVar0 ++] 
		[RegisterVar1 ++] 
		[RegisterVar3 ++] 
		function#104() 
		function#109() 
		-> kulve_taroth.fat_to_slim() 
	endif 
	return 
endf 

def node_087
	if function#101() 
	else 
		[RegisterVar0 ++] 
		[RegisterVar1 ++] 
		function#104() 
		-> kulve_taroth.fat_to_zakuzaku() 
	endif 
	return 
endf 

def node_088
	if function#101() 
	else 
		[RegisterVar0 ++] 
		[RegisterVar1 ++] 
		function#104() 
		-> kulve_taroth.zakuzaku_to_fat() 
	endif 
	return 
endf 

def node_089
	if function#101() 
	elif function#102() 
	else 
		if function#103(1,1000) 
			>> node_087 
			reset 
		else 
		endif 
	endif 
	return 
endf 

def node_090
	if function#101() 
	elif function#102() 
		[RegisterVar0 |-] 
		if self.in_combat() 
			if [RegisterVar0 -= 15] 
				>> node_088 
				reset 
			else 
			endif 
		else 
			if [RegisterVar0 -= 3] 
				>> node_088 
				reset 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_091
	if function#101() 
	else 
		if function#107() 
		elif self.in_map(st.Caverns_Of_El_Dorado).in_area(1) 
		elif self.in_map(st.Caverns_Of_El_Dorado).in_area(4) 
			>> node_086 
			reset 
		elif self.in_map(st.Caverns_Of_El_Dorado).in_area(2) 
			if function#10E(1,4) 
				if function#105(1,6) 
					>> node_086 
					reset 
				else 
				endif 
			else 
				if function#105(1,5) 
					[RegisterVar4 |-] 
					>> node_085 
					reset 
				else 
				endif 
			endif 
		elif self.in_map(st.Caverns_Of_El_Dorado).in_area(3) 
			if function#10E(1,4) 
				if function#105(1,6) 
					>> node_086 
					reset 
				else 
				endif 
			else 
				if function#105(1,5) 
					if [RegisterVar4 -= 1] 
						>> node_086 
						reset 
					else 
						[RegisterVar4 |-] 
						>> node_085 
						reset 
					endif 
				else 
				endif 
			endif 
		else 
			if function#105(1,6) 
				>> node_086 
				reset 
			else 
			endif 
		endif 
	endif 
	return 
endf 

def node_092
	if function#101() 
		if function#107() 
			>> node_085 
			reset 
		elif self.in_map(st.Caverns_Of_El_Dorado).in_area(1) 
			>> node_085 
			reset 
		elif self.in_map(st.Caverns_Of_El_Dorado).in_area(3) 
		elif self.in_map(st.Caverns_Of_El_Dorado).in_area(4) 
		else 
			[RegisterVar1 |-] 
			if [RegisterVar1 -= 99] 
				>> node_085 
				reset 
			else 
			endif 
		endif 
	elif function#102() 
	else 
	endif 
	return 
endf 

def node_093
	if function#101() 
	elif self.in_map(st.Caverns_Of_El_Dorado).in_area(4) 
	else 
		if function#105(1,6) 
			[RegisterVar3 |-] 
			if [RegisterVar3 -= 10] 
				[RegisterVar3 ++] 
				-> kulve_taroth.fat_in_out_ground() 
				reset 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_094
	if function#101() 
	else 
		>> node_091 
		if function#102() 
			>> node_090 
		else 
			>> node_089 
		endif 
		>> node_093 
	endif 
	return 
endf 

def node_095
	if function#101() 
	else 
		if self.in_map(st.Caverns_Of_El_Dorado).in_area(3) 
			>> node_086 
			reset 
		elif self.in_map(st.Caverns_Of_El_Dorado).in_area(4) 
			>> node_086 
			reset 
		else 
			if function#102() 
				>> node_090 
			else 
				>> node_089 
			endif 
		endif 
	endif 
	return 
endf 

def node_096
	if self.in_map(st.Caverns_Of_El_Dorado).in_area(2) 
		if function#101() 
			[RegisterVar6 |-] 
			function#108() 
		else 
		endif 
	elif self.in_map(st.Caverns_Of_El_Dorado).in_area(3) 
		if function#101() 
			if [RegisterVar6 -= 1] 
				if [RegisterVar6 -= 7] 
					[RegisterVar6 ++] 
					function#108() 
				else 
					[RegisterVar6 |-] 
				endif 
			else 
				[RegisterVar6 ++] 
				function#108() 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_097
	if self.in_map(st.Caverns_Of_El_Dorado).in_area(2) 
		if [RegisterVar8 += 0] 
			[RegisterVar8 |-] 
			if function#101() 
			else 
				if function#105(2) 
					>> node_085 
				else 
				endif 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_098
	if function#101() 
		-> kulve_taroth.run(1,2,0,600,1500) 
	else 
		-> kulve_taroth.fat_run(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_099
	if self.distance_3d_to_target().leq(700) 
	else 
		>> node_098 
		repeat 
	endif 
	return 
endf 

def node_100
	if function#101() 
		-> kulve_taroth.run(1,2,0,1000,1500) 
	else 
		-> kulve_taroth.fat_run(1,2,0,1000,1500) 
	endif 
	return 
endf 

def node_101
	>> node_100 
	>> node_100 
	return 
endf 

def node_102
	>> node_100 
	>> node_100 
	>> node_100 
	return 
endf 

def node_103
	if self.distance_2d_to_target().leq(800) 
	else 
		if function#101() 
			-> kulve_taroth.run(6,2,0,600,1500) 
		else 
			-> kulve_taroth.fat_run(6,2,0,600,1500) 
		endif 
	endif 
	if self.distance_2d_to_target().leq(800) 
	else 
		if function#101() 
			-> kulve_taroth.run(1,2,0,600,1500) 
		else 
			-> kulve_taroth.fat_run(1,2,0,600,1500) 
		endif 
	endif 
	if self.distance_2d_to_target().leq(800) 
	else 
		if function#101() 
			-> kulve_taroth.run(1,2,0,600,1500) 
		else 
			-> kulve_taroth.fat_run(1,2,0,600,1500) 
		endif 
	endif 
	return 
endf 

def node_104
	if self.distance_2d_to_target().leq(2000) 
		>> node_109 
	else 
		return 
	endif 
	return 
endf 

def node_105
	if function#101() 
		-> kulve_taroth.quick_turn() 
	else 
		-> kulve_taroth.fat_quick_turn() 
	endif 
	return 
endf 

def node_106
	if self.distance_2d_to_target().leq(1250) 
		-> kulve_taroth.battle_turn() 
	else 
		>> node_105 
	endif 
	return 
endf 

def node_107
	if self.distance_2d_to_target().leq(1250) 
		-> kulve_taroth.fat_battle_turn() 
	else 
		>> node_105 
	endif 
	return 
endf 

def node_108
	if function#101() 
		>> node_106 
	else 
		>> node_107 
	endif 
	return 
endf 

def node_109
	if function#101() 
		-> kulve_taroth.back_turn() 
	else 
		-> kulve_taroth.fat_back_turn() 
	endif 
	return 
endf 

def node_110
	if function#101() 
		-> kulve_taroth.turn() 
	else 
		-> kulve_taroth.fat_turn() 
	endif 
	return 
endf 

def node_111
	if self.angle_2d_cw_between(15,345) 
		>> node_105 
	else 
	endif 
	return 
endf 

def node_112
	if self.angle_2d_cw_between(30,330) 
		>> node_105 
	else 
	endif 
	return 
endf 

def node_113
	if self.angle_2d_cw_between(45,315) 
		>> node_105 
	else 
	endif 
	return 
endf 

def node_114
	if self.angle_2d_cw_between(60,300) 
		>> node_105 
	else 
	endif 
	return 
endf 

def node_115
	if self.angle_2d_cw_between(75,285) 
		>> node_105 
	else 
	endif 
	return 
endf 

def node_116
	if self.angle_2d_cw_between(90,270) 
		>> node_105 
	else 
	endif 
	return 
endf 

def node_117
	if self.angle_2d_cw_between(135,225) 
		>> node_105 
	else 
	endif 
	return 
endf 

def node_118
	if self.angle_2d_cw_between(15,345) 
		>> node_108 
	else 
	endif 
	return 
endf 

def node_119
	if self.angle_2d_cw_between(30,330) 
		>> node_108 
	else 
	endif 
	return 
endf 

def node_120
	if self.angle_2d_cw_between(45,315) 
		>> node_108 
	else 
	endif 
	return 
endf 

def node_121
	if self.angle_2d_cw_between(60,300) 
		>> node_108 
	else 
	endif 
	return 
endf 

def node_122
	if self.angle_2d_cw_between(75,285) 
		>> node_108 
	else 
	endif 
	return 
endf 

def node_123
	if self.angle_2d_cw_between(90,270) 
		>> node_108 
	else 
	endif 
	return 
endf 

def node_124
	if self.angle_2d_cw_between(15,345) 
		>> node_109 
	else 
	endif 
	return 
endf 

def node_125
	if self.angle_2d_cw_between(30,330) 
		>> node_109 
	else 
	endif 
	return 
endf 

def node_126
	if self.angle_2d_cw_between(45,315) 
		>> node_109 
	else 
	endif 
	return 
endf 

def node_127
	if self.angle_2d_cw_between(60,300) 
		>> node_109 
	else 
	endif 
	return 
endf 

def node_128
	if self.angle_2d_cw_between(90,270) 
		>> node_109 
	else 
	endif 
	return 
endf 

def node_129
	if self.angle_2d_cw_between(15,345) 
		>> node_110 
	else 
	endif 
	return 
endf 

def node_130
	if self.angle_2d_cw_between(30,330) 
		>> node_110 
	else 
	endif 
	return 
endf 

def node_131
	if self.angle_2d_cw_between(45,315) 
		>> node_110 
	else 
	endif 
	return 
endf 

def node_132
	if self.angle_2d_cw_between(60,300) 
		>> node_110 
	else 
	endif 
	return 
endf 

def node_133
	if self.angle_2d_cw_between(90,270) 
		>> node_110 
	else 
	endif 
	return 
endf 

def node_134
	if function#101() 
		-> kulve_taroth.front_battle_turn() 
	else 
		-> kulve_taroth.fat_front_battle_turn() 
	endif 
	return 
endf 

def node_135
	if function#101() 
		if self.distance_2d_to_target().leq(500) 
			random (35) >> node_134 
			elser (65) 
			endr 
		elif self.distance_2d_to_target().leq(2000) 
		else 
			random (50) >> node_102 
						self.targetEnemy(target_em.random_player_or_cat) 
			elser (50) 
			endr 
		endif 
	else 
		if function#102() 
			if self.distance_2d_to_target().leq(500) 
				random (35) >> node_134 
				elser (65) 
				endr 
			elif self.distance_2d_to_target().leq(2000) 
			else 
				random (50) >> node_102 
							self.targetEnemy(target_em.random_player_or_cat) 
				elser (50) 
				endr 
			endif 
		else 
			if self.distance_2d_to_target().leq(500) 
				random (35) >> node_134 
				elser (65) 
				endr 
			elif self.distance_2d_to_target().leq(2000) 
			else 
				random (75) >> node_102 
							self.targetEnemy(target_em.random_player_or_cat) 
				elser (25) 
				endr 
			endif 
		endif 
	endif 
	return 
endf 

def node_136
	if function#101() 
		if self.distance_2d_to_target().leq(500) 
			random (65) >> node_134 
			elser (35) 
			endr 
		else 
		endif 
	else 
		if self.distance_2d_to_target().leq(500) 
			random (50) >> node_134 
			elser (50) 
			endr 
		else 
		endif 
	endif 
	return 
endf 

def node_137
	-> kulve_taroth.ex_tail_attack() 
	return 
endf 

def node_138
	if self.enraged() 
		-> kulve_taroth.back_turn() @ comboSetting:1 
		-> kulve_taroth.straight_breath() @ comboSetting:1 
		-> kulve_taroth.straight_breath() 
	else 
		-> kulve_taroth.back_turn() @ comboSetting:1 
		-> kulve_taroth.straight_breath() 
	endif 
	return 
endf 

def node_139
	if self.enraged() 
		-> kulve_taroth.straight_breath() @ comboSetting:1 
		-> kulve_taroth.straight_breath() 
	else 
		-> kulve_taroth.straight_breath() 
	endif 
	return 
endf 

def node_140
	-> kulve_taroth.ex_sweep_breath() 
	return 
endf 

def node_141
	-> kulve_taroth.ex_max_punch() 
	return 
endf 

def node_142
	-> kulve_taroth.back_turn() @ comboSetting:1 
	-> kulve_taroth.ex_max_punch() 
	return 
endf 

def node_143
	if function#10F() 
		if function#101() 
			if self.distance_2d_to_target().leq(750) 
			elif self.distance_2d_to_target().leq(1500) 
				random (20) >> node_140 
				elser (80) 
				endr 
			elif self.distance_2d_to_target().leq(3000) 
				random (30) >> node_140 
				elser (70) 
				endr 
			else 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_144
	if self.distance_2d_to_target().leq(500) 
		>> node_145 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_146 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_147 
	else 
		>> node_101 
		self.targetEnemy(48) 
		>> node_147 
	endif 
	return 
endf 

def node_145
	>> node_212 
	if self.distance_2d_to_target().leq(500) 
		>> node_148 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_212 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_212 
	else 
	endif 
	return 
endf 

def node_146
	>> node_212 
	if self.distance_2d_to_target().leq(500) 
		>> node_212 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_148 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_212 
	else 
	endif 
	return 
endf 

def node_147
	>> node_212 
	if self.distance_2d_to_target().leq(500) 
		>> node_212 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_212 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_148 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_148 
	else 
	endif 
	return 
endf 

def node_148
	if self.distance_2d_to_target().leq(500) 
		>> node_149 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_150 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_151 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_152 
	else 
		>> node_101 
		self.targetEnemy(48) 
		>> node_150 
	endif 
	return 
endf 

def node_149
	if function#10F() 
		random (65) >> node_195 
		elser (10) >> node_201 
		elser (25) >> node_197 
		endr 
	else 
		random (65) >> node_195 
		elser (25) >> node_201 
		elser (10) >> node_197 
		endr 
	endif 
	return 
endf 

def node_150
	if function#10F() 
		if self.angle_2d_cw_between(315,45) 
			random (65) >> node_198 
			elser (25) >> node_195 
			elser (0) >> node_137 
			elser (10) >> node_200 
			endr 
		elif self.angle_2d_cw_between(240,120) 
			random (65) >> node_197 
			elser (25) >> node_195 
			elser (0) >> node_137 
			elser (10) >> node_200 
			endr 
		else 
			>> node_137 
		endif 
	else 
		if self.angle_2d_cw_between(315,45) 
			random (75) >> node_198 
			elser (0) >> node_195 
			elser (0) >> node_137 
			elser (25) >> node_200 
			endr 
		elif self.angle_2d_cw_between(240,120) 
			random (75) >> node_197 
			elser (0) >> node_195 
			elser (0) >> node_137 
			elser (25) >> node_200 
			endr 
		else 
			>> node_137 
		endif 
	endif 
	return 
endf 

def node_151
	if function#10F() 
		if self.angle_2d_cw_between(270,90) 
			random (45) >> node_193 
			elser (0) >> node_195 
			elser (45) >> node_137 
			elser (10) >> node_200 
			endr 
		else 
			>> node_137 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (35) >> node_193 
			elser (0) >> node_195 
			elser (40) >> node_137 
			elser (25) >> node_200 
			endr 
		else 
			>> node_137 
		endif 
	endif 
	return 
endf 

def node_152
	if function#10F() 
		if self.angle_2d_cw_between(270,90) 
			random (50) >> node_193 
			elser (50) >> node_137 
			elser (0) >> node_139 
			endr 
		else 
			random (100) >> node_137 
			elser (0) >> node_139 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (50) >> node_193 
			elser (50) >> node_137 
			elser (0) >> node_139 
			endr 
		else 
			random (100) >> node_137 
			elser (0) >> node_139 
			endr 
		endif 
	endif 
	return 
endf 

def node_153
	if self.distance_2d_to_target().leq(500) 
		>> node_154 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_155 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_156 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_157 
	else 
		>> node_101 
		self.targetEnemy(48) 
		>> node_156 
	endif 
	return 
endf 

def node_154
	>> node_149 
	if self.distance_2d_to_target().leq(500) 
		>> node_158 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_150 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_151 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_152 
	else 
	endif 
	return 
endf 

def node_155
	>> node_150 
	if self.distance_2d_to_target().leq(500) 
		>> node_149 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_158 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_151 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_152 
	else 
	endif 
	return 
endf 

def node_156
	>> node_151 
	if self.distance_2d_to_target().leq(500) 
		>> node_149 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_150 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_158 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_158 
	else 
	endif 
	return 
endf 

def node_157
	>> node_152 
	if self.distance_2d_to_target().leq(500) 
		>> node_149 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_150 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_158 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_158 
	else 
	endif 
	return 
endf 

def node_158
	if self.distance_2d_to_target().leq(500) 
		>> node_159 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_160 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_161 
	elif self.distance_2d_to_target().leq(2500) 
		>> node_162 
	else 
		>> node_163 
	endif 
	return 
endf 

def node_159
	if function#10F() 
		random (50) >> node_199 
		elser (30) >> node_142 
		elser (0) >> node_138 
		elser (20) >> node_203 
		endr 
	elif self.enraged() 
		random (60) >> node_199 
		elser (0) >> node_142 
		elser (0) >> node_138 
		elser (40) >> node_203 
		endr 
	else 
		random (100) >> node_199 
		elser (0) >> node_142 
		elser (0) >> node_138 
		elser (0) >> node_203 
		endr 
	endif 
	return 
endf 

def node_160
	if function#10F() 
		if self.angle_2d_cw_between(225,135) 
			random (30) >> node_199 
			elser (50) >> node_141 
			elser (0) >> node_138 
			elser (20) >> node_203 
			endr 
		else 
			random (50) >> node_199 
			elser (0) >> node_138 
			elser (50) >> node_141 
			endr 
		endif 
	elif self.enraged() 
		if self.angle_2d_cw_between(225,135) 
			random (60) >> node_199 
			elser (0) >> node_141 
			elser (0) >> node_138 
			elser (40) >> node_203 
			endr 
		else 
			random (75) >> node_199 
			elser (25) >> node_138 
			elser (0) >> node_141 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(225,135) 
			random (75) >> node_199 
			elser (0) >> node_141 
			elser (25) >> node_138 
			elser (0) >> node_203 
			endr 
		else 
			random (75) >> node_199 
			elser (25) >> node_138 
			elser (0) >> node_141 
			endr 
		endif 
	endif 
	return 
endf 

def node_161
	if function#10F() 
		if self.angle_2d_cw_between(270,90) 
			random (30) >> node_199 
			elser (50) >> node_141 
			elser (0) >> node_139 
			elser (20) >> node_203 
			endr 
		else 
			random (50) >> node_199 
			elser (0) >> node_139 
			elser (50) >> node_141 
			endr 
		endif 
	elif self.enraged() 
		if self.angle_2d_cw_between(270,90) 
			random (60) >> node_199 
			elser (0) >> node_141 
			elser (0) >> node_139 
			elser (40) >> node_203 
			endr 
		else 
			random (75) >> node_199 
			elser (25) >> node_139 
			elser (0) >> node_141 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (75) >> node_199 
			elser (0) >> node_141 
			elser (25) >> node_139 
			elser (0) >> node_203 
			endr 
		else 
			random (75) >> node_199 
			elser (25) >> node_139 
			elser (0) >> node_141 
			endr 
		endif 
	endif 
	return 
endf 

def node_162
	if function#10F() 
		random (75) >> node_161 
		elser (25) >> node_139 
		endr 
	elif self.enraged() 
		random (75) >> node_161 
		elser (25) >> node_139 
		endr 
	else 
		random (75) >> node_161 
		elser (25) >> node_139 
		endr 
	endif 
	return 
endf 

def node_163
	if function#10F() 
		random (65) 
					>> node_102 
					self.targetEnemy(48) 
					>> node_160 
		elser (25) >> node_139 
		elser (10) >> node_203 
		endr 
	elif self.enraged() 
		random (65) 
					>> node_102 
					self.targetEnemy(48) 
					>> node_160 
		elser (25) >> node_139 
		elser (10) >> node_203 
		endr 
	else 
		random (75) 
					>> node_102 
					self.targetEnemy(48) 
					>> node_160 
		elser (25) >> node_139 
		elser (0) >> node_203 
		endr 
	endif 
	return 
endf 

def node_164
	if function#10F() 
		if self.distance_2d_to_target().leq(1500) 
			random (50) >> node_206 
			elser (50) >> node_203 
			endr 
		elif self.distance_2d_to_target().leq(2800) 
			random (20) >> node_139 
			elser (40) >> node_140 
			elser (40) >> node_203 
			endr 
		elif self.distance_2d_to_target().leq(4500) 
			random (50) >> node_139 
			elser (50) >> node_203 
			endr 
		else 
		endif 
	else 
		>> node_243 
	endif 
	return 
endf 

def node_165
	if function#10F() 
		if self.distance_2d_to_target().leq(1500) 
			random (35) >> node_199 
			elser (40) >> node_141 
			elser (25) >> node_203 
			endr 
		elif self.distance_2d_to_target().leq(2800) 
			random (35) >> node_199 
			elser (40) >> node_140 
			elser (25) >> node_203 
			endr 
		else 
			random (100) >> node_139 
			elser (0) >> node_200 
			endr 
		endif 
	else 
		>> node_244 
	endif 
	return 
endf 

def node_166
	-> kulve_taroth.fat_ex_tail_attack() 
	return 
endf 

def node_167
	if self.angle_2d_cw_between(270,90) 
		>> node_249 
	else 
		>> node_166 
	endif 
	return 
endf 

def node_168
	if self.angle_2d_cw_between(270,90) 
		if self.distance_2d_to_target().leq(1500) 
			>> node_252 
		else 
			>> node_254 
		endif 
	else 
		if self.distance_2d_to_target().leq(500) 
			>> node_252 
		else 
			>> node_166 
		endif 
	endif 
	return 
endf 

def node_169
	if self.enraged() 
		-> kulve_taroth.fat_back_turn() @ comboSetting:1 
		-> kulve_taroth.fat_straight_breath() @ comboSetting:1 
		-> kulve_taroth.fat_straight_breath() 
	else 
		-> kulve_taroth.fat_back_turn() @ comboSetting:1 
		-> kulve_taroth.fat_straight_breath() 
	endif 
	return 
endf 

def node_170
	if self.enraged() 
		-> kulve_taroth.fat_straight_breath() @ comboSetting:1 
		-> kulve_taroth.fat_straight_breath() 
	else 
		-> kulve_taroth.fat_straight_breath() 
	endif 
	return 
endf 

def node_171
	if self.distance_2d_to_target().leq(500) 
		>> node_172 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_173 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_174 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_175 
	else 
		>> node_101 
		self.targetEnemy(48) 
		>> node_173 
	endif 
	return 
endf 

def node_172
	if function#102() 
		random (25) >> node_266 
		elser (50) >> node_271 
		elser (25) >> node_252 
		endr 
	else 
		random (50) >> node_266 
		elser (50) >> node_252 
		endr 
	endif 
	return 
endf 

def node_173
	if function#102() 
		if self.angle_2d_cw_between(270,90) 
			random (25) >> node_266 
			elser (50) >> node_271 
			elser (25) >> node_252 
			endr 
		else 
			random (50) >> node_271 
			elser (50) >> node_166 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (50) >> node_266 
			elser (50) >> node_252 
			endr 
		else 
			random (0) >> node_266 
			elser (0) >> node_253 
			elser (100) >> node_166 
			endr 
		endif 
	endif 
	return 
endf 

def node_174
	if function#102() 
		if self.angle_2d_cw_between(270,90) 
			random (0) >> node_266 
			elser (50) >> node_271 
			elser (50) >> node_166 
			elser (0) >> node_252 
			endr 
		else 
			random (50) >> node_271 
			elser (50) >> node_166 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (50) >> node_266 
			elser (50) >> node_166 
			elser (0) >> node_252 
			endr 
		else 
			random (0) >> node_266 
			elser (0) >> node_253 
			elser (100) >> node_166 
			endr 
		endif 
	endif 
	return 
endf 

def node_175
	if self.angle_2d_cw_between(270,90) 
		random (50) >> node_266 
		elser (50) >> node_166 
		elser (0) >> node_254 
		endr 
	else 
		random (0) >> node_266 
		elser (0) >> node_254 
		elser (100) >> node_166 
		endr 
	endif 
	return 
endf 

def node_176
	if self.distance_2d_to_target().leq(500) 
		>> node_177 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_178 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_179 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_180 
	else 
		>> node_101 
		self.targetEnemy(48) 
		>> node_179 
	endif 
	return 
endf 

def node_177
	>> node_252 
	if self.distance_2d_to_target().leq(500) 
		>> node_134 
		>> node_181 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_167 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_167 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_167 
	else 
	endif 
	return 
endf 

def node_178
	random (65) >> node_253 
	elser (35) >> node_168 
	endr 
	if self.distance_2d_to_target().leq(500) 
		>> node_134 
		>> node_181 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_167 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_167 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_167 
	else 
	endif 
	return 
endf 

def node_179
	random (50) >> node_266 
	elser (50) >> node_167 
	endr 
	if self.distance_2d_to_target().leq(500) 
		>> node_168 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_168 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_181 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_181 
	else 
	endif 
	return 
endf 

def node_180
	random (65) >> node_266 
	elser (35) >> node_167 
	endr 
	if self.distance_2d_to_target().leq(500) 
		>> node_168 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_168 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_181 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_181 
	else 
	endif 
	return 
endf 

def node_181
	if self.distance_2d_to_target().leq(500) 
		>> node_182 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_183 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_184 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_185 
	else 
		>> node_186 
	endif 
	return 
endf 

def node_182
	if function#102() 
		random (0) >> node_252 
		elser (35) >> node_255 
		elser (0) >> node_271 
		elser (50) >> node_169 
		elser (15) >> node_264 
		endr 
	else 
		random (0) >> node_252 
		elser (50) >> node_255 
		elser (50) >> node_169 
		elser (0) >> node_256 
		endr 
	endif 
	return 
endf 

def node_183
	if function#102() 
		random (0) >> node_168 
		elser (50) >> node_255 
		elser (35) >> node_169 
		elser (15) >> node_264 
		endr 
	else 
		random (0) >> node_168 
		elser (50) >> node_255 
		elser (50) >> node_169 
		elser (0) >> node_256 
		endr 
	endif 
	return 
endf 

def node_184
	if function#102() 
		random (35) >> node_170 
		elser (50) >> node_255 
		elser (15) >> node_264 
		endr 
	else 
		random (0) >> node_168 
		elser (65) >> node_255 
		elser (35) >> node_170 
		elser (0) >> node_256 
		endr 
	endif 
	return 
endf 

def node_185
	if function#102() 
		if self.angle_2d_cw_between(270,90) 
			random (50) >> node_170 
			elser (50) >> node_259 
			endr 
		elif self.angle_2d_cw_between(135,225) 
			>> node_170 
		else 
			random (50) >> node_170 
			elser (50) >> node_255 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (50) >> node_170 
			elser (50) >> node_259 
			endr 
		elif self.angle_2d_cw_between(135,225) 
			>> node_170 
		else 
			random (50) >> node_170 
			elser (50) >> node_255 
			endr 
		endif 
	endif 
	return 
endf 

def node_186
	if function#102() 
		if self.angle_2d_cw_between(270,90) 
			random (50) >> node_170 
			elser (50) >> node_259 
			endr 
		elif self.angle_2d_cw_between(135,225) 
			>> node_170 
		else 
			random (50) >> node_170 
			elser (50) >> node_255 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (50) >> node_170 
			elser (50) >> node_259 
			endr 
		elif self.angle_2d_cw_between(135,225) 
			>> node_170 
		else 
			random (50) >> node_170 
			elser (50) >> node_255 
			endr 
		endif 
	endif 
	return 
endf 

def node_187
	if function#102() 
		if self.distance_2d_to_target().leq(2000) 
			random (50) >> node_271 
			elser (50) >> node_264 
			endr 
		elif self.distance_2d_to_target().leq(4500) 
			random (50) >> node_170 
			elser (50) >> node_259 
			endr 
		else 
		endif 
	else 
		random (50) >> node_171 
		elser (50) >> node_181 
		endr 
	endif 
	return 
endf 

def node_188
	if function#102() 
		if self.distance_2d_to_target().leq(2000) 
			random (50) >> node_171 
			elser (50) >> node_181 
			endr 
		else 
			>> node_170 
		endif 
	else 
		random (50) >> node_171 
		elser (50) >> node_181 
		endr 
	endif 
	return 
endf 

def node_189
	>> node_116 
	if self.angle_2d_cw_between(0,180) 
		-> kulve_taroth.scratch_r() 
	else 
		-> kulve_taroth.scratch_l() 
	endif 
	return 
endf 

def node_190
	-> kulve_taroth.turn_scratch() 
	return 
endf 

def node_191
	>> node_116 
	-> kulve_taroth.quick_bite() 
	return 
endf 

def node_192
	if self.angle_2d_cw_between(330,30) 
		-> kulve_taroth.back_turn() @ comboSetting:1 
		-> kulve_taroth.front_quick_bite() 
	else 
		-> kulve_taroth.back_turn() @ comboSetting:1 
		-> kulve_taroth.quick_bite() 
	endif 
	return 
endf 

def node_193
	>> node_116 
	-> kulve_taroth.simple_bite() 
	return 
endf 

def node_194
	if self.angle_2d_cw_between(0,180) 
		-> kulve_taroth.tail_attack_l() 
	else 
		-> kulve_taroth.tail_attack_r() 
	endif 
	return 
endf 

def node_195
	-> kulve_taroth.body_press() 
	return 
endf 

def node_196
	>> node_114 
	-> kulve_taroth.body_press() 
	return 
endf 

def node_197
	-> kulve_taroth.stamp_attack() 
	return 
endf 

def node_198
	>> node_113 
	-> kulve_taroth.triple_headbutt() 
	return 
endf 

def node_199
	-> kulve_taroth.horn_attack() 
	return 
endf 

def node_200
	>> node_117 
	-> kulve_taroth.small_range_breath() 
	return 
endf 

def node_201
	-> kulve_taroth.back_turn() @ comboSetting:1 
	-> kulve_taroth.small_range_breath() 
	return 
endf 

def node_202
	if self.current_quest().is_rank(rank.AT) 
		if self.enraged() 
			-> kulve_taroth.straight_breath() @ comboSetting:1 
			-> kulve_taroth.straight_breath() 
		else 
			-> kulve_taroth.straight_breath() 
		endif 
	else 
		-> kulve_taroth.straight_breath() 
	endif 
	return 
endf 

def node_203
	if self.distance_2d_to_target().leq(1000) 
	else 
		>> node_116 
	endif 
	-> kulve_taroth.all_range_breath() 
	return 
endf 

def node_204
	if self.angle_2d_cw_between(315,45) 
		>> node_189 
	elif self.angle_2d_cw_between(270,90) 
		random (50) >> node_189 
		elser (50) >> node_190 
		endr 
	else 
		>> node_190 
	endif 
	return 
endf 

def node_205
	if self.angle_2d_cw_between(270,90) 
		>> node_193 
	else 
		>> node_194 
	endif 
	return 
endf 

def node_206
	if self.distance_2d_to_target().leq(500) 
		>> node_201 
	else 
		>> node_200 
	endif 
	return 
endf 

def node_207
	if self.angle_2d_cw_between(315,45) 
		>> node_196 
	elif self.angle_2d_cw_between(135,225) 
		>> node_196 
	else 
		>> node_197 
	endif 
	return 
endf 

def node_208
	if self.angle_2d_cw_between(315,45) 
		>> node_198 
	elif self.angle_2d_cw_between(135,225) 
		>> node_198 
	else 
		>> node_197 
	endif 
	return 
endf 

def node_209
	if self.distance_2d_to_target().leq(500) 
		random (50) >> node_199 
		elser (50) >> node_201 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_219 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_220 
	else 
		>> node_202 
	endif 
	return 
endf 

def node_210
	if self.distance_2d_to_target().leq(500) 
		>> node_218 
	elif self.distance_2d_to_target().leq(1000) 
		random (50) >> node_199 
		elser (50) >> node_200 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_220 
	else 
		>> node_202 
	endif 
	return 
endf 

def node_211
	if self.distance_2d_to_target().leq(500) 
		>> node_218 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_219 
	elif self.distance_2d_to_target().leq(1500) 
		random (50) >> node_199 
		elser (50) >> node_200 
		endr 
	else 
		>> node_202 
	endif 
	return 
endf 

def node_212
	if self.distance_2d_to_target().leq(500) 
		>> node_192 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_204 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_191 
	else 
		>> node_101 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_191 
	endif 
	return 
endf 

def node_213
	if self.distance_2d_to_target().leq(500) 
		>> node_214 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_215 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_216 
	else 
		>> node_101 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_216 
	endif 
	return 
endf 

def node_214
	>> node_212 
	if self.distance_2d_to_target().leq(500) 
		>> node_218 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_212 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_212 
	else 
	endif 
	return 
endf 

def node_215
	>> node_212 
	if self.distance_2d_to_target().leq(500) 
		>> node_212 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_219 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_212 
	else 
	endif 
	return 
endf 

def node_216
	>> node_212 
	if self.distance_2d_to_target().leq(500) 
		>> node_212 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_212 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_220 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_221 
	else 
	endif 
	return 
endf 

def node_217
	if self.distance_2d_to_target().leq(500) 
		>> node_218 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_219 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_220 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_221 
	else 
		>> node_101 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_219 
	endif 
	return 
endf 

def node_218
	random (75) >> node_195 
	elser (25) >> node_201 
	endr 
	return 
endf 

def node_219
	if self.angle_2d_cw_between(315,45) 
		random (75) >> node_198 
		elser (25) >> node_200 
		endr 
	elif self.angle_2d_cw_between(240,120) 
		random (75) >> node_197 
		elser (25) >> node_200 
		endr 
	else 
		>> node_194 
	endif 
	return 
endf 

def node_220
	if self.angle_2d_cw_between(270,90) 
		random (75) >> node_193 
		elser (25) >> node_200 
		endr 
	else 
		>> node_194 
	endif 
	return 
endf 

def node_221
	if self.angle_2d_cw_between(270,90) 
		random (50) >> node_193 
		elser (50) >> node_202 
		endr 
	else 
		>> node_202 
	endif 
	return 
endf 

def node_222
	if self.distance_2d_to_target().leq(500) 
		>> node_223 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_224 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_225 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_226 
	else 
		>> node_101 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_225 
	endif 
	return 
endf 

def node_223
	>> node_218 
	if self.distance_2d_to_target().leq(500) 
		>> node_227 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_219 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_220 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_221 
	else 
	endif 
	return 
endf 

def node_224
	>> node_219 
	if self.distance_2d_to_target().leq(500) 
		>> node_218 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_227 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_220 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_221 
	else 
	endif 
	return 
endf 

def node_225
	>> node_220 
	if self.distance_2d_to_target().leq(500) 
		>> node_218 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_219 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_227 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_221 
	else 
	endif 
	return 
endf 

def node_226
	>> node_221 
	if self.distance_2d_to_target().leq(500) 
		>> node_218 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_219 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_220 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_227 
	else 
	endif 
	return 
endf 

def node_227
	if self.distance_2d_to_target().leq(500) 
		>> node_228 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_229 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_230 
	elif self.distance_2d_to_target().leq(2500) 
		>> node_231 
	else 
		>> node_232 
	endif 
	return 
endf 

def node_228
	if self.enraged() 
		random (50) -> kulve_taroth.horn_attack() 
		elser (50) -> kulve_taroth.all_range_breath() 
		endr 
	else 
		-> kulve_taroth.horn_attack() 
	endif 
	return 
endf 

def node_229
	if self.enraged() 
		if self.angle_2d_cw_between(225,135) 
			random (50) -> kulve_taroth.horn_attack() 
			elser (50) -> kulve_taroth.all_range_breath() 
			endr 
		else 
			-> kulve_taroth.horn_attack() 
		endif 
	else 
		-> kulve_taroth.horn_attack() 
	endif 
	return 
endf 

def node_230
	if self.enraged() 
		if self.angle_2d_cw_between(270,90) 
			random (50) -> kulve_taroth.horn_attack() 
			elser (50) -> kulve_taroth.all_range_breath() 
			endr 
		else 
			-> kulve_taroth.horn_attack() 
		endif 
	else 
		-> kulve_taroth.horn_attack() 
	endif 
	return 
endf 

def node_231
	if self.enraged() 
		random (85) >> node_230 
		elser (15) >> node_202 
		endr 
	else 
		random (15) >> node_230 
		elser (85) >> node_202 
		endr 
	endif 
	return 
endf 

def node_232
	if self.enraged() 
		random (55) 
					>> node_102 
					self.targetEnemy(target_em.random_player_or_cat) 
					>> node_230 
		elser (10) >> node_202 
		elser (35) >> node_203 
		endr 
	else 
		random (55) 
					>> node_102 
					self.targetEnemy(target_em.random_player_or_cat) 
					>> node_230 
		elser (45) >> node_202 
		endr 
	endif 
	return 
endf 

def node_233
	if self.current_quest().is_rank(rank.AT) 
		>> node_212 
		>> node_148 
	else 
		>> node_212 
		>> node_217 
	endif 
	return 
endf 

def node_234
	if self.current_quest().is_rank(rank.AT) 
		>> node_212 
		>> node_158 
	else 
		>> node_212 
		>> node_227 
	endif 
	return 
endf 

def node_235
	if self.current_quest().is_rank(rank.AT) 
		>> node_153 
	else 
		>> node_222 
	endif 
	return 
endf 

def node_236
	if self.current_quest().is_rank(rank.AT) 
		>> node_148 
		>> node_158 
	else 
		>> node_217 
		>> node_227 
	endif 
	return 
endf 

def node_237
	if self.current_quest().is_rank(rank.AT) 
		>> node_144 
		>> node_148 
	else 
		>> node_213 
		>> node_217 
	endif 
	return 
endf 

def node_238
	if self.current_quest().is_rank(rank.AT) 
		>> node_144 
		>> node_158 
	else 
		>> node_213 
		>> node_227 
	endif 
	return 
endf 

def node_239
	if self.current_quest().is_rank(rank.AT) 
		>> node_212 
		>> node_153 
	else 
		>> node_212 
		>> node_222 
	endif 
	return 
endf 

def node_240
	if self.current_quest().is_rank(rank.AT) 
		>> node_212 
		>> node_148 
		>> node_158 
	else 
		>> node_212 
		>> node_217 
		>> node_227 
	endif 
	return 
endf 

def node_241
	if self.current_quest().is_rank(rank.AT) 
		>> node_148 
		>> node_212 
		>> node_148 
	else 
		>> node_217 
		>> node_212 
		>> node_217 
	endif 
	return 
endf 

def node_242
	if self.current_quest().is_rank(rank.AT) 
		>> node_148 
		>> node_212 
		>> node_158 
	else 
		>> node_217 
		>> node_212 
		>> node_227 
	endif 
	return 
endf 

def node_243
	if function#10F() 
		>> node_164 
	else 
		if self.enraged() 
			if self.distance_2d_to_target().leq(1500) 
				random (50) >> node_206 
				elser (50) >> node_203 
				endr 
			elif self.distance_2d_to_target().leq(4500) 
				random (50) >> node_202 
				elser (50) >> node_203 
				endr 
			else 
			endif 
		else 
			if self.distance_2d_to_target().leq(1500) 
				>> node_206 
			elif self.distance_2d_to_target().leq(4500) 
				>> node_202 
			else 
			endif 
		endif 
	endif 
	return 
endf 

def node_244
	if function#10F() 
		>> node_165 
	else 
		if self.enraged() 
			if self.distance_2d_to_target().leq(1500) 
				random (40) >> node_199 
				elser (20) >> node_206 
				elser (40) >> node_203 
				endr 
			elif self.distance_2d_to_target().leq(3000) 
				random (50) >> node_199 
				elser (50) >> node_203 
				endr 
			else 
				>> node_202 
			endif 
		else 
			if self.distance_2d_to_target().leq(1500) 
				random (50) >> node_199 
				elser (50) >> node_206 
				endr 
			elif self.distance_2d_to_target().leq(3000) 
				>> node_199 
			else 
				>> node_202 
			endif 
		endif 
	endif 
	return 
endf 

def node_245
	if self.angle_2d_cw_between(270,90) 
		-> kulve_taroth.fat_back_turn() @ comboSetting:1 
		-> kulve_taroth.fat_scratch_attack_r() 
	else 
		-> kulve_taroth.fat_back_turn() @ comboSetting:1 
		-> kulve_taroth.fat_scratch_attack_l() 
	endif 
	return 
endf 

def node_246
	>> node_116 
	if self.angle_2d_cw_between(0,180) 
		-> kulve_taroth.fat_scratch_attack_r() 
	else 
		-> kulve_taroth.fat_scratch_attack_l() 
	endif 
	return 
endf 

def node_247
	if function#101() 
		-> kulve_taroth.run(1,2,0,750,1000) 
	else 
		-> kulve_taroth.fat_run(1,2,0,750,1000) 
	endif 
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_265 
	return 
endf 

def node_248
	-> kulve_taroth.fat_turn_scratch() 
	return 
endf 

def node_249
	>> node_116 
	-> kulve_taroth.fat_quick_bite() 
	return 
endf 

def node_250
	if self.angle_2d_cw_between(240,120) 
		-> kulve_taroth.fat_back_turn() @ comboSetting:1 
		-> kulve_taroth.fat_front_quick_bite() 
	else 
		-> kulve_taroth.fat_back_turn() @ comboSetting:1 
		-> kulve_taroth.fat_quick_bite() 
	endif 
	return 
endf 

def node_251
	if self.angle_2d_cw_between(0,180) 
		-> kulve_taroth.fat_tail_attack_l() 
	else 
		-> kulve_taroth.fat_tail_attack_r() 
	endif 
	return 
endf 

def node_252
	-> kulve_taroth.fat_body_press() 
	return 
endf 

def node_253
	>> node_114 
	-> kulve_taroth.fat_body_press() 
	return 
endf 

def node_254
	if function#101() 
		-> kulve_taroth.run(1,2,0,300,1000) 
	else 
		-> kulve_taroth.fat_run(1,2,0,300,1000) 
	endif 
	self.targetEnemy(target_em.random_player_or_cat) 
	-> kulve_taroth.fat_body_press() 
	return 
endf 

def node_255
	if self.angle_2d_cw_between(330,30) 
		-> kulve_taroth.fat_quick_turn_to_side() 
	else 
	endif 
	if self.angle_2d_cw_between(0,180) 
		-> kulve_taroth.fat_overturn_l() 
	else 
		-> kulve_taroth.fat_overturn_r() 
	endif 
	return 
endf 

def node_256
	if self.angle_2d_cw_between(330,30) 
		-> kulve_taroth.fat_quick_turn_to_side() 
	else 
	endif 
	if self.angle_2d_cw_between(0,180) 
		-> kulve_taroth.fat_overturn_l() 
	else 
		-> kulve_taroth.fat_overturn_r() 
	endif 
	if self.angle_2d_cw_between(0,180) 
		-> kulve_taroth.fat_overturn_l() 
	else 
		-> kulve_taroth.fat_overturn_r() 
	endif 
	return 
endf 

def node_257
	>> node_116 
	-> kulve_taroth.fat_dash_attack() 
	return 
endf 

def node_258
	>> node_116 
	-> kulve_taroth.fat_overturn_dash() 
	return 
endf 

def node_259
	>> node_116 
	-> kulve_taroth.fat_dash_attack_no_end() 
	return 
endf 

def node_260
	>> node_117 
	-> kulve_taroth.fat_small_range_breath() 
	return 
endf 

def node_261
	-> kulve_taroth.fat_back_turn() @ comboSetting:1 
	-> kulve_taroth.fat_small_range_breath() 
	return 
endf 

def node_262
	-> kulve_taroth.fat_back_turn() 
	-> kulve_taroth.fat_straight_breath() 
	return 
endf 

def node_263
	-> kulve_taroth.fat_straight_breath() 
	return 
endf 

def node_264
	-> kulve_taroth.fat_all_range_breath() 
	return 
endf 

def node_265
	if self.angle_2d_cw_between(325,35) 
		>> node_246 
	elif self.angle_2d_cw_between(270,90) 
		random (25) >> node_246 
		elser (75) >> node_248 
		endr 
	else 
		>> node_248 
	endif 
	return 
endf 

def node_266
	if self.distance_2d_to_target().leq(500) 
		>> node_250 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_249 
	else 
		>> node_249 
	endif 
	return 
endf 

def node_267
	if self.angle_2d_cw_between(270,90) 
		>> node_249 
	else 
		>> node_251 
	endif 
	return 
endf 

def node_268
	if self.angle_2d_cw_between(315,45) 
		>> node_253 
	elif self.angle_2d_cw_between(150,210) 
		>> node_253 
	else 
		>> node_255 
	endif 
	return 
endf 

def node_269
	if self.angle_2d_cw_between(270,90) 
		if self.distance_2d_to_target().leq(1500) 
			>> node_252 
		else 
			>> node_254 
		endif 
	else 
		if self.distance_2d_to_target().leq(500) 
			>> node_252 
		else 
			>> node_251 
		endif 
	endif 
	return 
endf 

def node_270
	if self.angle_2d_cw_between(315,45) 
		>> node_249 
	elif self.angle_2d_cw_between(150,210) 
		>> node_249 
	else 
		>> node_255 
	endif 
	return 
endf 

def node_271
	if self.distance_2d_to_target().leq(500) 
		>> node_261 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_260 
	else 
		>> node_100 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_260 
	endif 
	return 
endf 

def node_272
	if self.angle_2d_cw_between(315,45) 
		>> node_259 
	elif self.angle_2d_cw_between(150,210) 
		>> node_259 
	else 
		>> node_255 
	endif 
	return 
endf 

def node_273
	if self.distance_2d_to_target().leq(500) 
		>> node_245 
	elif self.distance_2d_to_target().leq(1300) 
		>> node_265 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_247 
	else 
		>> node_100 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_247 
	endif 
	return 
endf 

def node_274
	if self.distance_2d_to_target().leq(500) 
		>> node_275 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_276 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_277 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_278 
	else 
		>> node_101 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_276 
	endif 
	return 
endf 

def node_275
	if function#102() 
		random (25) >> node_266 
		elser (50) >> node_271 
		elser (25) >> node_252 
		endr 
	else 
		random (50) >> node_266 
		elser (50) >> node_252 
		endr 
	endif 
	return 
endf 

def node_276
	if function#102() 
		if self.angle_2d_cw_between(270,90) 
			random (25) >> node_266 
			elser (50) >> node_271 
			elser (25) >> node_252 
			endr 
		else 
			random (50) >> node_271 
			elser (50) >> node_251 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (65) >> node_266 
			elser (35) >> node_252 
			endr 
		else 
			random (0) >> node_266 
			elser (0) >> node_253 
			elser (100) >> node_251 
			endr 
		endif 
	endif 
	return 
endf 

def node_277
	if function#102() 
		if self.angle_2d_cw_between(270,90) 
			random (25) >> node_266 
			elser (50) >> node_271 
			elser (25) >> node_252 
			endr 
		else 
			random (50) >> node_271 
			elser (50) >> node_251 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (75) >> node_266 
			elser (25) >> node_252 
			endr 
		else 
			random (0) >> node_266 
			elser (0) >> node_253 
			elser (100) >> node_251 
			endr 
		endif 
	endif 
	return 
endf 

def node_278
	if self.angle_2d_cw_between(270,90) 
		random (100) >> node_266 
		elser (0) >> node_254 
		endr 
	else 
		random (0) >> node_266 
		elser (0) >> node_254 
		elser (100) >> node_251 
		endr 
	endif 
	return 
endf 

def node_279
	if self.distance_2d_to_target().leq(500) 
		>> node_280 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_281 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_282 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_283 
	else 
		>> node_101 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_282 
	endif 
	return 
endf 

def node_280
	>> node_252 
	if self.distance_2d_to_target().leq(500) 
		>> node_134 
		>> node_284 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_267 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_267 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_267 
	else 
	endif 
	return 
endf 

def node_281
	random (65) >> node_253 
	elser (35) >> node_269 
	endr 
	if self.distance_2d_to_target().leq(500) 
		>> node_134 
		>> node_284 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_267 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_267 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_267 
	else 
	endif 
	return 
endf 

def node_282
	random (65) >> node_266 
	elser (35) >> node_267 
	endr 
	if self.distance_2d_to_target().leq(500) 
		>> node_269 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_269 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_284 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_284 
	else 
	endif 
	return 
endf 

def node_283
	random (65) >> node_266 
	elser (35) >> node_267 
	endr 
	if self.distance_2d_to_target().leq(500) 
		>> node_269 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_269 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_284 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_284 
	else 
	endif 
	return 
endf 

def node_284
	if self.distance_2d_to_target().leq(500) 
		>> node_285 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_286 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_287 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_288 
	else 
		>> node_289 
	endif 
	return 
endf 

def node_285
	if function#102() 
		random (20) >> node_252 
		elser (50) >> node_271 
		elser (15) >> node_262 
		elser (15) >> node_264 
		endr 
	else 
		random (55) >> node_252 
		elser (20) >> node_255 
		elser (20) >> node_262 
		elser (5) >> node_256 
		endr 
	endif 
	return 
endf 

def node_286
	if function#102() 
		random (20) >> node_269 
		elser (50) >> node_255 
		elser (15) >> node_262 
		elser (15) >> node_264 
		endr 
	else 
		random (15) >> node_269 
		elser (60) >> node_255 
		elser (20) >> node_262 
		elser (5) >> node_256 
		endr 
	endif 
	return 
endf 

def node_287
	if function#102() 
		random (15) >> node_263 
		elser (70) >> node_255 
		elser (15) >> node_264 
		endr 
	else 
		random (15) >> node_269 
		elser (60) >> node_255 
		elser (20) >> node_263 
		elser (5) >> node_256 
		endr 
	endif 
	return 
endf 

def node_288
	if function#102() 
		if self.angle_2d_cw_between(270,90) 
			random (50) >> node_263 
			elser (50) >> node_259 
			endr 
		elif self.angle_2d_cw_between(135,225) 
			>> node_263 
		else 
			random (50) >> node_263 
			elser (50) >> node_255 
			endr 
		endif 
	else 
		if self.angle_2d_cw_between(270,90) 
			random (35) >> node_263 
			elser (65) >> node_259 
			endr 
		elif self.angle_2d_cw_between(135,225) 
			>> node_255 
		else 
			>> node_251 
		endif 
	endif 
	return 
endf 

def node_289
	if function#102() 
		if self.angle_2d_cw_between(270,90) 
			random (50) >> node_263 
			elser (50) >> node_259 
			endr 
		elif self.angle_2d_cw_between(135,225) 
			>> node_263 
		else 
			random (50) >> node_263 
			elser (50) >> node_255 
			endr 
		endif 
	else 
		random (30) >> node_263 
		elser (70) >> node_259 
		endr 
	endif 
	return 
endf 

def node_290
	if self.current_quest().is_rank(rank.AT) 
		>> node_273 
		>> node_135 
		>> node_171 
	else 
		>> node_273 
		>> node_135 
		>> node_274 
	endif 
	return 
endf 

def node_291
	if self.current_quest().is_rank(rank.AT) 
		>> node_273 
		>> node_135 
		>> node_181 
	else 
		>> node_273 
		>> node_135 
		>> node_284 
	endif 
	return 
endf 

def node_292
	if self.current_quest().is_rank(rank.AT) 
		>> node_176 
	else 
		>> node_279 
	endif 
	return 
endf 

def node_293
	if self.current_quest().is_rank(rank.AT) 
		if function#102() 
			random (50) >> node_266 
			elser (50) >> node_271 
			endr 
		else 
			>> node_266 
		endif 
		>> node_136 
		>> node_181 
	else 
		if function#102() 
			random (50) >> node_266 
			elser (50) >> node_271 
			endr 
		else 
			>> node_266 
		endif 
		>> node_136 
		>> node_284 
	endif 
	return 
endf 

def node_294
	if self.current_quest().is_rank(rank.AT) 
		>> node_181 
		>> node_136 
		>> node_181 
	else 
		>> node_284 
		>> node_136 
		>> node_284 
	endif 
	return 
endf 

def node_295
	if function#102() 
		if self.distance_2d_to_target().leq(2000) 
			random (50) >> node_271 
			elser (50) >> node_264 
			endr 
		elif self.distance_2d_to_target().leq(4500) 
			random (50) >> node_263 
			elser (50) >> node_259 
			endr 
		else 
		endif 
	else 
		random (50) >> node_274 
		elser (50) >> node_284 
		endr 
	endif 
	return 
endf 

def node_296
	if function#102() 
		if self.distance_2d_to_target().leq(2000) 
			random (50) >> node_274 
			elser (50) >> node_284 
			endr 
		else 
			>> node_263 
		endif 
	else 
		random (50) >> node_274 
		elser (50) >> node_284 
		endr 
	endif 
	return 
endf 

def node_297
	if function#101() 
	else 
		if function#102() 
		else 
			>> node_089 
		endif 
	endif 
	return 
endf 

def node_298
	if function#101() 
	else 
		if function#102() 
		else 
			function#104(500) 
		endif 
	endif 
	return 
endf 

def node_299
	if function#101() 
	else 
		>> node_091 
		if function#102() 
		else 
			>> node_089 
		endif 
	endif 
	return 
endf 

def node_300
	self.targetArea(22) @ parameter2:300 
	>> node_105 
	self.targetEnemy(target_em.random_player_or_cat) 
	return 
endf 

def node_301
	if function#101() 
		>> node_253 
	else 
		>> node_193 
	endif 
	return 
endf 

def node_302
	if function#101() 
		-> kulve_taroth.ride_rage_head() 
	else 
		-> kulve_taroth.ride_rage_head() 
	endif 
	return 
endf 

def node_303
	if function#101() 
		-> kulve_taroth.ride_rage_body() 
	else 
		-> kulve_taroth.ride_rage_body() 
	endif 
	return 
endf 

def node_304
	if function#101() 
		-> kulve_taroth.ride_rage_body_lv2() 
	else 
		-> kulve_taroth.ride_rage_body_lv2() 
	endif 
	return 
endf 

def node_305
	if self.distance_3d_to_target().leq(750) 
		>> node_109 
	else 
	endif 
	>> node_306 
	return 
endf 

def node_306
	if self.distance_3d_to_target().leq(1000) 
	else 
		if function#101() 
			-> kulve_taroth.run(1,2,0,900,1000) 
		else 
			-> kulve_taroth.fat_run(1,2,0,900,1000) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_307
	if self.distance_3d_to_target().leq(1800) 
		>> node_109 
	else 
	endif 
	return 
endf 

def node_308
	if function#101() 
		-> kulve_taroth.ride_rage_crash_head() 
	else 
		-> kulve_taroth.fat_ride_rage_crash_head() 
	endif 
	return 
endf 

def node_309
	if function#101() 
		-> kulve_taroth.ride_rage_crash_head_lv2() 
	else 
		-> kulve_taroth.fat_ride_rage_crash_head_lv2() 
	endif 
	return 
endf 

def node_310
	if function#101() 
		-> kulve_taroth.ride_rage_crash_body() 
	else 
		-> kulve_taroth.fat_ride_rage_crash_body() 
	endif 
	return 
endf 

def node_311
	if function#101() 
		-> kulve_taroth.ride_rage_crash_body_lv2() 
	else 
		-> kulve_taroth.fat_ride_rage_crash_body_lv2() 
	endif 
	return 
endf 

def node_312
	if function#101() 
		-> kulve_taroth.wait() 
	else 
		-> kulve_taroth.fat_wait() 
	endif 
	return 
endf 

def node_313
	if function#101() 
		-> kulve_taroth.ride_tired() 
	else 
		-> kulve_taroth.ride_tired() 
	endif 
	return 
endf 

def node_314
	>> node_316 
	self.targetEnemy(48) 
	if self.target(3) 
	else 
		[RegisterVar7 ++] 
		>> node_315 
		>> node_316 
	endif 
	return 
endf 

def node_315
	self.targetEnemy(48) 
	if self.distance_2d_to_target().leq(2500) 
	else 
		if self.target(3) 
		else 
			[RegisterVar7 |-] 
			if function#101() 
				-> kulve_taroth.run(1,2,0,1500,1500) 
			else 
				-> kulve_taroth.fat_run(1,2,0,1500,1500) 
			endif 
			if [RegisterVar7 -= 4] 
			else 
				repeat 
			endif 
		endif 
	endif 
	return 
endf 

def node_316
	if self.alert_out_of_combat() 
		>> node_317 
	else 
		>> node_347 
	endif 
	return 
endf 

def node_317
	if function#101() 
		>> node_112 
		if self.fatigued() 
			>> node_079 
		else 
			>> node_084 
		endif 
	else 
		>> node_112 
		if self.fatigued() 
			>> node_079 
		else 
			>> node_084 
		endif 
	endif 
	return 
endf 

def node_318
	if function#101() 
		if self.targetEnemy(target_em.any_monster) 
			random (20) >> node_112 
			elser (80) 
			endr 
		else 
		endif 
		random (20) -> kulve_taroth.short_search() 
		elser (35) -> kulve_taroth.anger_search() 
		elser (10) -> kulve_taroth.smell() 
		elser (20) -> kulve_taroth.smell_max() 
		elser (15) >> node_084 
		endr 
	else 
		if self.targetEnemy(target_em.any_monster) 
			random (20) >> node_112 
			elser (80) 
			endr 
		else 
		endif 
		random (20) -> kulve_taroth.fat_short_search() 
		elser (35) -> kulve_taroth.fat_anger_search() 
		elser (10) -> kulve_taroth.fat_smell() 
		elser (20) -> kulve_taroth.fat_smell_max() 
		elser (15) >> node_084 
		endr 
	endif 
	return 
endf 

def node_319
	if function#101() 
		>> node_112 
		random (15) -> kulve_taroth.anger_search() 
		elser (35) >> node_084 
		elser (50) >> node_074 
		endr 
	else 
		>> node_112 
		random (15) -> kulve_taroth.fat_anger_search() 
		elser (35) >> node_084 
		elser (50) >> node_074 
		endr 
	endif 
	return 
endf 

def node_320
	if function#101() 
		-> kulve_taroth.walk(1,2,0,600,1500) 
	else 
		-> kulve_taroth.fat_walk(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_321
	if function#101() 
		>> node_112 
		-> kulve_taroth.smell() 
	else 
		>> node_112 
		-> kulve_taroth.fat_smell() 
	endif 
	return 
endf 

def node_322
	if function#101() 
		self.targetEnemy(58) 
		random (10) >> node_320 
		elser (90) 
		endr 
		self.targetEnemy(22) @ parameter2:2000 
		random (40) >> node_112 
		elser (60) 
		endr 
		random (70) -> kulve_taroth.short_search() 
		elser (30) -> kulve_taroth.smell() 
		endr 
	else 
		self.targetEnemy(58) 
		random (10) >> node_320 
		elser (90) 
		endr 
		self.targetEnemy(22) @ parameter2:2000 
		random (40) >> node_112 
		elser (60) 
		endr 
		random (70) -> kulve_taroth.fat_short_search() 
		elser (30) -> kulve_taroth.fat_smell() 
		endr 
	endif 
	return 
endf 

def node_323
	if function#101() 
		if self.distance_3d_to_target().leq(800) 
			>> node_109 
		elif self.distance_3d_to_target().leq(1200) 
			>> node_125 
		else 
		endif 
	else 
		if self.distance_3d_to_target().leq(800) 
			>> node_109 
		elif self.distance_3d_to_target().leq(1200) 
			>> node_125 
		else 
		endif 
	endif 
	return 
endf 

def node_324
	if function#101() 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> kulve_taroth.run(2,6,0,1000,800) 
		endif 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> kulve_taroth.run(2,6,0,1000,800) 
		endif 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> kulve_taroth.run(2,6,0,1000,800) 
		endif 
	else 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> kulve_taroth.fat_run(2,6,0,1000,800) 
		endif 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> kulve_taroth.fat_run(2,6,0,1000,800) 
		endif 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> kulve_taroth.fat_run(2,6,0,1000,800) 
		endif 
	endif 
	return 
endf 

def node_325
	if function#101() 
		-> kulve_taroth.lost_search() 
	else 
		-> kulve_taroth.fat_lost_search() 
	endif 
	return 
endf 

def node_326
	if function#101() 
		-> kulve_taroth.lost_search() 
	else 
		-> kulve_taroth.fat_lost_search() 
	endif 
	return 
endf 

def node_327
	if function#101() 
		-> kulve_taroth.lost_search() 
	else 
		-> kulve_taroth.fat_lost_search() 
	endif 
	return 
endf 

def node_328
	if function#101() 
		-> kulve_taroth.smell() 
	else 
		-> kulve_taroth.fat_smell() 
	endif 
	return 
endf 

def node_329
	if function#101() 
		-> kulve_taroth.smell_max() 
	else 
		-> kulve_taroth.fat_smell_max() 
	endif 
	return 
endf 

def node_330
	if function#101() 
		if self.enraged() 
			-> kulve_taroth.run(1,2,0,600,500) 
		else 
			-> kulve_taroth.walk(1,2,0,600,500) 
		endif 
	else 
		if self.enraged() 
			-> kulve_taroth.fat_run(1,2,0,600,500) 
		else 
			-> kulve_taroth.fat_walk(1,2,0,600,500) 
		endif 
	endif 
	return 
endf 

def node_331
	if function#101() 
		if self.enraged() 
			-> kulve_taroth.run(1,2,0,600,1000) 
		else 
			-> kulve_taroth.walk(1,2,0,600,1000) 
		endif 
	else 
		if self.enraged() 
			-> kulve_taroth.fat_run(1,2,0,600,1000) 
		else 
			-> kulve_taroth.fat_walk(1,2,0,600,1000) 
		endif 
	endif 
	return 
endf 

def node_332
	if function#101() 
		-> kulve_taroth.run(1,2,0,1000,3000) 
	else 
		-> kulve_taroth.fat_run(1,2,0,1000,3000) 
	endif 
	return 
endf 

def node_333
	if function#101() 
		if self.distance_2d_to_target().leq(500) 
			-> kulve_taroth.back_turn() @ comboSetting:1 
			-> kulve_taroth.lost_quick_bite() 
		elif self.distance_2d_to_target().leq(1000) 
			>> node_116 
			-> kulve_taroth.lost_small_range_breath() 
		else 
			>> node_116 
			-> kulve_taroth.lost_quick_bite() 
		endif 
	else 
		if self.distance_2d_to_target().leq(500) 
			-> kulve_taroth.fat_back_turn() @ comboSetting:1 
			-> kulve_taroth.fat_lost_quick_bite() 
		elif self.distance_2d_to_target().leq(1000) 
			>> node_116 
			-> kulve_taroth.fat_lost_quick_bite() 
		else 
			>> node_116 
			-> kulve_taroth.fat_lost_quick_bite() 
		endif 
	endif 
	return 
endf 

def node_334
	if self.target(10) 
		if function#101() 
			-> kulve_taroth.run(2,0,0,1000) 
		else 
			-> kulve_taroth.fat_run(2,0,0,1000) 
		endif 
	else 
	endif 
	if function#101() 
		>> node_115 
		>> node_199 
	else 
		>> node_112 
		>> node_253 
	endif 
	return 
endf 

def node_335
	if function#101() 
		>> node_202 
	else 
		>> node_263 
	endif 
	return 
endf 

def node_336
	if function#101() 
		-> kulve_taroth.tired() 
	else 
		-> kulve_taroth.fat_tired() 
	endif 
	return 
endf 

def node_337
	if function#101() 
		-> kulve_taroth.threat_short() 
	else 
		-> kulve_taroth.fat_threat() 
	endif 
	return 
endf 

def node_338
	if function#101() 
		-> kulve_taroth.threat_short() 
	else -> kulve_taroth.fat_threat() 
		-> kulve_taroth.fat_tail_attack_r() 
	endif 
	return 
endf 

def node_339
	if self.hp_percent().gt(70) 
		if [RegisterVar2 -= 1] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	elif function#10E(1,2) 
		if [RegisterVar2 -= 2] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	elif self.hp_percent().gt(80) 
		if [RegisterVar2 -= 2] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	else 
		if [RegisterVar2 -= 3] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	endif 
	return 
endf 

def node_340
	>> node_344 
	>> node_341 
	if self.distance_3d_to_target().leq(1000) 
		function#54() 
		[RegisterVar2 |-] 
		>> node_347 
		reset 
	else 
		if self.hp_percent().gt(70) 
		elif function#10E(1,2) 
			random (50) >> node_347 
			elser (50) >> node_346 
			endr 
		else 
			random (50) >> node_346 
			elser (50) 
			endr 
		endif 
	endif 
	repeat 
endf 

def node_341
	if function#101() 
		if self.hp_percent().gt(70) 
			-> kulve_taroth.run(1,2,0,500,4500) 
		elif function#10E(1,2) 
			-> kulve_taroth.run(1,2,0,500,4500) 
		else 
			-> kulve_taroth.walk(1,2,0,500,4500) 
		endif 
	else 
		if self.hp_percent().gt(70) 
			-> kulve_taroth.fat_run(1,2,0,500,4500) 
		elif function#10E(1,2) 
			-> kulve_taroth.fat_run(1,2,0,500,4500) 
		else 
			-> kulve_taroth.fat_walk(1,2,0,500,4500) 
		endif 
	endif 
	return 
endf 

def node_342
	if self.hp_percent().gt(70) 
		if [RegisterVar2 -= 1] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	elif function#10E(1,4) 
		if [RegisterVar2 -= 1] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	elif self.hp_percent().gt(80) 
		if [RegisterVar2 -= 2] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	elif function#10E(1,3) 
		if [RegisterVar2 -= 2] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	elif self.hp_percent().gt(90) 
		if [RegisterVar2 -= 3] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	elif function#10E(1,2) 
		if [RegisterVar2 -= 3] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	else 
		if [RegisterVar2 -= 4] 
			[RegisterVar2 ++] 
			function#108() 
		else 
		endif 
	endif 
	return 
endf 

def node_343
	>> node_344 
	>> node_345 
	if self.distance_3d_to_target().leq(1000) 
		function#54() 
		[RegisterVar2 |-] 
		>> node_347 
		reset 
	else 
		if self.hp_percent().gt(70) 
		elif function#10E(1,4) 
			random (50) >> node_346 
			elser (50) 
			endr 
		elif self.hp_percent().gt(80) 
			random (50) >> node_346 
			elser (50) 
			endr 
		else 
			>> node_346 
		endif 
	endif 
	repeat 
endf 

def node_344
	function#52(18,4) 
	self.targetEnemy(16) 
	if function#5A() 
		if function#10A(2) 
		else 
		endif 
	elif function#5A(1) 
		if function#10A() 
		else 
		endif 
	elif function#5A(2) 
		if function#10A(3) 
		else 
		endif 
	elif function#5A(3) 
		if function#10A(1) 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_345
	if function#101() 
		if self.hp_percent().gt(75) 
			-> kulve_taroth.run(1,2,0,500,3000) 
		elif function#10E(1,4) 
			-> kulve_taroth.run(1,2,0,500,3000) 
		else 
			-> kulve_taroth.walk(1,2,0,500,3000) 
		endif 
	else 
		if self.hp_percent().gt(75) 
			-> kulve_taroth.fat_run(1,2,0,500,3000) 
		elif function#10E(1,4) 
			-> kulve_taroth.fat_run(1,2,0,500,3000) 
		else 
			-> kulve_taroth.fat_walk(1,2,0,500,3000) 
		endif 
	endif 
	return 
endf 

def node_346
	self.targetEnemy(48) 
	if self.distance_2d_to_target().leq(1500) 
		if self.vertical_distance_to_target().leq(500) 
			if function#101() 
				>> node_191 
			else 
				if self.distance_2d_to_target().leq(500) 
					>> node_245 
				else 
					>> node_267 
				endif 
			endif 
		else 
			>> node_347 
		endif 
	else 
		>> node_347 
	endif 
	return 
endf 

def node_347
	if function#101() 
		-> kulve_taroth.search() 
	else 
		-> kulve_taroth.fat_search() 
	endif 
	return 
endf 

def node_348
	>> node_357 
	self.targetEnemy(48) 
	if self.target(7) 
		>> node_347 
	elif self.target(3) 
		>> node_130 
		>> node_347 
	else 
		>> node_314 
	endif 
	return 
endf 

def node_349
	>> node_357 
	self.targetEnemy(48) 
	if self.target(7) 
		if self.distance_2d_to_target().leq(3500) 
			>> node_130 
			>> node_347 
		else 
			>> node_347 
		endif 
	elif self.target(3) 
		>> node_130 
		>> node_347 
	else 
		if self.distance_2d_to_target().leq(3500) 
			>> node_130 
			>> node_316 
		else 
			>> node_316 
			self.targetEnemy(48) 
			if self.target(3) 
			else 
				[RegisterVar7 ++] 
				>> node_315 
				>> node_316 
			endif 
		endif 
	endif 
	return 
endf 

def node_350
	random (35) 
				self.targetArea(21) @ parameter2:250 
	elser (35) 
				self.targetArea(22) @ parameter2:250 
	elser (15) 
				self.targetArea(21) @ parameter2:500 
	elser (15) 
				self.targetArea(22) @ parameter2:500 
	endr 
	return 
endf 

def node_351
	random (50) 
				if function#101() 
					-> kulve_taroth.wait() 
				else 
					-> kulve_taroth.fat_wait() 
				endif 
	elser (50) 
	endr 
	return 
endf 

def node_352
	if function#101() 
		-> kulve_taroth.wait() 
	else 
		-> kulve_taroth.fat_wait() 
	endif 
	return 
endf 

def node_353
	if function#101() 
		-> kulve_taroth.in_ground() 
	else 
		-> kulve_taroth.fat_in_ground() 
	endif 
	return 
endf 

def node_354
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5D() 
		>> node_355 
	elif self.target(3) 
		>> node_356 
	elif self.target(4) 
		>> node_356 
	elif self.target(55) 
		random (35) >> node_359 
		elser (65) 
		endr 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_360 
		else 
			>> node_361 
		endif 
	elif self.target(14) 
		>> node_362 
	elif self.target(11) 
		>> node_363 
	elif self.target(12) 
	else 
		if self.vertical_distance_to_target().leq(400) 
		elif self.vertical_distance_to_target().leq(700) 
			random (50) >> node_364 
			elser (50) 
			endr 
		else 
			>> node_364 
		endif 
	endif 
	return 
endf 

def node_355
	if self.distance_2d_to_target().leq(1500) 
		if self.angle_2d_cw_between(300,60) 
		else 
			function#5E() 
			>> node_077 
		endif 
	else 
		if self.angle_2d_cw_between(300,60) 
			function#5E() 
			>> node_077 
		else 
			function#5E() 
			>> node_078 
		endif 
	endif 
	return 
endf 

def node_356
	>> node_357 
	>> node_358 
	reset 
endf 

def node_357
	self.targetArea(19) 
	if self.distance_3d_to_target().leq(1000) 
	else 
		>> node_099 
	endif 
	return 
endf 

def node_358
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_112 
	>> node_077 
	return 
endf 

def node_359
	if self.current_quest().is_rank(rank.MR) 
		if function#101() 
			random (65) >> node_197 
			elser (35) >> node_035 
			endr 
		else 
			if self.angle_2d_cw_between(0,180) 
				-> kulve_taroth.fat_overturn_l() 
			else 
				-> kulve_taroth.fat_overturn_r() 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_360
	if function#11(400) 
		if self.above_area() 
		else 
			if self.distance_2d_to_target().leq(3000) 
				>> node_109 
			elif self.distance_2d_to_target().leq(4000) 
			else 
				>> node_365 
			endif 
			>> node_366 
			random (65) 
						reset 
			elser (35) 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(3000) 
			>> node_109 
		elif self.distance_2d_to_target().leq(4000) 
		else 
			>> node_365 
		endif 
		>> node_366 
		random (65) 
					reset 
		elser (35) 
		endr 
	endif 
	return 
endf 

def node_361
	if self.distance_2d_to_target().leq(3000) 
		>> node_109 
	elif self.distance_2d_to_target().leq(4000) 
	else 
		>> node_365 
	endif 
	>> node_366 
	random (65) 
				reset 
	elser (35) 
	endr 
	return 
endf 

def node_362
	if self.distance_2d_to_target().leq(3000) 
		>> node_109 
	elif self.distance_2d_to_target().leq(4000) 
	else 
		>> node_365 
	endif 
	>> node_366 
	random (65) 
				reset 
	elser (35) 
	endr 
	return 
endf 

def node_363
	if self.distance_2d_to_target().leq(3000) 
		>> node_109 
	elif self.distance_2d_to_target().leq(4000) 
	else 
		>> node_365 
	endif 
	>> node_366 
	random (65) 
				reset 
	elser (35) 
	endr 
	return 
endf 

def node_364
	if self.distance_2d_to_target().leq(3000) 
		>> node_109 
	elif self.distance_2d_to_target().leq(4000) 
	else 
		>> node_365 
	endif 
	>> node_366 
	random (50) 
				reset 
	elser (50) 
	endr 
	return 
endf 

def node_365
	if function#101() 
		-> kulve_taroth.run(6,2,0,3500,3000) 
	else 
		-> kulve_taroth.fat_run(6,2,0,3500,3000) 
	endif 
	return 
endf 

def node_366
	if self.current_quest().is_rank(rank.MR) 
		if function#101() 
			>> node_036 
		else 
			>> node_065 
		endif 
	else 
		if function#101() 
			if self.distance_2d_to_target().leq(1500) 
				>> node_202 
			else 
				>> node_202 
			endif 
		else 
			if self.distance_2d_to_target().leq(1500) 
				>> node_263 
			else 
				>> node_263 
			endif 
		endif 
	endif 
	return 
endf 

def node_367
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			>> node_368 
		endif 
	else 
		>> node_368 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			>> node_368 
		endif 
	else 
		>> node_368 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			>> node_368 
		endif 
	else 
		>> node_368 
	endif 
	return 
endf 

def node_368
	if function#101() 
		-> kulve_taroth.run(1,2,0,500,1500) 
	else 
		-> kulve_taroth.fat_run(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_369
	if self.distance_3d_to_target().leq(400) 
	else 
		if function#101() 
			-> kulve_taroth.run(1,2,0,300,1500) 
		else 
			-> kulve_taroth.fat_run(1,2,0,300,1500) 
		endif 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		if function#101() 
			-> kulve_taroth.run(1,2,0,500,1500) 
		else 
			-> kulve_taroth.fat_run(1,2,0,500,1500) 
		endif 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		if function#101() 
			-> kulve_taroth.run(1,2,0,500,1500) 
		else 
			-> kulve_taroth.fat_run(1,2,0,500,1500) 
		endif 
	endif 
	return 
endf 

def node_370
	if 
	else 
	endif 
	return 
endf 

