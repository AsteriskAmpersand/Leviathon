importactions Tigrex as tigrex
importlibrary Global as Global

def node_000 : 1
	>> Global.node_020 
	if function#41() 
		-> tigrex.dash(2,5,0,1500) => reset 
	else 
	endif 
	>> Global.node_001 
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.target(10) 
		if self.distance_3d_to_target().leq(2200) 
			>> node_016 => reset 
		else 
		endif 
	else 
	endif 
	if self.distance_3d_to_target().leq(900) 
		self.enraged() >> node_004 => reset 
		self.fatigued() >> node_007 => reset 
		>> node_001 => reset 
	elif self.distance_3d_to_target().leq(5000) 
		self.enraged() >> node_005 => reset 
		self.fatigued() >> node_008 => reset 
		>> node_002 => reset 
	elif self.distance_3d_to_target().leq(10000) 
		self.enraged() >> node_006 => reset 
		self.fatigued() >> node_006 => reset 
		>> node_003 => reset 
	else 
		>> node_012 => reset 
	endif 
	reset 
endf 

def node_001 : 11
	>> node_013 
	return 
endf 

def node_002 : 12
	>> node_010 
	return 
endf 

def node_003 : 13
	random (70) >> node_010 
	elser (30) >> node_011 
	endr 
	return 
endf 

def node_004 : 14
	>> node_013 
	return 
endf 

def node_005 : 15
	>> node_010 
	return 
endf 

def node_006 : 16
	random (30) >> node_010 
	elser (70) >> node_011 
	endr 
	return 
endf 

def node_007 : 17
	>> node_013 
	return 
endf 

def node_008 : 18
	random (80) >> node_010 
	elser (20) >> node_018 
	endr 
	return 
endf 

def node_009 : 19
	random (70) >> node_010 
	elser (10) >> node_012 
	elser (20) >> node_018 
	endr 
	return 
endf 

def node_010 : 20
	self.targetArea(4) 
	>> node_020 
	>> node_017 
	return 
endf 

def node_011 : 21
	self.targetArea(6) 
	>> node_021 
	>> node_017 
	return 
endf 

def node_012 : 22
	self.targetArea(21) @ parameter2:1000 
	-> tigrex.turn() @ unkn6:65536 
	>> node_019 
	return 
endf 

def node_013 : 23
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.target(7) 
		>> node_015 
	elif self.target(10) 
		>> node_016 
	else 
		>> node_014 
	endif 
	return 
endf 

def node_014 : 24
	if self.angle_2d_cw_between(60,300) 
		-> tigrex.turn() 
	else 
	endif 
	if self.distance_3d_to_target().leq(200) 
		-> tigrex.quick_turn() @ unkn6:65536 
	elif self.distance_3d_to_target().leq(600) 
		-> tigrex.bite_min() @ unkn6:65536 
	else 
		-> tigrex.bite_max() @ unkn6:65536 
	endif 
	return 
endf 

def node_015 : 25
	if self.distance_3d_to_target().leq(550) 
		-> tigrex.quick_turn() @ unkn6:65536 
	else 
	endif 
	if self.angle_2d_cw_between(60,300) 
		*&
	else 
	endif 
	if self.enraged() 
		-> tigrex.bite_max() 
	else 
		-> tigrex.peep_grass_search() @ unkn6:65536 
	endif 
	return 
endf 

def node_016 : 26
	if self.distance_3d_to_target().leq(550) 
		-> tigrex.quick_turn() @ unkn6:65536 
	else 
	endif 
	if self.angle_2d_cw_between(30,330) 
		-> tigrex.turn() @ unkn6:65536 
	else 
	endif 
	-> tigrex.bite_max() 
	return 
endf 

def node_017 : 27
	if self.enraged() 
		-> tigrex.walk_srarch_angry(2,1,5,2500,800) @ unkn6:65536 
	else 
		-> tigrex.fox_walk(2,1,5,2000,800) @ unkn6:65536 
	endif 
	if self.distance_3d_to_target().leq(800) 
		return 
	else 
		>> node_019 
		repeat 
	endif 
	return 
endf 

def node_018 : 28
	-> tigrex.tired() @ unkn6:65536 
	return 
endf 

def node_019 : 29
	if self.enraged() 
		random (70) -> tigrex.lost_search_front() 
		elser (30) -> tigrex.lost_search_back() @ unkn6:65536 
		endr 
	else 
		random (40) -> tigrex.lost_search_front() 
		elser (60) -> tigrex.lost_search_back() @ unkn6:65536 
		endr 
	endif 
	return 
endf 

def node_020 : 30
	if self.enraged() 
		-> tigrex.sniff_combat_s() @ unkn6:65536 
	else 
		-> tigrex.sniff_s() @ unkn6:65536 
	endif 
	return 
endf 

def node_021 : 31
	if self.enraged() 
		-> tigrex.sniff_combat_l() @ unkn6:65536 
	else 
		-> tigrex.sniff_l() @ unkn6:65536 
	endif 
	return 
endf 

