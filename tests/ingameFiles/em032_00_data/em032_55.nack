importactions Tigrex as tigrex

def node_000 : 1
	conclude 
endf 

def node_001 : 11
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.vertical_distance_to_target().leq(1000) 
				if self.distance_3d_to_target().leq(3000) 
					if self.target.in_combat() 
						>> node_002 
					else 
						>> node_003 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	if self.defense_downed() 
		>> node_008 
	else 
	endif 
	return 
endf 

def node_002 : 12
	if function#30(2) 
		random (35) 
		elser (0) >> node_004 
		elser (10) >> node_007 
		elser (55) >> node_006 
		endr 
	elif function#30(4) 
		random (35) 
		elser (10) >> node_004 
		elser (55) >> node_007 
		elser (0) >> node_006 
		endr 
	else 
		random (35) 
		elser (0) >> node_004 
		elser (50) >> node_007 
		elser (0) >> node_006 
		elser (15) >> node_007 
					>> node_006 
		endr 
	endif 
	return 
endf 

def node_003 : 13
	if function#30(2) 
		random (10) 
		elser (35) >> node_004 
		elser (0) >> node_007 
		elser (55) >> node_006 
		endr 
	else 
		random (35) 
		elser (55) >> node_004 
		elser (10) >> node_007 
		elser (0) >> node_006 
		endr 
	endif 
	return 
endf 

def node_004 : 14
	if function#41() 
	else 
		>> node_010 
		>> node_021 
	endif 
	return 
endf 

def node_005 : 15
	if function#41() 
	else 
		>> node_010 
		>> node_021 
	endif 
	return 
endf 

def node_006 : 16
	if function#41() 
	else 
		if self.target_is(em.Rathalos) 
			if self.target(39) 
				self.force_area_change2() 
			else 
				>> node_004 
			endif 
		elif self.target_is(em.Azure_Rathalos) 
			if self.target(39) 
				self.force_area_change2() 
			else 
				>> node_004 
			endif 
		elif self.target_is(em.Ebony_Odogaron) 
			if self.target(39) 
				self.force_area_change2() 
			else 
				>> node_004 
			endif 
		elif self.target_is(em.Fulgur_Anjanath) 
			if self.target(39) 
				self.force_area_change2() 
			else 
				>> node_004 
			endif 
		elif self.target_is(em.Glavenus) 
			if self.target(39) 
				self.force_area_change2() 
			else 
				>> node_004 
			endif 
		elif self.target_is(em.Acidic_Glavenus) 
			if self.target(39) 
				self.force_area_change2() 
			else 
				>> node_004 
			endif 
		elif self.target_is(em.Brachydios) 
			if self.target(39) 
				self.force_area_change2() 
			else 
				>> node_004 
			endif 
		else 
			self.force_area_change2() 
		endif 
	endif 
	return 
endf 

def node_007 : 17
	if function#41() 
	else 
		if self.vertical_distance_to_target().gt(500) 
			>> node_022 
		elif self.distance_3d_to_target().gt(2000) 
			>> node_022 
		else 
			>> node_014 
		endif 
	endif 
	return 
endf 

def node_008 : 38
	function#31(49,1000) 
	self.targetEnemy(target_em.closest_entity) 
	>> node_002 
	return 
endf 

def node_009 : 34
	if self.angle_2d_cw_between(60,300) 
		if self.in_combat() 
			-> tigrex.quick_turn() 
		elif self.alert_out_of_combat() 
			-> tigrex.quick_turn() 
		else 
			-> tigrex.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_010 : 23
	if self.distance_3d_to_target().leq(550) 
		-> tigrex.quick_turn() 
	else 
	endif 
	if self.angle_2d_cw_between(30,330) 
		if self.in_combat() 
			-> tigrex.quick_turn() 
		else 
			-> tigrex.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_011 : 31
	if self.fatigued() 
		-> tigrex.dash_tired(2,1,5,1500,700) 
	else 
		-> tigrex.dash(2,1,5,1500,700) 
	endif 
	return 
endf 

def node_012 : 32
	if self.fatigued() 
		-> tigrex.dash_tired(2,1,5,3000,700) 
	else 
		-> tigrex.dash(2,1,5,3000,700) 
	endif 
	return 
endf 

def node_013 : 33
	if self.fatigued() 
		-> tigrex.walk(2,1,5,1500,700) 
	else 
		-> tigrex.walk(2,1,5,1500,700) 
	endif 
	return 
endf 

def node_014 : 25
	if self.distance_3d_to_target().leq(500) 
		>> node_016 
	elif self.distance_3d_to_target().leq(1000) 
		>> node_015 
	elif self.distance_3d_to_target().leq(1500) 
		>> node_017 
	else 
		>> node_018 
	endif 
	return 
endf 

def node_015 : 26
	-> tigrex.bite_max() 
	return 
endf 

def node_016 : 27
	-> tigrex.bite_min() 
	return 
endf 

def node_017 : 28
	-> tigrex.rotate_attack_r() 
	return 
endf 

def node_018 : 29
	-> tigrex.straight_rush(2,6,0,10000,800) 
	-> tigrex.afterrush_stop() 
	return 
endf 

def node_019 : 35
	-> tigrex.navi_rush(1,2,0,800,10000) 
	if self.target(10) 
		-> tigrex.afterrush_roar() 
		-> tigrex.roar() 
	else 
		-> tigrex.afterrush_stop() 
	endif 
	return 
endf 

def node_020 : 36
	if function#101() 
		-> tigrex.afterrush_stop() 
	else 
		return 
	endif 
	return 
endf 

def node_021 : 37
	-> tigrex.move_back() 
	if self.angle_2d_cw_between(0,60) 
		-> tigrex.threat_short_l() 
	elif self.angle_2d_cw_between(300,360) 
		-> tigrex.threat_short_r() 
	else 
		random (50) -> tigrex.threat_short_l() 
		elser (50) -> tigrex.threat_short_r() 
		endr 
	endif 
	return 
endf 

def node_022 : 24
	>> node_010 
	if self.distance_2d_to_target().leq(1500) 
		-> tigrex.move_back() 
	else 
	endif 
	if self.vertical_distance_to_target().gt(600) 
		-> tigrex.jump_attack_wall() 
	else 
		-> tigrex.jump_attack() 
	endif 
	return 
endf 

def node_023 : 39
	if function#6B(20000) 
		-> tigrex.sniff_l() 
		>> node_024 
		>> node_025 
	else 
	endif 
	return 
endf 

def node_024 : 40
	self.targetEnemy(26) 
	if self.distance_3d_to_target().leq(800) 
	else 
		-> tigrex.dash_tired(2,1,5,1500,700) 
		repeat 
	endif 
	return 
endf 

def node_025 : 41
	if self.distance_3d_to_target().leq(500) 
		-> tigrex.quick_turn() @ unkn6:65536 
	elif self.angle_2d_cw_between(30,330) 
		-> tigrex.quick_turn() @ unkn6:65536 
	else 
	endif 
	-> tigrex.eat() 
	reset 
endf 

def node_026 : 18
	if self.target(0) 
		>> node_027 
	else 
		>> node_027 
	endif 
	reset 
endf 

def node_027 : 19
	-> tigrex.dash() 
	return 
endf 

def node_028 : 20
	self.targetArea(14) 
	if self.distance_3d_to_target().gt(600) 
		>> node_012 
		repeat 
	else 
	endif 
	return 
endf 

def node_029 : 21
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> node_011 
		repeat 
	else 
	endif 
	return 
endf 

def node_030 : 22
	if function#41() 
		>> node_011 => repeat 
	else 
	endif 
	return 
endf 

