importactions Shamos as shamos

def node_000 : 1
	conclude 
endf 

def node_001 : 18
	>> node_095 
	if self.distance_2d_to_target().leq(500) 
	else 
		repeat 
	endif 
	return 
endf 

def node_002 : 142
	>> node_095 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_095 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_095 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_095 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_095 
	endif 
	return 
endf 

def node_003 : 160
	>> node_094 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	return 
endf 

def node_004 : 164
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,6,0,500,400) 
	endif 
	if function#46() 
		>> node_021 
		>> node_065 
		>> node_065 
		>> node_065 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,6,0,500,400) 
	endif 
	if function#46() 
		>> node_021 
		>> node_065 
		>> node_065 
		>> node_065 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,6,0,500,400) 
	endif 
	if function#46() 
		>> node_021 
		>> node_065 
		>> node_065 
		>> node_065 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,6,0,500,400) 
	endif 
	if function#46() 
		>> node_021 
		>> node_065 
		>> node_065 
		>> node_065 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,6,0,500,400) 
	endif 
	if function#46() 
		>> node_021 
		>> node_065 
		>> node_065 
		>> node_065 
		return 
	else 
	endif 
	return 
endf 

def node_005 : 6
	if self.angle_2d_cw_between(15,345) 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_006 : 4
	if self.angle_2d_cw_between(30,330) 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_007 : 7
	if self.angle_2d_cw_between(45,315) 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_008 : 5
	if self.angle_2d_cw_between(60,300) 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_009 : 8
	if self.angle_2d_cw_between(90,270) 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_010 : 9
	>> node_006 
	>> node_079 
	return 
endf 

def node_011 : 136
	if self.angle_2d_cw_between(0,180) 
		>> node_125 
	else 
		>> node_126 
	endif 
	return 
endf 

def node_012 : 137
	if self.angle_2d_cw_between(330,30) 
		>> node_010 
	elif self.angle_2d_cw_between(210,150) 
		>> node_011 
	else 
		>> node_010 
	endif 
	return 
endf 

def node_013 : 10
	>> node_006 
	>> node_080 
	return 
endf 

def node_014 : 11
	random (65) >> node_012 
	elser (35) >> node_013 
	endr 
	return 
endf 

def node_015 : 12
	>> node_006 
	>> node_014 
	return 
endf 

def node_016 : 13
	if self.angle_2d_cw_between(330,30) 
		>> node_014 
	elif self.angle_2d_cw_between(270,90) 
		>> node_015 
	else 
		>> node_014 
	endif 
	return 
endf 

def node_017 : 14
	>> node_005 
	>> node_127 
	return 
endf 

def node_018 : 16
	if self.angle_2d_cw_between(0,180) 
		>> node_119 
	else 
		>> node_120 
	endif 
	return 
endf 

def node_019 : 17
	if self.angle_2d_cw_between(315,45) 
		>> node_118 
	elif self.angle_2d_cw_between(0,180) 
		>> node_120 
	else 
		>> node_119 
	endif 
	return 
endf 

def node_020 : 117
	>> node_009 
	>> node_118 
	return 
endf 

def node_021 : 165
	-> action#17() 
	return 
endf 

def node_022 : 116
	if self.distance_2d_to_target().leq(600) 
		self.targetEnemy(target_em.random_player_or_cat) @ unkn3:2097152, unkn12:4, unknExtra1:500 
	elif self.distance_2d_to_target().leq(700) 
		self.targetEnemy(target_em.random_player_or_cat) @ unkn3:2097152, unkn12:4, unknExtra1:600 
	else 
		self.targetEnemy(target_em.random_player_or_cat) @ unkn3:2097152, unkn12:4, unknExtra1:700 
	endif 
	if self.distance_2d_to_target().leq(350) 
		>> node_020 
	else 
		if self.vertical_distance_to_target().leq(200) 
			random (60) >> node_141 
			elser (40) >> node_003 
			endr 
		else 
			>> node_003 
		endif 
	endif 
	return 
endf 

def node_023 : 120
	self.targetEnemy(target_em.random_player_or_cat) @ unkn3:2097152, unkn12:4, unknExtra1:700 
	if self.vertical_distance_to_target().leq(200) 
		random (60) >> node_140 
		elser (40) >> node_003 
		endr 
	else 
		>> node_003 
	endif 
	return 
endf 

def node_024 : 121
	if function#62(330,30) 
		>> node_118 
	elif function#62(30,180) 
		>> node_120 
	elif function#62(180,330) 
		>> node_119 
	endif 
	return 
endf 

def node_025 : 122
	if function#67(0,2) 
	else 
		self.targetArea(26) @ parameter2:500 
		>> node_093 
	endif 
	return 
endf 

def node_026 : 107
	>> node_084 
	if self.distance_3d_to_target().leq(500) 
	else 
		repeat 
	endif 
	return 
endf 

def node_027 : 108
	>> node_089 
	>> node_028 
	return 
endf 

def node_028 : 150
	if self.distance_2d_to_target().leq(350) 
	else 
		>> node_095 
		repeat 
	endif 
	return 
endf 

def node_029 : 109
	>> node_093 
	return 
endf 

def node_030 : 132
	-> action#23() 
	if self.distance_2d_to_target().leq(600) 
		return 
	else 
		>> node_097 
	endif 
	if self.distance_2d_to_target().leq(600) 
		return 
	else 
		>> node_097 
	endif 
	if self.distance_2d_to_target().leq(600) 
		return 
	else 
		>> node_097 
	endif 
	return 
endf 

def node_031 : 144
	>> node_098 
	if self.distance_2d_to_target().leq(1300) 
	else 
		repeat 
	endif 
	return 
endf 

def node_032 : 103
	if self.angle_2d_cw_between(45,315) 
		>> node_128 
	else 
	endif 
	return 
endf 

def node_033 : 104
	if self.angle_2d_cw_between(90,270) 
		>> node_128 
	else 
	endif 
	return 
endf 

def node_034 : 125
	if self.angle_2d_cw_between(30,330) 
		>> node_081 
	else 
	endif 
	return 
endf 

def node_035 : 105
	if self.angle_2d_cw_between(45,315) 
		>> node_081 
	else 
	endif 
	return 
endf 

def node_036 : 106
	if self.angle_2d_cw_between(90,270) 
		>> node_081 
	else 
	endif 
	return 
endf 

def node_037 : 92
	>> node_071 
	return 
endf 

def node_038 : 93
	>> node_072 
	return 
endf 

def node_039 : 94
	>> node_073 
	>> node_107 
	return 
endf 

def node_040 : 95
	>> node_111 
	return 
endf 

def node_041 : 146
	if self.distance_3d_to_target().leq(750) 
		>> node_020 
	else 
	endif 
	>> node_006 
	>> node_067 
	return 
endf 

def node_042 : 145
	if self.distance_3d_to_target().leq(750) 
		>> node_020 
		>> node_006 
		>> node_067 
	elif self.distance_3d_to_target().leq(1500) 
		>> node_006 
		>> node_067 
	else 
	endif 
	return 
endf 

def node_043 : 88
	>> node_078 
	return 
endf 

def node_044 : 89
	>> node_108 
	return 
endf 

def node_045 : 90
	>> node_072 
	>> node_104 
	return 
endf 

def node_046 : 91
	>> node_077 
	return 
endf 

def node_047 : 126
	>> node_108 
	return 
endf 

def node_048 : 147
	if function#51(0,2000) 
		>> node_050 
		reset 
	else 
	endif 
	return 
endf 

def node_049 : 151
	if function#51(0,1500) 
		>> node_050 
		conclude 
	else 
	endif 
	return 
endf 

def node_050 : 148
	if self.distance_3d_recalc_to_target().leq(800) 
		>> node_009 
		>> node_020 
	else 
		>> node_006 
	endif 
	>> node_043 
	return 
endf 

def node_051 : 141
	if function#6B(4500) 
		[RegisterVar0 ++] 
		self.targetEnemy(26) @ unkn3:2097152, unkn12:4, unknExtra1:75 
		>> node_052 
		>> node_053 
		>> node_054 
	else 
	endif 
	return 
endf 

def node_052 : 138
	if self.distance_3d_to_target().leq(500) 
	else 
		>> node_095 
		repeat 
	endif 
	return 
endf 

def node_053 : 139
	>> node_006 
	>> node_039 
	return 
endf 

def node_054 : 140
	[RegisterVar0 |-] 
	if self.in_combat() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_006 
		>> node_067 
	else 
	endif 
	return 
endf 

def node_055 : 153
	self.targetUnknown(1,0) 
	if self.in_combat() 
		if self.target(3) 
			return 
		else 
		endif 
	else 
	endif 
	if function#31(28,3000) 
		self.targetUnknown(2,0) 
		if self.target(13) 
		else 
			function#54() 
			>> node_058 
			>> node_056 
			reset 
		endif 
	else 
	endif 
	return 
endf 

def node_056 : 154
	self.targetEnemy(target_em.closest_entity) 
	>> node_006 
	>> node_060 
	return 
endf 

def node_057 : 156
	self.targetEnemy(target_em.closest_entity) 
	if self.target(20) 
		if self.distance_2d_to_target().leq(1500) 
		else 
			-> action#05(2,6,0,500,1000) 
			repeat 
		endif 
	else 
	endif 
	return 
endf 

def node_058 : 158
	function#52(2,2) 
	self.targetArea(target_area.nearest_entrance) 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,1,0,500,300) 
		repeat 
	endif 
	function#54() 
	return 
endf 

def node_059 : 155
	self.targetArea(35) 
	if self.distance_3d_to_target().leq(700) 
		-> action#23() 
	else 
		>> node_006 
		>> node_001 
	endif 
	return 
endf 

def node_060 : 152
	random (50) -> action#2B() 
	elser (50) -> action#2C() 
	endr 
	return 
endf 

def node_061 : 124
	>> node_116 
	return 
endf 

def node_062 : 130
	>> node_144 
	return 
endf 

def node_063 : 161
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.target(0) 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> action#05(2,6,0,2000,950) 
		endif 
		>> node_060 
		reset 
	else 
	endif 
	return 
endf 

def node_064 : 162
	if self.target(0) 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> action#05(2,6,0,2000,950) 
		endif 
		>> node_065 
		reset 
	else 
	endif 
	if self.target(14) 
		>> node_065 
		reset 
	else 
	endif 
	return 
endf 

def node_065 : 163
	random (40) -> action#0F() 
	elser (30) -> action#10() 
	elser (20) -> action#11() 
	elser (10) -> action#12() 
	endr 
	return 
endf 

def node_066 : 166
	if self.target(48) 
		>> node_060 
		reset 
	else 
	endif 
	return 
endf 

def node_067 : 85
	>> node_074 
	return 
endf 

def node_068 : 128
	>> node_075 
	return 
endf 

def node_069 : 86
	>> node_075 
	return 
endf 

def node_070 : 87
	>> node_076 
	return 
endf 

def node_071 : 72
	if function#33(0,2) 
		>> node_099 
	else 
		>> node_100 
	endif 
	return 
endf 

def node_072 : 73
	if function#33(0,2) 
		>> node_102 
	else 
		>> node_103 
	endif 
	return 
endf 

def node_073 : 74
	if function#33(0,2) 
		>> node_105 
	else 
		>> node_106 
	endif 
	return 
endf 

def node_074 : 84
	if function#33(0,2) 
		>> node_133 
	else 
		>> node_134 
	endif 
	return 
endf 

def node_075 : 75
	if function#33(0,2) 
		>> node_109 
	else 
		>> node_110 
	endif 
	return 
endf 

def node_076 : 77
	if function#33(0,2) 
		>> node_138 
	else 
		>> node_139 
	endif 
	return 
endf 

def node_077 : 76
	if function#33(0,2) 
		>> node_117 
	else 
		>> node_136 
	endif 
	return 
endf 

def node_078 : 78
	if function#33(0,2) 
		>> node_135 
	else 
		>> node_137 
	endif 
	return 
endf 

def node_079 : 79
	if function#33(0,2) 
		>> node_121 
	else 
		>> node_122 
	endif 
	return 
endf 

def node_080 : 80
	if self.angle_2d_cw_between(0,180) 
		>> node_123 
	else 
		>> node_124 
	endif 
	return 
endf 

def node_081 : 82
	if function#33(0,2) 
		>> node_130 
	else 
		>> node_131 
	endif 
	return 
endf 

def node_082 : 20
	-> action#01() 
	return 
endf 

def node_083 : 21
	-> action#02(6,0,0,300) 
	return 
endf 

def node_084 : 96
	-> action#02(2,6,0,600,300) 
	return 
endf 

def node_085 : 22
	-> action#03(6,0,0,300) 
	return 
endf 

def node_086 : 97
	-> action#03(2,6,0,300,300) 
	return 
endf 

def node_087 : 23
	-> action#04(6,0,0,300) 
	return 
endf 

def node_088 : 98
	-> action#04(2,6,0,500,300) 
	return 
endf 

def node_089 : 149
	-> action#04(2,6,0,1500,300) 
	return 
endf 

def node_090 : 24
	-> action#05(6,0,0,400) 
	return 
endf 

def node_091 : 99
	-> action#05(2,6,0,1000,400) 
	return 
endf 

def node_092 : 110
	-> action#05(0,6,0,0,800) 
	return 
endf 

def node_093 : 25
	-> action#05(6,0,0,400) 
	return 
endf 

def node_094 : 159
	-> action#05(2,6,0,500,400) 
	return 
endf 

def node_095 : 100
	-> action#05(2,6,0,1000,400) 
	return 
endf 

def node_096 : 131
	-> action#05(2,6,0,1500,400) 
	return 
endf 

def node_097 : 133
	-> action#05(2,3,0,1000,5) 
	return 
endf 

def node_098 : 143
	-> action#05(2,6,0,1000,1000) 
	return 
endf 

def node_099 : 26
	-> action#06() 
	return 
endf 

def node_100 : 27
	-> action#07() 
	return 
endf 

def node_101 : 28
	-> action#08() 
	return 
endf 

def node_102 : 29
	-> action#09() 
	return 
endf 

def node_103 : 30
	-> action#0A() 
	return 
endf 

def node_104 : 31
	-> action#0B() 
	return 
endf 

def node_105 : 32
	-> action#0C() 
	return 
endf 

def node_106 : 33
	-> action#0D() 
	return 
endf 

def node_107 : 34
	-> action#0E() 
	return 
endf 

def node_108 : 35
	-> action#0F() 
	return 
endf 

def node_109 : 36
	-> action#10() 
	return 
endf 

def node_110 : 37
	-> action#11() 
	return 
endf 

def node_111 : 38
	-> action#12() 
	return 
endf 

def node_112 : 39
	-> action#13() 
	return 
endf 

def node_113 : 40
	-> action#14() 
	return 
endf 

def node_114 : 101
	-> action#14(2,0,0,500) 
	return 
endf 

def node_115 : 41
	-> action#15() 
	return 
endf 

def node_116 : 102
	-> action#15(2,0,0,500) 
	return 
endf 

def node_117 : 42
	-> action#16() 
	return 
endf 

def node_118 : 43
	-> action#17() 
	return 
endf 

def node_119 : 44
	-> action#18() 
	return 
endf 

def node_120 : 45
	-> action#19() 
	return 
endf 

def node_121 : 47
	-> action#1A() 
	return 
endf 

def node_122 : 48
	-> action#1B() 
	return 
endf 

def node_123 : 49
	-> action#1C() 
	return 
endf 

def node_124 : 50
	-> action#1D() 
	return 
endf 

def node_125 : 134
	-> action#1E() 
	return 
endf 

def node_126 : 135
	-> action#1F() 
	return 
endf 

def node_127 : 51
	-> action#20() 
	return 
endf 

def node_128 : 52
	-> action#21() 
	return 
endf 

def node_129 : 54
	-> action#22() 
	return 
endf 

def node_130 : 55
	-> action#23() 
	return 
endf 

def node_131 : 56
	-> action#24() 
	return 
endf 

def node_132 : 57
	-> action#2A() 
	return 
endf 

def node_133 : 58
	-> action#2B() 
	return 
endf 

def node_134 : 59
	-> action#2C() 
	return 
endf 

def node_135 : 60
	-> action#2D() 
	return 
endf 

def node_136 : 61
	-> action#2E() 
	return 
endf 

def node_137 : 62
	-> action#2F() 
	return 
endf 

def node_138 : 63
	-> action#30() 
	return 
endf 

def node_139 : 64
	-> action#31() 
	return 
endf 

def node_140 : 67
	-> action#32(3,0,0,5) 
	return 
endf 

def node_141 : 68
	-> action#34() 
	return 
endf 

def node_142 : 70
	-> action#35(3,0,0,5) 
	return 
endf 

def node_143 : 71
	-> action#36(3,0,0,5) 
	return 
endf 

def node_144 : 129
	-> action#37() 
	return 
endf 

