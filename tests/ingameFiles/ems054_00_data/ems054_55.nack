importactions Shamos as shamos

def node_000
	conclude 
endf 

def node_001
	>> node_095 
	if self.distance_2d_to_target().leq(500) 
	else 
		repeat 
	endif 
	return 
endf 

def node_002
	>> node_095 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_095 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_095 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_095 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_095 
	endif 
	return 
endf 

def node_003
	>> node_094 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	if self.distance_2d_to_target().leq(500) 
		return 
	else 
		>> node_094 
	endif 
	return 
endf 

def node_004
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,6,0,500,400) 
	endif 
	if function#46() 
		>> node_021 
		>> node_065 
		>> node_065 
		>> node_065 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,6,0,500,400) 
	endif 
	if function#46() 
		>> node_021 
		>> node_065 
		>> node_065 
		>> node_065 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,6,0,500,400) 
	endif 
	if function#46() 
		>> node_021 
		>> node_065 
		>> node_065 
		>> node_065 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,6,0,500,400) 
	endif 
	if function#46() 
		>> node_021 
		>> node_065 
		>> node_065 
		>> node_065 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,6,0,500,400) 
	endif 
	if function#46() 
		>> node_021 
		>> node_065 
		>> node_065 
		>> node_065 
		return 
	else 
	endif 
	return 
endf 

def node_005
	if self.angle_2d_cw_between(15,345) 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_006
	if self.angle_2d_cw_between(30,330) 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_007
	if self.angle_2d_cw_between(45,315) 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_008
	if self.angle_2d_cw_between(60,300) 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_009
	if self.angle_2d_cw_between(90,270) 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_010
	>> node_006 
	>> node_079 
	return 
endf 

def node_011
	if self.angle_2d_cw_between(0,180) 
		>> node_125 
	else 
		>> node_126 
	endif 
	return 
endf 

def node_012
	if self.angle_2d_cw_between(330,30) 
		>> node_010 
	elif self.angle_2d_cw_between(210,150) 
		>> node_011 
	else 
		>> node_010 
	endif 
	return 
endf 

def node_013
	>> node_006 
	>> node_080 
	return 
endf 

def node_014
	random (65) >> node_012 
	elser (35) >> node_013 
	endr 
	return 
endf 

def node_015
	>> node_006 
	>> node_014 
	return 
endf 

def node_016
	if self.angle_2d_cw_between(330,30) 
		>> node_014 
	elif self.angle_2d_cw_between(270,90) 
		>> node_015 
	else 
		>> node_014 
	endif 
	return 
endf 

def node_017
	>> node_005 
	>> node_127 
	return 
endf 

def node_018
	if self.angle_2d_cw_between(0,180) 
		>> node_119 
	else 
		>> node_120 
	endif 
	return 
endf 

def node_019
	if self.angle_2d_cw_between(315,45) 
		>> node_118 
	elif self.angle_2d_cw_between(0,180) 
		>> node_120 
	else 
		>> node_119 
	endif 
	return 
endf 

def node_020
	>> node_009 
	>> node_118 
	return 
endf 

def node_021
	-> action#17() 
	return 
endf 

def node_022
	if self.distance_2d_to_target().leq(600) 
		self.targetEnemy(target_em.random_player_or_cat) @ unkn3:2097152, unkn12:4, unknExtra1:500 
	elif self.distance_2d_to_target().leq(700) 
		self.targetEnemy(target_em.random_player_or_cat) @ unkn3:2097152, unkn12:4, unknExtra1:600 
	else 
		self.targetEnemy(target_em.random_player_or_cat) @ unkn3:2097152, unkn12:4, unknExtra1:700 
	endif 
	if self.distance_2d_to_target().leq(350) 
		>> node_020 
	else 
		if self.vertical_distance_to_target().leq(200) 
			random (60) >> node_141 
			elser (40) >> node_003 
			endr 
		else 
			>> node_003 
		endif 
	endif 
	return 
endf 

def node_023
	self.targetEnemy(target_em.random_player_or_cat) @ unkn3:2097152, unkn12:4, unknExtra1:700 
	if self.vertical_distance_to_target().leq(200) 
		random (60) >> node_140 
		elser (40) >> node_003 
		endr 
	else 
		>> node_003 
	endif 
	return 
endf 

def node_024
	if function#62(330,30) 
		>> node_118 
	elif function#62(30,180) 
		>> node_120 
	elif function#62(180,330) 
		>> node_119 
	endif 
	return 
endf 

def node_025
	if function#67(0,2) 
	else 
		self.targetArea(26) @ parameter2:500 
		>> node_093 
	endif 
	return 
endf 

def node_026
	>> node_084 
	if self.distance_3d_to_target().leq(500) 
	else 
		repeat 
	endif 
	return 
endf 

def node_027
	>> node_089 
	>> node_028 
	return 
endf 

def node_028
	if self.distance_2d_to_target().leq(350) 
	else 
		>> node_095 
		repeat 
	endif 
	return 
endf 

def node_029
	>> node_093 
	return 
endf 

def node_030
	-> action#23() 
	if self.distance_2d_to_target().leq(600) 
		return 
	else 
		>> node_097 
	endif 
	if self.distance_2d_to_target().leq(600) 
		return 
	else 
		>> node_097 
	endif 
	if self.distance_2d_to_target().leq(600) 
		return 
	else 
		>> node_097 
	endif 
	return 
endf 

def node_031
	>> node_098 
	if self.distance_2d_to_target().leq(1300) 
	else 
		repeat 
	endif 
	return 
endf 

def node_032
	if self.angle_2d_cw_between(45,315) 
		>> node_128 
	else 
	endif 
	return 
endf 

def node_033
	if self.angle_2d_cw_between(90,270) 
		>> node_128 
	else 
	endif 
	return 
endf 

def node_034
	if self.angle_2d_cw_between(30,330) 
		>> node_081 
	else 
	endif 
	return 
endf 

def node_035
	if self.angle_2d_cw_between(45,315) 
		>> node_081 
	else 
	endif 
	return 
endf 

def node_036
	if self.angle_2d_cw_between(90,270) 
		>> node_081 
	else 
	endif 
	return 
endf 

def node_037
	>> node_071 
	return 
endf 

def node_038
	>> node_072 
	return 
endf 

def node_039
	>> node_073 
	>> node_107 
	return 
endf 

def node_040
	>> node_111 
	return 
endf 

def node_041
	if self.distance_3d_to_target().leq(750) 
		>> node_020 
	else 
	endif 
	>> node_006 
	>> node_067 
	return 
endf 

def node_042
	if self.distance_3d_to_target().leq(750) 
		>> node_020 
		>> node_006 
		>> node_067 
	elif self.distance_3d_to_target().leq(1500) 
		>> node_006 
		>> node_067 
	else 
	endif 
	return 
endf 

def node_043
	>> node_078 
	return 
endf 

def node_044
	>> node_108 
	return 
endf 

def node_045
	>> node_072 
	>> node_104 
	return 
endf 

def node_046
	>> node_077 
	return 
endf 

def node_047
	>> node_108 
	return 
endf 

def node_048
	if function#51(0,2000) 
		>> node_050 
		reset 
	else 
	endif 
	return 
endf 

def node_049
	if function#51(0,1500) 
		>> node_050 
		conclude 
	else 
	endif 
	return 
endf 

def node_050
	if self.distance_3d_recalc_to_target().leq(800) 
		>> node_009 
		>> node_020 
	else 
		>> node_006 
	endif 
	>> node_043 
	return 
endf 

def node_051
	if function#6B(4500) 
		[RegisterVar0 ++] 
		self.targetEnemy(26) @ unkn3:2097152, unkn12:4, unknExtra1:75 
		>> node_052 
		>> node_053 
		>> node_054 
	else 
	endif 
	return 
endf 

def node_052
	if self.distance_3d_to_target().leq(500) 
	else 
		>> node_095 
		repeat 
	endif 
	return 
endf 

def node_053
	>> node_006 
	>> node_039 
	return 
endf 

def node_054
	[RegisterVar0 |-] 
	if self.in_combat() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_006 
		>> node_067 
	else 
	endif 
	return 
endf 

def node_055
	self.targetUnknown(1,0) 
	if self.in_combat() 
		if self.target(3) 
			return 
		else 
		endif 
	else 
	endif 
	if function#31(28,3000) 
		self.targetUnknown(2,0) 
		if self.target(13) 
		else 
			function#54() 
			>> node_058 
			>> node_056 
			reset 
		endif 
	else 
	endif 
	return 
endf 

def node_056
	self.targetEnemy(target_em.closest_entity) 
	>> node_006 
	>> node_060 
	return 
endf 

def node_057
	self.targetEnemy(target_em.closest_entity) 
	if self.target(20) 
		if self.distance_2d_to_target().leq(1500) 
		else 
			-> action#05(2,6,0,500,1000) 
			repeat 
		endif 
	else 
	endif 
	return 
endf 

def node_058
	function#52(2,2) 
	self.targetArea(target_area.nearest_entrance) 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> action#05(2,1,0,500,300) 
		repeat 
	endif 
	function#54() 
	return 
endf 

def node_059
	self.targetArea(35) 
	if self.distance_3d_to_target().leq(700) 
		-> action#23() 
	else 
		>> node_006 
		>> node_001 
	endif 
	return 
endf 

def node_060
	random (50) -> action#2B() 
	elser (50) -> action#2C() 
	endr 
	return 
endf 

def node_061
	>> node_116 
	return 
endf 

def node_062
	>> node_144 
	return 
endf 

def node_063
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.target(0) 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> action#05(2,6,0,2000,950) 
		endif 
		>> node_060 
		reset 
	else 
	endif 
	return 
endf 

def node_064
	if self.target(0) 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> action#05(2,6,0,2000,950) 
		endif 
		>> node_065 
		reset 
	else 
	endif 
	if self.target(14) 
		>> node_065 
		reset 
	else 
	endif 
	return 
endf 

def node_065
	random (40) -> action#0F() 
	elser (30) -> action#10() 
	elser (20) -> action#11() 
	elser (10) -> action#12() 
	endr 
	return 
endf 

def node_066
	if self.target(48) 
		>> node_060 
		reset 
	else 
	endif 
	return 
endf 

def node_067
	>> node_074 
	return 
endf 

def node_068
	>> node_075 
	return 
endf 

def node_069
	>> node_075 
	return 
endf 

def node_070
	>> node_076 
	return 
endf 

def node_071
	if function#33(0,2) 
		>> node_099 
	else 
		>> node_100 
	endif 
	return 
endf 

def node_072
	if function#33(0,2) 
		>> node_102 
	else 
		>> node_103 
	endif 
	return 
endf 

def node_073
	if function#33(0,2) 
		>> node_105 
	else 
		>> node_106 
	endif 
	return 
endf 

def node_074
	if function#33(0,2) 
		>> node_133 
	else 
		>> node_134 
	endif 
	return 
endf 

def node_075
	if function#33(0,2) 
		>> node_109 
	else 
		>> node_110 
	endif 
	return 
endf 

def node_076
	if function#33(0,2) 
		>> node_138 
	else 
		>> node_139 
	endif 
	return 
endf 

def node_077
	if function#33(0,2) 
		>> node_117 
	else 
		>> node_136 
	endif 
	return 
endf 

def node_078
	if function#33(0,2) 
		>> node_135 
	else 
		>> node_137 
	endif 
	return 
endf 

def node_079
	if function#33(0,2) 
		>> node_121 
	else 
		>> node_122 
	endif 
	return 
endf 

def node_080
	if self.angle_2d_cw_between(0,180) 
		>> node_123 
	else 
		>> node_124 
	endif 
	return 
endf 

def node_081
	if function#33(0,2) 
		>> node_130 
	else 
		>> node_131 
	endif 
	return 
endf 

def node_082
	-> action#01() 
	return 
endf 

def node_083
	-> action#02(6,0,0,300) 
	return 
endf 

def node_084
	-> action#02(2,6,0,600,300) 
	return 
endf 

def node_085
	-> action#03(6,0,0,300) 
	return 
endf 

def node_086
	-> action#03(2,6,0,300,300) 
	return 
endf 

def node_087
	-> action#04(6,0,0,300) 
	return 
endf 

def node_088
	-> action#04(2,6,0,500,300) 
	return 
endf 

def node_089
	-> action#04(2,6,0,1500,300) 
	return 
endf 

def node_090
	-> action#05(6,0,0,400) 
	return 
endf 

def node_091
	-> action#05(2,6,0,1000,400) 
	return 
endf 

def node_092
	-> action#05(0,6,0,0,800) 
	return 
endf 

def node_093
	-> action#05(6,0,0,400) 
	return 
endf 

def node_094
	-> action#05(2,6,0,500,400) 
	return 
endf 

def node_095
	-> action#05(2,6,0,1000,400) 
	return 
endf 

def node_096
	-> action#05(2,6,0,1500,400) 
	return 
endf 

def node_097
	-> action#05(2,3,0,1000,5) 
	return 
endf 

def node_098
	-> action#05(2,6,0,1000,1000) 
	return 
endf 

def node_099
	-> action#06() 
	return 
endf 

def node_100
	-> action#07() 
	return 
endf 

def node_101
	-> action#08() 
	return 
endf 

def node_102
	-> action#09() 
	return 
endf 

def node_103
	-> action#0A() 
	return 
endf 

def node_104
	-> action#0B() 
	return 
endf 

def node_105
	-> action#0C() 
	return 
endf 

def node_106
	-> action#0D() 
	return 
endf 

def node_107
	-> action#0E() 
	return 
endf 

def node_108
	-> action#0F() 
	return 
endf 

def node_109
	-> action#10() 
	return 
endf 

def node_110
	-> action#11() 
	return 
endf 

def node_111
	-> action#12() 
	return 
endf 

def node_112
	-> action#13() 
	return 
endf 

def node_113
	-> action#14() 
	return 
endf 

def node_114
	-> action#14(2,0,0,500) 
	return 
endf 

def node_115
	-> action#15() 
	return 
endf 

def node_116
	-> action#15(2,0,0,500) 
	return 
endf 

def node_117
	-> action#16() 
	return 
endf 

def node_118
	-> action#17() 
	return 
endf 

def node_119
	-> action#18() 
	return 
endf 

def node_120
	-> action#19() 
	return 
endf 

def node_121
	-> action#1A() 
	return 
endf 

def node_122
	-> action#1B() 
	return 
endf 

def node_123
	-> action#1C() 
	return 
endf 

def node_124
	-> action#1D() 
	return 
endf 

def node_125
	-> action#1E() 
	return 
endf 

def node_126
	-> action#1F() 
	return 
endf 

def node_127
	-> action#20() 
	return 
endf 

def node_128
	-> action#21() 
	return 
endf 

def node_129
	-> action#22() 
	return 
endf 

def node_130
	-> action#23() 
	return 
endf 

def node_131
	-> action#24() 
	return 
endf 

def node_132
	-> action#2A() 
	return 
endf 

def node_133
	-> action#2B() 
	return 
endf 

def node_134
	-> action#2C() 
	return 
endf 

def node_135
	-> action#2D() 
	return 
endf 

def node_136
	-> action#2E() 
	return 
endf 

def node_137
	-> action#2F() 
	return 
endf 

def node_138
	-> action#30() 
	return 
endf 

def node_139
	-> action#31() 
	return 
endf 

def node_140
	-> action#32(3,0,0,5) 
	return 
endf 

def node_141
	-> action#34() 
	return 
endf 

def node_142
	-> action#35(3,0,0,5) 
	return 
endf 

def node_143
	-> action#36(3,0,0,5) 
	return 
endf 

def node_144
	-> action#37() 
	return 
endf 

