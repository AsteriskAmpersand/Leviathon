importactions Anteka as anteka
importlibrary Global as Global

def node_000
	>> Global.node_014 
	>> node_001 
	>> node_002 
	reset 
endf 

def node_001
	if [RegisterVar2 <= 1] 
		>> node_009 
	endif 
	>> node_042 
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.angle_2d_cw_between(310,50) 
		if self.distance_3d_to_target().leq(600) 
			>> node_007 
			reset 
		endif 
	endif 
	return 
endf 

def node_002
	function#52(0,4) 
	self.targetArea(target_area.nearest_entrance) @ unkn3:8388608 
	if self.distance_3d_to_target().gt(250) 
		-> action#08(1,2,0,250,1000) 
	else 
		>> node_003 
		function#54() 
	endif 
	return 
endf 

def node_003
	function#54() 
	if function#5A() 
		>> node_004 
	elif function#5A(1) 
		>> node_005 
	elif function#5A(2) 
		>> node_006 
	else 
		>> node_005 
	endif 
	return 
endf 

def node_004
	-> action#21() 
	return 
endf 

def node_005
	-> action#1F() 
	return 
endf 

def node_006
	-> action#04() 
	return 
endf 

def node_007
	-> action#0B(2,0,0,600) 
	return 
endf 

def node_008
endf 

def node_009
	self.targetEnemy(48) 
	if self.distance_3d_to_target().leq(500) 
		if self.angle_2d_cw_between(120,240) 
			>> node_014 
			>> Global.node_000 
			repeat 
		endif 
	endif 
	>> Global.node_000 
	if self.distance_3d_to_target().gt(2500) >> node_011 
	elif self.distance_3d_to_target().leq(2000) >> node_010 
	endif >> node_019 
	repeat 
endf 

def node_010
	if self.vertical_distance_to_target().gt(400) 
		>> node_017 
	else 
		if self.angle_2d_ccw_between(40,0) 
			>> node_015 
			>> node_016 
		else 
			>> node_017 
		endif 
	endif 
	return 
endf 

def node_011
	>> Global.node_000 
	>> node_027 
	>> node_044 
	>> node_040 
	reset 
endf 

def node_012
	if [RegisterVar6 >= 10] 
		>> Global.node_000 
		>> node_025 
		>> node_043 
	else 
		>> node_013 
	endif 
	return 
endf 

def node_013
	>> Global.node_000 
	>> node_034 
	>> node_044 
	>> node_040 
	reset 
endf 

def node_014
	>> node_024 
	return 
endf 

def node_015
	>> Global.node_000 
	>> node_033 
	self.targetEnemy(48) 
	return 
endf 

def node_016
	if [RegisterVar4 <= 5] 
		if self.angular_15(40,0) 
			>> node_036 
			>> node_042 
			return 
		endif 
	endif 
	if self.distance_3d_to_target().leq(300) 
		>> node_036 
		>> node_042 
	else 
		>> node_035 
		>> node_041 
		self.targetEnemy(48) 
		repeat 
	endif 
	return 
endf 

def node_017
	if self.distance_2d_to_target().leq(300) 
		>> node_023 
		>> node_042 
	elif [RegisterVar4 <= 30] 
		>> node_018 
		>> node_042 
	else 
		>> node_028 
		>> node_041 
		repeat 
	endif 
	return 
endf 

def node_018
	if function#45() 
		>> node_030 
	endif 
	if [RegisterVar6 >= 15] 
		>> Global.node_000 
		>> node_025 
		>> node_043 
	else 
		>> node_013 
	endif 
	return 
endf 

def node_019
	>> node_038 
	if self.distance_3d_to_target().leq(300) 
		-> action#0D() 
	else 
		>> node_012 
	endif 
	return 
endf 

def node_020
endf 

def node_021
	if function#46() 
		>> node_026 
		function#DA() 
		reset 
	else 
		return 
	endif 
	reset 
endf 

def node_022
endf 

def node_023
	-> action#12() 
	return 
endf 

def node_024
	-> action#16() 
	return 
endf 

def node_025
	-> action#11() 
	return 
endf 

def node_026
	-> action#02() 
	return 
endf 

def node_027
	-> action#06() 
	return 
endf 

def node_028
	-> action#09(2,0,0,300) 
	>> node_021 
	return 
endf 

def node_029
	-> action#03() 
	return 
endf 

def node_030
	-> action#0D() 
	return 
endf 

def node_031
	-> action#0B(1,0,0,300) 
	>> node_021 
	return 
endf 

def node_032
	-> action#25() 
	return 
endf 

def node_033
	-> action#07() 
	return 
endf 

def node_034
	-> action#04() 
	return 
endf 

def node_035
	-> action#13(2,0,0,300) 
	>> node_021 
	return 
endf 

def node_036
	-> action#14() 
	return 
endf 

def node_037
	-> action#15() 
	return 
endf 

def node_038
	-> action#09(2,0,0,600) 
	>> node_021 
	return 
endf 

def node_039
endf 

def node_040
	[RegisterVar2 |-] 
	return 
endf 

def node_041
	[RegisterVar4 ++] 
	return 
endf 

def node_042
	[RegisterVar4 |-] 
	return 
endf 

def node_043
	[RegisterVar6 ++] 
	return 
endf 

def node_044
	[RegisterVar6 |-] 
	return 
endf 

