importactions Diablos as diablos
importlibrary Global as Global

def node_000 : 38
	if self.current_quest().is_rank(rank.MR) 
		>> node_001 
	else 
		>> node_002 
	endif 
	reset 
endf 

def node_001 : 37
	>> Global.node_007 
	self.targetArea(21) @ parameter2:700 
	if self.target_on_part(0) >> node_007 
	elif self.target_on_part(1) >> node_007 
	elif self.target_on_part(2) >> node_007 
	elif self.in_combat() 
		self.enraged() >> node_029 => reset 
		self.fatigued() >> node_030 => reset 
		>> node_031 => reset 
	else >> node_032 
	endif 
	reset 
endf 

def node_002 : 8
	>> Global.node_007 
	self.targetArea(21) @ parameter2:700 
	if self.target_on_part(0) >> node_007 
	elif self.target_on_part(1) >> node_007 
	elif self.target_on_part(2) >> node_007 
	elif self.in_combat() 
		self.enraged() >> node_004 => reset 
		self.fatigued() >> node_005 => reset 
		>> node_003 => reset 
	else >> node_006 
	endif 
	reset 
endf 

def node_003 : 9
	random (25) >> Global.node_070 
	elser (75) >> Global.node_030 
	endr 
	return 
endf 

def node_004 : 10
	random (25) >> Global.node_070 
	elser (25) >> Global.node_071 
	elser (25) >> Global.node_073 
	elser (25) >> Global.node_032 
	endr 
	return 
endf 

def node_005 : 11
	random (50) >> Global.node_029 
	elser (15) >> Global.node_070 
	elser (35) >> Global.node_030 
	endr 
	return 
endf 

def node_006 : 36
	random (40) >> Global.node_030 
	elser (15) >> Global.node_070 
	elser (10) >> Global.node_071 
	elser (10) >> Global.node_073 
	elser (25) >> Global.node_032 
	endr 
	return 
	*& // [Illegal Context] endr 
	return 
endf 

def node_007 : 12
	>> Global.node_007 
	function#A8() 
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#A9(0,1) 
		self.target_on_part(0) >> node_008 => repeat 
		self.target_on_part(1) >> node_011 => repeat 
		self.target_on_part(2) >> node_014 => repeat 
	elif function#A9(0,2) 
		self.target_on_part(0) >> node_008 => repeat 
		self.target_on_part(1) >> node_011 => repeat 
		self.target_on_part(2) >> node_014 => repeat 
	elif function#A9(0,3) 
		self.target_on_part(0) >> node_020 => repeat 
		self.target_on_part(1) >> node_020 => repeat 
		self.target_on_part(2) >> node_020 => repeat 
	else 
		function#A8(1) 
		return 
	endif 
	return 
endf 

def node_008 : 15
	if self.mounted() 
		>> node_009 
	else 
		>> node_010 
	endif 
	return 
endf 

def node_009 : 16
	-> diablos.corner_swing_attack() 
	return 
endf 

def node_010 : 17
	-> diablos.ride_rage_head() 
	return 
endf 

def node_011 : 18
	if self.mounted() 
		>> node_012 
	else 
		>> node_013 
	endif 
	return 
endf 

def node_012 : 19
	-> diablos.ride_rage_body() 
	return 
endf 

def node_013 : 20
	-> diablos.ride_rage_body_lv2() 
	return 
endf 

def node_014 : 21
	if self.mounted() 
		>> node_015 
	else 
		>> node_016 
	endif 
	return 
endf 

def node_015 : 22
	-> diablos.tail_strike() 
	return 
endf 

def node_016 : 23
	-> diablos.ride_rage_tail() 
	return 
endf 

def node_017 : 24
	>> node_022 
	-> diablos.rush_headbutt() 
	return 
endf 

def node_018 : 25
	if function#3B() 
		if self.mount_staggered_twice() 
			>> node_019 
		else 
		endif 
	else 
		if self.mount_finisher_ready() 
			if self.mounted() 
				random (30) >> node_019 
				elser (70) 
				endr 
			else 
				random (100) >> node_019 
				elser (0) 
				endr 
			endif 
		elif self.mount_stabbed() 
			if self.mounted() 
				random (10) >> node_019 
				elser (90) 
				endr 
			else 
				random (80) >> node_019 
				elser (20) 
				endr 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_019 : 26
	-> diablos.ride_tired() 
	return 
endf 

def node_020 : 27
	if self.mounted() 
		>> node_021 
	else 
	endif 
	return 
endf 

def node_021 : 28
	-> diablos.wait() 
	return 
endf 

def node_022 : 29
	random (20) >> node_023 
	elser (80) >> node_024 
	endr 
	>> node_028 
	return 
endf 

def node_023 : 30
	self.targetEnemy(21) @ parameter2:1000 
	return 
endf 

def node_024 : 31
	self.targetEnemy(22) @ parameter2:1000 
	return 
endf 

def node_025 : 32
	random (48) >> node_026 
	elser (52) >> node_027 
	endr 
	return 
endf 

def node_026 : 33
	self.targetEnemy(12) @ parameter2:1000 
	return 
endf 

def node_027 : 34
	self.targetEnemy(11) @ parameter2:1000 
	return 
endf 

def node_028 : 35
	if self.angular_17(300,60) 
		-> diablos.quick_turn() 
	else 
	endif 
	return 
endf 

def node_029 : 39
	random (25) >> Global.node_070 
	elser (25) >> Global.node_071 
	elser (25) >> Global.node_073 
	elser (25) >> Global.node_032 
	endr 
	return 
endf 

def node_030 : 40
	random (10) >> Global.node_029 
	elser (50) >> Global.node_070 
	elser (30) >> Global.node_071 
	elser (10) >> Global.node_030 
	endr 
	return 
endf 

def node_031 : 41
	random (45) >> Global.node_070 
	elser (30) >> Global.node_071 
	elser (20) >> Global.node_073 
	elser (5) >> Global.node_030 
	endr 
	return 
endf 

def node_032 : 42
	random (25) >> Global.node_030 
	elser (20) >> Global.node_070 
	elser (15) >> Global.node_071 
	elser (15) >> Global.node_073 
	elser (25) >> Global.node_032 
	endr 
	return 
	*& // [Illegal Context] endr 
	return 
endf 

