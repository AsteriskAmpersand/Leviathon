importactions KestodonF as kestodonf

def node_000
	conclude 
endf 

def node_001
	if self.angle_2d_cw_between(30,330) 
		-> action#02() 
	else 
	endif 
	return 
endf 

def node_002
	if self.angle_2d_cw_between(30,330) 
		-> action#03() 
	else 
	endif 
	return 
endf 

def node_003
	if self.angle_2d_cw_between(15,345) 
		-> action#03() 
	else 
	endif 
	return 
endf 

def node_004
	-> action#22() 
	return 
endf 

def node_005
	if function#51(0,2000) 
		if self.distance_3d_recalc_to_target().leq(500) 
			>> node_002 
			-> action#12() 
			reset 
		else 
			>> node_002 
			random (40) -> action#1C() 
			elser (30) -> action#19() 
			elser (30) -> action#1B() 
			endr 
			reset 
		endif 
	else 
	endif 
	return 
endf 

def node_006
	self.targetUnknown(1,0) 
	if self.target(3) 
		>> node_002 
		random (50) -> action#1A() 
		elser (50) -> action#58() 
		endr 
		reset 
	else 
	endif 
	return 
endf 

def node_007
	self.targetUnknown(1,0) 
	if self.target(10) 
		>> node_002 
		random (40) -> action#58() 
		elser (30) -> action#1B() 
		elser (30) -> action#19() 
		endr 
		reset 
	else 
	endif 
	return 
endf 

def node_008
	if self.targetEnemy(33) 
		if self.distance_2d_to_target().leq(3000) 
			>> node_002 
			random (34) -> action#58() 
			elser (33) -> action#19() 
			elser (16) -> action#0A() 
			elser (17) -> action#0B() 
			endr 
			reset 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_009
	if function#31(40,1500) 
		self.targetEnemy(target_em.closest_entity) 
		>> node_002 
		>> node_021 
		reset 
	else 
	endif 
	return 
endf 

def node_010
	self.targetUnknown(1,0) 
	if self.target(46) 
		>> node_002 
		random (40) -> action#58() 
		elser (30) -> action#1B() 
		elser (30) -> action#19() 
		endr 
		reset 
	else 
	endif 
	return 
endf 

def node_011
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.target(0) 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> action#09(2,6,0,2000,950) 
		endif 
		>> node_021 
		reset 
	else 
	endif 
	return 
endf 

def node_012
	if self.target(0) 
		if self.distance_2d_to_target().leq(1000) 
		else 
			-> action#09(2,6,0,2000,950) 
		endif 
		>> node_024 
		reset 
	else 
	endif 
	if self.target(14) 
		>> node_024 
		reset 
	else 
	endif 
	return 
endf 

def node_013
	if self.target(48) 
		>> node_021 
		reset 
	else 
	endif 
	return 
endf 

def node_014
	if function#3A() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_002 
		random (40) -> action#58() 
		elser (30) -> action#1C() 
		elser (30) -> action#1B() 
		endr 
		reset 
	else 
	endif 
	return 
endf 

def node_015
	-> action#09(2,6,0,500,400) 
	if self.distance_2d_to_target().leq(500) 
	else 
		repeat 
	endif 
	return 
endf 

def node_016
	-> action#09(2,1,0,500,400) 
	if self.distance_3d_to_target().leq(500) 
	else 
		repeat 
	endif 
	return 
endf 

def node_017
	-> action#09(2,6,0,500,500) 
	return 
endf 

def node_018
	-> action#09(2,1,0,500,500) 
	return 
endf 

def node_019
	if self.distance_2d_to_target().leq(600) 
	else 
		-> action#09(2,6,0,500,500) 
	endif 
	if function#46() 
		>> node_022 
		>> node_024 
		>> node_024 
		>> node_024 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> action#09(2,6,0,500,500) 
	endif 
	if function#46() 
		>> node_022 
		>> node_024 
		>> node_024 
		>> node_024 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> action#09(2,6,0,500,500) 
	endif 
	if function#46() 
		>> node_022 
		>> node_024 
		>> node_024 
		>> node_024 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> action#09(2,6,0,500,500) 
	endif 
	if function#46() 
		>> node_022 
		>> node_024 
		>> node_024 
		>> node_024 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> action#09(2,6,0,500,500) 
	endif 
	if function#46() 
		>> node_022 
		>> node_024 
		>> node_024 
		>> node_024 
		return 
	else 
	endif 
	return 
endf 

def node_020
	>> node_003 
	-> action#59() 
	return 
endf 

def node_021
	>> node_002 
	random (40) -> action#19() 
	elser (30) -> action#1B() 
	elser (30) -> action#58() 
	endr 
	return 
endf 

def node_022
	-> action#12() 
	return 
endf 

def node_023
	>> node_002 
	random (40) -> action#58() 
	elser (10) -> action#0A() 
	elser (10) -> action#0B() 
	elser (40) -> action#19() 
	endr 
	return 
endf 

def node_024
	random (34) -> action#1D() 
	elser (33) -> action#1E() 
	elser (33) -> action#1F() 
	endr 
	return 
endf 

