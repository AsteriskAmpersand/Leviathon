importactions Dodogama as dodogama
importlibrary Global as Global

def node_000 : 120
	if self.current_quest().is_rank(rank.MR) 
		>> node_001 
	else 
		>> node_002 
	endif 
	reset 
endf 

def node_001 : 119
	>> Global.node_161 
	if self.target_on_part(0) >> node_020 
	elif self.target_on_part(1) >> node_021 
	else 
		>> Global.node_161 
		>> node_027 
	endif 
	reset 
endf 

def node_002 : 1
	>> Global.node_161 
	if self.target_on_part(0) >> node_020 
	elif self.target_on_part(1) >> node_021 
	else 
		>> node_003 
		>> Global.node_161 
		>> node_004 
	endif 
	reset 
endf 

def node_003 : 105
	random (50) 
				>> Global.node_034 
				>> Global.node_149 
	elser (50) 
	endr 
	return 
endf 

def node_004 : 8
	if self.distance_2d_to_target().leq(300) 
		if self.enraged() >> node_005 
		elif self.fatigued() >> node_010 
		else >> node_015 
		endif 
	elif self.distance_2d_to_target().leq(500) 
		if self.enraged() >> node_006 
		elif self.fatigued() >> node_011 
		else >> node_016 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		if self.enraged() >> node_007 
		elif self.fatigued() >> node_012 
		else >> node_017 
		endif 
	elif self.distance_2d_to_target().leq(1500) 
		if self.enraged() >> node_008 
		elif self.fatigued() >> node_013 
		else >> node_018 
		endif 
	else 
		if self.enraged() >> node_009 
		elif self.fatigued() >> node_014 
		else >> node_019 
		endif 
	endif 
	return 
endf 

def node_005 : 87
	random (50) >> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_119 
	endr 
	return 
endf 

def node_006 : 89
	random (50) >> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_119 
	endr 
	return 
endf 

def node_007 : 91
	random (50) >> Global.node_026 
				>> Global.node_105 
				>> Global.node_108 
	elser (20) >> Global.node_106 
				>> Global.node_111 
	elser (30) >> Global.node_121 
	endr 
	return 
endf 

def node_008 : 93
	random (50) >> Global.node_026 
				>> Global.node_105 
				>> Global.node_108 
	elser (20) >> Global.node_106 
				>> Global.node_111 
	elser (30) >> Global.node_121 
	endr 
	return 
endf 

def node_009 : 95
	random (50) >> Global.node_122 
				>> Global.node_108 
	elser (20) >> Global.node_106 
				>> Global.node_111 
	elser (30) >> Global.node_121 
	endr 
	return 
endf 

def node_010 : 106
	random (50) >> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_125 
	endr 
	return 
endf 

def node_011 : 107
	random (50) >> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_125 
	endr 
	return 
endf 

def node_012 : 108
	random (50) >> Global.node_026 
				>> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_125 
	endr 
	return 
endf 

def node_013 : 109
	random (50) >> Global.node_026 
				>> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_125 
	endr 
	return 
endf 

def node_014 : 110
	random (50) >> Global.node_026 
				>> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_125 
	endr 
	return 
endf 

def node_015 : 9
	random (50) >> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_118 
	endr 
	return 
endf 

def node_016 : 10
	random (50) >> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_118 
	endr 
	return 
endf 

def node_017 : 11
	random (50) >> Global.node_026 
				>> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_118 
	endr 
	return 
endf 

def node_018 : 12
	random (50) >> Global.node_026 
				>> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_118 
	endr 
	return 
endf 

def node_019 : 13
	random (50) >> Global.node_026 
				>> Global.node_105 
	elser (20) >> Global.node_106 
	elser (30) >> Global.node_120 
	endr 
	return 
endf 

def node_020 : 111
	random (47) >> node_022 
	elser (38) >> node_023 
	elser (15) >> node_026 
	endr 
	return 
endf 

def node_021 : 112
	random (47) >> node_024 
	elser (38) >> node_025 
	elser (15) >> node_026 
	endr 
	return 
endf 

def node_022 : 114
	-> dodogama.ride_rage_head() 
	return 
endf 

def node_023 : 115
	random (50) -> dodogama.overturn_l() 
	elser (50) -> dodogama.overturn_r() 
	endr 
	return 
endf 

def node_024 : 116
	-> dodogama.ride_rage_body() 
	return 
endf 

def node_025 : 117
	-> dodogama.ride_rage_body_lv2() 
	return 
endf 

def node_026 : 118
	-> dodogama.wait() 
	return 
endf 

def node_027 : 126
	if self.distance_2d_to_target().leq(300) 
		if self.enraged() >> node_005 
		elif self.fatigued() >> node_028 
		else >> node_015 
		endif 
	elif self.distance_2d_to_target().leq(500) 
		if self.enraged() >> node_006 
		elif self.fatigued() >> node_029 
		else >> node_016 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		if self.enraged() >> node_007 
		elif self.fatigued() >> node_030 
		else >> node_017 
		endif 
	elif self.distance_2d_to_target().leq(1500) 
		if self.enraged() >> node_008 
		elif self.fatigued() >> node_031 
		else >> node_018 
		endif 
	else 
		if self.enraged() >> node_009 
		elif self.fatigued() >> node_032 
		else >> node_019 
		endif 
	endif 
	return 
endf 

def node_028 : 121
	random (60) >> Global.node_105 
	elser (25) >> Global.node_106 
	elser (15) >> Global.node_125 
	endr 
	return 
endf 

def node_029 : 122
	random (60) >> Global.node_105 
	elser (25) >> Global.node_106 
	elser (15) >> Global.node_125 
	endr 
	return 
endf 

def node_030 : 123
	random (60) >> Global.node_026 
				>> Global.node_105 
	elser (25) >> Global.node_106 
	elser (15) >> Global.node_125 
	endr 
	return 
endf 

def node_031 : 124
	random (60) >> Global.node_026 
				>> Global.node_105 
	elser (25) >> Global.node_106 
	elser (15) >> Global.node_125 
	endr 
	return 
endf 

def node_032 : 125
	random (60) >> Global.node_026 
				>> Global.node_105 
	elser (25) >> Global.node_106 
	elser (15) >> Global.node_125 
	endr 
	return 
endf 

