importactions Brute_Tigrex as brute_tigrex
importlibrary Global as Global

def node_000 : 1
	>> Global.node_020 
	self.targetEnemy(13) 
	if function#41() 
	else 
		if self.target(4) 
			>> Global.node_029 
		else 
			if self.enraged() 
				>> node_005 
			else 
				>> node_001 
			endif 
		endif 
	endif 
	conclude 
endf 

def node_001 : 37
	>> node_002 
	>> node_003 
	>> node_004 
	return 
endf 

def node_002 : 38
	if self.angle_2d_cw_between(30,330) 
		-> brute_tigrex.quick_turn() 
	else 
	endif 
	return 
endf 

def node_003 : 39
	self.targetEnemy(13) 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else 
		>> node_007 
	endif 
	return 
endf 

def node_004 : 40
	self.targetEnemy(48) 
	if self.target(7) 
		>> node_008 
	elif self.target(10) 
		>> node_010 
	elif self.distance_3d_to_target().gt(1000) 
		>> node_008 
	elif self.angle_2d_cw_between(45,315) 
		>> node_008 
	else 
		>> node_009 
	endif 
	return 
endf 

def node_005 : 41
	>> node_002 
	>> node_006 
	return 
endf 

def node_006 : 42
	-> brute_tigrex.bite_max() 
	return 
endf 

def node_007 : 43
	if self.fatigued() 
		-> brute_tigrex.dash_tired(2,1,5,1500,800) 
	else 
		-> brute_tigrex.dash_combat(2,1,5,1500,800) 
	endif 
	return 
endf 

def node_008 : 44
	-> brute_tigrex.sniff_s() 
	-> brute_tigrex.search() 
	return 
endf 

def node_009 : 45
	if function#5F() 
		-> brute_tigrex.sniff_s() 
	else 
		>> Global.node_021 
	endif 
	return 
endf 

def node_010 : 46
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.angular_17(270,90) 
		-> brute_tigrex.quick_turn() 
	endif 
	>> Global.node_019 
	return 
endf 

