importactions Gajau as gajau
importlibrary Global as Global

def node_000
	>> Global.node_013 
	>> node_004 
	>> node_006 
	>> node_010 
	if self.distance_2d_to_target().leq(400) 
		function#54() 
	else 
		repeat 
	endif 
	reset 
endf 

def node_001
	if self.distance_2d_to_target().leq(300) 
	else 
		-> action#06(0,0,1) @ unknExtra0:200 
		repeat 
	endif 
	return 
endf 

def node_002
	>> node_003 
	-> action#02() 
	-> action#13() 
	function#54() 
	return 
endf 

def node_003
	function#52(6,4) 
	self.targetArea(target_area.nearest_entrance) 
	return 
endf 

def node_004
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.target(7) 
	elif self.target(10) 
	elif self.target(3) 
	elif self.target(4) 
	elif self.vertical_distance_to_target().gt(500) 
	elif self.distance_2d_to_target().leq(1300) 
		>> node_005 
		reset 
	endif 
	return 
endf 

def node_005
	if self.target(2) 
		>> node_017 
	else 
		>> node_011 
	endif 
	return 
endf 

def node_006
	function#52(32) 
	self.targetArea(target_area.nearest_entrance) @ unkn3:2097152, unkn12:4, unknExtra1:300 
	return 
endf 

def node_007
	if function#B0() 
		>> node_008 
	elif function#B0(1) 
		>> node_009 
	elif function#B0(2) 
		>> node_008 
	else 
		>> node_009 
	endif 
	return 
endf 

def node_008
	self.targetEnemy(16) 
	function#74(0,400) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(45,400) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(90,400) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(135,400) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(180,400) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(225,400) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(270,400) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(315,400) 
	>> node_010 
	>> node_004 
	return 
endf 

def node_009
	self.targetEnemy(16) 
	function#74(0,500) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(315,500) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(270,500) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(225,500) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(180,500) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(135,500) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(90,500) 
	>> node_010 
	>> node_004 
	self.targetEnemy(16) 
	function#74(45,500) 
	>> node_010 
	>> node_004 
	return 
endf 

def node_010
	random (90) -> action#06(2,1,0,300,300) 
	elser (10) -> action#04(3,0,0,3) 
	endr 
	return 
endf 

def node_011
	>> Global.node_002 
	random (80) >> Global.node_008 
	elser (20) >> Global.node_007 
	endr 
	return 
endf 

def node_012
	-> action#08(2,1,0,700,300) 
	return 
endf 

def node_013
	if function#103(500) 
	else 
		reset 
	endif 
	return 
endf 

def node_014
	if function#B0() 
		>> node_015 
	elif function#B0(1) 
		>> node_016 
	elif function#B0(2) 
		>> node_015 
	else 
		>> node_016 
	endif 
	return 
endf 

def node_015
	self.targetEnemy(target_em.random_player_or_cat) 
	function#102() 
	function#104() 
	function#105(0,450) 
	>> node_012 
	>> node_013 
	function#105(45,450) 
	>> node_012 
	>> node_013 
	function#105(90,450) 
	>> node_012 
	>> node_013 
	function#105(135,450) 
	>> node_012 
	>> node_013 
	function#105(180,450) 
	>> node_012 
	>> node_013 
	function#105(225,450) 
	>> node_012 
	>> node_013 
	function#105(270,450) 
	>> node_012 
	>> node_013 
	function#105(315,450) 
	>> node_012 
	>> node_013 
	return 
endf 

def node_016
	self.targetEnemy(target_em.random_player_or_cat) 
	function#102() 
	function#104() 
	function#105(0,450) 
	>> node_012 
	>> node_013 
	function#105(315,450) 
	>> node_012 
	>> node_013 
	function#105(270,450) 
	>> node_012 
	>> node_013 
	function#105(225,450) 
	>> node_012 
	>> node_013 
	function#105(180,450) 
	>> node_012 
	>> node_013 
	function#105(135,450) 
	>> node_012 
	>> node_013 
	function#105(90,450) 
	>> node_012 
	>> node_013 
	function#105(45,450) 
	>> node_012 
	>> node_013 
	return 
endf 

def node_017
	if self.distance_2d_to_target().leq(400) 
		>> Global.node_002 
		>> Global.node_007 
	else 
		-> action#08(2,1,0,500,400) 
	endif 
	return 
endf 

