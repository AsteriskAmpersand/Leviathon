importactions Barioth as barioth
importlibrary Global as Global

def node_000
	if function#45() 
	else 
		>> Global.node_194 
	endif 
	[RegisterVar4 |-] 
	>> node_001 
	if self.target(4) 
		>> node_003 => reset 
	elif self.target(3) 
		>> node_003 => reset 
	elif self.target(55) 
		if self.flying() 
			>> Global.node_168 => reset 
		else 
			>> Global.node_110 => reset 
		endif 
	elif self.target(12) 
		>> node_004 => reset 
	elif self.target(14) 
		>> node_005 => reset 
	elif self.target(11) 
		>> node_006 => reset 
	elif self.target(0) 
		>> node_007 => reset 
	elif function#101() 
		>> Global.node_186 => reset 
	elif self.flying() 
		>> Global.node_168 => reset 
	elif self.target(52) 
		>> node_009 => reset 
	elif [RegisterVar5 += 1] 
		>> node_008 => reset 
	else 
		>> Global.node_110 => reset 
	endif 
	reset 
endf 

def node_001
	[RegisterVar5 ++] 
	if function#5D() 
		function#5E() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_002 
		self.targetArea(4) 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
	endif 
	if self.vertical_distance_to_target().gt(450) 
		[RegisterVar5 |-] 
	else 
	endif 
	return 
endf 

def node_002
	if self.angle_2d_cw_between(270,90) 
		-> barioth.battle_search() 
	else 
		-> barioth.lost_search() 
	endif 
	return 
endf 

def node_003
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> Global.node_015 
	else 
		>> Global.node_003 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> Global.node_008 
		random (50) -> barioth.intimidation() 
		elser (30) -> barioth.battle_search() 
		elser (20) -> barioth.threat() 
		endr 
	endif 
	return 
endf 

def node_004
	>> Global.node_107 
	return 
endf 

def node_005
	>> Global.node_003 
	if self.distance_2d_to_target().gt(1000) 
		>> Global.node_013 
	else 
		if self.above_target() 
			-> barioth.jump_attack_wall_up() 
		else 
			random (50) -> barioth.jump_attack_wall_down() 
			elser (50) >> Global.node_012 
			endr 
		endif 
	endif 
	return 
endf 

def node_006
	>> Global.node_016 
	return 
endf 

def node_007
	>> Global.node_003 
	if self.distance_2d_to_target().gt(1000) 
		>> Global.node_013 
	else 
		if self.above_target() 
			-> barioth.jump_attack_wall_up() 
		else 
			if self.target(0) @ parameter2:1 
				-> barioth.jump_attack_wall_down() 
			elif self.target(56) 
				self.targetArea(77) 
				-> barioth.dash(1,2,0,0,1500) 
			else 
				-> barioth.dash(1,2,0,0,1500) 
			endif 
		endif 
	endif 
	if self.vertical_distance_to_target().leq(450) 
		>> Global.node_110 
	else 
	endif 
	return 
endf 

def node_008
	if self.vertical_distance_to_target().leq(700) 
		if self.distance_3d_to_target().leq(3000) 
			random (53) >> Global.node_015 
			elser (47) >> Global.node_107 
			endr 
		else 
			>> Global.node_016 
		endif 
	else 
		>> Global.node_016 
	endif 
	return 
endf 

def node_009
	>> Global.node_016 
	return 
endf 

