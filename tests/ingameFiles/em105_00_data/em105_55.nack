importactions Xeno'jiiva as xeno'jiiva

def node_000
	>> node_061 
	conclude 
endf 

def node_001
	if self.flying() 
		-> xeno'jiiva.landing() 
		[RegisterVar0 ++] 
	else 
	endif 
	return 
endf 

def node_002
	self.targetArea(target_area.area_aerial_center) 
	*&
	>> node_055 
	self.targetArea(target_area.area_center) 
	-> xeno'jiiva.landing() 
	return 
endf 

def node_003
	if self.flying() 
	else 
		if self.current_quest().is_rank(rank.AT) 
			if function#101(1) 
				-> xeno'jiiva.take_off() 
			else 
				-> xeno'jiiva.laser_take_off() 
			endif 
		else 
			-> xeno'jiiva.take_off() 
		endif 
		[RegisterVar0 ++] 
		[RegisterVar1 ++] 
	endif 
	return 
endf 

def node_004
	if self.flying() 
		-> xeno'jiiva.turn_fly() 
	else 
		-> xeno'jiiva.quick_turn() 
	endif 
	return 
endf 

def node_005
	if self.angle_2d_cw_between(30,330) 
		if self.flying() 
			-> xeno'jiiva.turn_fly() 
		else 
			-> xeno'jiiva.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_006
	if self.angle_2d_cw_between(60,300) 
		if self.flying() 
			-> xeno'jiiva.turn_fly() 
		else 
			-> xeno'jiiva.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_007
	if self.angle_2d_cw_between(90,270) 
		if self.flying() 
			-> xeno'jiiva.turn_fly() 
		else 
			-> xeno'jiiva.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_008
	if self.flying() 
		-> xeno'jiiva.idle_wait_fly() 
	else 
		-> xeno'jiiva.idle_wait() 
	endif 
	return 
endf 

def node_009
	>> node_001 
	-> xeno'jiiva.threat_short() 
	return 
endf 

def node_010
	>> node_001 
	-> xeno'jiiva.discover() 
	return 
endf 

def node_011
	>> node_001 
	if self.current_quest().is_rank(rank.AT) 
		if function#101(1) 
			-> xeno'jiiva.back_step() 
		else 
			if self.target(55) 
				>> node_087 
			else 
				-> xeno'jiiva.laser_back_step() 
			endif 
		endif 
	else 
		-> xeno'jiiva.back_step() 
	endif 
	return 
endf 

def node_012
	>> node_001 
	-> xeno'jiiva.side_step() 
	return 
endf 

def node_013
	>> node_001 
	>> node_007 
	-> xeno'jiiva.front_step() 
	return 
endf 

def node_014
	>> node_001 
	>> node_013 
	if self.distance_3d_to_target().gt(1000) 
		>> node_013 
	else 
	endif 
	if self.distance_3d_to_target().gt(1000) 
		>> node_013 
	else 
	endif 
	if self.distance_3d_to_target().gt(1000) 
		>> node_013 
	else 
	endif 
	if self.distance_3d_to_target().gt(1000) 
		>> node_013 
	else 
	endif 
	return 
endf 

def node_015
	>> node_001 
	-> xeno'jiiva.dash(5) 
	return 
endf 

def node_016
	>> node_001 
	-> xeno'jiiva.dash(1,5,0,1000) 
	return 
endf 

def node_017
	>> node_001 
	-> xeno'jiiva.dash(2,5,0,3000) 
	return 
endf 

def node_018
	>> node_001 
	>> node_007 
	-> xeno'jiiva.rush() 
	return 
endf 

def node_019
	>> node_001 
	>> node_005 
	-> xeno'jiiva.rush() 
	if self.distance_3d_to_target().leq(4000) 
		if function#101(5) 
			if self.angle_2d_cw_between(120,240) 
				>> node_045 
			else 
			endif 
		else 
			if self.angle_2d_cw_between(150,210) 
				>> node_046 
			elif self.angle_2d_cw_between(60,300) 
				>> node_049 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_020
	>> node_001 
	>> node_007 
	-> xeno'jiiva.rush() 
	>> node_012 
	-> xeno'jiiva.rush() 
	return 
endf 

def node_021
	>> node_001 
	-> xeno'jiiva.back_turn() 
	self.targetEnemy(9) @ parameter2:8000 
	-> xeno'jiiva.rush() 
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_011 
	>> node_029 
	return 
endf 

def node_022
	>> node_001 
	if self.target(55) 
		>> node_087 
	else 
		>> node_007 
		-> xeno'jiiva.breath() 
	endif 
	return 
endf 

def node_023
	>> node_001 
	if self.target(55) 
		>> node_087 
	else 
		>> node_007 
		-> xeno'jiiva.laser_jab() 
		if self.enraged() 
			if self.angular_17(90,270) 
				-> xeno'jiiva.laser_jab() 
			endif 
		endif 
	endif 
	return 
endf 

def node_024
	>> node_001 
	>> node_011 
	>> node_023 
	return 
endf 

def node_025
	>> node_001 
	if self.target(55) 
		>> node_087 
	else 
		>> node_007 
		-> xeno'jiiva.laser_straight() 
	endif 
	return 
endf 

def node_026
	if function#101(1) 
		>> node_022 
	else 
		>> node_025 
	endif 
	return 
endf 

def node_027
	>> node_001 
	>> node_011 
	>> node_026 
	return 
endf 

def node_028
	>> node_001 
	>> node_005 
	-> xeno'jiiva.breath_3way() 
	return 
endf 

def node_029
	>> node_001 
	>> node_006 
	if self.current_quest().is_rank(rank.AT) 
		if self.angle_2d_cw_between(0,180) 
			-> xeno'jiiva.laser_sweep_rev() 
		else 
			-> xeno'jiiva.laser_sweep() 
		endif 
	else 
		-> xeno'jiiva.laser_sweep() 
	endif 
	return 
endf 

def node_030
	if function#101(1) 
		>> node_028 
	else 
		>> node_029 
	endif 
	return 
endf 

def node_031
	>> node_001 
	>> node_011 
	>> node_030 
	return 
endf 

def node_032
	>> node_001 
	>> node_005 
	-> xeno'jiiva.walk(5,1,0,0,1200) 
	return 
endf 

def node_033
	>> node_001 
	if self.target(55) 
		>> node_087 
	else 
		>> node_005 
		-> xeno'jiiva.laser_walk() 
	endif 
	return 
endf 

def node_034
	if function#101(1) 
		if self.angle_2d_cw_between(60,300) 
			>> node_012 
		else 
			>> node_013 
		endif 
	else 
		>> node_033 
	endif 
	return 
endf 

def node_035
	if function#101(1) 
		if self.angle_2d_cw_between(90,270) 
			>> node_012 
		else 
			>> node_011 
		endif 
	else 
		>> node_011 
		>> node_033 
	endif 
	return 
endf 

def node_036
	>> node_001 
	>> node_005 
	-> xeno'jiiva.laser_snake() 
	return 
endf 

def node_037
	>> node_001 
	>> node_011 
	>> node_036 
	return 
endf 

def node_038
	>> node_001 
	if self.angle_2d_cw_between(0,45) 
		>> node_044 
	elif self.angle_2d_cw_between(45,120) 
		>> node_042 
	elif self.angle_2d_cw_between(120,240) 
		>> node_012 
		>> node_039 
	elif self.angle_2d_cw_between(240,315) 
		>> node_041 
	else 
		>> node_043 
	endif 
	return 
endf 

def node_039
	>> node_001 
	if self.angle_2d_cw_between(0,180) 
		>> node_042 
	else 
		>> node_041 
	endif 
	return 
endf 

def node_040
	>> node_001 
	if self.current_quest().is_rank(rank.AT) 
		-> xeno'jiiva.body_press_turn() 
	else 
		-> xeno'jiiva.body_press() 
	endif 
	return 
endf 

def node_041
	if function#101(2) 
		-> xeno'jiiva.scratch() 
	else 
		-> xeno'jiiva.aura_scratch() 
	endif 
	return 
endf 

def node_042
	if function#101(3) 
		-> xeno'jiiva.scratch() 
	else 
		-> xeno'jiiva.aura_scratch() 
	endif 
	return 
endf 

def node_043
	if function#101(2) 
		if self.current_quest().is_rank(rank.AT) 
			-> xeno'jiiva.body_press_turn() 
		else 
			-> xeno'jiiva.body_press() 
		endif 
	else 
		-> xeno'jiiva.aura_scratch() 
	endif 
	return 
endf 

def node_044
	if function#101(3) 
		if self.current_quest().is_rank(rank.AT) 
			-> xeno'jiiva.body_press_turn() 
		else 
			-> xeno'jiiva.body_press() 
		endif 
	else 
		-> xeno'jiiva.aura_scratch() 
	endif 
	return 
endf 

def node_045
	>> node_001 
	-> xeno'jiiva.tail_slap() 
	return 
endf 

def node_046
	>> node_001 
	-> xeno'jiiva.aura_tail_slap() 
	return 
endf 

def node_047
	if self.angle_2d_cw_between(120,240) 
		if function#101(5) 
			>> node_045 
		else 
			>> node_046 
		endif 
	else 
		>> node_039 
	endif 
	return 
endf 

def node_048
	>> node_001 
	>> node_013 
	>> node_047 
	return 
endf 

def node_049
	>> node_001 
	-> xeno'jiiva.aura_tail_sweep() 
	return 
endf 

def node_050
	if self.angle_2d_cw_between(120,240) 
		if function#101(5) 
			>> node_045 
		else 
			>> node_049 
		endif 
	else 
		>> node_039 
	endif 
	return 
endf 

def node_051
	>> node_001 
	>> node_013 
	>> node_050 
	return 
endf 

def node_052
	if function#101(5) 
		if self.angle_2d_cw_between(120,240) 
			>> node_045 
		else 
			>> node_039 
		endif 
	else 
		if self.angle_2d_cw_between(150,210) 
			>> node_046 
		elif self.angle_2d_cw_between(60,300) 
			>> node_049 
		else 
			>> node_039 
		endif 
	endif 
	return 
endf 

def node_053
	>> node_001 
	>> node_013 
	>> node_052 
	return 
endf 

def node_054
	if function#101(4) 
		-> xeno'jiiva.quick_turn() 
	else 
		-> xeno'jiiva.take_off() 
	endif 
	return 
endf 

def node_055
	>> node_003 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> xeno'jiiva.glide_direct_move(2,1,0,3000,1000) 
		repeat 
	endif 
	return 
endf 

def node_056
	>> node_003 
	self.targetEnemy(37) 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> xeno'jiiva.glide_direct_move(2,1,0,3000,2000) 
		repeat 
	endif 
	return 
endf 

def node_057
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> xeno'jiiva.glide(2,1,0,3000,1000) 
		repeat 
	endif 
	return 
endf 

def node_058
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> xeno'jiiva.glide_combat(2,6,0,3000,1000) 
		repeat 
	endif 
	return 
endf 

def node_059
	>> node_003 
	>> node_005 
	-> xeno'jiiva.rush_fly() 
	[RegisterVar0 ++] 
	[RegisterVar1 ++] 
	return 
endf 

def node_060
	>> node_003 
	>> node_007 
	-> xeno'jiiva.laser_jab_fly() 
	return 
endf 

def node_061
	>> node_003 
	>> node_007 
	-> xeno'jiiva.laser_fly() 
	self.targetUnknown(50,0) 
	>> node_060 
	self.targetUnknown(50,0) 
	>> node_058 
	return 
endf 

def node_062
	>> node_003 
	>> node_007 
	-> xeno'jiiva.aura_scratch_fly() 
	return 
endf 

def node_063
	>> node_001 
	-> xeno'jiiva.lost_search() 
	return 
endf 

def node_064
	>> node_001 
	-> xeno'jiiva.search() 
	return 
endf 

def node_065
	>> node_001 
	-> xeno'jiiva.anger_search() 
	return 
endf 

def node_066
	>> node_001 
	if self.current_quest().is_rank(rank.AT) 
		if function#102() 
			>> node_005 
		else 
		endif 
	else 
	endif 
	-> xeno'jiiva.energy_charge() 
	return 
endf 

def node_067
	[RegisterVar1 ++] 
	-> xeno'jiiva.berserk_start() 
	return 
endf 

def node_068
	>> node_001 
	>> node_005 
	-> xeno'jiiva.super_laser() 
	return 
endf 

def node_069
	>> node_001 
	>> node_007 
	-> xeno'jiiva.super_aura_press() 
	return 
endf 

def node_070
	>> node_016 
	>> node_069 
	return 
endf 

def node_071
	>> node_001 
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> xeno'jiiva.dying_walk(2,1,5,1500,400) 
	endif 
	return 
endf 

def node_072
	>> node_001 
	-> xeno'jiiva.tired() 
	return 
endf 

def node_073
	>> node_001 
	-> xeno'jiiva.refresh() 
	return 
endf 

def node_074
	if self.angle_2d_cw_between(30,330) 
		if self.flying() 
			-> xeno'jiiva.turn_fly() 
		else 
			-> xeno'jiiva.normal_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_075
	if self.angle_2d_cw_between(60,300) 
		if self.flying() 
			-> xeno'jiiva.turn_fly() 
		else 
			-> xeno'jiiva.normal_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_076
	if self.angle_2d_cw_between(90,270) 
		if self.flying() 
			-> xeno'jiiva.turn_fly() 
		else 
			-> xeno'jiiva.normal_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_077
	>> node_001 
	-> xeno'jiiva.search() 
	return 
endf 

def node_078
	>> node_001 
	-> xeno'jiiva.walk(5) 
	return 
endf 

def node_079
	>> node_001 
	-> xeno'jiiva.walk(1,5,0,1000) 
	return 
endf 

def node_080
	>> node_001 
	-> xeno'jiiva.walk(2,5,0,3000) 
	return 
endf 

def node_081
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> node_016 
		repeat 
	else 
	endif 
	return 
endf 

def node_082
	>> node_001 
	-> xeno'jiiva.berserk_end() 
	return 
endf 

def node_083
	>> node_003 
	-> xeno'jiiva.glide_combat(2,6,0,3000,1000) 
	-> xeno'jiiva.sudden_drop_landing() 
	[RegisterVar0 ++] 
	[RegisterVar1 ++] 
	return 
endf 

def node_084
	>> node_001 
	-> xeno'jiiva.wing_attack() 
	return 
endf 

def node_085
	>> node_001 
	if function#101(4) 
		-> xeno'jiiva.threat_short() 
	else 
		if function#101(1) 
			-> xeno'jiiva.take_off() 
		else 
			-> xeno'jiiva.laser_take_off() 
		endif 
		[RegisterVar0 ++] 
		[RegisterVar1 ++] 
	endif 
	return 
endf 

def node_086
	if function#101(4) 
		if self.angle_2d_cw_between(60,120) 
			>> node_084 
		elif self.angle_2d_cw_between(120,240) 
			>> node_047 
		elif self.angle_2d_cw_between(240,300) 
			>> node_084 
		else 
			>> node_040 
		endif 
	else 
		if self.angle_2d_cw_between(30,150) 
			>> node_084 
		elif self.angle_2d_cw_between(150,210) 
			>> node_047 
		elif self.angle_2d_cw_between(210,330) 
			>> node_084 
		else 
			>> node_040 
		endif 
	endif 
	return 
endf 

def node_087
	if self.target(55) 
		if function#7F() 
			>> node_040 
		elif function#7F(4) 
			>> node_040 
		elif function#7F(1) 
			>> node_040 
		elif function#7F(5) 
			>> node_040 
		elif function#7F(2) 
			>> node_040 
		elif function#7F(6) 
			>> node_040 
		elif function#7F(8) 
			>> node_040 
		elif function#7F(9) 
			>> node_040 
		elif function#7F(3) 
			>> node_047 
		elif function#7F(7) 
			>> node_047 
		else 
			>> node_040 
		endif 
	else 
	endif 
	return 
endf 

