importactions Lunastra as lunastra

def node_000
	conclude 
endf 

def node_001
	if self.flying() 
		if function#AF(5000) 
			-> lunastra.landing() 
		else 
			>> node_003 
		endif 
	else 
	endif 
	return 
endf 

def node_002
	if self.flying() 
	else 
		-> lunastra.take_off() 
	endif 
	return 
endf 

def node_003
	self.targetArea(target_area.area_aerial_center) 
	>> node_061 
	self.targetArea(target_area.area_center) 
	-> lunastra.landing() 
	return 
endf 

def node_004
	>> node_001 
	>> node_126 
	-> lunastra.diagonal_bite() 
	return 
endf 

def node_005
	>> node_001 
	-> lunastra.jump_attack() 
	return 
endf 

def node_006
	>> node_001 
	-> lunastra.dash(1,2,0,800,2000) 
	return 
endf 

def node_007
	>> node_001 
	-> lunastra.reversal_take_off() 
	return 
endf 

def node_008
endf 

def node_009
	if self.angle_2d_cw_between(120,240) -> lunastra.back_scratch() 
	elif self.angle_2d_cw_between(45,315) -> lunastra.scratch() 
	else -> lunastra.front_scratch() 
	endif 
	return 
endf 

def node_010
	if self.angle_2d_cw_between(135,225) >> node_123 
		>> node_016 
	elif self.distance_2d_to_target().gt(1000) >> node_016 
	elif self.angle_2d_ccw_between(45,0) >> node_016 
	else >> node_015 
	endif 
	return 
endf 

def node_011
	if self.angle_2d_ccw_between(45,0) 
		random (50) >> node_009 
		elser (50) >> node_019 
		endr 
	elif self.angle_2d_cw_between(135,225) >> node_018 
	else >> node_017 
	endif 
	return 
endf 

def node_012
	if self.angle_2d_ccw_between(45,0) >> node_018 
	elif self.angle_2d_cw_between(135,225) >> node_018 
	else >> node_017 
	endif 
	return 
endf 

def node_013
	if self.angle_2d_cw_between(150,210) >> node_018 
	else >> node_017 
	endif 
	return 
endf 

def node_014
	if self.angle_2d_cw_between(225,315) >> node_020 
	elif self.angle_2d_ccw_between(45,0) >> node_022 
	else >> node_015 
	endif 
	return 
endf 

def node_015
	>> node_001 
	-> lunastra.side_wing_attack() 
	if self.current_quest().is_rank(rank.AT) 
	elif self.current_quest().is_rank(rank.MR) 
	elif self.enraged() 
	else 
		>> node_123 
	endif 
	return 
endf 

def node_016
	>> node_001 
	-> lunastra.heat_wind_blow() 
	if self.current_quest().is_rank(rank.AT) 
	elif self.current_quest().is_rank(rank.MR) 
	elif self.enraged() 
	else 
		>> node_123 
	endif 
	return 
endf 

def node_017
	>> node_001 
	-> lunastra.tail_attack_side() 
	return 
endf 

def node_018
	>> node_001 
	if self.angle_2d_ccw_between(90,0) -> lunastra.quick_turn_reversal() 
	endif 
	-> lunastra.tail_attack() 
	return 
endf 

def node_019
	>> node_001 
	>> node_175 
	-> lunastra.bite_attack() 
	return 
endf 

def node_020
	>> node_001 
	>> node_175 
	-> lunastra.close_breath() 
	return 
endf 

def node_021
	>> node_001 
	-> lunastra.powerful_breath() 
	return 
endf 

def node_022
	>> node_001 
	>> node_124 
	-> lunastra.turn_around_breath() 
	return 
endf 

def node_023
	>> node_001 
	if self.in_map(st.Special_Arena).in_area(0) 
		self.targetArea(target_area.area_center) 
	else 
		self.targetArea(19) 
	endif 
	>> node_045 
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_124 
	-> lunastra.charge() 
	return 
endf 

def node_024
	>> node_001 
	if function#31(18,5000) 
	else 
		>> node_245 
		-> lunastra.hell_flare() 
		>> node_240 
	endif 
	return 
endf 

def node_025
	>> node_001 
	-> lunastra.charge() 
	return 
endf 

def node_026
	>> node_001 
	>> node_073 
	>> node_024 
	return 
endf 

def node_027
	>> node_001 
	>> node_250 
	-> lunastra.petit_flare() 
	return 
endf 

def node_028
	if self.distance_2d_to_target().leq(500) >> node_167 
	elif self.angle_2d_cw_between(45,315) >> node_167 
	endif 
	-> lunastra.bite_attack() 
	return 
endf 

def node_029
	if self.angle_2d_cw_between(45,135) 
		if function#102(2) 
		else >> node_015 
			return 
		endif 
	elif self.angle_2d_cw_between(225,315) 
		if function#102(3) 
		else >> node_015 
			return 
		endif 
	endif 
	random (50) >> node_009 
	elser (50) >> node_028 
	endr 
	return 
endf 

def node_030
	if function#102() 
		random (50) >> node_009 
		elser (50) >> node_022 
		endr 
	else >> node_016 
	endif 
	return 
endf 

def node_031
	if function#102() >> node_019 
	else >> node_004 
	endif 
	return 
endf 

def node_032
	if function#102(5) >> node_020 
	else >> node_005 
	endif 
	return 
endf 

def node_033
	if function#102() 
	else >> node_018 
	endif 
	-> lunastra.turn_around_breath() 
	return 
endf 

def node_034
	>> node_002 
	-> lunastra.turn_around_breath_fly() 
	return 
endf 

def node_035
	>> node_002 
	-> lunastra.dust_blow_fly() 
	return 
endf 

def node_036
	>> node_037 
	>> node_038 
	return 
endf 

def node_037
	>> node_001 
	>> node_006 
	-> lunastra.reversal_take_off() 
	return 
endf 

def node_038
	if self.distance_2d_to_target().leq(300) 
		>> node_124 
		>> node_208 
		>> node_034 
	elif self.distance_2d_to_target().leq(3250) 
		random (30) 
					>> node_124 
					>> node_035 
		elser (70) 
					>> node_066 
					>> node_124 
					>> node_034 
		endr 
	else 
		>> node_066 
		>> node_119 
	endif 
	return 
endf 

def node_039
	>> node_002 
	-> lunastra.rush_to_landing() 
	if self.current_quest().is_rank(rank.AT) 
	elif self.enraged() 
	else 
		>> node_195 
	endif 
	return 
endf 

def node_040
	if self.distance_3d_to_target().leq(700) 
	else 
		-> lunastra.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_041
	>> node_179 
	self.targetArea(target_area.nearest_entrance) 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> lunastra.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_042
	>> node_179 
	self.targetArea(target_area.area_center) 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> lunastra.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_043
	>> node_179 
	self.targetArea(39) 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> lunastra.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_044
	if self.distance_3d_to_target().leq(700) 
	else 
		-> lunastra.dying_walk(1,2,0,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_045
	if self.distance_3d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
		repeat 
	endif 
	return 
endf 

def node_046
	if self.distance_3d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	return 
endf 

def node_047
	if self.distance_3d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	return 
endf 

def node_048
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	return 
endf 

def node_049
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(1,2,0,800,1500) 
	endif 
	return 
endf 

def node_050
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.dying_glide(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_051
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.dying_glide_direct_move(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_052
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> lunastra.dying_glide_direct_move(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_053
	if self.distance_2d_to_target().leq(600) 
	else 
		-> lunastra.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_054
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> lunastra.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_055
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.glide(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_056
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.glide_direct_move(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_057
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> lunastra.glide_direct_move(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_058
	if self.distance_2d_to_target().leq(600) 
	else 
		-> lunastra.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_059
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> lunastra.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_060
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.glide(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_061
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.glide_direct_move(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_062
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> lunastra.glide_direct_move(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_063
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.glide_direct_move(2,1,0,1500,500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.glide_direct_move(2,1,0,1500,500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.glide_direct_move(2,1,0,1500,500) 
	endif 
	return 
endf 

def node_064
	if self.distance_2d_to_target().leq(600) 
	else 
		-> lunastra.glide_combat(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_065
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> lunastra.glide_combat(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_066
	if self.distance_2d_to_target().leq(600) 
	else 
		-> lunastra.glide_combat(2,1,0,1500,500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> lunastra.glide_combat(2,1,0,1500,500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> lunastra.glide_combat(2,1,0,1500,500) 
	endif 
	return 
endf 

def node_067
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> lunastra.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> lunastra.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> lunastra.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> lunastra.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> lunastra.glide_direct_move(2,1,0,1500,700) 
	endif 
	return 
endf 

def node_068
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> lunastra.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> lunastra.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> lunastra.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> lunastra.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> lunastra.glide_combat(2,0,0,1500) 
	endif 
	return 
endf 

def node_069
	>> node_001 
	-> lunastra.take_off_switch_pattern_by_dist() 
	>> node_062 
	return 
endf 

def node_070
	>> node_001 
	-> lunastra.sudden_rise() 
	return 
endf 

def node_071
	>> node_002 
	-> lunastra.sudden_drop() 
	return 
endf 

def node_072
	if self.flying() 
		-> lunastra.discover_fly() 
	else 
		-> lunastra.discover() 
	endif 
	return 
endf 

def node_073
	if self.flying() 
		-> lunastra.barrier_up_fly() 
	else 
		-> lunastra.barrier_up() 
	endif 
	return 
endf 

def node_074
	if self.flying() 
		-> lunastra.threat_short_fly() 
	else 
		-> lunastra.threat_short() 
	endif 
	return 
endf 

def node_075
	if function#AB() 
		function#AA() 
		>> node_074 
	else 
	endif 
	return 
endf 

def node_076
	if self.flying() 
		-> lunastra.combat_search_fly() 
	else 
		-> lunastra.combat_search() 
	endif 
	return 
endf 

def node_077
	if self.flying() 
		-> lunastra.combat_search_fly() 
	else 
		-> lunastra.combat_search() 
	endif 
	return 
endf 

def node_078
	if self.flying() 
		-> lunastra.combat_search_fly() 
	else 
		-> lunastra.lost_search() 
	endif 
	return 
endf 

def node_079
	>> node_001 
	-> lunastra.tired() 
	return 
endf 

def node_080
	>> node_001 
	-> lunastra.refresh() 
	return 
endf 

def node_081
	>> node_001 
	if self.in_combat() 
		-> lunastra.lost_search() 
	else 
		-> lunastra.life_search() 
	endif 
	return 
endf 

def node_082
	>> node_001 
	-> lunastra.lost_search() 
	return 
endf 

def node_083
	if self.flying() 
		-> lunastra.threat_short_fly() 
	else 
		-> lunastra.threat_short() 
	endif 
	return 
endf 

def node_084
	if self.flying() 
		-> lunastra.barrier_up_fly() 
		-> lunastra.chance_fly() 
	else 
		-> lunastra.barrier_up() 
		-> lunastra.chance() 
	endif 
	return 
endf 

def node_085
	self.targetArea(target_area.nearest_entrance) 
	>> node_086 
	return 
endf 

def node_086
	if function#5A(20) 
		>> node_087 
	elif function#5A(21) 
		>> node_087 
	elif function#5A(22) 
		>> node_087 
	elif function#5A(23) 
		>> node_087 
	elif function#5A(24) 
		>> node_087 
	elif function#5A(25) 
		>> node_087 
	elif function#5A(30) 
		>> node_088 
	elif function#5A(31) 
		>> node_088 
	elif function#5A(32) 
		>> node_088 
	elif function#5A(33) 
		>> node_088 
	elif function#5A(34) 
		>> node_088 
	elif function#5A(35) 
		>> node_088 
	else 
		>> node_089 
	endif 
	return 
endf 

def node_087
	if self.distance_3d_to_target().leq(15000) 
		>> node_001 
		>> node_090 
	else 
		>> node_089 
	endif 
	return 
endf 

def node_088
	if self.distance_3d_to_target().leq(15000) 
		>> node_002 
		>> node_090 
	else 
		>> node_089 
	endif 
	return 
endf 

def node_089
	if function#AD() 
		>> node_090 
	else 
		>> node_091 
	endif 
	return 
endf 

def node_090
	if function#5A(10) 
		>> node_002 
	elif function#5A(11) 
		>> node_002 
	elif function#5A(12) 
		>> node_002 
	elif function#5A(13) 
		>> node_002 
	elif function#5A(14) 
		>> node_002 
	elif function#5A(15) 
		>> node_002 
	elif function#5A(30) 
		>> node_002 
	elif function#5A(31) 
		>> node_002 
	elif function#5A(32) 
		>> node_002 
	elif function#5A(33) 
		>> node_002 
	elif function#5A(34) 
		>> node_002 
	elif function#5A(35) 
		>> node_002 
	else 
		>> node_001 
	endif 
	if self.flying() 
		>> node_056 
	else 
		>> node_041 
	endif 
	return 
endf 

def node_091
	>> node_092 
	>> node_093 
	>> node_094 
	>> node_095 
	return 
endf 

def node_092
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_057 
	else 
		self.targetArea(target_area.area_center) 
		>> node_042 
		self.targetArea(target_area.area_aerial_center) 
		>> node_069 
	endif 
	return 
endf 

def node_093
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		self.targetArea(40) 
		>> node_055 
	else 
		self.targetArea(39) 
		>> node_043 
	endif 
	return 
endf 

def node_094
	if function#5A(10) 
	elif function#5A(11) 
	elif function#5A(12) 
	elif function#5A(13) 
	elif function#5A(14) 
	elif function#5A(15) 
	elif function#5A(30) 
	elif function#5A(31) 
	elif function#5A(32) 
	elif function#5A(33) 
	elif function#5A(34) 
	elif function#5A(35) 
	else 
		if self.flying() 
			self.targetArea(target_area.area_center) 
			>> node_001 
		else 
		endif 
	endif 
	return 
endf 

def node_095
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		>> node_056 
	else 
		>> node_041 
	endif 
	return 
endf 

def node_096
	if function#C2() 
		self.targetArea(target_area.next_exit) 
	else 
		self.targetArea(14) 
	endif 
	if function#AD() 
		>> node_097 
	else 
		>> node_098 
	endif 
	>> node_102 
	return 
endf 

def node_097
	if self.flying() 
		self.targetArea(40) 
		>> node_056 
	else 
		>> node_045 
	endif 
	return 
endf 

def node_098
	>> node_099 
	>> node_101 
	return 
endf 

def node_099
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_057 
	else 
		self.targetArea(target_area.area_aerial_center) 
		>> node_069 
	endif 
	return 
endf 

def node_100
	self.targetArea(target_area.area_center) 
	>> node_045 
	self.targetArea(target_area.area_aerial_center) 
	>> node_069 
	return 
endf 

def node_101
	if function#C2() 
		self.targetArea(target_area.next_exit) 
	else 
		self.targetArea(14) 
	endif 
	if self.flying() 
		self.targetArea(40) 
		>> node_060 
	else 
		>> node_045 
	endif 
	return 
endf 

def node_102
	self.targetArea(target_area.area_center) 
	if self.flying() 
		if self.fatigued() 
			>> node_001 
		else 
			>> node_071 
		endif 
	else 
	endif 
	return 
endf 

def node_103
	self.targetArea(24) 
	if function#AD() 
		>> node_104 
	else 
		>> node_105 
	endif 
	return 
endf 

def node_104
	>> node_001 
	self.targetEnemy(24) 
	>> node_044 
	return 
endf 

def node_105
	>> node_106 
	>> node_107 
	>> node_108 
	>> node_109 
	return 
endf 

def node_106
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_051 
	else 
		self.targetArea(target_area.area_center) 
		>> node_044 
		self.targetArea(target_area.area_aerial_center) 
		>> node_002 
	endif 
	return 
endf 

def node_107
	self.targetArea(24) 
	if self.flying() 
		self.targetArea(40) 
		>> node_050 
	else 
		self.targetArea(39) 
		>> node_044 
	endif 
	return 
endf 

def node_108
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_001 
	else 
	endif 
	return 
endf 

def node_109
	if self.flying() 
	else 
		self.targetArea(24) 
		>> node_044 
	endif 
	return 
endf 

def node_110
	if function#AD() 
		>> node_111 
	else 
		>> node_112 
	endif 
	return 
endf 

def node_111
	if self.flying() 
		>> node_065 
	else 
		if self.in_combat() 
			>> node_045 
		else 
			>> node_040 
		endif 
	endif 
	return 
endf 

def node_112
	>> node_113 
	>> node_114 
	>> node_115 
	return 
endf 

def node_113
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_061 
	else 
		self.targetArea(target_area.area_center) 
		if self.in_combat() 
			>> node_045 
		else 
			>> node_040 
		endif 
		self.targetArea(target_area.area_aerial_center) 
		>> node_069 
	endif 
	return 
endf 

def node_114
	if self.flying() 
		self.targetArea(40) 
		>> node_060 
	else 
		self.targetArea(39) 
		if self.in_combat() 
			>> node_045 
		else 
			>> node_040 
		endif 
	endif 
	return 
endf 

def node_115
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_001 
	else 
	endif 
	return 
endf 

def node_116
	self.targetArea(target_area.area_center) 
	if self.flying() 
		if self.fatigued() 
			>> node_001 
		else 
			>> node_071 
		endif 
	else 
	endif 
	return 
endf 

def node_117
	if self.flying() 
		>> node_065 
	else 
		if self.in_combat() 
			>> node_045 
		else 
			>> node_040 
		endif 
	endif 
	return 
endf 

def node_118
	if self.flying() 
		-> lunastra.turn_fly() 
	else 
		-> lunastra.turn() 
	endif 
	return 
endf 

def node_119
	if self.angle_2d_cw_between(15,345) 
		>> node_118 
	else 
	endif 
	return 
endf 

def node_120
	if self.angle_2d_cw_between(30,330) 
		>> node_118 
	else 
	endif 
	return 
endf 

def node_121
	if self.angle_2d_cw_between(60,300) 
		>> node_118 
	else 
	endif 
	return 
endf 

def node_122
	if self.angle_2d_cw_between(90,270) 
		>> node_118 
	else 
	endif 
	return 
endf 

def node_123
	if self.flying() 
		>> node_209 
	else 
		-> lunastra.quick_turn() 
	endif 
	return 
endf 

def node_124
	if self.angle_2d_cw_between(15,345) 
		>> node_123 
	else 
	endif 
	return 
endf 

def node_125
	if self.angle_2d_cw_between(30,330) 
		>> node_123 
	else 
	endif 
	return 
endf 

def node_126
	if self.angle_2d_cw_between(60,300) 
		>> node_123 
	else 
	endif 
	return 
endf 

def node_127
	if self.angle_2d_cw_between(90,270) 
		>> node_123 
	else 
	endif 
	return 
endf 

def node_128
	>> node_001 
	-> lunastra.lost_search() 
	return 
endf 

def node_129
	>> node_001 
	-> lunastra.lost_search() 
	return 
endf 

def node_130
	>> node_001 
	random (50) -> lunastra.combat_search() 
	elser (50) -> lunastra.lost_search() 
	endr 
	return 
endf 

def node_131
	>> node_001 
	random (50) -> lunastra.combat_search() 
	elser (50) -> lunastra.lost_search() 
	endr 
	return 
endf 

def node_132
	>> node_001 
	-> lunastra.dash(2,1,0,1000,750) 
	return 
endf 

def node_133
	>> node_001 
	-> lunastra.dash(2,1,0,2000,750) 
	return 
endf 

def node_134
	>> node_001 
	if self.distance_2d_to_target().leq(900) 
		random (65) >> node_009 
		elser (35) >> node_004 
		endr 
	else 
		random (65) >> node_004 
		elser (35) >> node_005 
		endr 
	endif 
	>> node_178 
	-> lunastra.anger_search() 
	return 
endf 

def node_135
	>> node_001 
	if self.target(10) 
		-> lunastra.dash(2,0,0,1000) 
	else 
	endif 
	if self.enraged() 
		>> node_006 
	else 
		>> node_006 
	endif 
	return 
endf 

def node_136
	>> node_001 
	-> lunastra.tired() 
	return 
endf 

def node_137
	if self.distance_3d_to_target().leq(900) 
		>> node_167 
	elif self.distance_3d_to_target().leq(1350) 
		>> node_169 
	else 
	endif 
	return 
endf 

def node_138
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> lunastra.dash(2,0,0,1500) 
	endif 
	return 
endf 

def node_139
	>> node_001 
	-> lunastra.lost_search() 
	return 
endf 

def node_140
	>> node_001 
	>> node_120 
	-> lunastra.life_search() 
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		random (50) 
					self.targetArea(22) @ parameter2:500 
					>> node_120 
					-> lunastra.life_search() 
		elser (50) 
		endr 
	endif 
	return 
endf 

def node_141
	>> node_001 
	self.targetArea(17) 
	>> node_120 
	-> lunastra.marking() 
	return 
endf 

def node_142
	>> node_001 
	self.targetArea(17) 
	random (75) >> node_140 
	elser (25) >> node_120 
				-> lunastra.rest() 
	endr 
	return 
endf 

def node_143
	>> node_001 
	self.targetArea(17) 
	>> node_120 
	-> lunastra.rest() 
	return 
endf 

def node_144
	>> node_001 
	>> node_119 
	-> lunastra.life_search() 
	return 
endf 

def node_145
	>> node_001 
	self.targetArea(17) 
	>> node_120 
	-> lunastra.sleep() 
	return 
endf 

def node_146
	>> node_002 
	>> node_120 
	-> lunastra.combat_search_fly() 
	return 
endf 

def node_147
	>> node_002 
	>> node_120 
	-> lunastra.chance_fly() 
	return 
endf 

def node_148
	>> node_002 
	>> node_120 
	-> lunastra.combat_search_fly() 
	return 
endf 

def node_149
	>> node_002 
	>> node_119 
	-> lunastra.combat_search_fly() 
	return 
endf 

def node_150
	>> node_002 
	>> node_120 
	-> lunastra.combat_search_fly() 
	return 
endf 

def node_151
	>> node_002 
	self.targetEnemy(17) 
	-> lunastra.sudden_drop() 
	return 
endf 

def node_152
	>> node_001 
	>> node_120 
	-> lunastra.dying_sleep() 
	return 
endf 

def node_153
	if self.distance_2d_to_target().leq(500) 
	else 
		-> lunastra.glide_direct_move(1,2,0,400,1500) 
		repeat 
	endif 
	return 
endf 

def node_154
	>> node_002 
	self.targetArea(22) @ parameter2:500 
	-> lunastra.quick_turn_fly() 
	return 
endf 

def node_155
	>> node_002 
	-> lunastra.ride_rage_head() 
	return 
endf 

def node_156
	>> node_002 
	-> lunastra.ride_rage_head_lv2() 
	return 
endf 

def node_157
	>> node_002 
	-> lunastra.ride_rage_body() 
	return 
endf 

def node_158
	>> node_002 
	-> lunastra.ride_rage_body_lv2() 
	return 
endf 

def node_159
	>> node_002 
	if self.distance_2d_to_target().leq(600) 
		>> node_204 
	else 
	endif 
	>> node_153 
	>> node_160 
	return 
endf 

def node_160
	if function#11(1000) 
	else 
		if self.above_area() 
			-> lunastra.short_up_fly() 
		else 
			-> lunastra.short_down_fly() 
		endif 
	endif 
	return 
endf 

def node_161
	>> node_002 
	-> lunastra.ride_rage_crash_head() 
	return 
endf 

def node_162
	>> node_002 
	-> lunastra.ride_rage_crash_head_lv2() 
	return 
endf 

def node_163
	>> node_002 
	-> lunastra.ride_rage_crash_body() 
	return 
endf 

def node_164
	>> node_002 
	-> lunastra.ride_rage_crash_body_lv2() 
	return 
endf 

def node_165
	>> node_002 
	-> lunastra.ride_rage_threat() 
	return 
endf 

def node_166
	>> node_002 
	-> lunastra.ride_tired() 
	return 
endf 

def node_167
	>> node_001 
	-> lunastra.back_turn() 
	return 
endf 

def node_168
	if self.angle_2d_cw_between(15,345) 
		>> node_167 
	else 
	endif 
	return 
endf 

def node_169
	if self.angle_2d_cw_between(30,330) 
		>> node_167 
	else 
	endif 
	return 
endf 

def node_170
	if self.angle_2d_cw_between(45,315) 
		>> node_167 
	else 
	endif 
	return 
endf 

def node_171
	if self.angle_2d_cw_between(60,300) 
		>> node_167 
	else 
	endif 
	return 
endf 

def node_172
	if self.angle_2d_cw_between(90,270) 
		>> node_167 
	else 
	endif 
	return 
endf 

def node_173
	>> node_001 
	-> lunastra.quick_turn() 
	return 
endf 

def node_174
	if self.angle_2d_cw_between(15,345) 
		>> node_173 
	else 
	endif 
	return 
endf 

def node_175
	if self.angle_2d_cw_between(30,330) 
		>> node_173 
	else 
	endif 
	return 
endf 

def node_176
	if self.angle_2d_cw_between(45,315) 
		>> node_173 
	else 
	endif 
	return 
endf 

def node_177
	if self.angle_2d_cw_between(60,300) 
		>> node_173 
	else 
	endif 
	return 
endf 

def node_178
	if self.angle_2d_cw_between(90,270) 
		>> node_173 
	else 
	endif 
	return 
endf 

def node_179
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Gold_Rathian) >> node_184 
					elif self.target_is(em.Silver_Rathalos) >> node_184 
					elif function#30(2) 
						if self.target.in_combat() 
							random (35) >> node_180 
							elser (0) >> node_181 
							elser (10) >> node_182 
							elser (55) >> node_183 
							endr 
						else 
							random (10) >> node_180 
							elser (35) >> node_181 
							elser (0) >> node_182 
							elser (55) >> node_183 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (35) >> node_180 
							elser (10) >> node_181 
							elser (55) >> node_182 
							elser (0) >> node_183 
							endr 
						else 
							random (35) >> node_180 
							elser (55) >> node_181 
							elser (10) >> node_182 
							elser (0) >> node_183 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	endif 
	return 
endf 

def node_180
	return 
endf 

def node_181
	>> node_125 
	>> node_083 
	return 
endf 

def node_182
	if self.flying() 
		if self.distance_2d_to_target().leq(650) 
			random (50) >> node_035 
			elser (10) >> node_034 
			elser (30) >> node_204 
			elser (10) >> node_195 
			endr 
		else 
			random (20) >> node_035 
			elser (40) >> node_066 
			elser (10) >> node_195 
			elser (30) >> node_039 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(650) 
			random (40) >> node_012 
			elser (30) >> node_011 
			elser (20) >> node_014 
			elser (10) >> node_036 
			endr 
		else 
			random (30) >> node_012 
			elser (40) >> node_010 
			elser (10) >> node_036 
			elser (20) >> node_048 
						>> node_011 
			endr 
		endif 
	endif 
	return 
endf 

def node_183
	self.force_area_change2() 
	return 
endf 

def node_184
	if self.target.in_combat() >> node_182 
	endif 
	>> node_183 
	return 
endf 

def node_185
	function#31(49,1000) 
	self.targetEnemy(target_em.closest_entity) 
	>> node_186 
	return 
endf 

def node_186
	random (10) >> node_181 
	elser (55) >> node_187 
	elser (0) >> node_183 
	elser (35) 
	endr 
	return 
endf 

def node_187
	if self.flying() 
		if self.distance_2d_to_target().leq(650) 
			random (50) >> node_035 
			elser (10) >> node_034 
			elser (30) >> node_204 
			elser (10) >> node_195 
			endr 
		else 
			random (20) >> node_035 
			elser (40) >> node_066 
			elser (10) >> node_195 
			elser (30) >> node_039 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(650) 
			random (40) >> node_012 
			elser (30) >> node_011 
			elser (20) >> node_014 
			elser (10) >> node_036 
			endr 
		else 
			random (30) >> node_012 
			elser (40) >> node_010 
			elser (10) >> node_036 
			elser (20) >> node_048 
						>> node_011 
			endr 
		endif 
	endif 
	return 
endf 

def node_188
	if self.targetEnemy(target_em.any_monster) 
		if self.target_is(em.Teostra) @ parameter2:1 
		elif self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					random (100) >> node_179 
					elser (0) 
					endr 
				endif 
			endif 
		endif 
	elif self.defense_downed() >> node_185 
	endif 
	return 
endf 

def node_189
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Teostra) >> node_190 
					elif self.target_is(em.Kushala_Daora) >> node_191 
					elif self.target_is(em.Nergigante) >> node_191 
					else >> node_179 
					endif 
				endif 
			endif 
		endif 
	elif self.defense_downed() >> node_185 
	endif 
	return 
endf 

def node_190
	if self.target.in_combat() 
		random (70) >> node_193 
		elser (20) >> node_180 
		elser (10) >> node_195 
		elser (0) >> node_183 
		endr 
	else 
		random (80) >> node_180 
		elser (20) >> node_181 
		elser (0) >> node_182 
		elser (0) >> node_183 
		endr 
	endif 
	return 
endf 

def node_191
	if self.target.in_combat() 
		random (50) >> node_194 
		elser (20) >> node_180 
		elser (30) >> node_195 
		elser (0) >> node_183 
		endr 
	else 
		random (60) >> node_180 
		elser (40) >> node_181 
		elser (0) >> node_182 
		elser (0) >> node_183 
		endr 
	endif 
	return 
endf 

def node_192
	*&
	*&
	return 
endf 

def node_193
	if self.distance_2d_to_target().gt(1000) 
		if self.flying() >> node_066 
		else >> node_048 
		endif 
	endif 
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.flying() 
		random (60) >> node_035 
		elser (10) >> node_209 
		elser (30) >> node_195 
		endr 
	else 
		random (60) >> node_012 
		elser (10) >> node_010 
		elser (30) >> node_037 
		endr 
	endif 
	reset 
endf 

def node_194
	if self.flying() 
		if self.distance_2d_to_target().leq(650) 
			random (50) >> node_035 
			elser (10) >> node_034 
			elser (30) >> node_204 
			elser (10) >> node_195 
			endr 
		else 
			random (20) >> node_035 
			elser (40) >> node_066 
			elser (10) >> node_195 
			elser (30) >> node_039 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(650) 
			random (40) >> node_012 
			elser (30) >> node_011 
			elser (20) >> node_014 
			elser (10) >> node_036 
			endr 
		else 
			random (30) >> node_012 
			elser (40) >> node_010 
			elser (10) >> node_036 
			elser (20) >> node_048 
						>> node_011 
			endr 
		endif 
	endif 
	return 
endf 

def node_195
	if self.flying() -> lunastra.chance_fly() 
	else -> lunastra.chance() 
	endif 
	return 
endf 

def node_196
	random (35) 
				self.targetArea(21) @ parameter2:300 
	elser (35) 
				self.targetArea(22) @ parameter2:300 
	elser (15) 
				self.targetArea(21) @ parameter2:650 
	elser (15) 
				self.targetArea(22) @ parameter2:650 
	endr 
	return 
endf 

def node_197
	random (35) 
				self.targetArea(21) @ parameter2:1200 
	elser (35) 
				self.targetArea(22) @ parameter2:1200 
	elser (15) 
				self.targetArea(21) @ parameter2:2000 
	elser (15) 
				self.targetArea(22) @ parameter2:2000 
	endr 
	return 
endf 

def node_198
	random (35) 
				if self.flying() 
					-> lunastra.chance_fly() 
				else 
					-> lunastra.chance() 
				endif 
	elser (65) 
	endr 
	return 
endf 

def node_199
	if self.flying() 
		-> lunastra.chance_fly() 
	else 
		-> lunastra.chance() 
	endif 
	return 
endf 

def node_200
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.target(3) 
	elif self.target(4) 
	elif self.target(0) 
	elif self.target(14) 
	elif self.target(11) 
	elif self.target(12) 
	elif self.vertical_distance_to_target().leq(750) 
		-> lunastra.glide_combat(2,6,0,1500,1000) 
	endif 
	>> node_196 
	return 
endf 

def node_201
	>> node_002 
	if self.in_map(st.Special_Arena).in_area(0) 
		self.targetArea(target_area.area_center) 
	else 
		self.targetArea(19) 
	endif 
	>> node_039 
	return 
endf 

def node_202
	if self.distance_2d_to_target().leq(300) 
		>> node_124 
		>> node_208 
		>> node_034 
	elif self.distance_2d_to_target().leq(3250) 
		random (30) 
					>> node_124 
					>> node_035 
		elser (30) 
					>> node_076 
					>> node_201 
		elser (40) 
					>> node_124 
					>> node_034 
		endr 
	else 
		>> node_200 
		>> node_119 
	endif 
	return 
endf 

def node_203
	random (30) -> lunastra.side_wing_attack() 
	elser (70) -> lunastra.heat_wind_blow() 
	endr 
	return 
endf 

def node_204
	>> node_002 
	-> lunastra.back_step_fly() 
	return 
endf 

def node_205
	if self.angle_2d_cw_between(15,345) 
		>> node_204 
	else 
	endif 
	return 
endf 

def node_206
	if self.angle_2d_cw_between(30,330) 
		>> node_204 
	else 
	endif 
	return 
endf 

def node_207
	if self.angle_2d_cw_between(45,315) 
		>> node_204 
	else 
	endif 
	return 
endf 

def node_208
	if self.angle_2d_cw_between(90,270) 
		>> node_204 
	else 
	endif 
	return 
endf 

def node_209
	if self.angle_2d_cw_between(0,180) 
		-> lunastra.quick_turn_fly() 
	else 
		-> lunastra.quick_turn_fly() 
	endif 
	return 
endf 

def node_210
	if self.angle_2d_cw_between(15,345) 
		>> node_209 
	else 
	endif 
	return 
endf 

def node_211
	if self.angle_2d_cw_between(30,330) 
		>> node_209 
	else 
	endif 
	return 
endf 

def node_212
	if self.angle_2d_cw_between(45,315) 
		>> node_209 
	else 
	endif 
	return 
endf 

def node_213
	if self.angle_2d_cw_between(90,270) 
		>> node_209 
	else 
	endif 
	return 
endf 

def node_214
	>> node_001 
	>> node_125 
	if self.flying() 
		-> lunastra.chance_fly() 
	else 
		-> lunastra.chance() 
	endif 
	return 
endf 

def node_215
	>> node_001 
	if self.targetEnemy(target_em.any_monster) 
		random (20) >> node_125 
		elser (80) 
		endr 
	else 
	endif 
	random (60) -> lunastra.chance() 
	elser (10) -> lunastra.lost_search() 
	elser (30) -> lunastra.combat_search() 
	endr 
	return 
endf 

def node_216
	>> node_001 
	>> node_125 
	random (40) -> lunastra.chance() 
	elser (20) -> lunastra.lost_search() 
	elser (40) -> lunastra.combat_search() 
	elser (0) -> lunastra.threat_short() 
	endr 
	return 
endf 

def node_217
	>> node_001 
	>> node_120 
	-> lunastra.life_search() 
	return 
endf 

def node_218
	>> node_001 
	self.targetEnemy(58) 
	random (0) >> node_219 
	elser (100) 
	endr 
	self.targetEnemy(22) @ parameter2:2000 
	random (40) >> node_120 
	elser (60) 
	endr 
	random (70) -> lunastra.life_search() 
	elser (30) -> lunastra.marking() 
	endr 
	return 
endf 

def node_219
	-> lunastra.walk(1,2,0,600,1500) 
	return 
endf 

def node_220
	-> lunastra.glide_combat(1,2,0,600,2000) 
	return 
endf 

def node_221
	if self.fatigued() 
		>> node_001 
	else 
	endif 
	return 
endf 

def node_222
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5D() 
		>> node_224 
	elif self.target(3) 
		>> node_225 
	elif self.target(4) 
		>> node_225 
	elif self.target(55) 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_228 
		else 
			>> node_229 
		endif 
	elif self.target(14) 
		>> node_230 
	elif self.target(11) 
		>> node_231 
	elif self.target(12) 
	elif self.target.mudded() >> node_238 
	elif self.flying() 
		if self.above_target() 
			>> node_234 
		elif self.vertical_distance_to_target().leq(750) 
			if self.above_target() 
				>> node_234 
			else 
			endif 
		else 
			>> node_234 
		endif 
	else 
		if self.target(52) 
			>> node_233 
		elif self.vertical_distance_to_target().leq(450) 
		else 
			>> node_233 
		endif 
	endif 
	return 
endf 

def node_223
	if [RegisterVar4 <= 10] 
		[RegisterVar4 |-] 
	elif [RegisterVar4 <= 1] 
		[RegisterVar4 ++] 
	else 
	endif 
	return 
endf 

def node_224
	if self.distance_2d_to_target().leq(1500) 
		if self.angle_2d_cw_between(300,60) 
		else 
			function#5E() 
			>> node_076 
		endif 
	else 
		if self.angle_2d_cw_between(300,60) 
			function#5E() 
			>> node_076 
		else 
			function#5E() 
			>> node_077 
		endif 
	endif 
	return 
endf 

def node_225
	>> node_226 
	>> node_227 
	reset 
endf 

def node_226
	self.targetArea(19) 
	if self.flying() 
		>> node_064 
	else 
		>> node_045 
	endif 
	return 
endf 

def node_227
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_001 
	-> lunastra.lost_search() 
	return 
endf 

def node_228
	if self.flying() 
		>> node_234 
	else 
		>> node_232 
		if self.distance_2d_to_target().leq(1000) 
			if self.target(0) 
				if self.above_target() 
					-> lunastra.jump_attack_wall_up() 
				else 
					-> lunastra.jump_attack_wall_down() 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_229
	if self.flying() 
		>> node_234 
	else 
		>> node_232 
		if self.distance_2d_to_target().leq(1000) 
			if self.target(0) 
				if self.above_target() 
					-> lunastra.jump_attack_wall_up() 
				else 
					-> lunastra.dash(6,2,0,100,1500) 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_230
	if self.flying() 
		>> node_234 
	else 
		>> node_232 
		if self.distance_2d_to_target().leq(2000) 
			if self.target(14) 
				if self.above_target() 
					-> lunastra.jump_attack_wall_up() 
				else 
					-> lunastra.jump_attack_wall_down() 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_231
	if self.flying() 
		>> node_237 
	else 
		>> node_233 
	endif 
	return 
endf 

def node_232
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			-> lunastra.dash(1,2,0,500,1500) 
		endif 
	else 
		-> lunastra.dash(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			-> lunastra.dash(1,2,0,500,1500) 
		endif 
	else 
		-> lunastra.dash(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			-> lunastra.dash(1,2,0,500,1500) 
		endif 
	else 
		-> lunastra.dash(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_233
	if self.distance_3d_to_target().leq(400) 
	else 
		-> lunastra.dash(1,2,0,300,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.dash(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.dash(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_234
	if self.distance_2d_to_target().leq(300) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> lunastra.glide_combat(1,2,0,200,1500) 
		endif 
	else 
		-> lunastra.glide_combat(1,2,0,200,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> lunastra.glide_combat(1,2,0,500,1500) 
		endif 
	else 
		-> lunastra.glide_combat(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> lunastra.glide_combat(1,2,0,500,1500) 
		endif 
	else 
		-> lunastra.glide_combat(1,2,0,500,1500) 
	endif 
	>> node_235 
	return 
endf 

def node_235
	if self.above_target() 
		random (0) >> node_209 
		elser (50) >> node_207 
		elser (50) 
		endr 
		>> node_236 
	elif self.vertical_distance_to_target().leq(400) 
		random (0) >> node_209 
		elser (50) >> node_207 
		elser (50) 
		endr 
		>> node_236 
	else 
	endif 
	return 
endf 

def node_236
	>> node_002 
	-> lunastra.short_up_fly() 
	return 
endf 

def node_237
	if self.distance_3d_to_target().leq(300) 
	else 
		-> lunastra.glide_direct_move(1,2,0,200,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.glide_direct_move(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> lunastra.glide_direct_move(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_238
	if self.distance_2d_to_target().gt(1200) >> node_005 
	endif 
	random (50) >> node_010 
	elser (50) >> node_011 
	endr 
	return 
endf 

def node_239
	[RegisterVar0 ++] 
	return 
endf 

def node_240
	[RegisterVar0 |-] 
	return 
endf 

def node_241
	[RegisterVar1 ++] 
	return 
endf 

def node_242
	[RegisterVar1 |-] 
	return 
endf 

def node_243
	if [RegisterVar2 == 0] 
		if self.hp_percent().gt(50) 
			function#C3(100) 
			[RegisterVar2 ++] 
		endif 
	endif 
	return 
endf 

def node_244
	[RegisterVar3 ++] 
	return 
endf 

def node_245
	[RegisterVar3 |-] 
	return 
endf 

def node_246
	[RegisterVar5 ++] 
	return 
endf 

def node_247
	[RegisterVar5 |-] 
	return 
endf 

def node_248
	[RegisterVar6 ++] 
	return 
endf 

def node_249
	[RegisterVar6 ++] 
	[RegisterVar6 ++] 
	[RegisterVar6 ++] 
	[RegisterVar6 ++] 
	[RegisterVar6 ++] 
	return 
endf 

def node_250
	[RegisterVar6 |-] 
	return 
endf 

