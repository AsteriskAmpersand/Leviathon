importactions Nargacuga as nargacuga
importlibrary Global as Global

def node_000 : 8
	>> Global.node_120 
	self.targetArea(21) @ parameter2:700 
	if self.target_on_part(0) >> node_005 
	elif self.target_on_part(1) >> node_005 
	elif self.target_on_part(2) >> node_005 
	elif self.in_combat() 
		self.enraged() >> node_002 => reset 
		self.fatigued() >> node_003 => reset 
		>> node_001 => reset 
	else >> node_004 
	endif 
	reset 
endf 

def node_001 : 9
	random (0) >> Global.node_155 
	elser (20) >> Global.node_111 
	elser (20) >> Global.node_112 
	elser (10) >> Global.node_113 
	elser (15) >> Global.node_114 
	elser (20) >> Global.node_057 
	elser (15) >> Global.node_115 
	endr 
	return 
endf 

def node_002 : 10
	random (0) >> Global.node_155 
	elser (20) >> Global.node_111 
	elser (20) >> Global.node_112 
	elser (15) >> Global.node_113 
	elser (15) >> Global.node_114 
	elser (10) >> Global.node_057 
	elser (20) >> Global.node_115 
	endr 
	return 
endf 

def node_003 : 11
	random (10) >> Global.node_154 
	elser (0) >> Global.node_155 
	elser (20) >> Global.node_111 
	elser (20) >> Global.node_112 
	elser (15) >> Global.node_113 
	elser (20) >> Global.node_114 
	elser (0) >> Global.node_057 
	elser (15) >> Global.node_115 
	endr 
	return 
endf 

def node_004 : 35
	random (10) >> Global.node_155 
	elser (20) >> Global.node_111 
	elser (20) >> Global.node_112 
	elser (20) >> Global.node_113 
	elser (15) >> Global.node_114 
	elser (0) >> Global.node_057 
	elser (15) >> Global.node_115 
	endr 
	return 
endf 

def node_005 : 34
	function#A8() 
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#A9(0,1) 
		self.target_on_part(0) >> node_006 => repeat 
		self.target_on_part(1) >> node_009 => repeat 
		self.target_on_part(2) >> node_012 => repeat 
	elif function#A9(0,2) 
		self.target_on_part(0) >> node_006 => repeat 
		self.target_on_part(1) >> node_009 => repeat 
		self.target_on_part(2) >> node_012 => repeat 
	elif function#A9(0,3) 
		self.target_on_part(0) >> node_018 => repeat 
		self.target_on_part(1) >> node_018 => repeat 
		self.target_on_part(2) >> node_018 => repeat 
	else 
		function#A8(1) 
		return 
	endif 
	return 
endf 

def node_006 : 32
	if self.mounted() 
		>> node_007 
	else 
		>> node_008 
	endif 
	return 
endf 

def node_007 : 31
	>> Global.node_012 
	return 
endf 

def node_008 : 30
	-> nargacuga.ride_rage_head() 
	return 
endf 

def node_009 : 29
	if self.mounted() 
		>> node_010 
	else 
		>> node_011 
	endif 
	return 
endf 

def node_010 : 28
	>> Global.node_014 
	return 
endf 

def node_011 : 27
	-> nargacuga.ride_rage_back() 
	return 
endf 

def node_012 : 26
	if self.mounted() 
		>> node_013 
	else 
		>> node_014 
	endif 
	return 
endf 

def node_013 : 25
	>> Global.node_015 
	return 
endf 

def node_014 : 24
	-> nargacuga.ride_rage_tail() 
	return 
endf 

def node_015 : 23
	>> node_020 
	>> Global.node_043 
	return 
endf 

def node_016 : 22
	if function#3B() 
		if self.mount_staggered_twice() 
			>> node_017 
		else 
		endif 
	else 
		if self.mount_finisher_ready() 
			if self.mounted() 
				random (65) >> node_017 
				elser (35) 
				endr 
			else 
				random (100) >> node_017 
				elser (0) 
				endr 
			endif 
		elif self.mount_stabbed() 
			if self.mounted() 
				random (50) >> node_017 
				elser (50) 
				endr 
			else 
				random (100) >> node_017 
				elser (0) 
				endr 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_017 : 21
	-> nargacuga.ride_tired() 
	return 
endf 

def node_018 : 20
	if self.mounted() 
		>> node_019 
	else 
	endif 
	return 
endf 

def node_019 : 19
	-> nargacuga.wait() 
	return 
endf 

def node_020 : 18
	random (20) >> node_021 
	elser (80) >> node_022 
	endr 
	>> node_026 
	return 
endf 

def node_021 : 17
	self.targetEnemy(21) @ parameter2:1000 
	return 
endf 

def node_022 : 16
	self.targetEnemy(22) @ parameter2:1000 
	return 
endf 

def node_023 : 15
	random (48) >> node_024 
	elser (52) >> node_025 
	endr 
	return 
endf 

def node_024 : 14
	self.targetEnemy(12) @ parameter2:1000 
	return 
endf 

def node_025 : 13
	self.targetEnemy(11) @ parameter2:1000 
	return 
endf 

def node_026 : 12
	if self.angular_17(300,60) 
		-> nargacuga.turn_quick() 
	else 
	endif 
	return 
endf 

