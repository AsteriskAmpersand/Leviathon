importactions Nargacuga as nargacuga
importlibrary Global as Global

def node_000
	>> Global.node_120 
	if self.fatigued() 
		random (30) >> Global.node_154 
		elser (70) 
		endr 
	else 
	endif 
	if self.mounted() 
		random (55) >> node_001 
		elser (45) >> node_002 
		endr 
	else 
		random (40) >> node_001 
		elser (60) >> node_002 
		endr 
	endif 
	reset 
endf 

def node_001
	>> node_018 
	[$U |-] 
	self.targetEnemy(target_em.random_player_or_cat) 
	if [$U += 1] 
		self.target_on_part(0) >> node_003 => repeat 
		self.target_on_part(1) >> node_006 => repeat 
		self.target_on_part(2) >> node_009 => repeat 
	elif [$U += 2] 
		self.target_on_part(0) >> node_003 => repeat 
		self.target_on_part(1) >> node_006 => repeat 
		self.target_on_part(2) >> node_009 => repeat 
	elif [$U += 3] 
		>> node_012 => repeat 
	elif [$U += 4] 
		self.target_on_part(0) >> node_020 => repeat 
		self.target_on_part(1) >> node_020 => repeat 
		self.target_on_part(2) >> node_020 => repeat 
	else 
		[$U ++] 
		return 
	endif 
	return 
endf 

def node_002
	>> node_018 
	[$U |-] 
	self.targetEnemy(target_em.random_player_or_cat) 
	if [$U += 1] 
		>> node_012 => repeat 
	elif [$U += 2] 
		self.target_on_part(0) >> node_003 => repeat 
		self.target_on_part(1) >> node_006 => repeat 
		self.target_on_part(2) >> node_009 => repeat 
	elif [$U += 3] 
		>> node_012 => repeat 
	elif [$U += 4] 
		self.target_on_part(0) >> node_020 => repeat 
		self.target_on_part(1) >> node_020 => repeat 
		self.target_on_part(2) >> node_020 => repeat 
	else 
		[$U ++] 
		return 
	endif 
	return 
endf 

def node_003
	if self.mounted() 
		>> node_004 
	else 
		>> node_005 
	endif 
	return 
endf 

def node_004
	>> Global.node_012 
	return 
endf 

def node_005
	-> nargacuga.ride_rage_head() 
	return 
endf 

def node_006
	if self.mounted() 
		>> node_007 
	else 
		>> node_008 
	endif 
	return 
endf 

def node_007
	>> Global.node_014 
	return 
endf 

def node_008
	-> nargacuga.ride_rage_back() 
	return 
endf 

def node_009
	if self.mounted() 
		>> node_010 
	else 
		>> node_011 
	endif 
	return 
endf 

def node_010
	>> Global.node_015 
	return 
endf 

def node_011
	-> nargacuga.ride_rage_tail() 
	return 
endf 

def node_012
	if self.mounted() 
		>> node_013 
	else 
		>> node_014 
	endif 
	return 
endf 

def node_013
	if function#29() 
		self.targetArea(7) 
		>> node_016 
		self.targetArea(15) 
		self.target_on_part(0) -> nargacuga.ride_rage_crash_head_min() => return 
		self.target_on_part(1) -> nargacuga.ride_rage_crash_back_min() => return 
		self.target_on_part(2) -> nargacuga.ride_rage_crash_tail_min() => return 
	else 
		self.target_on_part(0) >> node_005 => return 
		self.target_on_part(1) >> node_008 => return 
		self.target_on_part(2) >> node_011 => return 
	endif 
	return 
endf 

def node_014
	if function#29() 
		self.targetArea(7) 
		>> node_016 
		self.targetArea(15) 
		self.target_on_part(0) -> nargacuga.ride_rage_crash_head_max() => return 
		self.target_on_part(1) -> nargacuga.ride_rage_crash_back_max() => return 
		self.target_on_part(2) -> nargacuga.ride_rage_crash_tail_max() => return 
	else 
		>> node_015 => return 
	endif 
	return 
endf 

def node_015
	>> node_022 
	>> Global.node_043 
	return 
endf 

def node_016
	if self.distance_2d_to_target().leq(500) 
		>> Global.node_007 
	elif self.distance_2d_to_target().gt(4000) 
		if self.vertical_distance_to_target().leq(1000) 
			>> node_017 
		else 
		endif 
		>> Global.node_182 
		repeat 
	else 
	endif 
	if self.in_combat() 
		-> nargacuga.dash_combat(1,0,0,500) 
	else 
		-> nargacuga.dash(1,0,0,500) 
	endif 
	return 
endf 

def node_017
	>> Global.node_002 
	>> Global.node_057 
	return 
endf 

def node_018
	if function#3B() 
		if self.mount_staggered_twice() 
			>> node_019 
		else 
		endif 
	else 
		if self.mount_finisher_ready() 
			if self.mounted() 
				random (65) >> node_019 
				elser (35) 
				endr 
			else 
				random (100) >> node_019 
				elser (0) 
				endr 
			endif 
		elif self.mount_stabbed() 
			if self.mounted() 
				random (50) >> node_019 
				elser (50) 
				endr 
			else 
				random (100) >> node_019 
				elser (0) 
				endr 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_019
	-> nargacuga.ride_tired() 
	return 
endf 

def node_020
	if self.mounted() 
		>> node_021 
	else 
	endif 
	return 
endf 

def node_021
	-> nargacuga.wait() 
	return 
endf 

def node_022
	random (20) >> node_023 
	elser (80) >> node_024 
	endr 
	>> node_028 
	return 
endf 

def node_023
	self.targetEnemy(21) @ parameter2:1000 
	return 
endf 

def node_024
	self.targetEnemy(22) @ parameter2:1000 
	return 
endf 

def node_025
	random (48) >> node_026 
	elser (52) >> node_027 
	endr 
	return 
endf 

def node_026
	self.targetEnemy(12) @ parameter2:1000 
	return 
endf 

def node_027
	self.targetEnemy(11) @ parameter2:1000 
	return 
endf 

def node_028
	if self.angular_17(300,60) 
		-> nargacuga.turn_quick() 
	else 
	endif 
	return 
endf 

