importactions Anjanath as anjanath
importlibrary Global as Global

def node_000
	self.targetEnemy(21) @ parameter2:700 
	function#41() >> Global.node_040 => reset 
	self.enraged() >> node_002 => reset 
	self.fatigued() >> node_003 => reset 
	>> node_001 => reset 
endf 

def node_001
	if self.target_on_part(0) 
		random (42) >> node_011 
		elser (33) >> node_012 
		elser (25) >> node_017 
		endr 
	elif self.target_on_part(1) 
		random (42) >> node_013 
		elser (33) >> node_014 
		elser (25) >> node_017 
		endr 
	elif self.target_on_part(2) 
		random (42) >> node_015 
		elser (33) >> node_016 
		elser (25) >> node_017 
		endr 
	else 
		if self.current_quest().is_rank(rank.MR) 
			random (25) >> node_005 
			elser (15) >> Global.node_032 
			elser (20) >> node_006 
			elser (10) >> node_007 
			elser (15) >> Global.node_033 
			elser (15) >> node_008 
			endr 
		else 
			random (45) >> node_005 
			elser (25) >> node_006 
			elser (20) >> node_007 
			elser (10) >> node_008 
			endr 
		endif 
	endif 
	return 
endf 

def node_002
	if self.target_on_part(0) 
		random (47) >> node_011 
		elser (38) >> node_012 
		elser (15) >> node_017 
		endr 
	elif self.target_on_part(1) 
		random (47) >> node_013 
		elser (38) >> node_014 
		elser (15) >> node_017 
		endr 
	elif self.target_on_part(2) 
		random (47) >> node_015 
		elser (38) >> node_016 
		elser (15) >> node_017 
		endr 
	else 
		if self.current_quest().is_rank(rank.MR) 
			random (25) >> node_005 
			elser (15) >> node_006 
			elser (10) >> node_007 
			elser (15) >> node_008 
			elser (15) >> Global.node_032 
			elser (15) >> Global.node_033 
			elser (5) >> node_009 
			endr 
		else 
			random (45) >> node_005 
			elser (20) >> node_006 
			elser (15) >> node_007 
			elser (15) >> node_008 
			elser (5) >> node_009 
			endr 
		endif 
	endif 
	return 
endf 

def node_003
	if self.target_on_part(0) 
		random (37) >> node_011 
		elser (28) >> node_012 
		elser (35) >> node_017 
		endr 
	elif self.target_on_part(1) 
		random (37) >> node_013 
		elser (28) >> node_014 
		elser (35) >> node_017 
		endr 
	elif self.target_on_part(2) 
		random (37) >> node_015 
		elser (28) >> node_016 
		elser (35) >> node_017 
		endr 
	else 
		if self.current_quest().is_rank(rank.MR) 
			random (40) >> node_005 
			elser (30) >> node_006 
			elser (0) >> node_007 
			elser (15) >> node_008 
			elser (15) >> node_010 
			endr 
		else 
			random (40) >> node_005 
			elser (30) >> node_006 
			elser (0) >> node_007 
			elser (5) >> node_008 
			elser (25) >> node_010 
			endr 
		endif 
	endif 
	return 
endf 

def node_004
endf 

def node_005
	-> anjanath.bite() 
	return 
endf 

def node_006
	-> anjanath.ride_rage_tail() 
	return 
endf 

def node_007
	-> anjanath.combat_search() 
	return 
endf 

def node_008
	-> anjanath.tail_wind() 
	return 
endf 

def node_009
	-> anjanath.turn() 
	-> anjanath.jump_attack() 
	return 
endf 

def node_010
	-> anjanath.tired() 
	return 
endf 

def node_011
	-> anjanath.side_bite() 
	return 
endf 

def node_012
	>> node_018 
	-> anjanath.ride_rage_head() 
	return 
endf 

def node_013
	>> node_018 
	-> anjanath.side_tackle() 
	return 
endf 

def node_014
	-> anjanath.ride_rage_body() 
	return 
endf 

def node_015
	-> anjanath.ride_rage_tail() 
	return 
endf 

def node_016
	-> anjanath.ride_rage_tail_lv2() 
	return 
endf 

def node_017
	-> anjanath.wait() 
	return 
endf 

def node_018
	random (55) >> node_019 
	elser (45) >> node_020 
	endr 
	if self.angular_17(300,60) 
		-> anjanath.turn() 
	else 
	endif 
	return 
endf 

def node_019
	self.targetEnemy(21) @ parameter2:1000 
	return 
endf 

def node_020
	self.targetEnemy(22) @ parameter2:1000 
	return 
endf 

