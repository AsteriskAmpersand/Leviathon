importactions Namielle as namielle

def node_000
	conclude 
endf 

def node_001
	if self.angular_15(90,0) 
		random (50) >> node_007 
		elser (50) >> node_030 
					>> node_002 
		endr 
	else 
		if self.distance_2d_to_target().leq(800) >> node_004 
		else >> node_002 
		endif 
	endif 
	return 
endf 

def node_002
	>> node_261 
	if self.distance_2d_to_target().leq(800) >> node_043 
		if self.distance_2d_to_target().leq(800) >> node_004 
			return 
		endif 
	else >> node_160 
	endif 
	-> namielle.water_breath_double_tow() 
	return 
endf 

def node_003
	>> node_261 
	>> node_261 
	if self.distance_2d_to_target().leq(800) >> node_043 
	else >> node_160 
	endif 
	-> namielle.spark_jump_attack() 
	return 
endf 

def node_004
	-> namielle.water_breath_double_one() 
	return 
endf 

def node_005
	if self.angle_2d_cw_between(0,180) -> namielle.water_flow_in() 
	else -> namielle.turn_water_spray() 
	endif 
	return 
endf 

def node_006
	if function#107() -> namielle.quick_claw_attack() 
	else >> node_012 
	endif 
	return 
endf 

def node_007
	if self.angular_15(60,0) -> namielle.water_quick_breath() 
	else >> node_002 
	endif 
	return 
endf 

def node_008
	>> node_014 
	return 
endf 

def node_009
	-> namielle.water_claw_attack_l() 
	return 
endf 

def node_010
	if function#107() -> namielle.water_claw_attack_r() 
	else >> node_012 
	endif 
	return 
endf 

def node_011
	>> node_068 
	if function#106() 
		function#102() 
		>> node_083 
		if function#107() 
			>> node_262 
			if self.current_quest().is_rank(rank.AT) -> namielle.water_charge_end() 
			elif function#B9() -> namielle.water_charge_end() 
			else -> namielle.spark_charge() 
			endif 
		else -> namielle.chance() 
		endif 
	else -> namielle.chance() 
		>> node_262 
	endif 
	self.targetEnemy(target_em.random_player_or_cat) 
	return 
endf 

def node_012
	if self.distance_2d_to_target().leq(800) 
		if self.distance_2d_to_target().leq(400) >> node_043 
		endif 
		>> node_014 
	else >> node_013 
	endif 
	return 
endf 

def node_013
	>> node_261 
	if self.current_quest().is_rank(rank.AT) 
		if self.enraged() -> namielle.water_laser_s_attack_second() 
		else -> namielle.water_laser_s_rev_attack_second() 
		endif 
	else -> namielle.water_laser_s_attack_second() 
	endif 
	return 
endf 

def node_014
	>> node_163 
	>> node_261 
	if self.angle_2d_cw_between(0,180) -> namielle.water_laser_3way() 
	else -> namielle.water_slide_breath() 
	endif 
	return 
endf 

def node_015
	>> node_068 
	>> node_161 
	-> namielle.special_spark() 
	return 
endf 

def node_016
	>> node_068 
	if self.distance_2d_to_target().gt(2000) 
		if function#104(1) >> node_030 
		else >> node_084 
		endif 
	endif 
	>> node_261 
	>> node_163 
	-> namielle.all_direction_wave() 
	if self.current_quest().is_rank(rank.AT) 
	elif self.enraged() 
	else -> namielle.chance() 
	endif 
	return 
endf 

def node_017
	if self.distance_2d_to_target().leq(1000) >> node_018 
	elif self.distance_2d_to_target().gt(2000) >> node_019 
	elif self.angle_2d_cw_between(45,135) >> node_020 
	elif self.angle_2d_cw_between(225,315) >> node_021 
	else >> node_019 
	endif 
	return 
endf 

def node_018
	-> namielle.spark_wing_attack_r() 
	return 
endf 

def node_019
	-> namielle.spark_wing_attack_l() 
	return 
endf 

def node_020
	-> namielle.water_charge_legendary_start() 
	return 
endf 

def node_021
	-> namielle.water_charge_start() 
	return 
endf 

def node_022
	self.targetEnemy(50) 
	>> node_068 
	if self.distance_2d_to_target().gt(1200) >> node_084 
	endif 
	-> namielle.body_press() 
	>> node_260 
	>> node_262 
	return 
endf 

def node_023
	-> namielle.threat_short_fly() 
	return 
endf 

def node_024
	>> node_069 
	>> node_265 
	-> namielle.rush_fly_to_fly_start() 
	return 
endf 

def node_025
	>> node_069 
	function#105() 
	-> namielle.rush_fly_to_fly_start() 
	>> node_265 
	self.targetEnemy(target_em.random_player_or_cat) 
	return 
endf 

def node_026
	>> node_069 
	>> node_266 
	-> namielle.rush_fly_to_turn_start() 
	-> namielle.chance() 
	return 
endf 

def node_027
	>> node_069 
	function#105() 
	-> namielle.rush_fly_to_turn_start() 
	-> namielle.chance() 
	>> node_266 
	self.targetEnemy(target_em.random_player_or_cat) 
	return 
endf 

def node_028
	>> node_069 
	-> namielle.rush_fly_to_ground_turn() 
	>> node_265 
	-> namielle.water_laser_s_start() 
	>> node_265 
	-> namielle.water_laser_s_attack_fast() 
	>> node_265 
	-> namielle.rush_fly_to_turn() 
	>> node_266 
	-> namielle.chance() 
	return 
endf 

def node_029
	if self.flying() -> namielle.water_laser_s_rev_attack_fast() 
	else -> namielle.water_laser_s_rev_start() 
	endif 
	>> node_260 
	if function#B9() 
	else 
		if self.flying() -> namielle.chance_fly() 
		else -> namielle.chance() 
		endif 
	endif 
	return 
endf 

def node_030
	if self.angle_2d_cw_between(0,180) >> node_032 
	else >> node_031 
	endif 
	return 
endf 

def node_031
	if function#104(2) >> node_034 
	elif function#107() >> node_034 
	elif function#103(1) >> node_012 
	else >> node_012 
	endif 
	return 
endf 

def node_032
	if function#104(2) >> node_035 
	elif function#107() >> node_035 
	elif function#103(1) >> node_012 
	else >> node_012 
	endif 
	return 
endf 

def node_033
	if function#104(2) >> node_036 
	elif function#107() >> node_036 
	else >> node_002 
	endif 
	return 
endf 

def node_034
	-> namielle.turn_spin_quick_start_l() 
	return 
endf 

def node_035
	-> namielle.turn_spin_quick_start_r() 
	return 
endf 

def node_036
	if self.distance_2d_to_target().leq(800) 
		if self.angle_2d_cw_between(0,45) -> namielle.special_spark_end() 
			return 
		endif 
	endif 
	>> node_002 
	return 
endf 

def node_037
	if self.angle_2d_cw_between(0,180) >> node_039 
	else >> node_038 
	endif 
	return 
endf 

def node_038
	-> namielle.turn_jump_l() 
	return 
endf 

def node_039
	-> namielle.turn_jump_r() 
	return 
endf 

def node_040
	if self.angle_2d_cw_between(0,180) >> node_041 
	else >> node_042 
	endif 
	return 
endf 

def node_041
	if self.angle_2d_ccw_between(45,0) 
		if self.distance_2d_to_target().leq(1000) -> namielle.turn_step_front_l() 
		else -> namielle.turn_step_front_l() 
		endif 
	elif self.angle_2d_cw_between(135,225) -> namielle.turn_step_back_l() 
	else -> namielle.turn_step_side_l() 
	endif 
	return 
endf 

def node_042
	if self.angle_2d_ccw_between(45,0) 
		if self.distance_2d_to_target().leq(1000) -> namielle.turn_step_front_r() 
		else -> namielle.turn_step_front_r() 
		endif 
	elif self.angle_2d_cw_between(135,225) -> namielle.turn_step_back_r() 
	else -> namielle.turn_step_side_r() 
	endif 
	return 
endf 

def node_043
	if self.angle_2d_cw_between(0,180) -> namielle.turn_step_side_r() 
	else -> namielle.turn_step_side_l() 
	endif 
	return 
endf 

def node_044
	if self.angle_2d_cw_between(0,180) -> namielle.turn_step_l_fly() 
	else -> namielle.turn_step_r_fly() 
	endif 
	return 
endf 

def node_045
	if self.angle_2d_cw_between(0,180) -> namielle.turn_step_r_fly() 
	else -> namielle.turn_step_l_fly() 
	endif 
	return 
endf 

def node_046
	>> node_030 
	>> node_014 
	return 
endf 

def node_047
	>> node_030 
	>> node_013 
	return 
endf 

def node_048
	>> node_030 
	>> node_010 
	return 
endf 

def node_049
	>> node_030 
	>> node_015 
	return 
endf 

def node_050
	>> node_005 
	if function#103(2) >> node_019 
	elif function#107() >> node_010 
	else >> node_009 
	endif 
	return 
endf 

def node_051
	>> node_005 
	>> node_016 
	return 
endf 

def node_052
	>> node_005 
	>> node_012 
	return 
endf 

def node_053
	>> node_006 
	>> node_009 
	return 
endf 

def node_054
	>> node_006 
	if function#103(2) >> node_019 
	elif function#107() >> node_010 
	else >> node_009 
	endif 
	return 
endf 

def node_055
	>> node_006 
	>> node_016 
	return 
endf 

def node_056
	>> node_030 
	if self.angle_2d_cw_between(90,270) >> node_007 
	else >> node_010 
	endif 
	return 
endf 

def node_057
	>> node_009 
	>> node_030 
	return 
endf 

def node_058
	>> node_009 
	>> node_030 
	return 
endf 

def node_059
	>> node_012 
	>> node_017 
	return 
endf 

def node_060
	>> node_005 
	>> node_017 
	return 
endf 

def node_061
	>> node_006 
	>> node_017 
	return 
endf 

def node_062
	if self.enraged() 
		if [RegisterVar1 -= 10] >> node_262 
			if self.distance_2d_to_target().leq(1200) >> node_016 
			else >> node_015 
			endif 
		elif [RegisterVar1 -= 5] 
			random (10) >> node_262 
						if self.distance_2d_to_target().leq(1200) >> node_016 
						else >> node_015 
						endif 
			elser (90) 
			endr 
		endif 
	elif function#104(2) 
	elif function#104(1) 
		if [RegisterVar1 -= 10] >> node_011 
		elif [RegisterVar1 -= 5] 
			random (25) >> node_011 
			elser (75) 
			endr 
		endif 
	else 
		if [RegisterVar1 -= 10] >> node_011 
		elif [RegisterVar1 -= 5] 
			random (30) >> node_011 
			elser (70) 
			endr 
		endif 
	endif 
	return 
endf 

def node_063
	if function#104(2) 
	elif function#104(1) 
		if [RegisterVar1 -= 10] >> node_011 
		elif [RegisterVar1 -= 5] 
			random (30) >> node_011 
			elser (70) 
			endr 
		endif 
	else 
		if [RegisterVar1 -= 10] >> node_011 
		elif [RegisterVar1 -= 5] 
			random (50) >> node_011 
			elser (50) 
			endr 
		endif 
	endif 
	return 
endf 

def node_064
	>> node_259 
	if function#B9() 
		if function#103(2) 
		elif function#103(1) 
			if [RegisterVar0 -= 20] 
				if self.in_map(st.Coral_Highlands).in_area(8) 
				elif self.in_map(st.Coral_Highlands).in_area(9) 
				elif self.in_map(st.Coral_Highlands).in_area(11) 
				else 
					>> node_029 
				endif 
			endif 
		elif function#103() 
			if [RegisterVar0 -= 10] 
				>> node_029 
			endif 
		endif 
	else 
		if function#103(2) 
		elif function#103(1) 
			if [RegisterVar0 -= 15] 
				if self.in_map(st.Coral_Highlands).in_area(8) 
				elif self.in_map(st.Coral_Highlands).in_area(9) 
				elif self.in_map(st.Coral_Highlands).in_area(11) 
				else 
					>> node_029 
				endif 
			endif 
		elif function#103() 
			if [RegisterVar0 -= 15] 
				>> node_029 
			endif 
		endif 
	endif 
	return 
endf 

def node_065
	>> node_259 
	if function#103(2) 
	elif function#103(1) 
		if [RegisterVar0 -= 5] 
			>> node_029 
		endif 
	elif function#103() 
		if [RegisterVar0 -= 5] 
			>> node_029 
		endif 
	endif 
	return 
endf 

def node_066
	if function#B9() 
		if function#103(2) 
			if [RegisterVar0 -= 25] 
			elif [RegisterVar0 -= 20] 
				random (20) 
				elser (80) 
							return 
				endr 
			else 
				return 
			endif 
			>> node_022 
			>> node_108 
			self.force_area_change2() 
		endif 
	else 
		if function#103(2) 
			if [RegisterVar0 -= 20] 
			elif [RegisterVar0 -= 15] 
				random (20) 
				elser (80) 
							return 
				endr 
			else 
				return 
			endif 
			>> node_022 
			>> node_108 
			self.force_area_change2() 
		endif 
	endif 
	return 
endf 

def node_067
	if function#103(2) 
		if [RegisterVar0 -= 15] 
		elif [RegisterVar0 -= 10] 
			random (20) 
			elser (80) 
						return 
			endr 
		else 
			return 
		endif 
		>> node_022 
	endif 
	return 
endf 

def node_068
	if self.flying() 
		if function#AF(5000) 
			-> namielle.landing() 
		else 
			>> node_070 
		endif 
	else 
	endif 
	return 
endf 

def node_069
	if self.flying() 
	else 
		-> namielle.take_off() 
	endif 
	return 
endf 

def node_070
	self.targetArea(target_area.area_aerial_center) 
	>> node_097 
	self.targetArea(target_area.area_center) 
	-> namielle.landing() 
	return 
endf 

def node_071
	if self.flying() >> node_102 
	else >> node_085 
	endif 
	return 
endf 

def node_072
	if self.vertical_distance_to_target().gt(500) 
		if self.above_target() -> namielle.short_up_step_fly() 
		else -> namielle.short_down_step_fly() 
		endif 
	endif 
	return 
endf 

def node_073
	if self.distance_3d_to_target().leq(700) 
	else 
		*&
		repeat 
	endif 
	return 
endf 

def node_074
	>> node_215 
	self.targetArea(target_area.nearest_entrance) 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_075
	>> node_215 
	self.targetArea(target_area.area_center) 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_076
	>> node_215 
	self.targetArea(39) 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_077
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.dying_walk(1,2,0,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_078
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_079
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_080
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_081
	if self.distance_2d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_082
	if self.distance_2d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> namielle.dash(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_083
	if self.distance_2d_to_target().leq(500) 
	else 
		-> namielle.dash(6,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> namielle.dash(6,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(500) 
	else 
		-> namielle.dash(6,2,0,500,1500) 
	endif 
	return 
endf 

def node_084
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> namielle.dash(6,2,0,1000,1500) 
	endif 
	return 
endf 

def node_085
	>> node_084 
	>> node_084 
	>> node_084 
	return 
endf 

def node_086
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.dying_walk_fly(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_087
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.dying_glide_direct_move(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_088
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> namielle.dying_glide_direct_move(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_089
	if self.distance_2d_to_target().leq(600) 
	else 
		-> namielle.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_090
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> namielle.glide_combat(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_091
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.glide(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_092
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.glide_direct_move(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_093
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> namielle.glide_direct_move(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_094
	if self.distance_2d_to_target().leq(600) 
	else 
		-> namielle.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_095
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> namielle.glide_combat(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_096
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.glide(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_097
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.glide_direct_move(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_098
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> namielle.glide_direct_move(2,1,0,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_099
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.glide_direct_move(2,1,0,1500,500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.glide_direct_move(2,1,0,1500,500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.glide_direct_move(2,1,0,1500,500) 
	endif 
	return 
endf 

def node_100
	if self.distance_2d_to_target().leq(600) 
	else 
		-> namielle.glide_combat(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_101
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> namielle.glide_combat(2,1,0,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_102
	if self.distance_2d_to_target().leq(600) 
	else 
		-> namielle.glide_combat(2,1,0,1500,500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> namielle.glide_combat(2,1,0,1500,500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> namielle.glide_combat(2,1,0,1500,500) 
	endif 
	return 
endf 

def node_103
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> namielle.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> namielle.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> namielle.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> namielle.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> namielle.glide_direct_move(2,1,0,1500,700) 
	endif 
	return 
endf 

def node_104
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> namielle.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> namielle.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> namielle.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> namielle.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> namielle.glide_combat(2,0,0,1500) 
	endif 
	return 
endf 

def node_105
	>> node_068 
	-> namielle.take_off_switch_pattern_by_dist() 
	>> node_098 
	return 
endf 

def node_106
	>> node_068 
	-> namielle.sudden_rise() 
	return 
endf 

def node_107
	>> node_069 
	-> namielle.sudden_drop() 
	return 
endf 

def node_108
	if self.flying() 
		-> namielle.discover_fly() 
	else 
		-> namielle.discover() 
	endif 
	return 
endf 

def node_109
	if self.flying() 
		-> namielle.discover_fly() 
	else 
		-> namielle.discover() 
	endif 
	return 
endf 

def node_110
	if self.flying() 
		-> namielle.threat_short_fly() 
	else 
		-> namielle.threat_short() 
	endif 
	return 
endf 

def node_111
	if self.flying() 
		-> namielle.lost_search() 
	else 
		-> namielle.combat_search() 
	endif 
	return 
endf 

def node_112
	if [$V += 0] 
		[$V |-] 
		>> node_110 
	else 
	endif 
	return 
endf 

def node_113
	if self.flying() 
		-> namielle.search_fly() 
	else 
		-> namielle.anger_search() 
	endif 
	return 
endf 

def node_114
	if self.flying() 
		-> namielle.search_fly() 
	else 
		-> namielle.lost_search() 
	endif 
	return 
endf 

def node_115
	>> node_068 
	-> namielle.tired() 
	return 
endf 

def node_116
	>> node_068 
	-> namielle.refresh() 
	return 
endf 

def node_117
	>> node_068 
	if self.in_combat() 
		-> namielle.lost_search() 
	else 
		-> namielle.life_search() 
	endif 
	return 
endf 

def node_118
	>> node_068 
	-> namielle.lost_search() 
	return 
endf 

def node_119
	if self.flying() 
		-> namielle.threat_short_fly() 
	else 
		-> namielle.threat_short() 
	endif 
	return 
endf 

def node_120
	if self.flying() 
		-> namielle.dying_walk() 
		-> namielle.chance_fly() 
	else 
		-> namielle.damage_trap_mask_fly() 
		-> namielle.chance() 
	endif 
	return 
endf 

def node_121
	self.targetArea(target_area.nearest_entrance) 
	>> node_122 
	return 
endf 

def node_122
	if function#5A(20) 
		>> node_123 
	elif function#5A(21) 
		>> node_123 
	elif function#5A(22) 
		>> node_123 
	elif function#5A(23) 
		>> node_123 
	elif function#5A(24) 
		>> node_123 
	elif function#5A(25) 
		>> node_123 
	elif function#5A(30) 
		>> node_124 
	elif function#5A(31) 
		>> node_124 
	elif function#5A(32) 
		>> node_124 
	elif function#5A(33) 
		>> node_124 
	elif function#5A(34) 
		>> node_124 
	elif function#5A(35) 
		>> node_124 
	else 
		>> node_125 
	endif 
	return 
endf 

def node_123
	if self.distance_3d_to_target().leq(15000) 
		>> node_068 
		>> node_126 
	else 
		>> node_125 
	endif 
	return 
endf 

def node_124
	if self.distance_3d_to_target().leq(15000) 
		>> node_069 
		>> node_126 
	else 
		>> node_125 
	endif 
	return 
endf 

def node_125
	if function#AD() 
		>> node_126 
	else 
		>> node_127 
	endif 
	return 
endf 

def node_126
	if function#5A(10) 
		>> node_069 
	elif function#5A(11) 
		>> node_069 
	elif function#5A(12) 
		>> node_069 
	elif function#5A(13) 
		>> node_069 
	elif function#5A(14) 
		>> node_069 
	elif function#5A(15) 
		>> node_069 
	elif function#5A(30) 
		>> node_069 
	elif function#5A(31) 
		>> node_069 
	elif function#5A(32) 
		>> node_069 
	elif function#5A(33) 
		>> node_069 
	elif function#5A(34) 
		>> node_069 
	elif function#5A(35) 
		>> node_069 
	else 
		>> node_068 
	endif 
	if self.flying() 
		>> node_092 
	else 
		>> node_074 
	endif 
	return 
endf 

def node_127
	>> node_128 
	>> node_129 
	>> node_130 
	>> node_131 
	return 
endf 

def node_128
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_093 
	else 
		self.targetArea(target_area.area_center) 
		>> node_075 
		self.targetArea(target_area.area_aerial_center) 
		>> node_105 
	endif 
	return 
endf 

def node_129
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		self.targetArea(40) 
		>> node_091 
	else 
		self.targetArea(39) 
		>> node_076 
	endif 
	return 
endf 

def node_130
	if function#5A(10) 
	elif function#5A(11) 
	elif function#5A(12) 
	elif function#5A(13) 
	elif function#5A(14) 
	elif function#5A(15) 
	elif function#5A(30) 
	elif function#5A(31) 
	elif function#5A(32) 
	elif function#5A(33) 
	elif function#5A(34) 
	elif function#5A(35) 
	else 
		if self.flying() 
			self.targetArea(target_area.area_center) 
			>> node_068 
		else 
		endif 
	endif 
	return 
endf 

def node_131
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		>> node_092 
	else 
		>> node_074 
	endif 
	return 
endf 

def node_132
	self.targetArea(14) 
	if function#AD() 
		>> node_133 
	else 
		>> node_134 
	endif 
	>> node_138 
	return 
endf 

def node_133
	if self.flying() 
		self.targetArea(40) 
		>> node_097 
	else 
		>> node_078 
	endif 
	return 
endf 

def node_134
	>> node_135 
	>> node_137 
	return 
endf 

def node_135
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_098 
	else 
		self.targetArea(target_area.area_aerial_center) 
		>> node_105 
	endif 
	return 
endf 

def node_136
	self.targetArea(target_area.area_center) 
	>> node_078 
	self.targetArea(target_area.area_aerial_center) 
	>> node_105 
	return 
endf 

def node_137
	self.targetArea(14) 
	if self.flying() 
		self.targetArea(40) 
		>> node_096 
	else 
		>> node_078 
	endif 
	return 
endf 

def node_138
	self.targetArea(target_area.area_center) 
	if self.flying() 
		if self.fatigued() 
			>> node_068 
		else 
			>> node_107 
		endif 
	else 
	endif 
	return 
endf 

def node_139
	self.targetArea(24) 
	if function#AD() 
		>> node_140 
	else 
		>> node_141 
	endif 
	return 
endf 

def node_140
	>> node_068 
	self.targetArea(24) 
	>> node_077 
	return 
endf 

def node_141
	>> node_142 
	>> node_143 
	>> node_144 
	>> node_145 
	return 
endf 

def node_142
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_088 
	else 
		self.targetArea(target_area.area_center) 
		>> node_077 
		self.targetArea(target_area.area_aerial_center) 
		>> node_069 
	endif 
	return 
endf 

def node_143
	self.targetArea(24) 
	if self.flying() 
		self.targetArea(40) 
		>> node_086 
	else 
		self.targetArea(39) 
		>> node_077 
	endif 
	return 
endf 

def node_144
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_068 
	else 
	endif 
	return 
endf 

def node_145
	if self.flying() 
	else 
		self.targetArea(24) 
		>> node_077 
	endif 
	return 
endf 

def node_146
	if function#AD() 
		>> node_147 
	else 
		>> node_148 
	endif 
	return 
endf 

def node_147
	if self.flying() 
		>> node_101 
	else 
		if self.in_combat() 
			>> node_078 
		else 
			>> node_074 
		endif 
	endif 
	return 
endf 

def node_148
	>> node_149 
	>> node_150 
	>> node_151 
	return 
endf 

def node_149
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_097 
	else 
		self.targetArea(target_area.area_center) 
		if self.in_combat() 
			>> node_078 
		else 
			>> node_074 
		endif 
		self.targetArea(target_area.area_aerial_center) 
		>> node_105 
	endif 
	return 
endf 

def node_150
	if self.flying() 
		self.targetArea(40) 
		>> node_096 
	else 
		self.targetArea(39) 
		if self.in_combat() 
			>> node_078 
		else 
			>> node_074 
		endif 
	endif 
	return 
endf 

def node_151
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_068 
	else 
	endif 
	return 
endf 

def node_152
	self.targetArea(target_area.area_center) 
	if self.flying() 
		if self.fatigued() 
			>> node_068 
		else 
			>> node_107 
		endif 
	else 
	endif 
	return 
endf 

def node_153
	if self.flying() 
		>> node_101 
	else 
		if self.in_combat() 
			>> node_078 
		else 
			>> node_074 
		endif 
	endif 
	return 
endf 

def node_154
	if self.flying() 
		-> namielle.turn_fly() 
	else 
		-> namielle.turn() 
	endif 
	return 
endf 

def node_155
	if self.angle_2d_cw_between(15,345) 
		>> node_154 
	else 
	endif 
	return 
endf 

def node_156
	if self.angle_2d_cw_between(30,330) 
		>> node_154 
	else 
	endif 
	return 
endf 

def node_157
	if self.angle_2d_cw_between(60,300) 
		>> node_154 
	else 
	endif 
	return 
endf 

def node_158
	if self.angle_2d_cw_between(90,270) 
		>> node_154 
	else 
	endif 
	return 
endf 

def node_159
	if self.flying() 
		>> node_230 
	else 
		-> namielle.quick_turn() 
	endif 
	return 
endf 

def node_160
	if self.angle_2d_cw_between(15,345) 
		>> node_159 
	else 
	endif 
	return 
endf 

def node_161
	if self.angle_2d_cw_between(30,330) 
		>> node_159 
	else 
	endif 
	return 
endf 

def node_162
	if self.angle_2d_cw_between(60,300) 
		>> node_159 
	else 
	endif 
	return 
endf 

def node_163
	if self.angle_2d_cw_between(90,270) 
		>> node_159 
	else 
	endif 
	return 
endf 

def node_164
	>> node_068 
	-> namielle.lost_search() 
	return 
endf 

def node_165
	>> node_068 
	-> namielle.lost_search() 
	return 
endf 

def node_166
	>> node_068 
	random (50) -> namielle.combat_search() 
	elser (50) -> namielle.lost_search() 
	endr 
	return 
endf 

def node_167
	>> node_068 
	random (50) -> namielle.combat_search() 
	elser (50) -> namielle.lost_search() 
	endr 
	return 
endf 

def node_168
	>> node_068 
	-> namielle.dash(2,1,0,1000,750) 
	return 
endf 

def node_169
	>> node_068 
	-> namielle.dash(2,1,0,2000,750) 
	return 
endf 

def node_170
	>> node_068 
	if self.distance_2d_to_target().leq(900) 
		random (65) >> node_074 
		elser (35) >> node_074 
		endr 
	else 
		random (65) >> node_074 
		elser (35) >> node_074 
		endr 
	endif 
	>> node_214 
	-> namielle.anger_search() 
	return 
endf 

def node_171
	>> node_068 
	if self.target(10) 
		-> namielle.dash(2,0,0,1000) 
	else 
	endif 
	if self.enraged() 
		>> node_074 
	else 
		>> node_074 
	endif 
	>> node_001 
	return 
endf 

def node_172
	>> node_068 
	-> namielle.tired() 
	return 
endf 

def node_173
	if self.distance_3d_to_target().leq(900) 
		>> node_043 
	elif self.distance_3d_to_target().leq(1350) 
		>> node_205 
	else 
	endif 
	return 
endf 

def node_174
	if self.distance_2d_to_target().leq(900) 
	else 
		-> namielle.dash(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> namielle.dash(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> namielle.dash(2,0,0,1500) 
	endif 
	return 
endf 

def node_175
	>> node_068 
	-> namielle.lost_search() 
	return 
endf 

def node_176
	>> node_068 
	>> node_156 
	-> namielle.life_search() 
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		random (50) 
					self.targetArea(22) @ parameter2:500 
					>> node_156 
					-> namielle.life_search() 
		elser (50) 
		endr 
	endif 
	return 
endf 

def node_177
	>> node_068 
	self.targetArea(17) 
	>> node_156 
	-> namielle.marking() 
	return 
endf 

def node_178
	>> node_068 
	self.targetArea(17) 
	random (75) >> node_176 
	elser (25) >> node_156 
				-> namielle.marking() 
	endr 
	return 
endf 

def node_179
	>> node_068 
	self.targetArea(17) 
	>> node_156 
	-> namielle.rest() 
	return 
endf 

def node_180
	>> node_068 
	>> node_155 
	-> namielle.spark_charge() 
	return 
endf 

def node_181
	>> node_068 
	self.targetArea(17) 
	>> node_156 
	-> namielle.sleep() 
	return 
endf 

def node_182
	>> node_069 
	>> node_156 
	-> namielle.threat_short_fly() 
	return 
endf 

def node_183
	>> node_069 
	>> node_156 
	-> namielle.chance_fly() 
	return 
endf 

def node_184
	>> node_069 
	>> node_156 
	-> namielle.threat_short_fly() 
	return 
endf 

def node_185
	>> node_069 
	>> node_155 
	-> namielle.threat_short_fly() 
	return 
endf 

def node_186
	>> node_069 
	>> node_156 
	-> namielle.threat_short_fly() 
	return 
endf 

def node_187
	>> node_069 
	self.targetEnemy(17) 
	-> namielle.sudden_drop() 
	return 
endf 

def node_188
	>> node_068 
	>> node_156 
	-> namielle.dying_sleep() 
	return 
endf 

def node_189
	if self.distance_2d_to_target().leq(500) 
	else 
		-> namielle.glide_direct_move(1,2,0,400,1500) 
		repeat 
	endif 
	return 
endf 

def node_190
	>> node_069 
	self.targetArea(22) @ parameter2:500 
	-> namielle.quick_turn_fly() 
	return 
endf 

def node_191
	>> node_069 
	-> namielle.ride_rage_head() 
	return 
endf 

def node_192
	>> node_069 
	-> namielle.ride_rage_head_lv2() 
	return 
endf 

def node_193
	>> node_069 
	-> namielle.ride_rage_body() 
	return 
endf 

def node_194
	>> node_069 
	-> namielle.ride_rage_body_lv2() 
	return 
endf 

def node_195
	>> node_069 
	if self.distance_2d_to_target().leq(600) 
		>> node_225 
	else 
	endif 
	>> node_189 
	>> node_196 
	return 
endf 

def node_196
	if function#11(1000) 
	else 
		if self.above_area() 
			-> namielle.short_up_step_fly() 
		else 
			-> namielle.short_down_step_fly() 
		endif 
	endif 
	return 
endf 

def node_197
	>> node_069 
	-> namielle.ride_rage_crash_head() 
	return 
endf 

def node_198
	>> node_069 
	-> namielle.ride_rage_crash_head_lv2() 
	return 
endf 

def node_199
	>> node_069 
	-> namielle.ride_rage_crash_body() 
	return 
endf 

def node_200
	>> node_069 
	-> namielle.ride_rage_crash_body_lv2() 
	return 
endf 

def node_201
	>> node_069 
	-> namielle.ride_wait() 
	return 
endf 

def node_202
	>> node_069 
	-> namielle.ride_tired() 
	return 
endf 

def node_203
	>> node_068 
	-> namielle.step_back() 
	return 
endf 

def node_204
	if self.angle_2d_cw_between(15,345) 
		>> node_203 
	else 
	endif 
	return 
endf 

def node_205
	if self.angle_2d_cw_between(30,330) 
		>> node_203 
	else 
	endif 
	return 
endf 

def node_206
	if self.angle_2d_cw_between(45,315) 
		>> node_203 
	else 
	endif 
	return 
endf 

def node_207
	if self.angle_2d_cw_between(60,300) 
		>> node_203 
	else 
	endif 
	return 
endf 

def node_208
	if self.angle_2d_cw_between(90,270) 
		>> node_203 
	else 
	endif 
	return 
endf 

def node_209
	>> node_068 
	-> namielle.quick_turn() 
	return 
endf 

def node_210
	if self.angle_2d_cw_between(15,345) 
		>> node_209 
	else 
	endif 
	return 
endf 

def node_211
	if self.angle_2d_cw_between(30,330) 
		>> node_209 
	else 
	endif 
	return 
endf 

def node_212
	if self.angle_2d_cw_between(45,315) 
		>> node_209 
	else 
	endif 
	return 
endf 

def node_213
	if self.angle_2d_cw_between(60,300) 
		>> node_209 
	else 
	endif 
	return 
endf 

def node_214
	if self.angle_2d_cw_between(90,270) 
		>> node_209 
	else 
	endif 
	return 
endf 

def node_215
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Gold_Rathian) 
						if self.target.in_combat() >> node_220 
						else >> node_219 
						endif 
					elif self.target_is(em.Silver_Rathalos) 
						if self.target.in_combat() >> node_220 
						else >> node_219 
						endif 
					elif function#30(2) 
						if self.target.in_combat() 
							random (35) >> node_216 
							elser (0) >> node_217 
							elser (10) >> node_218 
							elser (55) >> node_219 
							endr 
						else 
							random (10) >> node_216 
							elser (35) >> node_217 
							elser (0) >> node_218 
							elser (55) >> node_219 
							endr 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (35) >> node_216 
							elser (10) >> node_217 
							elser (55) >> node_218 
							elser (0) >> node_219 
							endr 
						else 
							random (35) >> node_216 
							elser (55) >> node_217 
							elser (10) >> node_218 
							elser (0) >> node_219 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (35) >> node_216 
							elser (0) >> node_217 
							elser (50) >> node_218 
							elser (15) >> node_220 
							endr 
						else 
							random (35) >> node_216 
							elser (55) >> node_217 
							elser (10) >> node_218 
							elser (0) >> node_219 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	elif self.defense_downed() >> node_221 
	endif 
	return 
endf 

def node_216
	return 
endf 

def node_217
	>> node_161 
	>> node_119 
	return 
endf 

def node_218
	if self.flying() >> node_026 
	else 
		if self.distance_2d_to_target().gt(1500) >> node_030 
		endif 
		random (60) >> node_012 
		elser (35) >> node_009 
		elser (5) >> node_016 
		endr 
		*&
	endif 
	return 
endf 

def node_219
	self.force_area_change2() 
	return 
endf 

def node_220
	>> node_218 
	>> node_219 
	return 
endf 

def node_221
	function#31(49,1000) 
	self.targetEnemy(target_em.closest_entity) 
	random (35) >> node_216 
	elser (10) >> node_217 
	elser (55) >> node_218 
	elser (0) >> node_219 
	endr 
	return 
endf 

def node_222
	random (35) 
				self.targetArea(21) @ parameter2:300 
	elser (35) 
				self.targetArea(22) @ parameter2:300 
	elser (15) 
				self.targetArea(21) @ parameter2:500 
	elser (15) 
				self.targetArea(22) @ parameter2:500 
	endr 
	return 
endf 

def node_223
	random (5) 
				if self.flying() 
					-> namielle.chance_fly() 
				else 
					-> namielle.chance() 
				endif 
	elser (95) 
	endr 
	return 
endf 

def node_224
	if self.flying() 
		-> namielle.chance_fly() 
	else 
		-> namielle.chance() 
	endif 
	return 
endf 

def node_225
	>> node_069 
	-> namielle.quick_turn_fly() 
	return 
endf 

def node_226
	if self.angle_2d_cw_between(15,345) 
		>> node_225 
	else 
	endif 
	return 
endf 

def node_227
	if self.angle_2d_cw_between(30,330) 
		>> node_225 
	else 
	endif 
	return 
endf 

def node_228
	if self.angle_2d_cw_between(45,315) 
		>> node_225 
	else 
	endif 
	return 
endf 

def node_229
	if self.angle_2d_cw_between(90,270) 
		>> node_225 
	else 
	endif 
	return 
endf 

def node_230
	if self.angle_2d_cw_between(0,180) 
		-> namielle.quick_turn_fly() 
	else 
		-> namielle.quick_turn_fly() 
	endif 
	return 
endf 

def node_231
	if self.angle_2d_cw_between(15,345) 
		>> node_230 
	else 
	endif 
	return 
endf 

def node_232
	if self.angle_2d_cw_between(30,330) 
		>> node_230 
	else 
	endif 
	return 
endf 

def node_233
	if self.angle_2d_cw_between(45,315) 
		>> node_230 
	else 
	endif 
	return 
endf 

def node_234
	if self.angle_2d_cw_between(90,270) 
		>> node_230 
	else 
	endif 
	return 
endf 

def node_235
	>> node_068 
	>> node_161 
	if self.flying() 
		-> namielle.chance_fly() 
	else 
		-> namielle.chance() 
	endif 
	return 
endf 

def node_236
	>> node_068 
	if self.targetEnemy(target_em.any_monster) 
		random (20) >> node_161 
		elser (80) 
		endr 
	else 
	endif 
	random (60) -> namielle.chance() 
	elser (10) -> namielle.lost_search() 
	elser (30) -> namielle.combat_search() 
	endr 
	return 
endf 

def node_237
	>> node_068 
	>> node_161 
	random (40) -> namielle.chance() 
	elser (20) -> namielle.lost_search() 
	elser (40) -> namielle.combat_search() 
	elser (0) -> namielle.threat_short() 
	endr 
	return 
endf 

def node_238
	>> node_068 
	>> node_156 
	-> namielle.life_search() 
	return 
endf 

def node_239
	>> node_068 
	self.targetEnemy(58) 
	random (0) >> node_240 
	elser (100) 
	endr 
	self.targetEnemy(22) @ parameter2:2000 
	random (40) >> node_156 
	elser (60) 
	endr 
	random (70) -> namielle.life_search() 
	elser (30) -> namielle.marking() 
	endr 
	return 
endf 

def node_240
	-> namielle.walk(1,2,0,600,1500) 
	return 
endf 

def node_241
	-> namielle.glide_combat(1,2,0,600,2000) 
	return 
endf 

def node_242
	if self.fatigued() 
		>> node_068 
	else 
	endif 
	return 
endf 

def node_243
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5D() 
		>> node_245 
	elif self.target(3) 
		>> node_246 
	elif self.target(4) 
		>> node_246 
	elif self.target(55) 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_249 
		else 
			>> node_250 
		endif 
	elif self.target(14) 
		>> node_251 
	elif self.target(11) 
		>> node_252 
	elif self.target(12) 
	elif self.flying() 
		if self.above_target() 
			>> node_255 
		elif self.vertical_distance_to_target().leq(750) 
			if self.above_target() 
				>> node_255 
			else 
			endif 
		else 
			>> node_255 
		endif 
	else 
		if self.target(52) >> node_254 
		elif self.vertical_distance_to_target().leq(450) 
		else 
			>> node_254 
		endif 
	endif 
	return 
endf 

def node_244
	if [RegisterVar4 -= 10] 
		[RegisterVar4 ++] 
	elif [RegisterVar4 -= 1] 
		[RegisterVar4 |-] 
	else 
	endif 
	return 
endf 

def node_245
	if self.distance_2d_to_target().leq(1500) 
		if self.angle_2d_cw_between(300,60) 
		else 
			function#5E() 
			>> node_111 
		endif 
	else 
		if self.angle_2d_cw_between(300,60) 
			function#5E() 
			>> node_111 
		else 
			function#5E() 
			>> node_113 
		endif 
	endif 
	return 
endf 

def node_246
	>> node_247 
	>> node_248 
	reset 
endf 

def node_247
	self.targetArea(19) 
	if self.distance_2d_to_target().leq(900) 
	else 
		if self.flying() 
			>> node_100 
		else 
			>> node_078 
		endif 
	endif 
	return 
endf 

def node_248
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_068 
	-> namielle.lost_search() 
	return 
endf 

def node_249
	if function#103(1) 
	else 
		>> node_029 
		>> node_260 
	endif 
	>> node_071 
	>> node_069 
	>> node_072 
	-> namielle.rush_fly_to_ground_start() 
	return 
	>> node_253 
	if self.distance_2d_to_target().leq(1000) 
		if self.target(0) 
			if self.above_target() 
				>> node_013 
			else 
				>> node_013 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_250
	if self.target(56) 
		self.targetArea(77) 
		>> node_079 
	else 
		if function#103(1) 
		else 
			>> node_029 
			>> node_260 
		endif 
		>> node_071 
		>> node_069 
		>> node_072 
		>> node_024 
		return 
		>> node_253 
		if self.distance_2d_to_target().leq(1000) 
			if self.target(0) 
				if self.above_target() 
					>> node_013 
				else 
					>> node_013 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_251
	>> node_249 
	return 
	if self.flying() 
		>> node_255 
	else 
		>> node_253 
		if self.distance_2d_to_target().leq(2000) 
			if self.target(14) 
				if self.above_target() 
					>> node_013 
				else 
					>> node_013 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_252
	if self.flying() 
		>> node_258 
	else 
		>> node_254 
	endif 
	return 
endf 

def node_253
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			-> namielle.dash(1,2,0,500,1500) 
		endif 
	else 
		-> namielle.dash(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			-> namielle.dash(1,2,0,500,1500) 
		endif 
	else 
		-> namielle.dash(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			-> namielle.dash(1,2,0,500,1500) 
		endif 
	else 
		-> namielle.dash(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_254
	if self.distance_3d_to_target().leq(400) 
	else 
		-> namielle.dash(1,2,0,300,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.dash(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.dash(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_255
	if self.distance_2d_to_target().leq(300) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> namielle.glide_combat(1,2,0,200,1500) 
		endif 
	else 
		-> namielle.glide_combat(1,2,0,200,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> namielle.glide_combat(1,2,0,500,1500) 
		endif 
	else 
		-> namielle.glide_combat(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> namielle.glide_combat(1,2,0,500,1500) 
		endif 
	else 
		-> namielle.glide_combat(1,2,0,500,1500) 
	endif 
	>> node_256 
	return 
endf 

def node_256
	if self.above_target() 
		random (0) >> node_230 
		elser (50) >> node_228 
		elser (50) 
		endr 
		>> node_257 
	elif self.vertical_distance_to_target().leq(400) 
		random (0) >> node_230 
		elser (50) >> node_228 
		elser (50) 
		endr 
		>> node_257 
	else 
	endif 
	return 
endf 

def node_257
	>> node_069 
	-> namielle.short_up_step_fly() 
	return 
endf 

def node_258
	if self.distance_3d_to_target().leq(300) 
	else 
		-> namielle.glide_direct_move(1,2,0,200,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.glide_direct_move(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> namielle.glide_direct_move(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_259
	[RegisterVar0 |-] 
	return 
endf 

def node_260
	[RegisterVar0 ++] 
	return 
endf 

def node_261
	[RegisterVar1 |-] 
	return 
endf 

def node_262
	[RegisterVar1 ++] 
	return 
endf 

def node_263
	[RegisterVar2 |-] 
	return 
endf 

def node_264
	[RegisterVar2 ++] 
	return 
endf 

def node_265
	[RegisterVar3 |-] 
	return 
endf 

def node_266
	[RegisterVar3 ++] 
	return 
endf 

