importactions Apceros as apceros

def node_000 : 20
	>> node_072 
	>> node_032 
	>> node_004 
	reset 
endf 

def node_001 : 102
endf 

def node_002 : 101
	if function#D7() 
		function#E7(8) 
		function#E7(9) 
		function#E7(3) 
		function#E7(4) 
		function#E7(12) 
	endif 
	return 
endf 

def node_003 : 56
endf 

def node_004 : 25
	>> node_002 
	self.targetUnknown(48,0) 
	if self.target(20) 
		self.targetUnknown(0,0) 
		>> node_005 
		>> node_015 
	else 
		self.targetUnknown(0,0) 
		>> node_014 
		>> node_016 
	endif 
	return 
endf 

def node_005 : 100
	>> node_006 
	>> node_007 
	return 
endf 

def node_006 : 96
	random (50) >> node_063 
	elser (50) >> node_064 
	endr 
	return 
endf 

def node_007 : 97
	if [RegisterVar3 < 0] 
		>> node_008 
	else 
		>> node_011 
	endif 
	return 
endf 

def node_008 : 118
	function#DD(600) 
	function#DF(40) 
	function#DE(3500) 
	function#E2(2) 
	if function#D2(12) 
	else 
		>> node_010 
	endif 
	return 
endf 

def node_009 : 99
	function#DD(600) 
	function#DE(5000) 
	function#E2(2) 
	if function#D2(12) 
	else 
		>> node_081 
		function#E4(12) 
	endif 
	return 
endf 

def node_010 : 98
	function#DD(600) 
	function#DE(2500) 
	function#E2(2) 
	if function#D2(12) 
	else 
		>> node_009 
	endif 
	return 
endf 

def node_011 : 119
	function#DD(600) 
	function#DF(40) 
	function#EB(800) 
	function#DE(3000) 
	function#E2(2) 
	if function#D2(4) 
	else 
		>> node_012 
	endif 
	return 
endf 

def node_012 : 37
	function#DD(600) 
	function#EB(800) 
	function#DE(2500) 
	function#E2(2) 
	if function#D2(4) 
	else 
		>> node_013 
	endif 
	return 
endf 

def node_013 : 53
	function#DD(600) 
	function#DE(5000) 
	function#E2(2) 
	if function#D2(4) 
	else 
		>> node_081 
		function#E4(4) 
		repeat 
	endif 
	return 
endf 

def node_014 : 47
	function#E2() 
	function#EC(3) 
	if function#D2(11) 
	else 
		>> node_060 
	endif 
	return 
endf 

def node_015 : 38
	>> node_032 
	>> node_039 
	>> node_049 
	if self.distance_3d_to_target().leq(300) 
		>> node_021 
		>> node_043 
		>> node_070 
		function#DA() 
		reset 
	else 
		>> node_017 
		>> node_020 
		repeat 
	endif 
	return 
endf 

def node_016 : 48
	>> node_032 
	>> node_054 
	if self.distance_3d_to_target().leq(300) 
		>> node_018 
		function#DA() 
		reset 
	else 
		>> node_019 
		repeat 
	endif 
	return 
endf 

def node_017 : 64
	>> node_077 
	return 
endf 

def node_018 : 65
	>> node_036 
	>> node_081 
	return 
endf 

def node_019 : 66
	>> node_078 
	return 
endf 

def node_020 : 42
	if self.distance_3d_to_target().gt(1000) 
		if [RegisterVar6 > 1] 
			random (1) >> node_025 
			elser (4) >> node_026 
			elser (95) 
			endr 
		endif 
	endif 
	return 
endf 

def node_021 : 51
	if [RegisterVar6 < 0] 
		>> node_024 
	elif function#3C(1) 
		>> node_022 
	else 
		>> node_023 
	endif 
	return 
endf 

def node_022 : 68
	random (5) >> node_026 
	elser (20) >> node_030 
	elser (5) >> node_025 
	elser (70) >> node_024 
	endr 
	return 
endf 

def node_023 : 69
	random (5) >> node_026 
	elser (10) >> node_025 
	elser (85) >> node_024 
	endr 
	return 
endf 

def node_024 : 41
	if [RegisterVar3 < 0] 
		random (75) >> node_029 
		elser (25) >> node_028 
		endr 
		>> node_064 
	else 
		random (75) >> node_026 
		elser (25) >> node_028 
		endr 
	endif 
	return 
endf 

def node_025 : 43
	>> node_035 
	>> node_069 
	>> node_080 
	return 
endf 

def node_026 : 44
	>> node_035 
	>> node_069 
	>> node_081 
	return 
endf 

def node_027 : 45
	>> node_035 
	>> node_069 
	>> node_080 
	return 
endf 

def node_028 : 46
	>> node_035 
	>> node_085 
	return 
endf 

def node_029 : 50
	>> node_035 
	if [RegisterVar3 < 0] 
		>> node_082 
	else 
		>> node_081 
	endif 
	return 
endf 

def node_030 : 52
	>> node_035 
	if [RegisterVar3 < 0] 
		>> node_081 
	else 
		>> node_083 
	endif 
	return 
endf 

def node_031 : 61
endf 

def node_032 : 62
	if function#FA() 
		>> node_060 
	endif 
	return 
endf 

def node_033 : 59
endf 

def node_034 : 21
	if function#46() @ unknExtra2:1 
		>> node_061 
		function#DA() 
	else 
		return 
	endif 
	reset 
endf 

def node_035 : 39
	if function#45() 
		>> node_088 
	endif 
	return 
endf 

def node_036 : 49
	if function#45() 
		>> node_089 
	endif 
	return 
endf 

def node_037 : 88
	if function#45() 
		>> node_090 
	endif 
	return 
endf 

def node_038 : 103
endf 

def node_039 : 104
	function#EB(1500) 
	function#DE(4500) 
	function#ED() 
	if function#D2(9) 
		if function#FD() 
			function#E5() 
			>> node_040 
		else 
			function#E5() 
		endif 
	endif 
	return 
endf 

def node_040 : 105
	>> node_041 
	>> node_042 
	return 
endf 

def node_041 : 106
	function#EC(5) 
	if function#D2(11) 
		>> node_061 
	else 
		>> node_060 
	endif 
	return 
endf 

def node_042 : 107
	if self.distance_3d_recalc_to_target().leq(800) 
		>> node_037 
		>> node_080 
		function#DA() 
	else 
		>> node_079 
		repeat 
	endif 
	return 
endf 

def node_043 : 108
	if [RegisterVar4 < 0] 
		function#EB(1000) 
		function#DE(3000) 
		function#ED() 
		if function#D2(9) 
			>> node_066 
			>> node_081 
			function#E5() 
			reset 
		else 
		endif 
		return 
	endif 
	function#EB(1500) 
	function#DE(4500) 
	function#ED() 
	if function#D2(9) 
		function#E5() 
	else 
		>> node_080 
		>> node_044 
	endif 
	return 
endf 

def node_044 : 109
	>> node_045 
	>> node_046 
	>> node_047 
	reset 
endf 

def node_045 : 110
	function#E2() 
	function#ED() 
	if function#D2(9) 
		return 
	else 
		>> node_081 
	endif 
	reset 
endf 

def node_046 : 112
	if self.vertical_distance_to_target().gt(6000) 
		>> node_065 
		>> node_081 
		function#DA() 
		reset 
	endif 
	if self.distance_3d_to_target().gt(7000) 
		>> node_065 
		>> node_081 
		function#DA() 
		reset 
	endif 
	return 
endf 

def node_047 : 111
	if self.target(13) 
		>> node_081 
		reset 
	endif 
	if self.distance_3d_to_target().leq(1000) 
		function#D3() 
		if self.distance_3d_to_target().leq(1000) 
			>> node_035 
			>> node_080 
			function#DA() 
			reset 
		else 
			repeat 
		endif 
	else 
		>> node_078 
		repeat 
	endif 
	return 
endf 

def node_048 : 71
endf 

def node_049 : 72
	>> node_050 
	return 
endf 

def node_050 : 73
	function#DE(3500) 
	function#EB(2000) 
	function#DF(80) 
	if function#D2(8) 
		>> node_051 
		function#E5() 
	endif 
	return 
endf 

def node_051 : 74
	if function#D8() 
		>> node_052 
	endif 
	return 
endf 

def node_052 : 75
	>> node_035 
	if self.angle_2d_ccw_between(90,0) 
		>> node_084 
		>> node_053 
	else 
		>> node_080 
		>> node_053 
	endif 
	return 
endf 

def node_053 : 82
	if self.distance_3d_to_target().leq(2500) 
		>> node_086 
	else 
		>> node_081 
	endif 
	function#E5() 
	return 
endf 

def node_054 : 81
	>> node_055 
	return 
endf 

def node_055 : 80
	function#DE(3500) 
	function#EB(2000) 
	function#DF(80) 
	if function#D2(8) 
		>> node_056 
		function#E5() 
	endif 
	return 
endf 

def node_056 : 79
	if function#D8() 
		>> node_057 
	endif 
	return 
endf 

def node_057 : 78
	>> node_036 
	if self.angle_2d_ccw_between(90,0) 
		>> node_084 
		>> node_058 
	else 
		>> node_080 
		>> node_058 
	endif 
	return 
endf 

def node_058 : 83
	if self.distance_3d_to_target().leq(2500) 
		>> node_086 
	else 
		>> node_081 
	endif 
	function#E5() 
	return 
endf 

def node_059 : 67
endf 

def node_060 : 58
	>> node_086 
	return 
endf 

def node_061 : 63
	>> node_087 
	return 
endf 

def node_062 : 86
endf 

def node_063 : 94
	[RegisterVar3 ++] 
	return 
endf 

def node_064 : 95
	[RegisterVar3 |-] 
	return 
endf 

def node_065 : 114
	[RegisterVar4 ++] 
	return 
endf 

def node_066 : 115
	[RegisterVar4 |-] 
	return 
endf 

def node_067 : 116
	[RegisterVar5 ++] 
	return 
endf 

def node_068 : 117
	[RegisterVar5 |-] 
	return 
endf 

def node_069 : 84
	[RegisterVar6 ++] 
	return 
endf 

def node_070 : 85
	[RegisterVar6 |-] 
	return 
endf 

def node_071 : 92
endf 

def node_072 : 93
	>> node_073 
	>> node_074 
	>> node_075 
	return 
endf 

def node_073 : 89
	[RegisterVar8 |-] 
	return 
endf 

def node_074 : 90
	[RegisterVar9 |-] 
	return 
endf 

def node_075 : 91
	[RegisterVar10 |-] 
	return 
endf 

def node_076 : 60
endf 

def node_077 : 5
	-> apceros.idle_r(2,1,0,300,300) 
	>> node_034 
	return 
endf 

def node_078 : 6
	-> apceros.idle_fly(2,1,0,300,300) 
	>> node_034 
	return 
endf 

def node_079 : 8
	-> apceros.idle_tired(6,0,0,300) 
	>> node_034 
	return 
endf 

def node_080 : 1
	-> apceros.double_floor_up() 
	return 
endf 

def node_081 : 3
	-> apceros.glide_combat_no_use_flyway() 
	return 
endf 

def node_082 : 11
	-> apceros.glide_combat_no_directmove() 
	-> apceros.glide_combat_only_groundnavi() 
	return 
endf 

def node_083 : 10
	-> apceros.glide() 
	return 
endf 

def node_084 : 77
	-> apceros.fox_walk() 
	return 
endf 

def node_085 : 12
	-> apceros.glide_charge() 
	return 
endf 

def node_086 : 13
	-> apceros.glide_use_ground_navimesh() 
	return 
endf 

def node_087 : 14
	-> apceros.step_front_fly_short() 
	return 
endf 

def node_088 : 40
	-> apceros.snake_turn_step_fly_l() 
	return 
endf 

def node_089 : 9
	-> apceros.snake_turn_step_fly_r() 
	return 
endf 

def node_090 : 87
	-> apceros.threat_short() 
	return 
endf 

