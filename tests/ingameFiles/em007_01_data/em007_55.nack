importactions Black_Diablos as black_diablos

def node_000
	conclude 
endf 

def node_001
	random (50) 
	elser (50) >> node_027 
	endr 
	return 
endf 

def node_002
	>> node_027 
	return 
endf 

def node_003
	>> node_012 
	-> black_diablos.search_life() 
	return 
endf 

def node_004
	if function#5A() 
		>> node_001 
	elif function#5A(1) 
		>> node_002 
	elif function#5A(2) 
		>> node_003 
	else 
		>> node_029 
	endif 
	return 
endf 

def node_005
	-> black_diablos.eat() 
	return 
endf 

def node_006
	-> black_diablos.sleep() 
	return 
endf 

def node_007
	if function#3F() 
		>> node_070 
	else 
	endif 
	return 
endf 

def node_008
	if [RegisterVar5 <= 1] 
		>> node_104 
		>> node_009 
		>> node_010 
	else 
	endif 
	return 
endf 

def node_009
	[RegisterVar5 |-] 
	return 
endf 

def node_010
	function#52(2,4) 
	self.targetArea(target_area.nearest_entrance) 
	>> node_047 
	reset 
endf 

def node_011
	-> black_diablos.normal_turn() 
	return 
endf 

def node_012
	if self.angle_2d_cw_between(30,330) 
		-> black_diablos.normal_turn() 
	else 
	endif 
	return 
endf 

def node_013
	if self.angle_2d_cw_between(80,280) 
		-> black_diablos.normal_turn() 
	else 
	endif 
	return 
endf 

def node_014
	if self.distance_3d_to_target().leq(800) 
		-> black_diablos.short_back_step() 
	elif self.angle_2d_cw_between(30,330) 
		-> black_diablos.quick_turn() 
	else 
	endif 
	return 
endf 

def node_015
	-> black_diablos.short_back_step() 
	return 
endf 

def node_016
	-> black_diablos.short_back_step_no_turn() 
	return 
endf 

def node_017
	-> black_diablos.short_back_step_turn() 
	return 
endf 

def node_018
	if self.angle_2d_cw_between(90,270) 
		>> node_017 
	else 
		>> node_016 
	endif 
	return 
endf 

def node_019
	if self.current_quest().is_rank(rank.MR) 
		>> node_191 
	else 
		if self.targetEnemy(target_em.any_monster) 
			if self.target(13) 
			else 
				if self.vertical_distance_to_target().leq(1500) 
					if self.distance_3d_to_target().leq(3000) 
						if self.target_is(em.Barroth) 
							>> node_026 
						elif self.target_is(em.Rathian) 
							>> node_026 
						elif self.target_is(em.Pink_Rathian) 
							>> node_026 
						elif self.target_is(em.Diablos) 
							>> node_026 
						elif self.target_is(em.Black_Diablos) 
							>> node_026 
						elif function#30(2) 
							>> node_020 
						else 
							>> node_021 
						endif 
					else 
					endif 
				else 
				endif 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_020
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		if [RegisterVar4 <= 8] 
			>> node_025 
			return 
		else 
		endif 
	endif 
	if self.target.in_combat() 
		random (25) >> node_022 
		elser (20) >> node_023 
		elser (55) >> node_024 
		endr 
	else 
		random (35) >> node_022 
		elser (50) >> node_023 
		elser (15) >> node_024 
		endr 
	endif 
	return 
endf 

def node_021
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		if [RegisterVar4 <= 12] 
			>> node_025 
			return 
		else 
		endif 
	endif 
	if self.target.in_combat() 
		random (15) >> node_022 
		elser (25) >> node_023 
		elser (60) >> node_024 
		endr 
	else 
		random (35) >> node_022 
		elser (50) >> node_023 
		elser (15) >> node_024 
		endr 
	endif 
	return 
endf 

def node_022
	[RegisterVar4 ++] 
	return 
endf 

def node_023
	[RegisterVar4 ++] 
	>> node_056 
	>> node_032 
	return 
endf 

def node_024
	if self.vertical_distance_to_target().gt(800) 
		[RegisterVar4 ++] 
		>> node_032 
	elif self.distance_3d_to_target().gt(2500) 
		>> node_041 
		repeat 
	else 
		[RegisterVar4 ++] 
		random (10) >> node_100 
		elser (40) >> node_065 
		elser (50) >> node_061 
		endr 
	endif 
	return 
endf 

def node_025
	[RegisterVar4 |-] 
	self.force_area_change2() 
	return 
endf 

def node_026
	if self.target(39) 
		>> node_022 
	else 
		if self.target.in_combat() 
			random (15) >> node_022 
			elser (25) >> node_023 
			elser (60) >> node_024 
			endr 
		else 
			random (35) >> node_022 
			elser (50) >> node_023 
			elser (15) >> node_024 
			endr 
		endif 
	endif 
	return 
endf 

def node_027
	-> black_diablos.search_life() 
	return 
endf 

def node_028
	if self.enraged() 
		-> black_diablos.half_lost_search_front() 
	else 
		-> black_diablos.half_lost_search_back() 
	endif 
	return 
endf 

def node_029
	-> black_diablos.search_life() 
	return 
endf 

def node_030
	-> black_diablos.refresh() 
	return 
endf 

def node_031
	if self.in_combat() 
		-> black_diablos.idle_tired_combat() 
	else 
		-> black_diablos.idle_tired() 
	endif 
	return 
endf 

def node_032
	-> black_diablos.intimidation() 
	return 
endf 

def node_033
	-> black_diablos.threat() 
	return 
endf 

def node_034
	-> black_diablos.bind_voice() 
	return 
endf 

def node_035
	-> black_diablos.eat_stamina() 
	return 
endf 

def node_036
	if self.distance_3d_to_target().leq(900) 
		return 
	else 
		>> node_037 
	endif 
	if self.distance_3d_to_target().leq(900) 
		return 
	else 
		>> node_037 
	endif 
	if self.distance_3d_to_target().leq(900) 
		return 
	else 
		>> node_037 
	endif 
	return 
endf 

def node_037
	if self.fatigued() 
		-> black_diablos.walk_tired(2,1,5,1500,900) 
	else 
		-> black_diablos.walk(2,1,5,1500,900) 
	endif 
	return 
endf 

def node_038
	if self.distance_3d_to_target().leq(900) 
		return 
	else 
		>> node_040 
	endif 
	if self.distance_3d_to_target().leq(900) 
		return 
	else 
		>> node_040 
	endif 
	if self.distance_3d_to_target().leq(900) 
		return 
	else 
		>> node_040 
	endif 
	return 
endf 

def node_039
	if self.distance_3d_to_target().leq(900) 
		return 
	else 
		>> node_040 
	endif 
	return 
endf 

def node_040
	if self.fatigued() 
		-> black_diablos.dash_tired(2,1,0,1500,900) 
	else 
		-> black_diablos.dash(2,1,0,1500,900) 
	endif 
	return 
endf 

def node_041
	if self.distance_3d_to_target().leq(900) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,900) 
	endif 
	if self.distance_3d_to_target().leq(900) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,900) 
	endif 
	if self.distance_3d_to_target().leq(900) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,900) 
	endif 
	return 
endf 

def node_042
	if self.distance_3d_to_target().leq(1100) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,1100) 
	endif 
	if self.distance_3d_to_target().leq(1100) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,1100) 
	endif 
	if self.distance_3d_to_target().leq(1100) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,1100) 
	endif 
	return 
endf 

def node_043
	if self.distance_3d_to_target().leq(2000) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,2000) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,2000) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,2000) 
	endif 
	return 
endf 

def node_044
	if self.distance_3d_to_target().leq(3000) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,3000) 
	endif 
	if self.distance_3d_to_target().leq(3000) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,3000) 
	endif 
	if self.distance_3d_to_target().leq(3000) 
		return 
	else 
		-> black_diablos.dash_combat(2,1,0,1500,3000) 
	endif 
	return 
endf 

def node_045
	if self.distance_3d_recalc_to_target().leq(900) 
		return 
	else 
		if self.fatigued() 
			-> black_diablos.dash_tired(2,1,0,1500,900) 
		else 
			-> black_diablos.dash(2,1,0,1500,900) 
		endif 
	endif 
	repeat 
endf 

def node_046
	if self.distance_2d_to_target().leq(900) 
		return 
	else 
		-> black_diablos.dash_combat(2,6,0,1500,900) 
	endif 
	if self.distance_2d_to_target().leq(900) 
		return 
	else 
		-> black_diablos.dash_combat(2,6,0,1500,900) 
	endif 
	if self.distance_2d_to_target().leq(900) 
		return 
	else 
		-> black_diablos.dash_combat(2,6,0,1500,900) 
	endif 
	return 
endf 

def node_047
	if self.distance_3d_recalc_to_target().leq(900) 
		return 
	else 
		>> node_048 
		>> node_049 
	endif 
	repeat 
endf 

def node_048
	if function#3F() 
	else 
		if function#48() 
			self.targetArea(56) 
			>> node_041 
		else 
		endif 
		-> black_diablos.dive_to_ground() 
	endif 
	return 
endf 

def node_049
	if function#3F() 
		if function#49() 
			self.targetArea(57) 
		else 
		endif 
		if self.distance_3d_recalc_to_target().leq(900) 
			-> black_diablos.appear_attack_vertical() 
			return 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
		repeat 
	else 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			>> node_045 
		endif 
	endif 
	return 
endf 

def node_050
	if self.distance_3d_recalc_to_target().leq(900) 
		return 
	else 
		>> node_048 
		self.targetArea(14) 
		>> node_049 
	endif 
	repeat 
endf 

def node_051
	if self.distance_3d_recalc_to_target().leq(900) 
		return 
	else 
		>> node_048 
		self.targetEnemy(51) 
		>> node_049 
	endif 
	repeat 
endf 

def node_052
	>> node_048 
	>> node_053 
	return 
endf 

def node_053
	self.targetArea(24) 
	if function#3F() 
		if self.distance_3d_recalc_to_target().leq(900) 
			-> black_diablos.appear_attack_vertical() 
			return 
		else 
			-> black_diablos.dying_walk_diving(2,1,0,1500,900) 
		endif 
		repeat 
	else 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			>> node_045 
		endif 
	endif 
	return 
endf 

def node_054
	if function#101(1500,30) 
		>> node_055 
	elif function#101(3000,15) 
		>> node_055 
	else 
	endif 
	return 
endf 

def node_055
	if self.distance_3d_to_target().gt(800) 
		-> black_diablos.rush_headbutt() 
		reset 
	else 
	endif 
	return 
endf 

def node_056
	-> black_diablos.quick_turn() 
	return 
endf 

def node_057
	if self.angle_2d_cw_between(30,330) 
		-> black_diablos.quick_turn() 
	else 
	endif 
	return 
endf 

def node_058
	if self.angle_2d_cw_between(80,280) 
		-> black_diablos.quick_turn() 
	else 
	endif 
	return 
endf 

def node_059
	if self.angle_2d_cw_between(90,270) 
		-> black_diablos.quick_turn() 
	else 
	endif 
	return 
endf 

def node_060
	if self.distance_2d_to_target().leq(1000) 
		if self.angle_2d_cw_between(45,315) 
			-> black_diablos.quick_turn() 
		else 
		endif 
	elif self.distance_2d_to_target().leq(2000) 
		if self.angle_2d_cw_between(60,300) 
			-> black_diablos.quick_turn() 
		else 
		endif 
	else 
		if self.angle_2d_cw_between(90,270) 
			-> black_diablos.quick_turn() 
		else 
		endif 
	endif 
	return 
endf 

def node_061
	if self.distance_3d_to_target().leq(1000) 
		>> node_018 
	elif self.angle_2d_cw_between(90,270) 
		>> node_018 
	else 
	endif 
	if self.angle_2d_cw_between(15,180) 
		-> black_diablos.rush_headbutt_curve_l() 
	elif self.angle_2d_cw_between(180,345) 
		-> black_diablos.rush_headbutt_curve_r() 
	else 
		if self.in_map(st.Wildspire_Waste).in_area(6) 
			-> black_diablos.rush_headbutt2() 
		else 
			-> black_diablos.rush_headbutt() 
		endif 
	endif 
	return 
endf 

def node_062
	if self.distance_3d_to_target().leq(1500) 
		random (60) >> node_082 
		elser (40) >> node_084 
		endr 
	else 
		random (50) >> node_042 
					>> node_079 
		elser (50) >> node_065 
		endr 
	endif 
	return 
endf 

def node_063
	if self.enraged() 
		random (60) >> node_064 
		elser (40) >> node_065 
		endr 
	else 
		random (30) >> node_064 
		elser (70) >> node_065 
		endr 
	endif 
	return 
endf 

def node_064
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_069 
		>> node_070 
	endif 
	return 
endf 

def node_065
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_074 
	endif 
	return 
endf 

def node_066
	>> node_067 
	>> node_068 
	if self.in_map(st.Wildspire_Waste).in_area(6) 
		>> node_076 
		>> node_077 
	else 
		>> node_072 
		>> node_074 
	endif 
	return 
endf 

def node_067
	if self.enraged() -> black_diablos.dive_to_ground_angry() 
	elif self.fatigued() -> black_diablos.dive_to_ground_tired() 
	else -> black_diablos.dive_to_ground() 
	endif 
	return 
endf 

def node_068
	if self.enraged() 
		random (90) -> black_diablos.diving_wait1() 
		elser (10) 
		endr 
	elif self.fatigued() -> black_diablos.diving_wait3() 
	else -> black_diablos.diving_wait2() 
	endif 
	return 
endf 

def node_069
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
			repeat 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	return 
endf 

def node_070
	-> black_diablos.appear_attack_vertical() 
	return 
endf 

def node_071
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	return 
endf 

def node_072
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
			repeat 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	return 
endf 

def node_073
	random (20) -> black_diablos.diving_wait1() 
	elser (40) -> black_diablos.diving_wait2() 
	elser (30) -> black_diablos.diving_wait3() 
	elser (10) 
	endr 
	return 
endf 

def node_074
	-> black_diablos.appear_attack_slant() 
	return 
endf 

def node_075
	-> black_diablos.appear_attack_slant_cancel() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	return 
endf 

def node_076
	self.targetEnemy(53) 
	-> black_diablos.dive_move_to_wall() 
	return 
endf 

def node_077
	self.targetEnemy(target_em.random_player_or_cat) 
	-> black_diablos.appear_attack_from_wall() 
	return 
endf 

def node_078
	>> node_057 
	-> black_diablos.corner_attack() 
	return 
endf 

def node_079
	>> node_058 
	-> black_diablos.corner_swing_attack() 
	return 
endf 

def node_080
	-> black_diablos.tail_swing() 
	return 
endf 

def node_081
	if self.angle_2d_cw_between(0,180) 
		-> black_diablos.side_tackle_r() 
	else 
		-> black_diablos.side_tackle_l() 
	endif 
	return 
endf 

def node_082
	-> black_diablos.corner_turn_attack() 
	return 
endf 

def node_083
	if self.distance_3d_to_target().leq(900) 
	else 
		>> node_041 
		repeat 
	endif 
	if self.angle_2d_cw_between(130,230) 
		>> node_082 
	else 
		>> node_079 
	endif 
	return 
endf 

def node_084
	if self.distance_3d_to_target().leq(1500) 
	else 
		>> node_042 
		repeat 
	endif 
	if self.angle_2d_cw_between(90,270) 
		>> node_080 
	else 
		>> node_079 
	endif 
	return 
endf 

def node_085
	if function#2D(1) 
		return 
	elif self.target.helpless_0() 
		random (90) 
					if self.distance_2d_to_target().leq(500) 
					else 
						>> node_099 
					endif 
		elser (10) 
		endr 
	else 
	endif 
	return 
endf 

def node_086
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.target.mudded() 
		>> node_044 
		>> node_078 
	else 
	endif 
	if function#5D() 
		function#5E() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_087 
		self.targetArea(4) 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
	endif 
	return 
endf 

def node_087
	if self.angle_2d_cw_between(90,270) 
		>> node_089 
	elif self.distance_3d_to_target().gt(3000) 
		>> node_089 
	else 
		>> node_088 
	endif 
	return 
endf 

def node_088
	-> black_diablos.half_lost_search_front() 
	return 
endf 

def node_089
	-> black_diablos.half_lost_search_back() 
	return 
endf 

def node_090
	self.targetArea(19) 
	if self.distance_2d_to_target().gt(1000) 
		>> node_045 
		repeat 
	else 
		>> node_091 
	endif 
	return 
endf 

def node_091
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_012 
	>> node_105 
	return 
endf 

def node_092
	>> node_044 
	random (50) >> node_079 
	elser (25) >> node_078 
	elser (25) >> node_065 
	endr 
	return 
endf 

def node_093
	>> node_046 
	if self.target(0) @ parameter2:1 
		>> node_094 
	elif self.target(0) 
		>> node_095 
	elif self.target(14) 
		>> node_094 
	else 
		>> node_094 
	endif 
	return 
endf 

def node_094
	if self.distance_2d_to_target().leq(900) 
		if self.above_target() 
			if self.vertical_distance_to_target().leq(500) 
				random (20) >> node_065 
				elser (15) >> node_058 
							>> node_034 
				elser (20) >> node_078 
				elser (20) >> node_079 
				elser (25) -> black_diablos.jump_attack_wall_up() 
				endr 
			else 
				-> black_diablos.jump_attack_wall_up() 
				>> node_096 
			endif 
		else 
			-> black_diablos.jump_attack_wall_down() 
		endif 
	else 
		>> node_032 
	endif 
	return 
endf 

def node_095
	if self.distance_2d_to_target().leq(900) 
		if self.above_target() 
			if self.vertical_distance_to_target().leq(500) 
				random (20) >> node_065 
				elser (15) >> node_058 
							>> node_034 
				elser (20) >> node_078 
				elser (20) >> node_079 
				elser (25) -> black_diablos.jump_attack_wall_up() 
				endr 
			else 
				-> black_diablos.jump_attack_wall_up() 
				>> node_096 
			endif 
		else 
			self.targetArea(77) 
			-> black_diablos.dash_combat(2,0,0,1000) 
		endif 
	else 
		>> node_032 
	endif 
	return 
endf 

def node_096
	random (30) >> node_065 
	elser (20) >> node_058 
				>> node_034 
	elser (20) >> node_078 
	elser (30) >> node_079 
	endr 
	return 
endf 

def node_097
	>> node_041 
	>> node_081 
	return 
endf 

def node_098
	if self.current_quest().is_rank(rank.MR) 
		>> node_186 
		>> node_200 
		random (5) >> node_201 
		elser (0) >> node_159 
		elser (2) >> node_160 
		elser (2) >> node_161 
		elser (0) >> node_162 
		elser (3) >> node_157 
		elser (3) >> node_158 
		elser (25) >> node_082 
		elser (25) >> node_081 
		elser (10) >> node_182 
					>> node_184 
		elser (10) >> node_034 
		elser (15) >> node_084 
		endr 
		>> node_174 
	else 
		>> node_054 
		>> node_102 
		random (5) >> node_063 
		elser (25) >> node_082 
		elser (10) >> node_061 
		elser (30) >> node_081 
		elser (5) >> node_034 
		elser (25) >> node_084 
		endr 
		>> node_085 
	endif 
	return 
endf 

def node_099
	if [RegisterVar1 <= 6] 
		[RegisterVar1 |-] 
		>> node_100 
		reset 
	elif [RegisterVar1 <= 4] 
		random (60) 
					[RegisterVar1 |-] 
					>> node_100 
					reset 
		elser (40) 
					[RegisterVar1 ++] 
		endr 
	elif [RegisterVar1 <= 2] 
		random (40) 
					[RegisterVar1 |-] 
					>> node_100 
					reset 
		elser (60) 
					[RegisterVar1 ++] 
		endr 
	elif [RegisterVar1 <= 1] 
		random (5) 
					[RegisterVar1 |-] 
					>> node_100 
					reset 
		elser (95) 
					[RegisterVar1 ++] 
		endr 
	else 
		[RegisterVar1 ++] 
	endif 
	return 
endf 

def node_100
	>> node_007 
	>> node_059 
	-> black_diablos.rush_headbutt_strong() 
	if self.fatigued() 
		>> node_031 
	else 
	endif 
	return 
endf 

def node_101
	if self.in_map(st.Wildspire_Waste).in_area(6) 
		[RegisterVar3 ++] 
	else 
		return 
	endif 
	if [RegisterVar3 <= 10] 
		[RegisterVar3 |-] 
		>> node_066 
		reset 
	else 
	endif 
	return 
endf 

def node_102
	if [RegisterVar2 <= 5] 
		[RegisterVar2 |-] 
		>> node_061 
		reset 
	else 
		[RegisterVar2 ++] 
	endif 
	return 
endf 

def node_103
	self.targetArea(19) 
	if self.distance_3d_recalc_to_target().gt(1000) 
		>> node_045 
	else 
	endif 
	return 
endf 

def node_104
	random (15) -> black_diablos.wait() 
	elser (5) -> black_diablos.sniff_combat_s() 
	elser (20) -> black_diablos.sniff_combat_l() 
	elser (20) -> black_diablos.search_life() 
	elser (30) -> black_diablos.threat() 
	elser (10) -> black_diablos.intimidation() 
	endr 
	return 
endf 

def node_105
	random (37) -> black_diablos.wait() 
	elser (23) -> black_diablos.search_life() 
	elser (40) -> black_diablos.intimidation() 
	endr 
	return 
endf 

def node_106
	-> black_diablos.wait() 
	return 
endf 

def node_107
	if self.fatigued() 
		-> black_diablos.walk_tired(2,1,5,1500,400) 
	else 
		-> black_diablos.walk(2,1,5,1500,400) 
	endif 
	return 
endf 

def node_108
	if self.in_map(st.Wildspire_Waste).in_area(3) 
		if self.distance_3d_to_target().gt(1100) 
			random (20) >> node_065 
			elser (80) >> node_041 
			endr 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_109
	[RegisterVar6 ++] 
	return 
endf 

def node_110
	if [RegisterVar1 <= 6] 
		[RegisterVar1 |-] 
		>> node_100 
		reset 
	elif [RegisterVar1 <= 4] 
		random (75) 
					[RegisterVar1 |-] 
					>> node_100 
					reset 
		elser (25) 
					[RegisterVar1 ++] 
		endr 
	elif [RegisterVar1 <= 2] 
		random (50) 
					[RegisterVar1 |-] 
					>> node_100 
					reset 
		elser (50) 
					[RegisterVar1 ++] 
		endr 
	elif [RegisterVar1 <= 1] 
		random (10) 
					[RegisterVar1 |-] 
					>> node_100 
					reset 
		elser (90) 
					[RegisterVar1 ++] 
		endr 
	else 
		[RegisterVar1 ++] 
	endif 
	return 
endf 

def node_111
	if [RegisterVar2 <= 5] 
		[RegisterVar2 |-] 
		>> node_127 
		reset 
	else 
		[RegisterVar2 ++] 
	endif 
	return 
endf 

def node_112
	-> black_diablos.bind_voice() 
	[RegisterVar6 ++] 
	[RegisterVar6 ++] 
	>> node_110 
	return 
endf 

def node_113
	if self.distance_3d_to_target().leq(1500) 
		>> node_110 
		random (60) >> node_082 
		elser (40) >> node_084 
		endr 
	else 
		random (70) >> node_042 
					>> node_079 
		elser (30) >> node_127 
		endr 
	endif 
	return 
endf 

def node_114
	if function#2D(1) 
		return 
	elif self.target.helpless_0() 
		random (90) 
					if self.distance_2d_to_target().leq(500) 
					else 
						>> node_110 
					endif 
		elser (10) 
		endr 
	else 
	endif 
	return 
endf 

def node_115
	if self.enraged() 
		if [RegisterVar6 <= 6] 
			random (70) >> node_126 
			elser (15) >> node_123 
			elser (15) >> node_125 
			endr 
		elif [RegisterVar6 <= 4] 
			random (50) >> node_123 
			elser (50) >> node_125 
			endr 
		elif [RegisterVar6 <= 3] 
			random (70) >> node_117 
			elser (30) >> node_122 
			endr 
		elif [RegisterVar6 <= 2] 
			random (30) >> node_117 
			elser (70) >> node_122 
			endr 
		else 
			>> node_084 
		endif 
	elif self.fatigued() 
		if [RegisterVar6 <= 2] 
			random (30) >> node_116 
			elser (70) >> node_122 
			endr 
		else 
			>> node_116 
		endif 
	else 
		if [RegisterVar6 <= 4] 
			random (50) >> node_123 
			elser (50) >> node_124 
			endr 
		elif [RegisterVar6 <= 3] 
			random (70) >> node_117 
			elser (30) >> node_122 
			endr 
		elif [RegisterVar6 <= 2] 
			random (30) >> node_117 
			elser (70) >> node_122 
			endr 
		else 
			>> node_084 
		endif 
	endif 
	return 
endf 

def node_116
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_069 
		>> node_070 
	endif 
	[RegisterVar6 |-] 
	return 
endf 

def node_117
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_069 
		>> node_071 
		>> node_118 
	endif 
	[RegisterVar6 |-] 
	return 
endf 

def node_118
	if self.angle_2d_cw_between(150,210) 
		>> node_121 
	elif self.angle_2d_cw_between(45,150) 
		>> node_120 
	elif self.angle_2d_cw_between(210,315) 
		>> node_120 
	else 
		>> node_119 
	endif 
	return 
endf 

def node_119
	if self.enraged() 
		if self.distance_3d_to_target().leq(1100) 
			if self.angle_2d_cw_between(335,25) 
				random (60) >> node_078 
				elser (40) >> node_140 
				endr 
			else 
				>> node_110 
				random (40) >> node_079 
				elser (60) >> node_140 
				endr 
			endif 
		else 
			random (70) >> node_140 
			elser (20) >> node_041 
			elser (10) 
			endr 
		endif 
	else 
		if self.distance_3d_to_target().leq(1100) 
			if self.angle_2d_cw_between(335,25) 
				random (80) >> node_078 
				elser (20) >> node_140 
				endr 
			else 
				random (70) >> node_079 
				elser (30) >> node_140 
				endr 
			endif 
		else 
			>> node_110 
			random (40) >> node_140 
			elser (40) >> node_041 
			elser (20) 
			endr 
		endif 
	endif 
	return 
endf 

def node_120
	if self.enraged() 
		if self.distance_3d_to_target().leq(1100) 
			random (50) >> node_081 
			elser (35) >> node_140 
			elser (15) >> node_082 
			endr 
		else 
			>> node_110 
			random (65) >> node_140 
			elser (35) 
			endr 
		endif 
	else 
		if self.distance_3d_to_target().leq(1100) 
			random (70) >> node_081 
			elser (30) >> node_082 
			endr 
		else 
			>> node_110 
			random (30) >> node_140 
			elser (70) 
			endr 
		endif 
	endif 
	return 
endf 

def node_121
	if self.enraged() 
		if self.distance_3d_to_target().leq(1100) 
			random (45) >> node_080 
			elser (35) >> node_140 
			elser (20) >> node_082 
			endr 
		else 
			>> node_110 
			random (65) >> node_140 
			elser (35) 
			endr 
		endif 
	else 
		if self.distance_3d_to_target().leq(1100) 
			random (75) >> node_080 
			elser (25) >> node_082 
			endr 
		else 
			>> node_110 
			random (30) >> node_140 
			elser (70) 
			endr 
		endif 
	endif 
	return 
endf 

def node_122
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_074 
	endif 
	[RegisterVar6 |-] 
	return 
endf 

def node_123
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_075 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_074 
	endif 
	[RegisterVar6 |-] 
	return 
endf 

def node_124
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_075 
		>> node_068 
		>> node_069 
		>> node_070 
	endif 
	[RegisterVar6 |-] 
	return 
endf 

def node_125
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_075 
		>> node_068 
		>> node_069 
		>> node_071 
		>> node_118 
	endif 
	[RegisterVar6 |-] 
	return 
endf 

def node_126
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_075 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_075 
		>> node_068 
		>> node_069 
		>> node_070 
	endif 
	[RegisterVar6 |-] 
	return 
endf 

def node_127
	if self.distance_3d_to_target().leq(1000) 
		>> node_018 
	elif self.angle_2d_cw_between(90,270) 
		>> node_018 
	else 
	endif 
	if self.angle_2d_cw_between(15,180) 
		>> node_128 
	elif self.angle_2d_cw_between(180,345) 
		>> node_132 
	else 
		if self.in_map(st.Wildspire_Waste).in_area(6) 
			-> black_diablos.rush_headbutt2() 
		else 
			>> node_136 
		endif 
	endif 
	return 
endf 

def node_128
	if self.enraged() 
		[RegisterVar6 ++] 
		if [RegisterVar6 <= 4] 
			random (15) -> black_diablos.rush_headbutt_curve_l() 
			elser (60) >> node_131 
			elser (25) >> node_129 
			endr 
		elif [RegisterVar6 <= 3] 
			random (35) -> black_diablos.rush_headbutt_curve_l() 
			elser (40) >> node_129 
			elser (25) >> node_130 
			endr 
		elif [RegisterVar6 <= 1] 
			random (65) -> black_diablos.rush_headbutt_curve_l() 
			elser (10) >> node_129 
			elser (25) >> node_130 
			endr 
		else 
			-> black_diablos.rush_headbutt_curve_l() 
		endif 
	elif self.fatigued() 
		-> black_diablos.rush_headbutt_curve_l() 
	else 
		if [RegisterVar6 <= 4] 
			random (20) -> black_diablos.rush_headbutt_curve_l() 
			elser (40) >> node_129 
			elser (40) >> node_130 
			endr 
		elif [RegisterVar6 <= 3] 
			random (40) -> black_diablos.rush_headbutt_curve_l() 
			elser (30) >> node_129 
			elser (30) >> node_130 
			endr 
		elif [RegisterVar6 <= 2] 
			random (60) -> black_diablos.rush_headbutt_curve_l() 
			elser (20) >> node_129 
			elser (20) >> node_130 
			endr 
		else 
			-> black_diablos.rush_headbutt_curve_l() 
		endif 
	endif 
	return 
endf 

def node_129
	-> black_diablos.rush_headbutt_curve_l() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	>> node_068 
	>> node_069 
	>> node_071 
	>> node_118 
	[RegisterVar6 |-] 
	reset 
endf 

def node_130
	-> black_diablos.rush_headbutt_curve_l() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	>> node_068 
	>> node_072 
	>> node_073 
	>> node_074 
	[RegisterVar6 |-] 
	reset 
endf 

def node_131
	-> black_diablos.rush_headbutt_curve_l() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	>> node_068 
	>> node_072 
	>> node_073 
	>> node_075 
	>> node_068 
	>> node_069 
	>> node_071 
	>> node_118 
	[RegisterVar6 |-] 
	return 
endf 

def node_132
	if self.enraged() 
		[RegisterVar6 ++] 
		if [RegisterVar6 <= 4] 
			random (15) -> black_diablos.rush_headbutt_curve_r() 
			elser (60) >> node_135 
			elser (25) >> node_133 
			endr 
		elif [RegisterVar6 <= 3] 
			random (35) -> black_diablos.rush_headbutt_curve_r() 
			elser (40) >> node_133 
			elser (25) >> node_134 
			endr 
		elif [RegisterVar6 <= 1] 
			random (65) -> black_diablos.rush_headbutt_curve_r() 
			elser (10) >> node_133 
			elser (25) >> node_134 
			endr 
		else 
			-> black_diablos.rush_headbutt_curve_r() 
		endif 
	elif self.fatigued() 
		-> black_diablos.rush_headbutt_curve_r() 
	else 
		if [RegisterVar6 <= 4] 
			random (20) -> black_diablos.rush_headbutt_curve_r() 
			elser (40) >> node_133 
			elser (40) >> node_134 
			endr 
		elif [RegisterVar6 <= 3] 
			random (40) -> black_diablos.rush_headbutt_curve_r() 
			elser (30) >> node_133 
			elser (30) >> node_134 
			endr 
		elif [RegisterVar6 <= 2] 
			random (60) -> black_diablos.rush_headbutt_curve_r() 
			elser (20) >> node_133 
			elser (20) >> node_134 
			endr 
		else 
			-> black_diablos.rush_headbutt_curve_r() 
		endif 
	endif 
	return 
endf 

def node_133
	-> black_diablos.rush_headbutt_curve_r() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	>> node_068 
	>> node_069 
	>> node_071 
	>> node_118 
	[RegisterVar6 |-] 
	reset 
endf 

def node_134
	-> black_diablos.rush_headbutt_curve_r() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	>> node_068 
	>> node_072 
	>> node_073 
	>> node_074 
	[RegisterVar6 |-] 
	reset 
endf 

def node_135
	-> black_diablos.rush_headbutt_curve_r() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	>> node_068 
	>> node_072 
	>> node_073 
	>> node_075 
	>> node_068 
	>> node_069 
	>> node_071 
	>> node_118 
	[RegisterVar6 |-] 
	return 
endf 

def node_136
	if self.enraged() 
		[RegisterVar6 ++] 
		if [RegisterVar6 <= 4] 
			random (15) -> black_diablos.rush_headbutt() 
			elser (60) >> node_139 
			elser (25) >> node_137 
			endr 
		elif [RegisterVar6 <= 3] 
			random (35) -> black_diablos.rush_headbutt() 
			elser (40) >> node_137 
			elser (25) >> node_138 
			endr 
		elif [RegisterVar6 <= 1] 
			random (65) -> black_diablos.rush_headbutt() 
			elser (10) >> node_137 
			elser (25) >> node_138 
			endr 
		else 
			-> black_diablos.rush_headbutt() 
		endif 
	elif self.fatigued() 
		-> black_diablos.rush_headbutt() 
	else 
		if [RegisterVar6 <= 4] 
			random (20) -> black_diablos.rush_headbutt() 
			elser (40) >> node_137 
			elser (40) >> node_138 
			endr 
		elif [RegisterVar6 <= 3] 
			random (40) -> black_diablos.rush_headbutt() 
			elser (30) >> node_137 
			elser (30) >> node_138 
			endr 
		elif [RegisterVar6 <= 2] 
			random (60) -> black_diablos.rush_headbutt() 
			elser (20) >> node_137 
			elser (20) >> node_138 
			endr 
		else 
			-> black_diablos.rush_headbutt() 
		endif 
	endif 
	return 
endf 

def node_137
	-> black_diablos.rush_headbutt() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	>> node_068 
	>> node_069 
	>> node_071 
	>> node_118 
	[RegisterVar6 |-] 
	reset 
endf 

def node_138
	-> black_diablos.rush_headbutt() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	>> node_068 
	>> node_072 
	>> node_073 
	>> node_074 
	[RegisterVar6 |-] 
	reset 
endf 

def node_139
	-> black_diablos.rush_headbutt() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	>> node_068 
	>> node_072 
	>> node_073 
	>> node_075 
	>> node_068 
	>> node_069 
	>> node_071 
	>> node_118 
	[RegisterVar6 |-] 
	return 
endf 

def node_140
	if self.distance_3d_to_target().leq(1000) 
		>> node_018 
	elif self.angle_2d_cw_between(90,270) 
		>> node_018 
	else 
	endif 
	if self.angle_2d_cw_between(15,180) 
		random (80) >> node_144 
		elser (20) -> black_diablos.rush_headbutt_curve_l() 
		endr 
	elif self.angle_2d_cw_between(180,345) 
		random (80) >> node_147 
		elser (20) -> black_diablos.rush_headbutt_curve_r() 
		endr 
	else 
		if self.in_map(st.Wildspire_Waste).in_area(6) 
			-> black_diablos.rush_headbutt2() 
		else 
			if self.fatigued() 
				-> black_diablos.rush_headbutt() 
			elif self.enraged() 
				random (80) >> node_141 
				elser (20) -> black_diablos.rush_headbutt() 
				endr 
			else 
				random (50) >> node_141 
				elser (50) -> black_diablos.rush_headbutt() 
				endr 
			endif 
		endif 
	endif 
	return 
endf 

def node_141
	if self.enraged() 
		random (25) >> node_142 
		elser (75) >> node_143 
		endr 
	else 
		random (45) >> node_142 
		elser (55) >> node_143 
		endr 
	endif 
	return 
endf 

def node_142
	-> black_diablos.rush_headbutt() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() 
	>> node_068 
	>> node_069 
	>> node_071 
	>> node_118 
	reset 
endf 

def node_143
	-> black_diablos.rush_headbutt() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() 
	>> node_068 
	>> node_072 
	>> node_073 
	>> node_074 
	reset 
endf 

def node_144
	if self.enraged() 
		random (25) >> node_145 
		elser (75) >> node_146 
		endr 
	else 
		random (45) >> node_145 
		elser (55) >> node_146 
		endr 
	endif 
	return 
endf 

def node_145
	-> black_diablos.rush_headbutt_curve_l() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() 
	>> node_068 
	>> node_069 
	>> node_071 
	>> node_118 
	reset 
endf 

def node_146
	-> black_diablos.rush_headbutt_curve_l() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() 
	>> node_068 
	>> node_072 
	>> node_073 
	>> node_074 
	reset 
endf 

def node_147
	if self.enraged() 
		random (25) >> node_148 
		elser (75) >> node_149 
		endr 
	else 
		random (45) >> node_148 
		elser (55) >> node_149 
		endr 
	endif 
	return 
endf 

def node_148
	-> black_diablos.rush_headbutt_curve_r() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() 
	>> node_068 
	>> node_069 
	>> node_071 
	>> node_118 
	reset 
endf 

def node_149
	-> black_diablos.rush_headbutt_curve_r() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() 
	>> node_068 
	>> node_072 
	>> node_073 
	>> node_074 
	reset 
endf 

def node_150
	if self.enraged() 
		random (25) >> node_152 
		elser (75) >> node_151 
		endr 
	elif self.fatigued() 
		random (70) >> node_152 
		elser (30) >> node_151 
		endr 
	else 
		random (45) >> node_152 
		elser (55) >> node_151 
		endr 
	endif 
	return 
endf 

def node_151
	if self.enraged() 
		random (50) >> node_153 
					>> node_110 
					>> node_061 
		elser (50) >> node_155 
		endr 
	elif self.fatigued() 
		>> node_065 
		>> node_031 
	else 
		random (50) >> node_153 
		elser (50) >> node_154 
		endr 
	endif 
	return 
endf 

def node_152
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_069 
		if self.fatigued() 
			>> node_070 
		else 
			>> node_071 
			>> node_118 
		endif 
	endif 
	return 
endf 

def node_153
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_075 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_074 
	endif 
	return 
endf 

def node_154
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_075 
		>> node_068 
		>> node_069 
		>> node_070 
	endif 
	return 
endf 

def node_155
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_067 
		>> node_068 
		>> node_072 
		>> node_073 
		>> node_075 
		>> node_068 
		>> node_069 
		>> node_071 
		>> node_118 
	endif 
	return 
endf 

def node_156
endf 

def node_157
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_171 
	return 
endf 

def node_158
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_slant() 
	>> node_184 
	return 
endf 

def node_159
	>> node_206 
	>> node_205 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_171 
	return 
endf 

def node_160
	>> node_206 
	>> node_205 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_slant() 
	>> node_184 
	return 
endf 

def node_161
	>> node_206 
	>> node_205 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	>> node_170 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_171 
	return 
endf 

def node_162
	>> node_206 
	>> node_205 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	>> node_170 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_slant() 
	>> node_184 
	return 
endf 

def node_163
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_slant() 
	>> node_184 
	return 
endf 

def node_164
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	>> node_170 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_171 
	return 
endf 

def node_165
	>> node_206 
	>> node_205 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_slant() 
	>> node_184 
	return 
endf 

def node_166
	>> node_206 
	>> node_205 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	>> node_170 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_171 
	return 
endf 

def node_167
	>> node_206 
	>> node_205 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	>> node_170 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_169 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_slant() 
	>> node_184 
	return 
endf 

def node_168
	>> node_206 
	>> node_205 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	>> node_170 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	>> node_170 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	>> node_171 
	return 
endf 

def node_169
	if self.in_map(st.Wildspire_Waste).in_area(6) 
		-> black_diablos.rush_headbutt_stop2() 
		if function#4A() 
			>> node_041 
			>> node_079 
			reset 
		else 
			-> black_diablos.dive_to_ground_quick() 
		endif 
	else 
		-> black_diablos.rush_headbutt_stop() 
		if function#4A() 
			>> node_041 
			>> node_079 
			reset 
		else 
			-> black_diablos.dive_to_ground_quick() 
		endif 
	endif 
	return 
endf 

def node_170
	-> black_diablos.appear_attack_slant_stop() 
	if function#4A() 
		>> node_041 
		>> node_079 
		reset 
	else 
		-> black_diablos.dive_to_ground_quick() 
	endif 
	return 
endf 

def node_171
	>> node_173 
	if [RegisterVar1 <= 4] 
		[RegisterVar1 |-] 
		>> node_177 
		reset 
	elif [RegisterVar1 <= 3] 
		if self.enraged() 
			random (90) 
						[RegisterVar1 |-] 
						>> node_177 
			elser (10) 
						>> node_172 
			endr 
		else 
			random (70) 
						[RegisterVar1 |-] 
						>> node_177 
			elser (30) 
						>> node_172 
			endr 
		endif 
	elif [RegisterVar1 <= 2] 
		if self.enraged() 
			random (60) 
						[RegisterVar1 |-] 
						>> node_177 
			elser (40) 
						>> node_172 
			endr 
		else 
			random (40) 
						[RegisterVar1 |-] 
						>> node_177 
			elser (60) 
						>> node_172 
			endr 
		endif 
	else 
		if self.enraged() 
			random (40) 
						[RegisterVar1 |-] 
						>> node_177 
			elser (60) 
						>> node_172 
			endr 
		else 
			random (20) 
						[RegisterVar1 |-] 
						>> node_177 
			elser (80) 
						>> node_172 
			endr 
		endif 
	endif 
	return 
endf 

def node_172
	if self.distance_3d_to_target().leq(500) 
		random (30) 
					-> black_diablos.corner_turn_attack() 
		elser (70) 
					if self.angle_2d_cw_between(0,180) 
						-> black_diablos.side_tackle_r() 
					else 
						-> black_diablos.side_tackle_l() 
					endif 
		endr 
	elif self.distance_3d_to_target().leq(900) 
		random (70) 
					-> black_diablos.corner_turn_attack() 
		elser (30) 
					-> black_diablos.corner_swing_attack() 
		endr 
	else 
		random (50) 
					>> node_183 
					>> node_184 
		elser (50) 
					-> black_diablos.corner_swing_attack() 
		endr 
	endif 
	return 
endf 

def node_173
	[RegisterVar1 ++] 
	return 
endf 

def node_174
	if function#2D(1) 
		return 
	else 
		if [RegisterVar7 <= 20] 
			[RegisterVar7 |-] 
			>> node_176 
			reset 
		elif [RegisterVar7 <= 17] 
			if self.enraged() 
				random (70) 
							[RegisterVar7 |-] 
							>> node_176 
							reset 
				elser (30) 
				endr 
			else 
				random (50) 
							[RegisterVar7 |-] 
							>> node_176 
							reset 
				elser (50) 
				endr 
			endif 
		elif [RegisterVar7 <= 14] 
			if self.enraged() 
				random (40) 
							[RegisterVar7 |-] 
							>> node_176 
							reset 
				elser (60) 
				endr 
			else 
				random (20) 
							[RegisterVar7 |-] 
							>> node_176 
							reset 
				elser (80) 
				endr 
			endif 
		elif [RegisterVar7 <= 10] 
			if self.enraged() 
				random (30) 
							[RegisterVar7 |-] 
							>> node_176 
							reset 
				elser (70) 
				endr 
			else 
				random (10) 
							[RegisterVar7 |-] 
							>> node_176 
							reset 
				elser (90) 
				endr 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_175
	[RegisterVar7 ++] 
	return 
endf 

def node_176
	>> node_007 
	if self.distance_2d_to_target().leq(600) 
		>> node_015 
	else 
		>> node_059 
	endif 
	if self.enraged() 
		-> black_diablos.guard_unable_rush() 
	else 
		-> black_diablos.rush_headbutt_strong() 
	endif 
	if self.fatigued() 
		>> node_031 
	else 
		>> node_207 
	endif 
	return 
endf 

def node_177
	>> node_007 
	>> node_059 
	if self.enraged() 
		-> black_diablos.guard_unable_rush() 
	else 
		-> black_diablos.rush_headbutt_strong() 
	endif 
	if self.fatigued() 
		>> node_031 
	else 
		>> node_207 
	endif 
	return 
endf 

def node_178
	if self.in_map(st.Wildspire_Waste).in_area(6) 
		[RegisterVar3 ++] 
	else 
		[RegisterVar3 |-] 
		return 
	endif 
	if [RegisterVar3 <= 10] 
		random (30) >> node_179 
		elser (35) >> node_180 
		elser (35) >> node_181 
		endr 
		reset 
	else 
	endif 
	return 
endf 

def node_179
	[RegisterVar3 |-] 
	-> black_diablos.rush_headbutt() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	self.targetEnemy(53) 
	-> black_diablos.dive_move_to_wall() 
	self.targetEnemy(target_em.random_player_or_cat) 
	-> black_diablos.appear_attack_from_wall() 
	return 
endf 

def node_180
	[RegisterVar3 |-] 
	>> node_204 
	>> node_205 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(0,1,0,0,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_vertical(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_vertical_fast_turn_program() 
	if self.in_map(st.Wildspire_Waste).in_area(6) 
		-> black_diablos.rush_headbutt2() @ comboSetting:1 
		-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	else 
		-> black_diablos.rush_headbutt() @ comboSetting:1 
		-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	endif 
	self.targetEnemy(53) 
	-> black_diablos.dive_move_to_wall() 
	self.targetEnemy(target_em.random_player_or_cat) 
	-> black_diablos.appear_attack_from_wall() 
	return 
endf 

def node_181
	[RegisterVar3 |-] 
	>> node_204 
	>> node_205 
	if function#49() 
		self.targetArea(57) 
		if self.distance_3d_recalc_to_target().leq(900) 
		else 
			-> black_diablos.dash_diving(2,1,0,1500,900) 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
		else 
			-> black_diablos.dive_attack_slant(2,1,0,4500,500) 
		endif 
	endif 
	-> black_diablos.appear_attack_slant() @ comboSetting:1 
	-> black_diablos.dive_to_ground_quick() @ comboSetting:1 
	self.targetEnemy(53) 
	-> black_diablos.dive_move_to_wall() 
	self.targetEnemy(target_em.random_player_or_cat) 
	-> black_diablos.appear_attack_from_wall() 
	return 
endf 

def node_182
	if self.distance_3d_to_target().leq(600) 
		>> node_018 
	else 
	endif 
	>> node_059 
	if self.angle_2d_cw_between(15,180) 
		-> black_diablos.rush_headbutt_curve_l() 
	elif self.angle_2d_cw_between(180,345) 
		-> black_diablos.rush_headbutt_curve_r() 
	else 
		if self.in_map(st.Wildspire_Waste).in_area(6) 
			-> black_diablos.rush_headbutt2() 
		else 
			-> black_diablos.rush_headbutt() 
		endif 
	endif 
	return 
endf 

def node_183
	>> node_059 
	if self.angle_2d_cw_between(15,180) 
		-> black_diablos.rush_headbutt_curve_l() 
	elif self.angle_2d_cw_between(180,345) 
		-> black_diablos.rush_headbutt_curve_r() 
	else 
		if self.in_map(st.Wildspire_Waste).in_area(6) 
			-> black_diablos.rush_headbutt2() 
		else 
			-> black_diablos.rush_headbutt() 
		endif 
	endif 
	return 
endf 

def node_184
	if function#2D(1) 
	else 
		>> node_185 
	endif 
	return 
endf 

def node_185
	random (80) 
				if self.distance_3d_to_target().leq(1500) 
					>> node_084 
				else 
					>> node_042 
					>> node_079 
				endif 
	elser (20) 
	endr 
	>> node_207 
	return 
endf 

def node_186
	if function#101(1500,30) 
		if self.distance_3d_to_target().gt(800) 
			if self.fatigued() 
				-> black_diablos.rush_headbutt() 
			else 
				random (50) >> node_157 
				elser (50) >> node_158 
				endr 
				reset 
			endif 
		else 
			return 
		endif 
	elif function#101(3000,15) 
		if self.distance_3d_to_target().gt(800) 
			if self.fatigued() 
				-> black_diablos.rush_headbutt() 
			else 
				random (50) >> node_157 
				elser (50) >> node_158 
				endr 
				reset 
			endif 
		else 
			return 
		endif 
	else 
	endif 
	return 
endf 

def node_187
	if self.in_map(st.Wildspire_Waste).in_area(3) 
		if self.distance_3d_to_target().gt(1100) 
			random (20) >> node_161 
			elser (80) >> node_041 
			endr 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_188
	>> node_044 
	random (50) >> node_079 
	elser (25) >> node_078 
	elser (25) >> node_162 
	endr 
	return 
endf 

def node_189
	>> node_044 
	>> node_044 
	if self.distance_2d_to_target().leq(3000) 
		if self.above_target() 
			if self.distance_3d_to_target().leq(1000) 
				>> node_015 
			else 
			endif 
		else 
			>> node_041 
			-> black_diablos.jump_wall_down() 
		endif 
		random (30) >> node_162 
		elser (20) >> node_058 
					>> node_034 
		elser (20) >> node_078 
		elser (30) >> node_079 
		endr 
	else 
		>> node_032 
	endif 
	return 
endf 

def node_190
	>> node_041 
	>> node_081 
	return 
endf 

def node_191
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.vertical_distance_to_target().leq(1500) 
				if self.distance_3d_to_target().leq(3000) 
					if self.target_is(em.Barroth) 
						>> node_198 
					elif self.target_is(em.Rathian) 
						>> node_198 
					elif self.target_is(em.Pink_Rathian) 
						>> node_198 
					elif self.target_is(em.Diablos) 
						>> node_198 
					elif self.target_is(em.Black_Diablos) 
						>> node_198 
					elif function#30(2) 
						>> node_192 
					else 
						>> node_193 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_192
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		if [RegisterVar4 <= 8] 
			>> node_197 
			return 
		else 
		endif 
	endif 
	if self.target.in_combat() 
		random (25) >> node_194 
		elser (20) >> node_195 
		elser (55) >> node_196 
		elser (0) >> node_199 
		endr 
	else 
		random (35) >> node_194 
		elser (50) >> node_195 
		elser (15) >> node_196 
		elser (0) >> node_199 
		endr 
	endif 
	return 
endf 

def node_193
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		if [RegisterVar4 <= 12] 
			>> node_197 
			return 
		else 
		endif 
	endif 
	if self.target.in_combat() 
		random (15) >> node_194 
		elser (10) >> node_195 
		elser (60) >> node_196 
		elser (15) >> node_199 
		endr 
	else 
		random (35) >> node_194 
		elser (50) >> node_195 
		elser (15) >> node_196 
		elser (0) >> node_199 
		endr 
	endif 
	return 
endf 

def node_194
	[RegisterVar4 ++] 
	return 
endf 

def node_195
	[RegisterVar4 ++] 
	>> node_056 
	>> node_032 
	return 
endf 

def node_196
	if self.vertical_distance_to_target().gt(800) 
		[RegisterVar4 ++] 
		>> node_032 
	elif self.distance_3d_to_target().gt(2500) 
		>> node_041 
		repeat 
	else 
		[RegisterVar4 ++] 
		random (10) >> node_176 
		elser (40) >> node_162 
		elser (50) >> node_158 
		endr 
	endif 
	return 
endf 

def node_197
	[RegisterVar4 |-] 
	self.force_area_change2() 
	return 
endf 

def node_198
	if self.target(39) 
		>> node_194 
	else 
		if self.target.in_combat() 
			random (15) >> node_194 
			elser (25) >> node_195 
			elser (60) >> node_196 
			elser (0) >> node_199 
			endr 
		else 
			random (35) >> node_194 
			elser (50) >> node_195 
			elser (15) >> node_196 
			elser (0) >> node_199 
			endr 
		endif 
	endif 
	return 
endf 

def node_199
	>> node_196 
	>> node_197 
	return 
endf 

def node_200
	[RegisterVar2 ++] 
	if [RegisterVar2 <= 5] 
		[RegisterVar2 |-] 
		if self.enraged() 
			random (30) >> node_163 
			elser (20) >> node_164 
			elser (15) >> node_165 
			elser (10) >> node_166 
			elser (15) >> node_167 
			elser (10) >> node_168 
			endr 
		else 
			random (20) >> node_157 
			elser (30) >> node_158 
			elser (10) >> node_159 
			elser (15) >> node_160 
			elser (10) >> node_161 
			elser (15) >> node_162 
			endr 
		endif 
		reset 
	else 
	endif 
	return 
endf 

def node_201
	if self.enraged() 
		random (60) >> node_064 
		elser (40) >> node_065 
					>> node_184 
		endr 
	else 
		random (30) >> node_064 
		elser (70) >> node_065 
					>> node_184 
		endr 
	endif 
	return 
endf 

def node_202
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_204 
		>> node_205 
		>> node_069 
		>> node_070 
	endif 
	return 
endf 

def node_203
	if function#4A() 
		>> node_041 
		>> node_079 
	else 
		>> node_204 
		>> node_205 
		>> node_072 
		>> node_073 
		>> node_074 
	endif 
	return 
endf 

def node_204
	if self.fatigued() -> black_diablos.dive_to_ground_tired() 
	else -> black_diablos.dive_to_ground_angry() 
	endif 
	return 
endf 

def node_205
	-> black_diablos.diving_wait1() @ parameter1:90 
	return 
endf 

def node_206
	if function#4A() 
		>> node_041 
		>> node_079 
		reset 
	else 
		if self.fatigued() -> black_diablos.dive_to_ground_tired() 
		else -> black_diablos.dive_to_ground_angry() 
		endif 
	endif 
	return 
endf 

def node_207
	if self.quest_id(66851) 
		if self.fatigued() 
			>> node_031 
		else 
			>> node_032 
		endif 
	else 
	endif 
	return 
endf 

