importactions Uragaan as uragaan
importlibrary Global as Global

def node_000 : 1
	>> Global.node_009 
	self.targetEnemy(21) @ parameter2:700 
	>> node_007 
	if self.current_quest().is_rank(rank.MR) 
		self.enraged() >> node_002 => reset 
		self.fatigued() >> node_003 => reset 
		>> node_001 => reset 
	else 
		self.enraged() >> node_005 => reset 
		self.fatigued() >> node_006 => reset 
		>> node_004 => reset 
	endif 
	reset 
endf 

def node_001 : 14
	random (10) >> Global.node_022 
	elser (25) >> Global.node_025 
	elser (40) >> Global.node_028 
	elser (25) >> Global.node_024 
	endrwith >> Global.node_000 
	return 
endf 

def node_002 : 15
	random (10) >> Global.node_022 
	elser (40) >> Global.node_025 
	elser (30) >> Global.node_028 
	elser (20) >> Global.node_024 
	endr 
	return 
endf 

def node_003 : 16
	random (10) >> Global.node_022 
	elser (30) >> Global.node_025 
	elser (15) >> Global.node_028 
	elser (45) >> Global.node_024 
	endr 
	return 
endf 

def node_004 : 2
	random (45) >> Global.node_022 
	elser (25) >> Global.node_025 
	elser (20) >> Global.node_028 
	elser (10) >> Global.node_024 
	endrwith >> Global.node_000 
	return 
endf 

def node_005 : 3
	random (20) >> Global.node_022 
	elser (40) >> Global.node_025 
	elser (30) >> Global.node_028 
	elser (10) >> Global.node_024 
	endr 
	return 
endf 

def node_006 : 4
	random (40) >> Global.node_022 
	elser (20) >> Global.node_025 
	elser (10) >> Global.node_028 
	elser (30) >> Global.node_024 
	endr 
	return 
endf 

def node_007 : 11
	if self.target_on_part(0) -> uragaan.tired() 
		-> uragaan.ride_rage_head() => reset 
	elif self.target_on_part(1) -> uragaan.tired() 
		-> uragaan.ride_rage_body() => reset 
	elif self.target_on_part(2) -> uragaan.tired() 
		-> uragaan.ride_rage_tail() => reset 
	else 
	endif 
	return 
endf 

