importactions Uragaan as uragaan
importlibrary Global as Global

def node_000 : 1
	>> Global.node_009 
	if self.fatigued() 
		random (30) >> node_021 
		elser (70) 
		endr 
	else 
	endif 
	if self.mounted() 
		random (47) >> node_001 
		elser (53) >> node_002 
		endr 
	else 
		random (40) >> node_001 
		elser (60) >> node_002 
		endr 
	endif 
	reset 
endf 

def node_001 : 33
	>> node_029 
	function#A8() 
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#A9(0,1) 
		self.target_on_part(0) >> node_009 => repeat 
		self.target_on_part(1) >> node_009 => repeat 
		self.target_on_part(2) >> node_009 => repeat 
	elif function#A9(0,2) 
		self.target_on_part(0) >> node_003 => repeat 
		self.target_on_part(1) >> node_004 => repeat 
		self.target_on_part(2) >> node_005 => repeat 
	elif function#A9(0,3) 
		self.target_on_part(0) >> node_003 => repeat 
		self.target_on_part(1) >> node_004 => repeat 
		self.target_on_part(2) >> node_005 => repeat 
	elif function#A9(0,4) 
		>> node_006 => repeat 
	else 
		function#A8(1) 
		return 
	endif 
	return 
endf 

def node_002 : 36
	>> node_029 
	function#A8() 
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#A9(0,1) 
		self.target_on_part(0) >> node_009 => repeat 
		self.target_on_part(1) >> node_009 => repeat 
		self.target_on_part(2) >> node_009 => repeat 
	elif function#A9(0,2) 
		>> node_006 => repeat 
	elif function#A9(0,3) 
		self.target_on_part(0) >> node_003 => repeat 
		self.target_on_part(1) >> node_004 => repeat 
		self.target_on_part(2) >> node_005 => repeat 
	elif function#A9(0,4) 
		>> node_006 => repeat 
	else 
		function#A8(1) 
		return 
	endif 
	return 
endf 

def node_003 : 2
	if self.mounted() 
		>> node_010 
	else 
		>> node_011 
	endif 
	return 
endf 

def node_004 : 3
	if self.mounted() 
		>> node_012 
	else 
		>> node_013 
	endif 
	return 
endf 

def node_005 : 4
	if self.mounted() 
		>> node_014 
	else 
		>> node_015 
	endif 
	return 
endf 

def node_006 : 38
	if self.mounted() 
		>> node_007 
	else 
		>> node_008 
	endif 
	return 
endf 

def node_007 : 11
	if function#29() 
		self.targetArea(7) 
		>> node_019 
		self.targetArea(15) 
		self.target_on_part(0) -> uragaan.ride_rage_crash_head() => return 
		self.target_on_part(1) -> uragaan.ride_rage_crash_body() => return 
		self.target_on_part(2) -> uragaan.ride_rage_crash_tail() => return 
	else 
		self.target_on_part(0) >> node_011 => return 
		self.target_on_part(1) >> node_013 => return 
		self.target_on_part(2) >> node_015 => return 
	endif 
	return 
endf 

def node_008 : 12
	if function#29() 
		self.targetArea(7) 
		>> node_019 
		self.targetArea(15) 
		self.target_on_part(0) -> uragaan.ride_rage_crash_head_lv2() => return 
		self.target_on_part(1) -> uragaan.ride_rage_crash_body_lv2() => return 
		self.target_on_part(2) -> uragaan.ride_rage_crash_tail_lv2() => return 
	else 
		>> node_016 => return 
	endif 
	return 
endf 

def node_009 : 41
	if self.mounted() 
		>> node_020 
	else 
	endif 
	return 
endf 

def node_010 : 24
	-> uragaan.turn_ago_attack() 
	return 
endf 

def node_011 : 25
	>> node_022 
	-> uragaan.ride_rage_head() 
	return 
endf 

def node_012 : 26
	>> node_022 
	>> Global.node_027 
	return 
endf 

def node_013 : 27
	-> uragaan.ride_rage_body() 
	return 
endf 

def node_014 : 28
	-> uragaan.ride_rage_tail() 
	return 
endf 

def node_015 : 29
	-> uragaan.ride_rage_tail_lv2() 
	return 
endf 

def node_016 : 30
	>> node_022 
	-> uragaan.ride_rage_body() 
	return 
endf 

def node_017 : 45
	if self.angular_17(330,30) 
		-> uragaan.quick_turn() 
	else 
	endif 
	-> uragaan.jump_attack_high() 
	return 
endf 

def node_018 : 46
	if self.fatigued() 
		-> uragaan.tired_dash(2,6,0,1500,500) 
	else 
		-> uragaan.dash(2,6,0,1500,500) 
	endif 
	return 
endf 

def node_019 : 23
	if self.distance_2d_to_target().leq(500) 
		-> uragaan.back_turn() 
	elif self.distance_2d_to_target().gt(3500) 
		>> node_018 
		repeat 
	else 
	endif 
	if self.fatigued() 
		-> uragaan.tired_dash(6,0,0,300) 
	else 
		-> uragaan.dash(6,0,0,300) 
	endif 
	return 
endf 

def node_020 : 37
	-> uragaan.wait() 
	return 
endf 

def node_021 : 31
	-> uragaan.tired() 
	return 
endf 

def node_022 : 42
	random (20) >> node_023 
	elser (80) >> node_024 
	endr 
	>> node_028 
	return 
endf 

def node_023 : 43
	self.targetEnemy(21) @ parameter2:1000 
	return 
endf 

def node_024 : 44
	self.targetEnemy(22) @ parameter2:1000 
	return 
endf 

def node_025 : 17
	random (48) >> node_026 
	elser (52) >> node_027 
	endr 
	return 
endf 

def node_026 : 18
	self.targetEnemy(12) @ parameter2:1000 
	return 
endf 

def node_027 : 19
	self.targetEnemy(11) @ parameter2:1000 
	return 
endf 

def node_028 : 32
	if self.angular_17(300,60) 
		-> uragaan.quick_turn() 
	else 
	endif 
	return 
endf 

def node_029 : 21
	if function#3B() 
		if self.mount_staggered_twice() 
			>> node_030 
		endif 
	else 
		if self.mount_finisher_ready() 
			if self.mounted() 
				random (60) >> node_030 
				elser (40) 
				endr 
			else 
				random (100) >> node_030 
				elser (0) 
				endr 
			endif 
		elif self.mount_stabbed() 
			if self.mounted() 
				random (40) >> node_030 
				elser (60) 
				endr 
			else 
				random (60) >> node_030 
				elser (40) 
				endr 
			endif 
		endif 
	endif 
	return 
endf 

def node_030 : 22
	-> uragaan.ride_tired() 
	return 
endf 

