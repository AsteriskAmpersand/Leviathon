importactions Uragaan as uragaan
importlibrary Global as Global

def node_000
	>> Global.node_009 
	>> Global.node_001 
	>> Global.node_011 
	>> node_001 
	reset 
endf 

def node_001
	self.targetEnemy(48) 
	if self.in_map(st.Challenge_Arena).in_area(-1) 
		>> node_004 
	elif self.distance_3d_to_target().leq(3500) 
		>> node_002 
	else 
		>> node_003 
	endif 
	return 
endf 

def node_002
	>> node_005 
	if self.fatigued() 
		-> uragaan.tired() 
	else 
		-> uragaan.wait() 
	endif 
	return 
endf 

def node_003
	if self.targetEnemy(48) 
		random (20) >> node_005 
		elser (80) 
		endr 
	else 
	endif 
	if self.enraged() 
		random (25) -> uragaan.combat_search() 
		elser (35) -> uragaan.anger_search() 
		elser (20) -> uragaan.sniff_s() 
		elser (20) -> uragaan.sniff_l() 
		endr 
	elif self.fatigued() 
		random (25) -> uragaan.combat_search() 
		elser (25) -> uragaan.sniff_s() 
		elser (25) -> uragaan.sniff_l() 
		elser (25) -> uragaan.tired() 
		endr 
	else 
		random (35) -> uragaan.combat_search() 
		elser (25) -> uragaan.sniff_s() 
		elser (25) -> uragaan.sniff_l() 
		elser (15) -> uragaan.wait() 
		endr 
	endif 
	return 
endf 

def node_004
	>> node_005 
	if self.fatigued() 
		random (35) -> uragaan.tired() 
		elser (45) -> uragaan.combat_search() 
		elser (20) -> uragaan.threat_short() 
		endr 
	else 
		random (35) -> uragaan.wait() 
		elser (45) -> uragaan.combat_search() 
		elser (20) -> uragaan.threat_short() 
		endr 
	endif 
	return 
endf 

def node_005
	if self.distance_3d_to_target().leq(800) 
		-> uragaan.back_turn() 
	elif self.angle_2d_cw_between(50,310) 
		-> uragaan.quick_turn() 
	else 
		*&
	endif 
	return 
endf 

def node_006
	if self.angle_2d_cw_between(120,240) 
		-> uragaan.quick_turn() 
	else 
		*&
	endif 
	return 
endf 

