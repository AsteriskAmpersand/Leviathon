importactions Great_Girros as great_girros
importlibrary Global as Global

def node_000 : 120
	if self.current_quest().is_rank(rank.MR) 
		>> node_001 
	else 
		>> node_002 
	endif 
	reset 
endf 

def node_001 : 119
	>> node_003 
	>> node_009 
	>> Global.node_126 
	>> node_026 
	reset 
endf 

def node_002 : 1
	>> node_003 
	>> node_009 
	>> Global.node_126 
	>> Global.node_127 
	>> node_010 
	reset 
endf 

def node_003 : 113
	if self.target_on_part(0) 
		>> node_004 
	elif self.target_on_part(1) 
		>> node_004 
	else 
	endif 
	return 
endf 

def node_004 : 117
	>> node_006 
	reset 
endf 

def node_005 : 118
	random (50) >> Global.node_035 
	elser (50) 
	endr 
	return 
endf 

def node_006 : 114
	if self.mounted() 
		>> node_007 
	else 
		>> node_008 
	endif 
	return 
endf 

def node_007 : 115
	>> Global.node_023 
	if self.target_on_part(0) 
		>> Global.node_024 
	else 
		>> Global.node_026 
	endif 
	return 
endf 

def node_008 : 116
	>> Global.node_023 
	if self.target_on_part(0) 
		>> Global.node_025 
	else 
		>> Global.node_027 
	endif 
	return 
endf 

def node_009 : 112
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	return 
endf 

def node_010 : 2
	if self.distance_2d_to_target().leq(500) 
		if self.enraged() >> node_011 
		elif self.fatigued() >> node_021 
		else >> node_011 
		endif 
	elif self.distance_2d_to_target().leq(800) 
		if self.enraged() >> node_012 
		elif self.fatigued() >> node_022 
		else >> node_012 
		endif 
	elif self.distance_2d_to_target().leq(1300) 
		if self.enraged() >> node_018 
		elif self.fatigued() >> node_023 
		else >> node_013 
		endif 
	elif self.distance_2d_to_target().leq(2000) 
		if self.enraged() >> node_019 
		elif self.fatigued() >> node_024 
		else >> node_014 
		endif 
	else 
		if self.enraged() >> node_020 
		elif self.fatigued() >> node_025 
		else >> node_015 
		endif 
	endif 
	return 
endf 

def node_011 : 3
	random (60) >> Global.node_077 
				>> Global.node_081 
	elser (30) >> Global.node_078 
	elser (10) >> Global.node_071 
	elser (0) >> Global.node_079 
	endr 
	return 
endf 

def node_012 : 4
	random (60) >> Global.node_077 
				>> Global.node_081 
	elser (30) >> Global.node_067 
	elser (10) >> Global.node_071 
	elser (0) >> Global.node_079 
	endr 
	return 
endf 

def node_013 : 5
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 4] 
		random (50) >> Global.node_017 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (0) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_014 : 6
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 4] 
		random (50) >> Global.node_017 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (0) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_015 : 7
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	>> Global.node_018 
	>> node_012 
	return 
endf 

def node_016 : 75
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 3] 
		random (55) >> Global.node_080 
		elser (45) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (60) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_081 
		elser (30) >> Global.node_078 
		elser (0) >> Global.node_071 
		elser (10) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_017 : 76
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 3] 
		random (55) >> Global.node_080 
		elser (45) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (60) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_081 
		elser (30) >> Global.node_067 
		elser (0) >> Global.node_071 
		elser (10) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_018 : 77
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 3] 
		random (40) >> Global.node_017 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (10) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_019 : 78
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 3] 
		random (40) >> Global.node_018 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (10) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_020 : 79
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	>> Global.node_016 
	>> node_017 
	return 
endf 

def node_021 : 80
	random (35) >> Global.node_077 
	elser (40) >> Global.node_078 
	elser (15) >> Global.node_069 
	elser (10) >> Global.node_009 
	endr 
	return 
endf 

def node_022 : 81
	random (35) >> Global.node_077 
	elser (40) >> Global.node_067 
	elser (15) >> Global.node_069 
	elser (10) >> Global.node_009 
	endr 
	return 
endf 

def node_023 : 82
	random (20) >> Global.node_017 
				>> Global.node_065 
	elser (20) >> Global.node_017 
				>> Global.node_078 
	elser (50) >> Global.node_069 
	elser (10) >> Global.node_009 
	endr 
	return 
endf 

def node_024 : 83
	random (20) >> Global.node_018 
				>> Global.node_065 
	elser (20) >> Global.node_018 
				>> Global.node_078 
	elser (50) >> Global.node_069 
	elser (10) >> Global.node_009 
	endr 
	return 
endf 

def node_025 : 84
	>> Global.node_018 
	>> node_022 
	return 
endf 

def node_026 : 126
	if self.distance_2d_to_target().leq(500) 
		if self.enraged() >> node_032 
		elif self.fatigued() >> node_037 
		else >> node_027 
		endif 
	elif self.distance_2d_to_target().leq(800) 
		if self.enraged() >> node_033 
		elif self.fatigued() >> node_038 
		else >> node_028 
		endif 
	elif self.distance_2d_to_target().leq(1300) 
		if self.enraged() >> node_034 
		elif self.fatigued() >> node_039 
		else >> node_029 
		endif 
	elif self.distance_2d_to_target().leq(2000) 
		if self.enraged() >> node_035 
		elif self.fatigued() >> node_040 
		else >> node_030 
		endif 
	else 
		if self.enraged() >> node_036 
		elif self.fatigued() >> node_041 
		else >> node_031 
		endif 
	endif 
	return 
endf 

def node_027 : 127
	random (60) >> Global.node_077 
				>> Global.node_081 
	elser (30) >> Global.node_177 
	elser (10) >> Global.node_071 
	elser (0) >> Global.node_079 
	endr 
	return 
endf 

def node_028 : 128
	random (60) >> Global.node_077 
				>> Global.node_081 
	elser (30) >> Global.node_067 
	elser (10) >> Global.node_071 
	elser (0) >> Global.node_079 
	endr 
	return 
endf 

def node_029 : 129
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 4] 
		random (50) >> Global.node_017 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (0) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_030 : 130
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 4] 
		random (50) >> Global.node_017 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (0) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_031 : 131
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	>> Global.node_018 
	>> node_012 
	return 
endf 

def node_032 : 132
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 3] 
		random (55) >> Global.node_080 
		elser (45) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (60) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_081 
		elser (30) >> Global.node_177 
		elser (0) >> Global.node_071 
		elser (10) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_033 : 133
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 3] 
		random (55) >> Global.node_080 
		elser (45) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (60) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_081 
		elser (30) >> Global.node_067 
		elser (0) >> Global.node_071 
		elser (10) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_034 : 134
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 3] 
		random (40) >> Global.node_017 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (10) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_035 : 135
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 3] 
		random (40) >> Global.node_018 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (10) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_036 : 136
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	>> Global.node_016 
	>> node_017 
	return 
endf 

def node_037 : 121
	random (35) >> Global.node_077 
	elser (45) >> Global.node_177 
	elser (15) >> Global.node_069 
	elser (5) >> Global.node_009 
	endr 
	return 
endf 

def node_038 : 122
	random (35) >> Global.node_077 
	elser (45) >> Global.node_067 
	elser (15) >> Global.node_069 
	elser (5) >> Global.node_009 
	endr 
	return 
endf 

def node_039 : 123
	random (25) >> Global.node_017 
				>> Global.node_065 
	elser (25) >> Global.node_017 
				>> Global.node_078 
	elser (45) >> Global.node_069 
	elser (5) >> Global.node_009 
	endr 
	return 
endf 

def node_040 : 124
	random (25) >> Global.node_018 
				>> Global.node_065 
	elser (25) >> Global.node_018 
				>> Global.node_078 
	elser (45) >> Global.node_069 
	elser (5) >> Global.node_009 
	endr 
	return 
endf 

def node_041 : 125
	>> Global.node_018 
	>> node_022 
	return 
endf 

