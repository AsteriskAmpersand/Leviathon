importactions Great_Girros as great_girros
importlibrary Global as Global

def node_000 : 114
	if self.current_quest().is_rank(rank.MR) 
		>> node_001 
	else 
		>> node_002 
	endif 
	reset 
endf 

def node_001 : 113
	>> node_003 
	>> Global.node_137 
	if function#51(0,2500) 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> Global.node_145 
		>> node_021 
		>> Global.node_084 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> Global.node_145 
		>> node_020 
		>> Global.node_084 
	endif 
	reset 
endf 

def node_002 : 1
	>> node_003 
	>> Global.node_137 
	self.targetEnemy(target_em.random_player_or_cat) 
	>> Global.node_145 
	>> node_004 
	>> Global.node_084 
	reset 
endf 

def node_003 : 112
	if [RegisterVar0 <= 4] 
		[RegisterVar0 |-] 
	else 
	endif 
	if self.enraged() 
		if [RegisterVar1 <= 4] 
			[RegisterVar1 |-] 
		else 
		endif 
	else 
		if [RegisterVar1 <= 5] 
			[RegisterVar1 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_004 : 2
	if self.distance_2d_to_target().leq(500) 
		if self.enraged() >> node_010 
		elif self.fatigued() >> node_015 
		else >> node_005 
		endif 
	elif self.distance_2d_to_target().leq(800) 
		if self.enraged() >> node_011 
		elif self.fatigued() >> node_016 
		else >> node_006 
		endif 
	elif self.distance_2d_to_target().leq(1300) 
		if self.enraged() >> node_012 
		elif self.fatigued() >> node_017 
		else >> node_007 
		endif 
	elif self.distance_2d_to_target().leq(2000) 
		if self.enraged() >> node_013 
		elif self.fatigued() >> node_018 
		else >> node_008 
		endif 
	else 
		if self.enraged() >> node_014 
		elif self.fatigued() >> node_019 
		else >> node_009 
		endif 
	endif 
	return 
endf 

def node_005 : 3
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 3] 
		random (65) >> Global.node_080 
		elser (35) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (60) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_081 
		elser (30) >> Global.node_078 
		elser (10) >> Global.node_071 
		elser (0) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_006 : 4
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 3] 
		random (65) >> Global.node_080 
		elser (35) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (60) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_081 
		elser (30) >> Global.node_067 
		elser (10) >> Global.node_071 
		elser (0) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_007 : 5
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 4] 
		random (50) >> Global.node_017 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (0) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_008 : 6
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 4] 
		random (50) >> Global.node_018 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (0) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_009 : 7
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	>> Global.node_019 
	>> node_006 
	return 
endf 

def node_010 : 75
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 3] 
		random (55) >> Global.node_080 
		elser (45) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (60) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_081 
		elser (30) >> Global.node_078 
		elser (0) >> Global.node_071 
		elser (10) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_011 : 76
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 3] 
		random (55) >> Global.node_080 
		elser (45) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (60) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_081 
		elser (30) >> Global.node_067 
		elser (0) >> Global.node_071 
		elser (10) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_012 : 77
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 3] 
		random (40) >> Global.node_017 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (10) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_013 : 78
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 3] 
		random (40) >> Global.node_018 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (10) >> Global.node_079 
		endr 
	else 
		random (40) >> Global.node_076 
		elser (60) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_014 : 79
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	>> Global.node_019 
	>> node_011 
	return 
endf 

def node_015 : 80
	random (35) >> Global.node_077 
	elser (40) >> Global.node_078 
	elser (15) >> Global.node_069 
	elser (10) >> Global.node_009 
	endr 
	return 
endf 

def node_016 : 81
	random (35) >> Global.node_077 
	elser (40) >> Global.node_067 
	elser (15) >> Global.node_069 
	elser (10) >> Global.node_009 
	endr 
	return 
endf 

def node_017 : 82
	random (20) >> Global.node_017 
				>> Global.node_065 
	elser (20) >> Global.node_017 
				>> Global.node_078 
	elser (50) >> Global.node_069 
	elser (10) >> Global.node_009 
	endr 
	return 
endf 

def node_018 : 83
	random (20) >> Global.node_018 
				>> Global.node_065 
	elser (20) >> Global.node_018 
				>> Global.node_078 
	elser (50) >> Global.node_069 
	elser (10) >> Global.node_009 
	endr 
	return 
endf 

def node_019 : 84
	>> Global.node_019 
	>> node_016 
	return 
endf 

def node_020 : 130
	if self.distance_2d_to_target().leq(500) 
		if self.enraged() >> node_028 
		elif self.fatigued() >> node_033 
		else >> node_023 
		endif 
	elif self.distance_2d_to_target().leq(800) 
		if self.enraged() >> node_029 
		elif self.fatigued() >> node_034 
		else >> node_024 
		endif 
	elif self.distance_2d_to_target().leq(1300) 
		if self.enraged() >> node_030 
		elif self.fatigued() >> node_035 
		else >> node_025 
		endif 
	elif self.distance_2d_to_target().leq(2000) 
		if self.enraged() >> node_031 
		elif self.fatigued() >> node_036 
		else >> node_026 
		endif 
	else 
		if self.enraged() >> node_032 
		elif self.fatigued() >> node_037 
		else >> node_027 
		endif 
	endif 
	return 
endf 

def node_021 : 132
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	if self.distance_2d_to_target().leq(500) 
		if self.enraged() >> node_043 
		elif self.fatigued() >> node_048 
		else >> node_038 
		endif 
	elif self.distance_2d_to_target().leq(800) 
		if self.enraged() >> node_044 
		elif self.fatigued() >> node_049 
		else >> node_039 
		endif 
	elif self.distance_2d_to_target().leq(1300) 
		if self.enraged() >> node_045 
		elif self.fatigued() >> node_050 
		else >> node_040 
		endif 
	elif self.distance_2d_to_target().leq(2000) 
		if self.enraged() >> node_046 
		elif self.fatigued() >> node_051 
		else >> node_041 
		endif 
	else 
		if self.enraged() >> node_047 
		elif self.fatigued() >> node_052 
		else >> node_042 
		endif 
	endif 
	return 
endf 

def node_022 : 148
	if function#BC(1,1) 
		>> node_020 
	else 
		>> node_021 
	endif 
	return 
endf 

def node_023 : 115
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 4] 
		random (85) >> Global.node_080 
		elser (15) >> Global.node_070 
					>> Global.node_084 
		endr 
	elif [RegisterVar0 <= 3] 
		random (65) >> Global.node_080 
		elser (35) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (45) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_178 
		elser (25) >> Global.node_177 
		elser (10) >> Global.node_071 
		elser (20) >> Global.node_170 
		elser (0) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_024 : 116
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 4] 
		random (85) >> Global.node_080 
		elser (15) >> Global.node_070 
					>> Global.node_084 
		endr 
	elif [RegisterVar0 <= 3] 
		random (65) >> Global.node_080 
		elser (35) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (60) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_178 
		elser (30) >> Global.node_067 
		elser (10) >> Global.node_071 
		elser (0) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_025 : 117
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 3] 
		random (50) >> Global.node_017 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (0) >> Global.node_079 
		endr 
	else 
		random (30) >> Global.node_076 
		elser (70) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_026 : 118
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 3] 
		random (50) >> Global.node_018 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (0) >> Global.node_079 
		endr 
	else 
		random (30) >> Global.node_076 
		elser (70) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_027 : 119
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	>> Global.node_019 
	>> node_024 
	return 
endf 

def node_028 : 120
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 4] 
		random (90) >> Global.node_080 
		elser (10) >> Global.node_070 
					>> Global.node_084 
		endr 
	elif [RegisterVar0 <= 3] 
		random (55) >> Global.node_080 
		elser (45) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (45) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_178 
		elser (20) >> Global.node_177 
		elser (0) >> Global.node_071 
		elser (25) >> Global.node_170 
		elser (10) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_029 : 121
	[RegisterVar1 |-] 
	[RegisterVar0 ++] 
	if [RegisterVar0 <= 4] 
		random (90) >> Global.node_080 
		elser (10) >> Global.node_070 
					>> Global.node_084 
		endr 
	elif [RegisterVar0 <= 3] 
		random (55) >> Global.node_080 
		elser (45) >> Global.node_070 
					>> Global.node_084 
		endr 
	else 
		random (45) >> Global.node_077 
					>> Global.node_084 
					>> Global.node_178 
		elser (25) >> Global.node_067 
		elser (0) >> Global.node_071 
		elser (20) >> Global.node_172 
		elser (10) >> Global.node_079 
		endr 
	endif 
	return 
endf 

def node_030 : 122
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 3] 
		random (30) >> Global.node_017 
					>> Global.node_065 
					>> Global.node_084 
		elser (40) >> Global.node_069 
					>> Global.node_084 
		elser (20) >> Global.node_172 
					>> Global.node_084 
		elser (10) >> Global.node_079 
		endr 
	else 
		random (20) >> Global.node_076 
		elser (80) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_031 : 123
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if [RegisterVar1 <= 3] 
		random (40) >> Global.node_018 
					>> Global.node_065 
					>> Global.node_084 
		elser (50) >> Global.node_069 
					>> Global.node_084 
		elser (10) >> Global.node_079 
		endr 
	else 
		random (20) >> Global.node_076 
		elser (80) >> Global.node_080 
		endr 
	endif 
	return 
endf 

def node_032 : 124
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	>> Global.node_019 
	>> node_029 
	return 
endf 

def node_033 : 125
	random (32) >> Global.node_077 
	elser (36) >> Global.node_078 
	elser (12) >> Global.node_069 
	elser (16) >> Global.node_170 
	elser (4) >> Global.node_009 
	endr 
	return 
endf 

def node_034 : 126
	random (37) >> Global.node_077 
	elser (42) >> Global.node_067 
	elser (17) >> Global.node_069 
	elser (4) >> Global.node_009 
	endr 
	return 
endf 

def node_035 : 127
	random (22) >> Global.node_017 
				>> Global.node_065 
	elser (22) >> Global.node_017 
				>> Global.node_078 
	elser (52) >> Global.node_069 
	elser (4) >> Global.node_009 
	endr 
	return 
endf 

def node_036 : 128
	random (22) >> Global.node_018 
				>> Global.node_065 
	elser (22) >> Global.node_018 
				>> Global.node_078 
	elser (52) >> Global.node_069 
	elser (4) >> Global.node_009 
	endr 
	return 
endf 

def node_037 : 129
	>> Global.node_019 
	>> node_034 
	return 
endf 

def node_038 : 133
	random (0) >> Global.node_077 
				>> Global.node_084 
				>> Global.node_178 
	elser (50) >> Global.node_176 
	elser (30) >> Global.node_177 
	elser (10) >> Global.node_071 
	elser (10) >> Global.node_170 
	elser (0) >> Global.node_079 
	endr 
	return 
endf 

def node_039 : 134
	random (0) >> Global.node_077 
				>> Global.node_084 
				>> Global.node_178 
	elser (50) >> Global.node_176 
	elser (35) >> Global.node_067 
	elser (15) >> Global.node_071 
	elser (0) >> Global.node_079 
	endr 
	return 
endf 

def node_040 : 135
	random (35) >> Global.node_017 
				>> Global.node_065 
				>> Global.node_084 
	elser (40) >> Global.node_174 
				>> Global.node_084 
	elser (25) >> Global.node_076 
	elser (0) >> Global.node_079 
	endr 
	return 
endf 

def node_041 : 136
	random (35) >> Global.node_018 
				>> Global.node_065 
				>> Global.node_084 
	elser (40) >> Global.node_174 
				>> Global.node_084 
	elser (25) >> Global.node_076 
	elser (0) >> Global.node_079 
	endr 
	return 
endf 

def node_042 : 137
	>> Global.node_019 
	>> node_039 
	return 
endf 

def node_043 : 138
	random (0) >> Global.node_077 
				>> Global.node_084 
				>> Global.node_178 
	elser (40) >> Global.node_176 
	elser (25) >> Global.node_177 
	elser (10) >> Global.node_071 
	elser (15) >> Global.node_170 
	elser (10) >> Global.node_079 
	endr 
	return 
endf 

def node_044 : 139
	random (0) >> Global.node_077 
				>> Global.node_084 
				>> Global.node_178 
	elser (35) >> Global.node_176 
	elser (20) >> Global.node_067 
	elser (15) >> Global.node_071 
	elser (20) >> Global.node_172 
	elser (10) >> Global.node_079 
	endr 
	return 
endf 

def node_045 : 140
	random (20) >> Global.node_017 
				>> Global.node_065 
				>> Global.node_084 
	elser (25) >> Global.node_174 
				>> Global.node_084 
	elser (20) >> Global.node_172 
				>> Global.node_084 
	elser (25) >> Global.node_076 
	elser (10) >> Global.node_079 
	endr 
	return 
endf 

def node_046 : 141
	random (30) >> Global.node_018 
				>> Global.node_065 
				>> Global.node_084 
	elser (35) >> Global.node_174 
				>> Global.node_084 
	elser (25) >> Global.node_076 
	elser (10) >> Global.node_079 
	endr 
	return 
endf 

def node_047 : 142
	>> Global.node_019 
	>> node_044 
	return 
endf 

def node_048 : 143
	random (31) >> Global.node_077 
	elser (35) >> Global.node_078 
	elser (11) >> Global.node_069 
	elser (15) >> Global.node_170 
	elser (8) >> Global.node_009 
	endr 
	return 
endf 

def node_049 : 144
	random (36) >> Global.node_077 
	elser (40) >> Global.node_067 
	elser (16) >> Global.node_069 
	elser (8) >> Global.node_009 
	endr 
	return 
endf 

def node_050 : 145
	random (21) >> Global.node_017 
				>> Global.node_065 
	elser (21) >> Global.node_017 
				>> Global.node_078 
	elser (50) >> Global.node_069 
	elser (8) >> Global.node_009 
	endr 
	return 
endf 

def node_051 : 146
	random (21) >> Global.node_018 
				>> Global.node_065 
	elser (21) >> Global.node_018 
				>> Global.node_078 
	elser (50) >> Global.node_069 
	elser (8) >> Global.node_009 
	endr 
	return 
endf 

def node_052 : 147
	>> Global.node_019 
	>> node_049 
	return 
endf 

