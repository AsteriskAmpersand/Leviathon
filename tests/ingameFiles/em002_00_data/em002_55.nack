importactions Rathalos as rathalos

def node_000
	self.targetEnemy(50) 
	>> node_199 
	conclude 
endf 

def node_001
	if self.flying() 
		if function#AF(5000) 
			-> rathalos.landing() 
		else 
			>> node_004 
		endif 
	else 
	endif 
	return 
endf 

def node_002
	if self.flying() 
	else 
		-> rathalos.take_off() 
	endif 
	return 
endf 

def node_003
	if self.flying() 
	else 
		-> rathalos.take_off(7,0,0,400) 
	endif 
	return 
endf 

def node_004
	self.targetArea(target_area.area_aerial_center) 
	>> node_027 
	self.targetArea(target_area.area_center) 
	-> rathalos.landing() 
	return 
endf 

def node_005
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.walk_tired(2,0,5,1500) 
		else 
			-> rathalos.walk(2,0,5,1500) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_006
	>> node_264 
	self.targetArea(target_area.nearest_entrance) 
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.walk_tired(2,0,5,1500) 
		else 
			-> rathalos.walk(2,0,5,1500) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_007
	>> node_264 
	self.targetArea(target_area.area_center) 
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.walk_tired(2,0,5,1500) 
		else 
			-> rathalos.walk(2,0,5,1500) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_008
	>> node_264 
	self.targetArea(39) 
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.walk_tired(2,0,5,1500) 
		else 
			-> rathalos.walk(2,0,5,1500) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_009
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.dying_walk(2,0,5,1500) 
		repeat 
	endif 
	return 
endf 

def node_010
	if self.quest_id(66852) 
		>> node_316 
	else 
		if self.distance_3d_to_target().leq(600) 
		else 
			if self.fatigued() 
				-> rathalos.dash_tired(2,0,0,1500) 
			else 
				-> rathalos.dash_no_hit(2,0,0,1500) 
			endif 
			repeat 
		endif 
	endif 
	return 
endf 

def node_011
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	return 
endf 

def node_012
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	return 
endf 

def node_013
	if self.distance_2d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	return 
endf 

def node_014
	if self.distance_2d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
	endif 
	return 
endf 

def node_015
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.dying_walk_fly(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_016
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.dying_glide_direct_move(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_017
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> rathalos.dying_glide_direct_move(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_018
	if self.distance_2d_to_target().leq(600) 
	else 
		-> rathalos.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_019
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_020
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.glide(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_021
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.glide_direct_move(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_022
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> rathalos.glide_direct_move(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_023
	if self.distance_2d_to_target().leq(600) 
	else 
		-> rathalos.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_024
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_025
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.glide(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_026
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.glide_direct_move(2,1,0,1500,500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.glide_direct_move(2,1,0,1500,500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.glide_direct_move(2,1,0,1500,500) 
	endif 
	return 
endf 

def node_027
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.glide_direct_move(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_028
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> rathalos.glide_direct_move(2,1,0,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_029
	if self.distance_2d_to_target().leq(600) 
	else 
		-> rathalos.glide_combat(2,1,0,1500,500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> rathalos.glide_combat(2,1,0,1500,500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> rathalos.glide_combat(2,1,0,1500,500) 
	endif 
	return 
endf 

def node_030
	if self.distance_2d_to_target().leq(600) 
	else 
		-> rathalos.glide_combat(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_031
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,1,0,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_032
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> rathalos.glide_direct_move(2,1,0,3000,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> rathalos.glide_direct_move(2,1,0,3000,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> rathalos.glide_direct_move(2,1,0,3000,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> rathalos.glide_direct_move(2,1,0,3000,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> rathalos.glide_direct_move(2,1,0,3000,700) 
	endif 
	return 
endf 

def node_033
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	return 
endf 

def node_034
	if self.distance_2d_to_target().leq(2000) 
	else 
		-> rathalos.glide_combat(2,6,0,3000,1500) 
	endif 
	if self.distance_2d_to_target().leq(2000) 
	else 
		-> rathalos.glide_combat(2,6,0,3000,1500) 
	endif 
	if self.distance_2d_to_target().leq(2000) 
		-> rathalos.glide_combat(2,6,0,3000,1500) 
	else 
	endif 
	if self.distance_2d_to_target().leq(2000) 
	else 
		-> rathalos.glide_combat(2,6,0,3000,1500) 
	endif 
	if self.distance_2d_to_target().leq(2000) 
	else 
		-> rathalos.glide_combat(2,6,0,3000,1500) 
	endif 
	return 
endf 

def node_035
	>> node_001 
	-> rathalos.take_off_switch_pattern_by_dist() 
	>> node_028 
	return 
endf 

def node_036
	if self.flying() 
		-> rathalos.sudden_rise_from_fly() 
	else 
		-> rathalos.sudden_rise() 
	endif 
	return 
endf 

def node_037
	>> node_002 
	-> rathalos.sudden_drop() 
	return 
endf 

def node_038
	if self.flying() 
		-> rathalos.threat_fly() 
	else 
		-> rathalos.threat() 
	endif 
	return 
endf 

def node_039
	if self.flying() 
		-> rathalos.threat_fly_short() 
	else 
		-> rathalos.threat_short() 
	endif 
	return 
endf 

def node_040
	if function#AB() 
		function#AA() 
		>> node_039 
	else 
	endif 
	return 
endf 

def node_041
	if self.flying() 
		-> rathalos.half_lost_search_front_fly() 
	else 
		-> rathalos.half_lost_search_front() 
	endif 
	return 
endf 

def node_042
	if self.flying() 
		-> rathalos.half_lost_search_back_fly() 
	else 
		-> rathalos.half_lost_search_back() 
	endif 
	return 
endf 

def node_043
	if self.flying() 
		-> rathalos.lost_search_fly() 
	else 
		-> rathalos.lost_search() 
	endif 
	return 
endf 

def node_044
	>> node_001 
	if self.in_combat() 
		-> rathalos.idle_tired_combat() 
	elif self.alert_out_of_combat() 
		-> rathalos.idle_tired_combat() 
	else 
		-> rathalos.idle_tired() 
	endif 
	return 
endf 

def node_045
	>> node_001 
	-> rathalos.idle_tired_combat() 
	return 
endf 

def node_046
	if self.flying() 
		-> rathalos.refresh_fly() 
	else 
		-> rathalos.refresh() 
	endif 
	return 
endf 

def node_047
	if self.flying() 
		-> rathalos.sniff_s_fly() 
	else 
		-> rathalos.sniff_combat_s() 
	endif 
	return 
endf 

def node_048
	if self.alert_out_of_combat() 
		if self.flying() 
			-> rathalos.lost_search_fly() 
		else 
			-> rathalos.lost_search() 
		endif 
	elif self.in_combat() 
		if self.flying() 
			-> rathalos.lost_search_fly() 
		else 
			-> rathalos.lost_search() 
		endif 
	else 
		if self.flying() 
			-> rathalos.life_search_fly() 
		else 
			-> rathalos.life_search() 
		endif 
	endif 
	return 
endf 

def node_049
	if self.flying() 
		-> rathalos.intimidation_fly() 
	else 
		-> rathalos.intimidation() 
	endif 
	return 
endf 

def node_050
	self.targetArea(target_area.nearest_entrance) 
	>> node_051 
	return 
endf 

def node_051
	if function#5A(20) 
		>> node_052 
	elif function#5A(21) 
		>> node_052 
	elif function#5A(22) 
		>> node_052 
	elif function#5A(23) 
		>> node_052 
	elif function#5A(24) 
		>> node_052 
	elif function#5A(25) 
		>> node_052 
	elif function#5A(30) 
		>> node_053 
	elif function#5A(31) 
		>> node_053 
	elif function#5A(32) 
		>> node_053 
	elif function#5A(33) 
		>> node_053 
	elif function#5A(34) 
		>> node_053 
	elif function#5A(35) 
		>> node_053 
	else 
		>> node_054 
	endif 
	return 
endf 

def node_052
	if self.distance_3d_to_target().leq(15000) 
		>> node_001 
		>> node_055 
	else 
		>> node_054 
	endif 
	return 
endf 

def node_053
	if self.distance_3d_to_target().leq(15000) 
		>> node_002 
		>> node_055 
	else 
		>> node_054 
	endif 
	return 
endf 

def node_054
	if function#AD() 
		>> node_055 
	else 
		>> node_056 
	endif 
	return 
endf 

def node_055
	if function#5A(10) 
		>> node_002 
	elif function#5A(11) 
		>> node_002 
	elif function#5A(12) 
		>> node_002 
	elif function#5A(13) 
		>> node_002 
	elif function#5A(14) 
		>> node_002 
	elif function#5A(15) 
		>> node_002 
	elif function#5A(30) 
		>> node_002 
	elif function#5A(31) 
		>> node_002 
	elif function#5A(32) 
		>> node_002 
	elif function#5A(33) 
		>> node_002 
	elif function#5A(34) 
		>> node_002 
	elif function#5A(35) 
		>> node_002 
	else 
		>> node_001 
	endif 
	if self.flying() 
		>> node_021 
	else 
		>> node_006 
	endif 
	return 
endf 

def node_056
	>> node_057 
	>> node_058 
	>> node_059 
	>> node_060 
	return 
endf 

def node_057
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_022 
	else 
		self.targetArea(target_area.area_center) 
		>> node_007 
		self.targetArea(target_area.area_aerial_center) 
		>> node_035 
	endif 
	return 
endf 

def node_058
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		self.targetArea(40) 
		>> node_020 
	else 
		self.targetArea(39) 
		>> node_008 
	endif 
	return 
endf 

def node_059
	if function#5A(10) 
	elif function#5A(11) 
	elif function#5A(12) 
	elif function#5A(13) 
	elif function#5A(14) 
	elif function#5A(15) 
	elif function#5A(30) 
	elif function#5A(31) 
	elif function#5A(32) 
	elif function#5A(33) 
	elif function#5A(34) 
	elif function#5A(35) 
	else 
		if self.flying() 
			self.targetArea(target_area.area_center) 
			>> node_001 
		else 
		endif 
	endif 
	return 
endf 

def node_060
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		>> node_021 
	else 
		>> node_006 
	endif 
	return 
endf 

def node_061
	if function#C2() 
		self.targetArea(target_area.next_exit) 
	else 
		self.targetArea(14) 
	endif 
	if function#AD() 
		>> node_062 
	else 
		>> node_063 
	endif 
	>> node_067 
	return 
endf 

def node_062
	if self.flying() 
		self.targetArea(40) 
		>> node_027 
	else 
		>> node_010 
	endif 
	return 
endf 

def node_063
	>> node_064 
	>> node_066 
	return 
endf 

def node_064
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_028 
	else 
		self.targetArea(target_area.area_aerial_center) 
		>> node_035 
	endif 
	return 
endf 

def node_065
	self.targetArea(target_area.area_center) 
	>> node_010 
	self.targetArea(target_area.area_aerial_center) 
	>> node_035 
	return 
endf 

def node_066
	if function#C2() 
		self.targetArea(target_area.next_exit) 
	else 
		self.targetArea(14) 
	endif 
	if self.flying() 
		self.targetArea(40) 
		>> node_025 
	else 
		>> node_010 
	endif 
	return 
endf 

def node_067
	self.targetArea(target_area.area_center) 
	if self.flying() 
		if self.fatigued() 
			>> node_001 
		else 
			>> node_037 
		endif 
	else 
	endif 
	return 
endf 

def node_068
	self.targetArea(24) 
	if function#AD() 
		>> node_069 
	else 
		>> node_070 
	endif 
	return 
endf 

def node_069
	>> node_001 
	self.targetArea(24) 
	>> node_009 
	return 
endf 

def node_070
	>> node_071 
	>> node_072 
	>> node_073 
	>> node_074 
	return 
endf 

def node_071
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_017 
	else 
		self.targetArea(target_area.area_center) 
		>> node_009 
		self.targetArea(target_area.area_aerial_center) 
		>> node_002 
	endif 
	return 
endf 

def node_072
	self.targetArea(24) 
	if self.flying() 
		self.targetArea(40) 
		>> node_015 
	else 
		self.targetArea(39) 
		>> node_009 
	endif 
	return 
endf 

def node_073
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_001 
	else 
	endif 
	return 
endf 

def node_074
	>> node_001 
	self.targetArea(24) 
	>> node_009 
	return 
endf 

def node_075
	if function#AD() 
		>> node_076 
	else 
		>> node_077 
	endif 
	return 
endf 

def node_076
	if self.flying() 
		>> node_027 
	else 
		if self.in_combat() 
			>> node_010 
		else 
			>> node_005 
		endif 
	endif 
	return 
endf 

def node_077
	>> node_078 
	>> node_079 
	>> node_080 
	return 
endf 

def node_078
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_028 
	else 
		self.targetArea(target_area.area_center) 
		if self.in_combat() 
			>> node_010 
		else 
			>> node_005 
		endif 
		self.targetArea(target_area.area_aerial_center) 
		>> node_035 
	endif 
	return 
endf 

def node_079
	if self.flying() 
		self.targetArea(40) 
		>> node_025 
	else 
		self.targetArea(39) 
		if self.in_combat() 
			>> node_010 
		else 
			>> node_005 
		endif 
	endif 
	return 
endf 

def node_080
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_001 
	else 
	endif 
	return 
endf 

def node_081
	self.targetArea(target_area.area_center) 
	if self.flying() 
		if self.fatigued() 
			>> node_001 
		else 
			>> node_037 
		endif 
	else 
	endif 
	return 
endf 

def node_082
	if self.flying() 
		>> node_027 
	else 
		if self.in_combat() 
			>> node_010 
		else 
			>> node_005 
		endif 
	endif 
	return 
endf 

def node_083
	if self.flying() 
		-> rathalos.normal_turn_fly() 
	else 
		-> rathalos.normal_turn() 
	endif 
	return 
endf 

def node_084
	if self.angle_2d_cw_between(15,345) 
		>> node_083 
	else 
	endif 
	return 
endf 

def node_085
	if self.angle_2d_cw_between(30,330) 
		>> node_083 
	else 
	endif 
	return 
endf 

def node_086
	if self.angle_2d_cw_between(60,300) 
		>> node_083 
	else 
	endif 
	return 
endf 

def node_087
	if self.angle_2d_cw_between(90,270) 
		>> node_083 
	else 
	endif 
	return 
endf 

def node_088
	if self.flying() 
		>> node_210 
	else 
		-> rathalos.quick_turn() 
	endif 
	return 
endf 

def node_089
	if self.angle_2d_cw_between(15,345) 
		>> node_088 
	else 
	endif 
	return 
endf 

def node_090
	if self.angle_2d_cw_between(30,330) 
		>> node_088 
	else 
	endif 
	return 
endf 

def node_091
	if self.angle_2d_cw_between(60,300) 
		>> node_088 
	else 
	endif 
	return 
endf 

def node_092
	if self.angle_2d_cw_between(90,270) 
		>> node_088 
	else 
	endif 
	return 
endf 

def node_093
	>> node_001 
	-> rathalos.lost_search() 
	return 
endf 

def node_094
	>> node_001 
	-> rathalos.lost_search() 
	return 
endf 

def node_095
	>> node_001 
	-> rathalos.sniff_combat_s() 
	return 
endf 

def node_096
	>> node_001 
	-> rathalos.sniff_combat_l() 
	return 
endf 

def node_097
	>> node_001 
	if self.enraged() 
		-> rathalos.dash_no_hit(2,1,0,500,650) 
	elif self.fatigued() 
		-> rathalos.walk_combat(2,1,5,500,650) 
	else 
		-> rathalos.walk_combat(2,1,5,500,650) 
	endif 
	return 
endf 

def node_098
	>> node_001 
	if self.enraged() 
		-> rathalos.dash_no_hit(2,1,0,1000,650) 
	elif self.fatigued() 
		-> rathalos.walk_combat(2,1,5,1000,650) 
	else 
		-> rathalos.walk_combat(2,1,5,1000,650) 
	endif 
	return 
endf 

def node_099
	>> node_001 
	if self.enraged() 
		-> rathalos.peep_grass_search() 
	else 
		-> rathalos.peep_grass_search() 
	endif 
	return 
endf 

def node_100
	>> node_001 
	if self.target(10) 
		-> rathalos.dash_no_hit(2,0,0,1000) 
	else 
	endif 
	if self.enraged() 
		>> node_196 
	else 
		>> node_196 
	endif 
	return 
endf 

def node_101
	>> node_001 
	-> rathalos.idle_tired_combat() 
	return 
endf 

def node_102
	>> node_002 
	-> rathalos.lost_search_fly() 
	return 
endf 

def node_103
	>> node_002 
	-> rathalos.lost_search_fly() 
	return 
endf 

def node_104
	>> node_002 
	-> rathalos.sniff_s_fly() 
	return 
endf 

def node_105
	>> node_002 
	-> rathalos.sniff_l_fly() 
	return 
endf 

def node_106
	>> node_002 
	-> rathalos.glide_direct_move(2,1,0,1000,800) 
	return 
endf 

def node_107
	>> node_002 
	-> rathalos.glide_direct_move(2,1,0,2000,800) 
	return 
endf 

def node_108
	>> node_002 
	if self.enraged() 
		-> rathalos.back_step_breath_fly() 
	else 
		if self.distance_2d_to_target().leq(800) 
			>> node_210 
		elif self.angle_2d_cw_between(90,270) 
			-> rathalos.quick_turn_fly() 
		else 
		endif 
		>> node_217 
	endif 
	return 
endf 

def node_109
	>> node_002 
	if self.target(10) 
		-> rathalos.glide_direct_move(2,0,0,1000) 
	else 
	endif 
	if self.enraged() 
		>> node_220 
	else 
		>> node_220 
	endif 
	return 
endf 

def node_110
	if self.distance_3d_to_target().leq(800) 
		>> node_182 
	elif self.distance_3d_to_target().leq(1200) 
		>> node_184 
	else 
	endif 
	return 
endf 

def node_111
	if self.distance_2d_to_target().leq(800) 
		random (50) >> node_205 
		elser (50) >> node_210 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (50) >> node_207 
		elser (50) >> node_212 
		endr 
	else 
		>> node_212 
	endif 
	return 
endf 

def node_112
	if self.distance_2d_to_target().leq(900) 
	else 
		-> rathalos.dash_no_hit(1,2,0,800,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> rathalos.dash_no_hit(1,2,0,800,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> rathalos.dash_no_hit(1,2,0,800,1500) 
	endif 
	return 
endf 

def node_113
	if self.distance_2d_to_target().leq(900) 
	else 
		-> rathalos.glide_direct_move(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> rathalos.glide_direct_move(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> rathalos.glide_direct_move(2,0,0,1500) 
	endif 
	return 
endf 

def node_114
	>> node_001 
	-> rathalos.lost_search() 
	return 
endf 

def node_115
	>> node_002 
	-> rathalos.lost_search_fly() 
	return 
endf 

def node_116
	>> node_001 
	>> node_085 
	-> rathalos.life_search() 
	return 
endf 

def node_117
	>> node_001 
	>> node_085 
	-> rathalos.sniff_s() 
	return 
endf 

def node_118
	>> node_001 
	>> node_085 
	-> rathalos.sniff_l() 
	return 
endf 

def node_119
	>> node_001 
	>> node_084 
	-> rathalos.marking() 
	return 
endf 

def node_120
	>> node_001 
	>> node_085 
	-> rathalos.sunbath() 
	return 
endf 

def node_121
	>> node_001 
	>> node_084 
	-> rathalos.drink() 
	return 
endf 

def node_122
	>> node_001 
	>> node_085 
	-> rathalos.sleep() 
	return 
endf 

def node_123
	>> node_002 
	>> node_085 
	-> rathalos.life_search_fly() 
	return 
endf 

def node_124
	>> node_002 
	>> node_085 
	-> rathalos.sniff_s_fly() 
	return 
endf 

def node_125
	>> node_002 
	>> node_085 
	-> rathalos.sniff_l_fly() 
	return 
endf 

def node_126
	>> node_002 
	>> node_084 
	-> rathalos.marking_fly() 
	return 
endf 

def node_127
	>> node_002 
	>> node_085 
	-> rathalos.life_search_trace_fly() 
	return 
endf 

def node_128
	>> node_002 
	self.targetEnemy(17) 
	-> rathalos.sudden_drop() 
	return 
endf 

def node_129
	>> node_001 
	>> node_085 
	if function#C9() 
		-> rathalos.dying_sleep() 
	else 
		function#CA() 
	endif 
	return 
endf 

def node_130
	if function#6B(5000) 
		self.targetEnemy(26) 
		>> node_132 
		>> node_133 
		>> node_134 
		reset 
	else 
	endif 
	return 
endf 

def node_131
	if function#6B(5000) 
		self.targetEnemy(26) 
		>> node_132 
		>> node_133 
		>> node_134 
		conclude 
	else 
	endif 
	return 
endf 

def node_132
	if self.in_combat() 
		if self.flying() 
			-> rathalos.sniff_s_fly() 
		else 
			-> rathalos.sniff_combat_s() 
		endif 
	else 
		if self.flying() 
			-> rathalos.sniff_s_fly() 
		else 
			-> rathalos.sniff_combat_s() 
		endif 
	endif 
	return 
endf 

def node_133
	>> node_001 
	>> node_010 
	return 
endf 

def node_134
	>> node_190 
	-> rathalos.eat() 
	return 
endf 

def node_135
	>> node_047 
	>> node_088 
	>> node_047 
	>> node_088 
	>> node_047 
	return 
endf 

def node_136
	if self.flying() 
		-> rathalos.glide_combat(1,2,0,1000,2000) 
	else 
		-> rathalos.dash_no_hit(1,2,0,1000,2000) 
	endif 
	return 
endf 

def node_137
	>> node_002 
	>> node_210 
	-> rathalos.predator_attack() 
	return 
endf 

def node_138
	>> node_090 
	if self.flying() 
		-> rathalos.predator_give_up_action_fly() 
	else 
		-> rathalos.predator_give_up_action() 
	endif 
	return 
endf 

def node_139
	>> node_002 
	-> rathalos.predator_adjust() 
	return 
endf 

def node_140
	>> node_001 
	-> rathalos.predator_eat() 
	return 
endf 

def node_141
	>> node_001 
	-> rathalos.walk(2,1,0,2000,1000) 
	return 
endf 

def node_142
	>> node_001 
	-> rathalos.dash(2,1,0,6000,1000) 
	return 
endf 

def node_143
	>> node_001 
	-> rathalos.dash(2,1,0,6000,3000) 
	return 
endf 

def node_144
	if self.distance_3d_to_target().leq(1500) 
	elif self.distance_3d_to_target().leq(3500) 
		random (50) >> node_146 
		elser (50) >> node_147 
		elser (0) 
		endr 
	else 
	endif 
	return 
endf 

def node_145
	random (50) >> node_146 
	elser (50) >> node_147 
	elser (0) 
	endr 
	return 
endf 

def node_146
	if self.flying() 
		-> rathalos.sniff_s_fly() 
	else 
		-> rathalos.sniff_s() 
	endif 
	return 
endf 

def node_147
	if self.flying() 
		-> rathalos.life_search_fly() 
	else 
		-> rathalos.lost_search() 
	endif 
	return 
endf 

def node_148
	if self.distance_2d_to_target().leq(500) 
	else 
		-> rathalos.glide_direct_move(1,2,0,400,1500) 
		repeat 
	endif 
	return 
endf 

def node_149
	>> node_003 
	random (50) -> rathalos.snake_turn_step_fly_l() 
	elser (50) -> rathalos.snake_turn_step_fly_r() 
	endr 
	return 
endf 

def node_150
	>> node_003 
	-> rathalos.rash_bite_fly() 
	return 
endf 

def node_151
	>> node_003 
	-> rathalos.ride_rage_head_lv2() 
	return 
endf 

def node_152
	>> node_003 
	-> rathalos.ride_vertical_kick_fly() 
	>> node_003 
	return 
endf 

def node_153
	>> node_003 
	-> rathalos.ride_rage_body_lv2() 
	return 
endf 

def node_154
	>> node_003 
	if self.distance_2d_to_target().leq(600) 
		>> node_205 
	else 
	endif 
	>> node_148 
	>> node_155 
	return 
endf 

def node_155
	if function#11(1000) 
	else 
		if self.above_area() 
			-> rathalos.short_up_step_fly() 
		else 
			-> rathalos.short_down_step_fly() 
		endif 
	endif 
	return 
endf 

def node_156
	>> node_003 
	-> rathalos.ride_rage_crash_head() 
	return 
endf 

def node_157
	>> node_003 
	-> rathalos.ride_rage_crash_head_lv2() 
	return 
endf 

def node_158
	>> node_003 
	-> rathalos.ride_rage_crash_body() 
	return 
endf 

def node_159
	>> node_003 
	-> rathalos.ride_rage_crash_body_lv2() 
	return 
endf 

def node_160
	>> node_003 
	-> rathalos.intimidation_fly() 
	return 
endf 

def node_161
	>> node_003 
	-> rathalos.ride_tired() 
	return 
endf 

def node_162
	if self.flying() 
		>> node_171 
	else 
		>> node_163 
	endif 
	return 
endf 

def node_163
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if self.part(2).is_broken(0) 
		if self.part(3).is_broken(0) 
			>> node_164 
		else 
			>> node_165 
		endif 
	elif self.part(3).is_broken(0) 
		>> node_165 
	else 
		>> node_166 
	endif 
	return 
endf 

def node_164
	if function#B9() 
		>> node_167 
	else 
		if [RegisterVar1 <= 20] 
			>> node_170 
		elif [RegisterVar1 <= 16] 
			random (60) >> node_170 
			elser (40) 
			endr 
		elif [RegisterVar1 == 8] 
			random (50) -> rathalos.wing_break_action_l() 
			elser (50) -> rathalos.wing_break_action_r() 
			endr 
		else 
		endif 
	endif 
	return 
endf 

def node_165
	if function#B9() 
		>> node_168 
	else 
		if [RegisterVar1 <= 16] 
			>> node_170 
		elif [RegisterVar1 <= 12] 
			random (60) >> node_170 
			elser (40) 
			endr 
		elif [RegisterVar1 == 8] 
			if self.part(2).is_broken(0) 
				-> rathalos.wing_break_action_l() 
			else 
				-> rathalos.wing_break_action_r() 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_166
	if function#B9() 
		>> node_169 
	else 
		if [RegisterVar1 <= 12] 
			>> node_170 
		elif [RegisterVar1 <= 8] 
			random (60) >> node_170 
			elser (40) 
			endr 
		else 
		endif 
	endif 
	return 
endf 

def node_167
	if [RegisterVar1 <= 15] 
		>> node_170 
	elif [RegisterVar1 <= 12] 
		random (60) >> node_170 
		elser (40) 
		endr 
	elif [RegisterVar1 == 6] 
		random (50) -> rathalos.wing_break_action_l() 
		elser (50) -> rathalos.wing_break_action_r() 
		endr 
	else 
	endif 
	return 
endf 

def node_168
	if [RegisterVar1 <= 12] 
		>> node_170 
	elif [RegisterVar1 <= 9] 
		random (60) >> node_170 
		elser (40) 
		endr 
	elif [RegisterVar1 == 6] 
		if self.part(2).is_broken(0) 
			-> rathalos.wing_break_action_l() 
		else 
			-> rathalos.wing_break_action_r() 
		endif 
	else 
	endif 
	return 
endf 

def node_169
	if [RegisterVar1 <= 9] 
		>> node_170 
	elif [RegisterVar1 <= 6] 
		random (60) >> node_170 
		elser (40) 
		endr 
	else 
	endif 
	return 
endf 

def node_170
	>> node_001 
	if self.enraged() 
		>> node_200 
	elif self.fatigued() 
		return 
	else 
		>> node_002 
	endif 
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	return 
endf 

def node_171
	[RegisterVar1 |-] 
	if self.distance_2d_to_target().leq(600) 
		[RegisterVar0 ++] 
		[RegisterVar0 ++] 
	elif self.distance_2d_to_target().leq(900) 
		[RegisterVar0 ++] 
	else 
		random (50) 
					[RegisterVar0 ++] 
		elser (50) 
		endr 
	endif 
	>> node_172 
	return 
endf 

def node_172
	if function#B9() 
		>> node_173 
	else 
		if self.flying() 
			if [RegisterVar0 <= 30] 
				>> node_174 
			else 
				if self.enraged() 
					if [RegisterVar0 <= 20] 
						if self.distance_2d_to_target().leq(500) 
							random (50) >> node_174 
							elser (50) 
							endr 
						else 
						endif 
					else 
					endif 
				else 
					if [RegisterVar0 <= 14] 
						if self.distance_2d_to_target().leq(500) 
							random (50) >> node_174 
							elser (50) 
							endr 
						else 
						endif 
					else 
					endif 
				endif 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_173
	if self.flying() 
		if [RegisterVar0 <= 45] 
			>> node_174 
		else 
			if self.enraged() 
				if [RegisterVar0 <= 30] 
					if self.distance_2d_to_target().leq(500) 
						random (50) >> node_174 
						elser (50) 
						endr 
					else 
					endif 
				else 
				endif 
			else 
				if [RegisterVar0 <= 21] 
					if self.distance_2d_to_target().leq(500) 
						random (50) >> node_174 
						elser (50) 
						endr 
					else 
					endif 
				else 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_174
	>> node_229 
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	reset 
endf 

def node_175
	if self.flying() 
		>> node_180 
	else 
		>> node_176 
	endif 
	return 
endf 

def node_176
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	if self.part(2).is_broken(0) 
		if self.part(3).is_broken(0) 
			>> node_177 
		else 
			>> node_178 
		endif 
	elif self.part(3).is_broken(0) 
		>> node_178 
	else 
		>> node_179 
	endif 
	return 
endf 

def node_177
	if [RegisterVar1 <= 15] 
		>> node_170 
	elif [RegisterVar1 <= 12] 
		random (60) >> node_170 
		elser (40) 
		endr 
	elif [RegisterVar1 == 6] 
		random (50) -> rathalos.wing_break_action_l() 
		elser (50) -> rathalos.wing_break_action_r() 
		endr 
	else 
	endif 
	return 
endf 

def node_178
	if [RegisterVar1 <= 12] 
		>> node_170 
	elif [RegisterVar1 <= 9] 
		random (60) >> node_170 
		elser (40) 
		endr 
	elif [RegisterVar1 == 6] 
		if self.part(2).is_broken(0) 
			-> rathalos.wing_break_action_l() 
		else 
			-> rathalos.wing_break_action_r() 
		endif 
	else 
	endif 
	return 
endf 

def node_179
	if [RegisterVar1 <= 9] 
		>> node_170 
	elif [RegisterVar1 <= 6] 
		random (60) >> node_170 
		elser (40) 
		endr 
	else 
	endif 
	return 
endf 

def node_180
	[RegisterVar1 |-] 
	if self.distance_2d_to_target().leq(600) 
		[RegisterVar0 ++] 
		[RegisterVar0 ++] 
	elif self.distance_2d_to_target().leq(900) 
		[RegisterVar0 ++] 
	else 
		random (50) 
					[RegisterVar0 ++] 
		elser (50) 
		endr 
	endif 
	>> node_181 
	return 
endf 

def node_181
	if self.flying() 
		if [RegisterVar0 <= 45] 
			>> node_174 
		else 
			if self.enraged() 
				if [RegisterVar0 <= 30] 
					if self.distance_2d_to_target().leq(500) 
						random (50) >> node_174 
						elser (50) 
						endr 
					else 
					endif 
				else 
				endif 
			else 
				if [RegisterVar0 <= 21] 
					if self.distance_2d_to_target().leq(500) 
						random (50) >> node_174 
						elser (50) 
						endr 
					else 
					endif 
				else 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_182
	>> node_001 
	-> rathalos.short_back_step() 
	return 
endf 

def node_183
	if self.angle_2d_cw_between(15,345) 
		>> node_182 
	else 
	endif 
	return 
endf 

def node_184
	if self.angle_2d_cw_between(30,330) 
		>> node_182 
	else 
	endif 
	return 
endf 

def node_185
	if self.angle_2d_cw_between(45,315) 
		>> node_182 
	else 
	endif 
	return 
endf 

def node_186
	if self.angle_2d_cw_between(60,300) 
		>> node_182 
	else 
	endif 
	return 
endf 

def node_187
	if self.angle_2d_cw_between(90,270) 
		>> node_182 
	else 
	endif 
	return 
endf 

def node_188
	>> node_001 
	-> rathalos.quick_turn() 
	return 
endf 

def node_189
	if self.angle_2d_cw_between(15,345) 
		>> node_188 
	else 
	endif 
	return 
endf 

def node_190
	if self.angle_2d_cw_between(30,330) 
		>> node_188 
	else 
	endif 
	return 
endf 

def node_191
	if self.angle_2d_cw_between(45,315) 
		>> node_188 
	else 
	endif 
	return 
endf 

def node_192
	if self.angle_2d_cw_between(60,300) 
		>> node_188 
	else 
	endif 
	return 
endf 

def node_193
	if self.angle_2d_cw_between(90,270) 
		>> node_188 
	else 
	endif 
	return 
endf 

def node_194
	>> node_001 
	if self.angle_2d_cw_between(0,180) 
		-> rathalos.rolling_tail_attack2_l() 
	else 
		-> rathalos.rolling_tail_attack2_r() 
	endif 
	return 
endf 

def node_195
	>> node_001 
	if self.current_quest().is_rank(rank.LR) 
		if self.angle_2d_cw_between(315,45) 
			-> rathalos.bite() 
		else 
			>> node_188 
			-> rathalos.bite_no_blend() 
		endif 
	else 
		>> node_193 
		-> rathalos.bite() 
	endif 
	return 
endf 

def node_196
	>> node_001 
	if self.fatigued() 
		-> rathalos.dash_bite_tired() 
	else 
		-> rathalos.dash_bite2() 
	endif 
	return 
endf 

def node_197
	>> node_001 
	if self.current_quest().is_rank(rank.LR) 
		>> node_191 
		-> rathalos.normal_breath() 
	else 
		>> node_193 
		-> rathalos.normal_breath() 
	endif 
	return 
endf 

def node_198
	>> node_001 
	-> rathalos.vertical_kick() 
	return 
endf 

def node_199
	>> node_001 
	-> rathalos.back_step_breath_to_ground() 
	return 
endf 

def node_200
	>> node_001 
	-> rathalos.back_step_breath_to_air() 
	return 
endf 

def node_201
	>> node_001 
	if self.distance_2d_to_target().leq(450) 
		>> node_198 
	elif self.distance_2d_to_target().leq(850) 
		>> node_195 
	else 
		>> node_197 
	endif 
	return 
endf 

def node_202
	>> node_001 
	if self.distance_2d_to_target().leq(350) 
		>> node_196 
	elif self.distance_2d_to_target().leq(850) 
		>> node_195 
	else 
		>> node_197 
	endif 
	return 
endf 

def node_203
	if self.distance_2d_to_target().leq(350) 
		>> node_198 
	elif self.distance_2d_to_target().leq(850) 
		>> node_194 
	else 
		>> node_196 
	endif 
	return 
endf 

def node_204
	>> node_001 
	-> rathalos.idle_tired_combat() 
	return 
endf 

def node_205
	>> node_002 
	-> rathalos.step_back_fly() 
	return 
endf 

def node_206
	if self.angle_2d_cw_between(15,345) 
		>> node_205 
	else 
	endif 
	return 
endf 

def node_207
	if self.angle_2d_cw_between(30,330) 
		>> node_205 
	else 
	endif 
	return 
endf 

def node_208
	if self.angle_2d_cw_between(45,315) 
		>> node_205 
	else 
	endif 
	return 
endf 

def node_209
	if self.angle_2d_cw_between(90,270) 
		>> node_205 
	else 
	endif 
	return 
endf 

def node_210
	if self.angle_2d_cw_between(0,180) 
		-> rathalos.snake_turn_step_fly_r() 
	else 
		-> rathalos.snake_turn_step_fly_l() 
	endif 
	return 
endf 

def node_211
	if self.angle_2d_cw_between(15,345) 
		>> node_210 
	else 
	endif 
	return 
endf 

def node_212
	if self.angle_2d_cw_between(30,330) 
		>> node_210 
	else 
	endif 
	return 
endf 

def node_213
	if self.angle_2d_cw_between(45,315) 
		>> node_210 
	else 
	endif 
	return 
endf 

def node_214
	if self.angle_2d_cw_between(90,270) 
		>> node_210 
	else 
	endif 
	return 
endf 

def node_215
	if self.angle_2d_cw_between(120,240) 
		>> node_210 
	else 
	endif 
	return 
endf 

def node_216
	if self.angle_2d_cw_between(0,180) 
		-> rathalos.snake_turn_step_fly_l() 
	else 
		-> rathalos.snake_turn_step_fly_r() 
	endif 
	return 
endf 

def node_217
	>> node_002 
	>> node_214 
	-> rathalos.bite_fly() 
	return 
endf 

def node_218
	>> node_002 
	if function#AF(5000) 
		-> rathalos.double_kick_fly2() 
	else 
		>> node_001 
	endif 
	return 
endf 

def node_219
	>> node_002 
	-> rathalos.scratch_fly() 
	return 
endf 

def node_220
	>> node_002 
	-> rathalos.rash_bite_fly() 
	return 
endf 

def node_221
	>> node_002 
	if self.angle_2d_cw_between(0,180) 
		-> rathalos.low_tail_attack_fly_l() 
	else 
		-> rathalos.low_tail_attack_fly_r() 
	endif 
	return 
endf 

def node_222
	>> node_002 
	>> node_214 
	-> rathalos.breath_fly() 
	return 
endf 

def node_223
	>> node_002 
	-> rathalos.breath_nagiharai_fly_low() 
	return 
endf 

def node_224
	>> node_002 
	-> rathalos.back_step_breath_fly() 
	return 
endf 

def node_225
	>> node_002 
	if self.angle_2d_cw_between(0,180) 
		-> rathalos.kick_progress_fly_r() 
	else 
		-> rathalos.kick_progress_fly_l() 
	endif 
	return 
endf 

def node_226
	>> node_002 
	if self.angle_2d_cw_between(0,180) 
		-> rathalos.kick_progress_fly_s_range_r() 
	else 
		-> rathalos.kick_progress_fly_s_range_l() 
	endif 
	return 
endf 

def node_227
	>> node_002 
	-> rathalos.kick_fly_start_short_range() 
	return 
endf 

def node_228
	>> node_002 
	-> rathalos.kick_fly_start() 
	return 
endf 

def node_229
	>> node_002 
	if function#AF(5000) 
		-> rathalos.vertical_kick_fly() 
	else 
		>> node_001 
	endif 
	return 
endf 

def node_230
	>> node_002 
	>> node_214 
	-> rathalos.glide_charge() 
	return 
endf 

def node_231
	if self.distance_2d_to_target().leq(500) 
		>> node_210 
	else 
	endif 
	-> rathalos.breath_nagiharai_fly_low() 
	return 
endf 

def node_232
	if self.distance_2d_to_target().leq(500) 
		>> node_210 
	else 
	endif 
	-> rathalos.rash_bite_fly() 
	return 
endf 

def node_233
	if self.distance_2d_to_target().leq(500) 
		random (35) >> node_210 
					>> node_223 
		elser (35) >> node_210 
					>> node_220 
		elser (30) >> node_205 
					>> node_222 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (35) >> node_223 
		elser (35) >> node_220 
		elser (30) >> node_221 
		endr 
	else 
	endif 
	return 
endf 

def node_234
	if self.distance_2d_to_target().leq(600) 
		random (25) >> node_219 
					>> node_239 
					>> node_231 
		elser (25) >> node_219 
					>> node_239 
					>> node_232 
		elser (25) >> node_219 
					>> node_239 
					>> node_221 
		elser (25) >> node_224 
		endr 
	else 
	endif 
	return 
endf 

def node_235
	if self.distance_2d_to_target().leq(1000) 
		>> node_227 
	else 
		>> node_228 
	endif 
	return 
endf 

def node_236
	>> node_002 
	-> rathalos.catch_attack() 
	if self.target.pinned() 
		self.targetArea(3) 
		-> rathalos.catch_throw() 
		>> node_039 
		self.targetEnemy(target_em.random_player_or_cat) 
		if self.target.helpless_1() 
			>> node_237 
		else 
		endif 
	else 
		-> rathalos.catch_attack_miss() 
	endif 
	return 
endf 

def node_237
	if self.distance_2d_to_target().leq(1300) 
		if self.vertical_distance_to_target().leq(750) 
			if self.above_target() 
				>> node_293 
			else 
			endif 
		else 
			>> node_238 
		endif 
	else 
		>> node_238 
	endif 
	if self.enraged() 
		if self.distance_2d_to_target().leq(400) 
			random (50) >> node_224 
			elser (50) >> node_219 
			endr 
		elif self.distance_2d_to_target().leq(650) 
			random (30) >> node_224 
			elser (70) >> node_220 
			endr 
		elif self.distance_2d_to_target().leq(950) 
			>> node_223 
		else 
			>> node_228 
		endif 
	else 
		if self.distance_2d_to_target().leq(400) 
			>> node_219 
		elif self.distance_2d_to_target().leq(650) 
			>> node_220 
		elif self.distance_2d_to_target().leq(950) 
			>> node_223 
		else 
			>> node_228 
		endif 
	endif 
	return 
endf 

def node_238
	if self.distance_2d_to_target().leq(1300) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> rathalos.glide_combat(6,2,0,750,1500) 
		endif 
	else 
		-> rathalos.glide_combat(6,2,0,750,1500) 
	endif 
	if self.distance_2d_to_target().leq(1300) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> rathalos.glide_combat(6,2,0,750,1500) 
		endif 
	else 
		-> rathalos.glide_combat(6,2,0,750,1500) 
	endif 
	if self.distance_2d_to_target().leq(1300) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> rathalos.glide_combat(6,2,0,750,1500) 
		endif 
	else 
		-> rathalos.glide_combat(6,2,0,750,1500) 
	endif 
	return 
endf 

def node_239
	if self.fatigued() 
		>> node_001 
		reset 
	else 
	endif 
	return 
endf 

def node_240
	if self.target.helpless_0() 
		if self.enraged() 
			random (35) >> node_242 
			elser (65) 
			endr 
		else 
			random (25) >> node_241 
			elser (75) 
			endr 
		endif 
	elif self.target.fire_blighted() 
		if self.enraged() 
			random (20) >> node_242 
			elser (80) 
			endr 
		else 
			random (15) >> node_241 
			elser (85) 
			endr 
		endif 
	elif self.below_target() 
		if self.vertical_distance_to_target().leq(750) 
		elif self.vertical_distance_to_target().leq(1500) 
			random (50) >> node_243 
			elser (50) 
			endr 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_241
	if self.distance_2d_to_target().leq(1000) 
		>> node_227 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_228 
	else 
	endif 
	return 
endf 

def node_242
	if self.distance_2d_to_target().leq(1000) 
		>> node_227 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_228 
	else 
	endif 
	return 
endf 

def node_243
	if self.distance_2d_to_target().leq(2000) 
		>> node_228 
	else 
	endif 
	return 
endf 

def node_244
	>> node_002 
	if self.distance_2d_to_target().leq(300) 
		>> node_206 
	elif self.distance_2d_to_target().leq(600) 
		>> node_211 
	else 
		>> node_085 
	endif 
	-> rathalos.breath_fly_triple() 
	return 
endf 

def node_245
	>> node_002 
	if self.distance_2d_to_target().leq(450) 
		>> node_205 
	else 
		>> node_215 
	endif 
	-> rathalos.breath_fly_triple() 
	return 
endf 

def node_246
	if self.distance_2d_to_target().leq(500) 
		random (40) >> node_210 
					>> node_223 
		elser (40) >> node_210 
					>> node_220 
		elser (20) >> node_205 
					>> node_222 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (35) >> node_223 
		elser (35) >> node_220 
		elser (30) >> node_221 
		endr 
	elif self.distance_2d_to_target().leq(2000) 
		random (35) >> node_228 
		elser (35) >> node_236 
		elser (30) >> node_222 
		endr 
	else 
	endif 
	return 
endf 

def node_247
	if self.distance_2d_to_target().leq(500) 
		random (30) >> node_210 
					>> node_223 
		elser (30) >> node_210 
					>> node_220 
		elser (40) >> node_224 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (35) >> node_223 
		elser (35) >> node_220 
		elser (30) >> node_221 
		endr 
	elif self.distance_2d_to_target().leq(2000) 
		random (40) >> node_228 
		elser (30) >> node_236 
		elser (30) >> node_222 
		endr 
	else 
	endif 
	return 
endf 

def node_248
	if self.distance_2d_to_target().leq(500) 
		random (30) >> node_210 
					>> node_223 
		elser (30) >> node_210 
					>> node_220 
		elser (20) >> node_205 
					>> node_222 
		elser (20) >> node_245 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (30) >> node_223 
		elser (30) >> node_220 
		elser (20) >> node_221 
		elser (20) >> node_245 
		endr 
	else 
	endif 
	return 
endf 

def node_249
	if self.distance_2d_to_target().leq(600) 
		random (20) >> node_219 
					>> node_239 
					>> node_231 
		elser (20) >> node_219 
					>> node_239 
					>> node_232 
		elser (20) >> node_219 
					>> node_239 
					>> node_221 
		elser (20) >> node_224 
		elser (20) >> node_245 
		endr 
	else 
	endif 
	return 
endf 

def node_250
	if self.target(42) 
		if self.enraged() 
			random (35) >> node_242 
			elser (65) 
			endr 
		else 
			random (35) >> node_241 
			elser (65) 
			endr 
		endif 
	elif self.target.helpless_0() 
		if self.enraged() 
			random (35) >> node_242 
			elser (65) 
			endr 
		else 
			random (25) >> node_241 
			elser (75) 
			endr 
		endif 
	elif self.target.fire_blighted() 
		if self.enraged() 
			random (20) >> node_242 
			elser (80) 
			endr 
		else 
			random (15) >> node_241 
			elser (85) 
			endr 
		endif 
	elif self.below_target() 
		if self.vertical_distance_to_target().leq(750) 
		elif self.vertical_distance_to_target().leq(1500) 
			random (50) >> node_243 
			elser (50) 
			endr 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_251
	if self.target(42) 
		if self.enraged() 
			random (35) >> node_242 
			elser (65) 
			endr 
		else 
			random (35) >> node_241 
			elser (65) 
			endr 
		endif 
	else 
	endif 
	return 
endf 

def node_252
	random (20) 
				self.targetArea(21) @ parameter2:300 
	elser (30) 
				self.targetArea(22) @ parameter2:300 
	elser (20) 
				self.targetArea(21) @ parameter2:500 
	elser (30) 
				self.targetArea(22) @ parameter2:500 
	endr 
	return 
endf 

def node_253
	random (35) 
				if self.flying() 
					-> rathalos.intimidation_fly() 
				else 
					-> rathalos.intimidation() 
				endif 
	elser (65) 
	endr 
	return 
endf 

def node_254
	if self.flying() 
		-> rathalos.intimidation_fly() 
	else 
		-> rathalos.intimidation() 
	endif 
	return 
endf 

def node_255
	random (15) 
				if self.flying() 
					-> rathalos.intimidation_fly() 
				else 
					-> rathalos.intimidation() 
				endif 
	elser (85) 
	endr 
	return 
endf 

def node_256
	>> node_263 
	>> node_090 
	if self.flying() 
		if self.fatigued() 
			>> node_001 
		else 
			-> rathalos.intimidation_fly() 
		endif 
	else 
		if self.fatigued() 
			>> node_044 
		else 
			-> rathalos.intimidation() 
		endif 
	endif 
	return 
endf 

def node_257
	>> node_263 
	if self.targetEnemy(target_em.any_monster) 
		random (20) >> node_090 
		elser (80) 
		endr 
	else 
	endif 
	if self.flying() 
		random (20) -> rathalos.lost_search_fly() 
		elser (35) -> rathalos.half_lost_search_front_fly() 
		elser (10) -> rathalos.sniff_s_fly() 
		elser (20) -> rathalos.sniff_l_fly() 
		elser (15) -> rathalos.intimidation_fly() 
		endr 
	else 
		random (20) -> rathalos.lost_search() 
		elser (35) -> rathalos.half_lost_search_front() 
		elser (10) -> rathalos.sniff_combat_s() 
		elser (20) -> rathalos.sniff_combat_l() 
		elser (15) -> rathalos.intimidation() 
		endr 
	endif 
	return 
endf 

def node_258
	>> node_263 
	>> node_090 
	if self.flying() 
		random (40) -> rathalos.half_lost_search_front_fly() 
		elser (20) -> rathalos.sniff_s_fly() 
		elser (40) -> rathalos.intimidation_fly() 
		elser (0) -> rathalos.threat_fly_short() 
		endr 
	else 
		random (40) -> rathalos.half_lost_search_front() 
		elser (20) -> rathalos.sniff_combat_s() 
		elser (40) -> rathalos.intimidation() 
		elser (0) -> rathalos.threat_short() 
		endr 
	endif 
	return 
endf 

def node_259
	>> node_263 
	>> node_085 
	if self.flying() 
		-> rathalos.sniff_l_fly() 
	else 
		-> rathalos.sniff_l() 
	endif 
	return 
endf 

def node_260
	>> node_263 
	self.targetEnemy(58) 
	if self.flying() 
		random (10) >> node_262 
		elser (90) 
		endr 
	else 
		random (10) >> node_261 
		elser (90) 
		endr 
	endif 
	self.targetEnemy(22) @ parameter2:2000 
	random (40) >> node_085 
	elser (60) 
	endr 
	if self.flying() 
		random (70) -> rathalos.life_search_fly() 
		elser (30) -> rathalos.sniff_l_fly() 
		endr 
	else 
		random (70) -> rathalos.life_search() 
		elser (30) -> rathalos.sniff_l() 
		endr 
	endif 
	return 
endf 

def node_261
	if self.fatigued() 
		-> rathalos.walk_tired(1,2,0,600,1500) 
	else 
		-> rathalos.walk(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_262
	-> rathalos.glide_combat(1,2,0,600,2000) 
	return 
endf 

def node_263
	if self.fatigued() 
		>> node_001 
	else 
	endif 
	return 
endf 

def node_264
	if self.targetEnemy(target_em.any_monster) 
		if self.target_is(em.Rathian) 
		else 
			>> node_266 
		endif 
	else 
	endif 
	return 
endf 

def node_265
	if self.targetEnemy(target_em.any_monster) 
		if self.target_is(em.Rathian) 
		else 
			>> node_267 
		endif 
	else 
	endif 
	return 
endf 

def node_266
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if function#30(2) 
						if self.target.in_combat() 
							random (0) >> node_268 
							elser (0) >> node_272 
							elser (0) >> node_270 
							elser (100) >> node_269 
							endr 
						else 
							random (0) >> node_268 
							elser (0) >> node_272 
							elser (0) >> node_271 
							elser (100) >> node_269 
							endr 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (0) >> node_268 
							elser (0) >> node_272 
							elser (100) >> node_270 
							elser (0) >> node_269 
							endr 
						else 
							random (0) >> node_268 
							elser (70) >> node_272 
							elser (30) >> node_271 
							elser (0) >> node_269 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (0) >> node_268 
							elser (20) >> node_272 
							elser (80) >> node_270 
							elser (0) >> node_269 
							endr 
						else 
							random (0) >> node_268 
							elser (60) >> node_272 
							elser (20) >> node_271 
							elser (20) >> node_269 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_267
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if function#30(2) 
						if self.target.in_combat() 
							random (30) >> node_268 
							elser (0) >> node_272 
							elser (0) >> node_271 
							elser (70) >> node_269 
							endr 
						else 
							random (30) >> node_268 
							elser (0) >> node_272 
							elser (0) >> node_271 
							elser (70) >> node_269 
							endr 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (30) >> node_268 
							elser (0) >> node_272 
							elser (70) >> node_271 
							elser (0) >> node_269 
							endr 
						else 
							random (50) >> node_268 
							elser (0) >> node_272 
							elser (50) >> node_271 
							elser (0) >> node_269 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (30) >> node_268 
							elser (20) >> node_272 
							elser (30) >> node_271 
							elser (20) >> node_269 
							endr 
						else 
							random (30) >> node_268 
							elser (20) >> node_272 
							elser (50) >> node_271 
							elser (0) >> node_269 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_268
	return 
endf 

def node_269
	if self.in_map(st.Special_Arena).in_area(-1) 
		>> node_271 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
		>> node_271 
	else 
		if [RegisterVar3 <= 8] 
			[RegisterVar3 |-] 
			self.force_area_change2() 
		elif [RegisterVar3 <= 5] 
			random (30) 
						[RegisterVar3 |-] 
						self.force_area_change2() 
			elser (70) 
			endr 
		else 
		endif 
		[RegisterVar3 ++] 
		if self.target.in_combat() 
			>> node_271 
			[RegisterVar3 ++] 
		else 
			[RegisterVar3 ++] 
			>> node_272 
		endif 
		self.targetEnemy(target_em.closest_entity) 
		if self.distance_2d_to_target().leq(3000) 
			if self.vertical_distance_to_target().leq(1000) 
				if function#5F() 
					repeat 
				elif self.in_combat() 
				else 
					repeat 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_270
	>> node_271 
	>> node_271 
	random (70) 
	elser (30) 
				return 
	endr 
	>> node_271 
	random (70) 
	elser (30) 
				return 
	endr 
	>> node_271 
	return 
endf 

def node_271
	>> node_273 
	self.targetEnemy(target_em.closest_entity) 
	if self.flying() 
		random (30) >> node_276 
		elser (20) >> node_277 
		elser (20) >> node_278 
		elser (30) >> node_279 
		endr 
	else 
		random (60) >> node_274 
		elser (40) >> node_275 
		endr 
	endif 
	return 
endf 

def node_272
	self.targetEnemy(target_em.closest_entity) 
	>> node_090 
	if self.in_combat() 
		>> node_049 
	else 
		if self.target.in_combat() 
			>> node_049 
		else 
			>> node_038 
		endif 
	endif 
	return 
endf 

def node_273
	if self.fatigued() 
		>> node_001 
	else 
	endif 
	return 
endf 

def node_274
	if self.fatigued() 
		>> node_275 
	else 
		self.targetEnemy(target_em.closest_entity) 
		if self.vertical_distance_to_target().leq(500) 
			if self.distance_2d_to_target().leq(1000) 
				>> node_182 
			else 
			endif 
			self.targetEnemy(target_em.closest_entity) 
			>> node_092 
			self.targetEnemy(target_em.closest_entity) 
			-> rathalos.normal_breath() 
		else 
			>> node_275 
		endif 
	endif 
	return 
endf 

def node_275
	self.targetEnemy(target_em.closest_entity) 
	if self.vertical_distance_to_target().leq(500) 
	else 
		-> rathalos.dash_no_hit(1,2,0,500,1500) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(500) 
		>> node_198 
	elif self.distance_2d_to_target().leq(900) 
		>> node_092 
		self.targetEnemy(target_em.closest_entity) 
		-> rathalos.bite() 
	else 
		>> node_196 
	endif 
	return 
endf 

def node_276
	>> node_002 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(800) 
		>> node_205 
	else 
		>> node_214 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	-> rathalos.breath_fly() 
	return 
endf 

def node_277
	>> node_002 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(600) 
		>> node_214 
	elif self.distance_2d_to_target().leq(900) 
	else 
		-> rathalos.glide_combat(1,2,0,900,1500) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	-> rathalos.breath_nagiharai_fly_low() 
	return 
endf 

def node_278
	>> node_002 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(1000) 
		-> rathalos.kick_fly_start_short_range() 
	else 
		-> rathalos.kick_fly_start() 
	endif 
	return 
endf 

def node_279
	>> node_002 
	if self.distance_2d_to_target().leq(2000) 
	else 
		-> rathalos.glide_combat(1,2,0,1200,2000) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_2d_to_target().leq(750) 
		-> rathalos.vertical_kick_fly() 
	else 
		-> rathalos.double_kick_fly2() 
	endif 
	return 
endf 

def node_280
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5D() 
		>> node_282 
	elif self.target(3) 
		>> node_283 
	elif self.target(4) 
		>> node_283 
	elif self.target(55) 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_286 
		else 
			>> node_287 
		endif 
	elif self.target(14) 
		>> node_288 
	elif self.target(11) 
		>> node_289 
	elif self.target(12) 
	elif self.flying() 
		if self.above_target() 
			>> node_293 
		elif self.vertical_distance_to_target().leq(750) 
			if self.above_target() 
				>> node_293 
			else 
			endif 
		else 
			>> node_293 
		endif 
	else 
		>> node_290 
	endif 
	return 
endf 

def node_281
	if [RegisterVar4 <= 10] 
		[RegisterVar4 |-] 
	elif [RegisterVar4 <= 1] 
		[RegisterVar4 ++] 
	else 
	endif 
	return 
endf 

def node_282
	if self.distance_2d_to_target().leq(1500) 
		if self.angle_2d_cw_between(300,60) 
		else 
			function#5E() 
			>> node_041 
		endif 
	else 
		if self.angle_2d_cw_between(300,60) 
			function#5E() 
			>> node_041 
		else 
			function#5E() 
			>> node_042 
		endif 
	endif 
	return 
endf 

def node_283
	>> node_284 
	>> node_285 
	reset 
endf 

def node_284
	self.targetArea(19) 
	if self.distance_2d_to_target().leq(900) 
	else 
		if self.flying() 
			>> node_030 
		else 
			>> node_010 
		endif 
	endif 
	return 
endf 

def node_285
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.flying() 
		>> node_212 
		-> rathalos.half_lost_search_front_fly() 
	else 
		>> node_190 
		-> rathalos.half_lost_search_front() 
	endif 
	return 
endf 

def node_286
	if self.flying() 
		>> node_293 
	else 
		>> node_291 
		if self.distance_2d_to_target().leq(1000) 
			if self.target(0) 
				if self.above_target() 
					-> rathalos.jump_attack_wall_up() 
				else 
					-> rathalos.jump_attack_wall_down() 
				endif 
				>> node_297 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_287
	if self.flying() 
		>> node_293 
	else 
		>> node_291 
		if self.distance_2d_to_target().leq(1000) 
			if self.target(0) 
				if self.above_target() 
					-> rathalos.jump_attack_wall_up() 
				else 
					-> rathalos.dash_no_hit(1,2,0,0,1500) 
				endif 
				>> node_297 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_288
	if self.flying() 
		>> node_293 
	else 
		>> node_291 
		if self.distance_2d_to_target().leq(2000) 
			if self.target(14) 
				if self.above_target() 
					-> rathalos.jump_attack_wall_up() 
				else 
					-> rathalos.jump_attack_wall_down() 
				endif 
				>> node_297 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_289
	if self.flying() 
		>> node_296 
	else 
		>> node_292 
	endif 
	return 
endf 

def node_290
	if self.in_map(st.Ancient_Forest).in_area(2) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_292 
		endif 
	elif self.in_map(st.Ancient_Forest).in_area(5) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_292 
		endif 
	elif self.in_map(st.Ancient_Forest).in_area(6) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_292 
		endif 
	elif self.target(52) 
		>> node_292 
	elif self.vertical_distance_to_target().leq(450) 
	else 
		>> node_292 
	endif 
	return 
endf 

def node_291
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			-> rathalos.dash_no_hit(1,2,0,500,1500) 
		endif 
	else 
		-> rathalos.dash_no_hit(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			-> rathalos.dash_no_hit(1,2,0,500,1500) 
		endif 
	else 
		-> rathalos.dash_no_hit(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			-> rathalos.dash_no_hit(1,2,0,500,1500) 
		endif 
	else 
		-> rathalos.dash_no_hit(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_292
	if self.distance_3d_to_target().leq(400) 
	else 
		-> rathalos.dash_no_hit(1,2,0,300,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.dash_no_hit(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.dash_no_hit(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_293
	if self.distance_2d_to_target().leq(300) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> rathalos.glide_combat(1,2,0,200,1500) 
		endif 
	else 
		-> rathalos.glide_combat(1,2,0,200,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> rathalos.glide_combat(1,2,0,500,1500) 
		endif 
	else 
		-> rathalos.glide_combat(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1000) 
		else 
			-> rathalos.glide_combat(1,2,0,500,1500) 
		endif 
	else 
		-> rathalos.glide_combat(1,2,0,500,1500) 
	endif 
	>> node_294 
	return 
endf 

def node_294
	if self.above_target() 
		random (25) >> node_210 
		elser (25) >> node_216 
		elser (50) 
		endr 
		>> node_295 
	elif self.vertical_distance_to_target().leq(400) 
		random (25) >> node_210 
		elser (25) >> node_216 
		elser (50) 
		endr 
		>> node_295 
	else 
	endif 
	return 
endf 

def node_295
	>> node_002 
	-> rathalos.short_up_step_fly() 
	return 
endf 

def node_296
	if self.distance_3d_to_target().leq(300) 
	else 
		-> rathalos.glide_direct_move(1,2,0,200,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.glide_direct_move(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> rathalos.glide_direct_move(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_297
	if self.flying() 
	else 
		if function#11(450) 
		else 
			if self.fatigued() 
			else 
				>> node_298 
				random (50) 
							reset 
				elser (50) 
				endr 
			endif 
		endif 
	endif 
	return 
endf 

def node_298
	if self.distance_2d_to_target().leq(2000) 
		>> node_182 
	else 
		>> node_193 
	endif 
	if self.distance_2d_to_target().leq(2000) 
		>> node_182 
	else 
	endif 
	if function#11(1250) 
	else 
		if self.distance_2d_to_target().leq(3000) 
			>> node_182 
		else 
		endif 
	endif 
	>> node_197 
	return 
endf 

def node_299
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	return 
endf 

def node_300
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	return 
endf 

def node_301
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> rathalos.glide_combat(2,0,0,3000) 
	endif 
	return 
endf 

def node_302
	if function#38(0,10008) 
		>> node_303 
	else 
	endif 
	return 
endf 

def node_303
	if function#31(94,5000) 
		function#CF() 
	else 
	endif 
	return 
endf 

def node_304
	if self.flying() 
		if self.enraged() 
			>> node_305 
		elif self.fatigued() 
			*&
		else 
			>> node_306 
		endif 
	else 
		if self.enraged() 
			>> node_307 
		elif self.fatigued() 
			>> node_308 
		else 
			>> node_309 
		endif 
	endif 
	return 
endf 

def node_305
	random (20) >> node_219 
	elser (15) >> node_210 
	elser (15) >> node_223 
	elser (20) >> node_221 
	elser (10) >> node_222 
	elser (5) >> node_227 
	elser (5) >> node_228 
	elser (10) >> node_220 
	elser (0) 
	endr 
	return 
endf 

def node_306
	random (20) >> node_219 
	elser (20) >> node_210 
	elser (15) >> node_223 
	elser (20) >> node_221 
	elser (10) >> node_222 
	elser (5) >> node_227 
	elser (5) >> node_228 
	elser (5) >> node_220 
	elser (0) 
	endr 
	return 
endf 

def node_307
	random (25) >> node_194 
				>> node_201 
	elser (35) >> node_198 
				>> node_202 
	elser (10) >> node_195 
	elser (30) >> node_196 
	elser (0) >> node_197 
	endr 
	return 
endf 

def node_308
	random (25) >> node_194 
	elser (35) >> node_195 
	elser (10) >> node_196 
	elser (25) >> node_197 
	elser (5) >> node_204 
	endr 
	return 
endf 

def node_309
	random (25) >> node_194 
				>> node_201 
	elser (35) >> node_198 
				>> node_202 
	elser (10) >> node_195 
	elser (20) >> node_196 
	elser (10) >> node_197 
	endr 
	return 
endf 

def node_310
	if self.flying() 
		-> rathalos.intimidation_fly() 
	else 
		-> rathalos.intimidation() 
	endif 
	return 
endf 

def node_311
	>> node_001 
	if self.fatigued() 
		-> rathalos.dash_bite_tired() 
	else 
		-> rathalos.dash_bite2() @ comboSetting:1 
		-> rathalos.quick_turn() 
		if self.distance_2d_to_target().gt(1500) 
			-> rathalos.normal_breath() 
		else 
		endif 
	endif 
	return 
endf 

def node_312
	>> node_001 
	-> rathalos.short_back_step() 
	if self.target.helpless_0() 
		>> node_188 
	else 
	endif 
	-> rathalos.normal_breath() 
	return 
endf 

def node_313
	>> node_001 
	if self.distance_2d_to_target().leq(1000) 
		>> node_198 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_195 
	else 
		>> node_197 
	endif 
	return 
endf 

def node_314
	>> node_001 
	if self.distance_2d_to_target().leq(1000) 
		>> node_311 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_195 
	else 
		>> node_197 
	endif 
	return 
endf 

def node_315
	>> node_001 
	if self.distance_2d_to_target().leq(1000) 
		>> node_198 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_194 
	else 
		>> node_197 
	endif 
	return 
endf 

def node_316
	if self.distance_3d_to_target().leq(1500) 
	else 
		if self.fatigued() 
			-> rathalos.dash_tired(2,0,0,1500) 
		else 
			-> rathalos.dash_no_hit(2,0,0,1500) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_317
	>> node_001 
	if self.quest_id(66852) 
		if self.in_map(st.Ancient_Forest).in_area(1) 
			-> rathalos.back_step_breath_to_ground() 
		else 
			>> node_198 
			>> node_314 
			reset 
		endif 
	else 
		-> rathalos.back_step_breath_to_ground() 
	endif 
	return 
endf 

def node_318
	>> node_001 
	if self.quest_id(66852) 
		if self.in_map(st.Ancient_Forest).in_area(1) 
			-> rathalos.back_step_breath_to_air() 
		else 
			>> node_198 
			>> node_314 
			reset 
		endif 
	else 
		-> rathalos.back_step_breath_to_air() 
	endif 
	return 
endf 

def node_319
	>> node_001 
	if self.quest_id(66852) 
		if self.in_map(st.Ancient_Forest).in_area(1) 
			-> rathalos.back_step_breath_to_air() 
		else 
			conclude 
		endif 
	else 
		-> rathalos.back_step_breath_to_air() 
	endif 
	return 
endf 

