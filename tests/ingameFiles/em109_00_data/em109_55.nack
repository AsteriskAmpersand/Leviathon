importactions TobiKadachi as tobikadachi

def node_000
	conclude 
endf 

def node_001
	self.targetArea(14) 
	if self.distance_3d_to_target().gt(600) 
		>> node_029 
		repeat 
	else 
		>> node_084 
	endif 
	return 
endf 

def node_002
	self.targetArea(14) 
	if self.distance_3d_to_target().gt(600) 
		>> node_029 
		repeat 
	else 
		>> node_084 
	endif 
	return 
endf 

def node_003
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> node_029 
		repeat 
	else 
		>> node_084 
	endif 
	return 
endf 

def node_004
	if self.current_quest().is_rank(rank.MR) 
		>> node_164 
	else 
		if self.targetEnemy(target_em.any_monster) 
			if self.target(13) 
			else 
				if self.vertical_distance_to_target().leq(1000) 
					if self.distance_3d_to_target().leq(3000) 
						if self.target_is(em.Anjanath) 
							>> node_007 
						elif self.target_is(em.Deviljho) 
							if self.target(49) 
								>> node_011 
							else 
								>> node_006 
							endif 
						elif self.target_is(em.Savage_Deviljho) 
							if self.target(49) 
								>> node_011 
							else 
								>> node_006 
							endif 
						elif function#30(2) 
							>> node_006 
						else 
							>> node_005 
						endif 
					else 
					else 
					endif 
				endif 
			else 
			endif 
		endif 
	endif 
	return 
endf 

def node_005
	if self.target.in_combat() 
		random (10) >> node_008 
		elser (10) >> node_009 
		elser (80) >> node_013 
		elser (0) >> node_011 
		endr 
	else 
		random (30) >> node_008 
		elser (10) >> node_009 
		elser (60) >> node_013 
		elser (0) >> node_011 
		endr 
	endif 
	return 
endf 

def node_006
	if self.target.in_combat() 
		random (10) >> node_008 
		elser (5) >> node_009 
		elser (65) >> node_010 
		elser (20) >> node_011 
		endr 
	else 
		random (10) >> node_008 
		elser (5) >> node_009 
		elser (65) >> node_010 
		elser (20) >> node_011 
		endr 
	endif 
	return 
endf 

def node_007
	if self.target(39) 
		>> node_006 
	else 
		if self.in_combat() 
			if self.target.in_combat() 
				random (75) >> node_008 
				elser (15) >> node_009 
				elser (10) >> node_010 
				elser (0) >> node_011 
				endr 
			else 
				random (40) >> node_008 
				elser (60) >> node_009 
				elser (0) >> node_010 
				elser (0) >> node_011 
				endr 
			endif 
		else 
			if self.target.in_combat() 
				random (10) >> node_008 
				elser (5) >> node_009 
				elser (65) >> node_010 
				elser (20) >> node_011 
				endr 
			else 
				random (10) >> node_008 
				elser (5) >> node_009 
				elser (65) >> node_010 
				elser (20) >> node_011 
				endr 
			endif 
		endif 
	endif 
	return 
endf 

def node_008
	return 
endf 

def node_009
	>> node_077 
	>> node_042 
	>> node_085 
	return 
endf 

def node_010
	>> node_077 
	if self.vertical_distance_to_target().gt(500) 
		>> node_055 
	else 
		if self.distance_3d_to_target().leq(700) 
			random (40) >> node_059 
			elser (30) >> node_055 
			elser (30) >> node_061 
			endr 
		else 
			random (40) >> node_059 
			elser (30) >> node_055 
			elser (30) >> node_061 
			endr 
		endif 
	endif 
	return 
endf 

def node_011
	>> node_077 
	if [RegisterVar0 += 0] 
		[RegisterVar0 |-] 
	else 
		[RegisterVar0 ++] 
		self.force_area_change2() 
	endif 
	>> node_012 
	return 
endf 

def node_012
	>> node_077 
	>> node_047 
	>> node_084 
	return 
endf 

def node_013
	>> node_077 
	if self.vertical_distance_to_target().gt(500) 
		>> node_055 
	else 
		random (40) >> node_014 
		elser (60) 
		endr 
		self.targetEnemy(target_em.any_monster) 
		if self.distance_3d_to_target().leq(700) 
			random (40) >> node_059 
			elser (30) >> node_055 
			elser (30) >> node_061 
			endr 
		else 
			random (40) >> node_059 
			elser (30) >> node_055 
			elser (30) >> node_061 
			endr 
		endif 
	endif 
	return 
endf 

def node_014
	>> node_077 
	>> node_060 
	return 
endf 

def node_015
	>> node_010 
	>> node_011 
	return 
endf 

def node_016
	>> node_013 
	>> node_011 
	return 
endf 

def node_017
	if function#102(1) 
		function#103() 
	else 
		self.targetArea(1) 
	endif 
	>> node_020 
	return 
endf 

def node_018
	if function#102() 
		function#103() 
	else 
		self.targetArea(1) 
	endif 
	>> node_020 
	return 
endf 

def node_019
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#102(2) 
		function#103() 
	else 
	endif 
	>> node_020 
	return 
endf 

def node_020
	-> tobikadachi.dash(2,1,0,1000,500) 
	if self.distance_3d_to_target().leq(500) 
	else 
		repeat 
	endif 
	return 
endf 

def node_021
	-> tobikadachi.dash(2,1,0,500,500) 
	return 
endf 

def node_022
	-> tobikadachi.dash(2,1,0,1500,500) 
	return 
endf 

def node_023
	-> tobikadachi.dash(2,1,0,1000,700) 
	return 
endf 

def node_024
	-> tobikadachi.dash(2,1,0,3000,500) 
	return 
endf 

def node_025
	-> tobikadachi.dash(2,1,0,1500,700) 
	if self.distance_2d_to_target().leq(700) 
		return 
	else -> tobikadachi.dash(2,1,0,1500,700) 
	endif 
	if self.distance_2d_to_target().leq(700) 
		return 
	else -> tobikadachi.dash(2,1,0,1500,700) 
	endif 
	if self.distance_2d_to_target().leq(700) 
		return 
	else -> tobikadachi.dash(2,1,0,1500,700) 
	endif 
	if self.distance_2d_to_target().leq(700) 
		return 
	else -> tobikadachi.dash(2,1,0,1500,700) 
	endif 
	return 
endf 

def node_026
	-> tobikadachi.dash(2,1,0,1500,1000) 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else -> tobikadachi.dash(2,1,0,1500,1000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else -> tobikadachi.dash(2,1,0,1500,1000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else -> tobikadachi.dash(2,1,0,1500,1000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else -> tobikadachi.dash(2,1,0,1500,1000) 
	endif 
	return 
endf 

def node_027
	-> tobikadachi.dash(2,1,0,2500,2500) 
	if self.distance_2d_to_target().leq(2500) 
		return 
	else -> tobikadachi.dash(2,1,0,2500,2500) 
	endif 
	if self.distance_2d_to_target().leq(2500) 
		return 
	else -> tobikadachi.dash(2,1,0,2500,2500) 
	endif 
	return 
endf 

def node_028
	-> tobikadachi.dash(2,1,5,500,500) 
	return 
endf 

def node_029
	-> tobikadachi.dash(2,1,5,1500,500) 
	return 
endf 

def node_030
	-> tobikadachi.dash(2,1,0,1000,450) 
	if self.distance_3d_to_target().gt(450) 
		-> tobikadachi.dash(2,1,0,1000,450) 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		-> tobikadachi.dash(2,1,0,1000,450) 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		-> tobikadachi.dash(2,1,0,1000,450) 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		-> tobikadachi.dash(2,1,0,1000,450) 
	else 
	endif 
	return 
endf 

def node_031
	-> tobikadachi.dash(2,1,0,1000,300) 
	if self.distance_3d_to_target().gt(450) 
		-> tobikadachi.dash(2,1,0,1000,300) 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		-> tobikadachi.dash(2,1,0,1000,300) 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		-> tobikadachi.dash(2,1,0,1000,300) 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		-> tobikadachi.dash(2,1,0,1000,300) 
	else 
	endif 
	return 
endf 

def node_032
	-> tobikadachi.walk(1,0,0,1000) 
	return 
endf 

def node_033
	-> tobikadachi.walk(2,1,0,500,300) 
	return 
endf 

def node_034
	-> tobikadachi.walk(2,1,0,1500,1000) 
	return 
endf 

def node_035
	-> tobikadachi.walk(2,1,0,1000,700) 
	return 
endf 

def node_036
	-> tobikadachi.walk(2,1,5,500,300) 
	return 
endf 

def node_037
	-> tobikadachi.walk(2,1,5,1500,1000) 
	return 
endf 

def node_038
	if function#101() 
	else 
		if self.angle_2d_cw_between(30,330) 
			-> tobikadachi.turn() 
		else 
		endif 
	endif 
	return 
endf 

def node_039
	if function#101() 
	else 
		if self.angle_2d_cw_between(30,330) 
			if self.distance_2d_to_target().leq(400) 
				-> tobikadachi.back_turn() 
			else 
				-> tobikadachi.turn() 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_040
	if function#101() 
	else 
		if self.angle_2d_cw_between(60,300) 
			if self.distance_2d_to_target().leq(400) 
				-> tobikadachi.back_turn() 
			else 
				-> tobikadachi.turn() 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_041
	if function#101() 
	else 
		if self.angle_2d_cw_between(90,270) 
			if self.distance_2d_to_target().leq(400) 
				-> tobikadachi.back_turn() 
			else 
				-> tobikadachi.turn() 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_042
	if function#101() 
	else 
		if self.angle_2d_cw_between(30,330) 
			if self.distance_2d_to_target().leq(400) 
				-> tobikadachi.back_turn() 
			else 
				-> tobikadachi.quick_turn() 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_043
	if function#101() 
	else 
		if self.angle_2d_cw_between(60,300) 
			if self.distance_2d_to_target().leq(400) 
				-> tobikadachi.back_turn() 
			else 
				-> tobikadachi.quick_turn() 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_044
	if function#101() 
	else 
		if self.angle_2d_cw_between(90,270) 
			if self.distance_2d_to_target().leq(400) 
				-> tobikadachi.back_turn() 
			else 
				-> tobikadachi.quick_turn() 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_045
	if function#101() 
	else 
		if self.angle_2d_cw_between(130,230) 
			if 
				-> tobikadachi.back_turn() 
			else 
				-> tobikadachi.quick_turn() 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_046
	if function#101() 
	else 
		-> tobikadachi.quick_turn() 
	endif 
	return 
endf 

def node_047
	if function#101() 
	else 
		-> tobikadachi.back_turn() 
	endif 
	return 
endf 

def node_048
	>> node_077 
	>> node_133 
	return 
endf 

def node_049
	>> node_077 
	if self.angle_2d_cw_between(130,230) 
		>> node_114 
	else 
	endif 
	return 
endf 

def node_050
	if self.target(4) 
		>> node_084 
	elif self.distance_2d_to_target().leq(700) 
		if self.angle_2d_cw_between(230,130) 
			if function#107() 
				if function#104() 
					>> node_125 
				elif function#104(1) 
					>> node_129 
				endif 
			elif function#107(1) 
				>> node_129 
			endif 
		else 
			>> node_114 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_114 
	else 
		-> tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_051
	if self.target(4) 
		>> node_084 
	elif self.distance_2d_to_target().leq(700) 
		if self.angle_2d_cw_between(40,110) 
			>> node_115 
		elif self.angle_2d_cw_between(250,320) 
			>> node_115 
		else 
			>> node_114 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_114 
	else 
		-> tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_052
	if self.target(4) 
		>> node_084 
	elif self.distance_2d_to_target().leq(900) 
		if self.angle_2d_cw_between(80,280) 
			>> node_115 
		else 
			>> node_114 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_114 
	else 
		-> tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_053
	if self.target(4) 
		>> node_084 
	elif self.distance_2d_to_target().leq(700) 
		if self.angle_2d_cw_between(90,270) 
			>> node_115 
		else 
			>> node_114 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_114 
	else 
		-> tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_054
	if self.target(4) 
		>> node_084 
	elif self.distance_2d_to_target().leq(350) 
		if self.angle_2d_cw_between(40,90) 
			>> node_115 
		elif self.angle_2d_cw_between(270,320) 
			>> node_115 
		else 
			>> node_114 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_114 
	else 
		-> tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_055
	>> node_043 
	if self.distance_2d_to_target().leq(800) 
		>> node_133 
	elif self.distance_2d_to_target().gt(2500) 
		>> node_027 
	else 
	endif 
	>> node_139 
	return 
endf 

def node_056
	>> node_042 
	>> node_141 
	return 
endf 

def node_057
	>> node_046 
	>> node_142 
	return 
endf 

def node_058
	if self.distance_2d_to_target().leq(700) 
		if self.angle_2d_cw_between(30,130) 
		elif self.angle_2d_cw_between(230,330) 
		else 
			>> node_051 
		endif 
	else 
		>> node_051 
	endif 
	if function#107() 
		if function#104() 
			>> node_124 
		elif function#104(1) 
			if self.part(0).is_broken(1) 
				>> node_124 
			else 
				>> node_128 
			endif 
		endif 
	elif function#107(1) 
		if self.part(0).is_broken(1) 
			>> node_124 
		else 
			>> node_128 
		endif 
	endif 
	>> node_050 
	return 
endf 

def node_059
	if self.distance_2d_to_target().leq(1200) 
		if self.angle_2d_cw_between(250,110) 
		else 
			>> node_051 
		endif 
	else 
		>> node_026 
	endif 
	>> node_132 
	return 
endf 

def node_060
	>> node_051 
	>> node_116 
	return 
endf 

def node_061
	if self.angle_2d_cw_between(135,225) 
	else 
		>> node_052 
	endif 
	if self.part(3).is_broken(1) 
		>> node_138 
	else 
		if function#107() 
			if function#104() 
				>> node_126 
			elif function#104(1) 
				>> node_130 
			endif 
		elif function#107(1) 
			>> node_159 
		endif 
	endif 
	return 
endf 

def node_062
	>> node_051 
	if self.angle_2d_cw_between(0,180) 
		>> node_123 
	else 
		>> node_122 
	endif 
	return 
endf 

def node_063
	>> node_053 
	if function#107() 
		if function#104() 
			>> node_127 
		elif function#104(1) 
			if self.part(3).is_broken(1) 
				>> node_127 
			else 
				>> node_131 
			endif 
		endif 
	elif function#107(1) 
		if self.part(3).is_broken(1) 
			>> node_127 
		else 
			>> node_131 
		endif 
	endif 
	return 
endf 

def node_064
	>> node_043 
	if self.distance_2d_to_target().leq(600) 
		>> node_048 
	elif self.distance_2d_to_target().gt(2500) 
		>> node_027 
	else 
	endif 
	>> node_140 
	>> node_051 
	return 
endf 

def node_065
	>> node_054 
	>> node_066 
	return 
endf 

def node_066
	if self.angle_2d_cw_between(0,180) 
		>> node_134 
	else 
		>> node_135 
	endif 
	return 
endf 

def node_067
	if self.part(3).is_broken(1) 
		>> node_137 
	else 
		if function#107() 
			>> node_136 
		elif function#107(1) 
			>> node_160 
		endif 
	endif 
	return 
endf 

def node_068
	if self.distance_2d_to_target().leq(1200) 
		if self.enraged() 
			random (35) >> node_076 
			elser (65) 
			endr 
		elif self.fatigued() 
			random (7) >> node_076 
			elser (93) 
			endr 
		else 
			random (13) >> node_076 
			elser (87) 
			endr 
		endif 
	else 
	endif 
	return 
endf 

def node_069
	>> node_063 
	if self.angle_2d_cw_between(110,250) 
		>> node_061 
	else 
	endif 
	return 
endf 

def node_070
	>> node_119 
	if function#107() 
		if function#104() 
			>> node_144 
		elif function#104(1) 
			if self.part(3).is_broken(1) 
				>> node_144 
			else 
				>> node_143 
			endif 
		endif 
	elif function#107(1) 
		if self.part(3).is_broken(1) 
			>> node_144 
		else 
			>> node_161 
		endif 
	endif 
	return 
endf 

def node_071
	>> node_145 
	return 
endf 

def node_072
	if function#106(3) 
		function#103() 
		-> tobikadachi.dash(1,0,0,500) 
		self.targetEnemy(target_em.random_player_or_cat) 
	else 
	endif 
	return 
endf 

def node_073
	if function#107() 
		if function#104() 
			>> node_071 
		elif function#104(1) 
			>> node_070 
		endif 
	elif function#107(1) 
		>> node_070 
	endif 
	return 
endf 

def node_074
	if self.part(3).is_broken(1) 
		>> node_138 
	else 
		if function#107() 
			if function#104() 
				>> node_126 
			elif function#104(1) 
				>> node_130 
			endif 
		elif function#107(1) 
			>> node_159 
		endif 
	endif 
	return 
endf 

def node_075
	>> node_077 
	>> node_108 
	return 
endf 

def node_076
	if function#105() 
		function#103() 
		>> node_117 
		if self.part(1).is_broken(1) 
			random (30) 
						>> node_121 
			elser (70) 
			endr 
		else 
		endif 
		reset 
	else 
	endif 
	return 
endf 

def node_077
	if function#101() 
		>> node_079 
	else 
	endif 
	return 
endf 

def node_078
	return 
endf 

def node_079
	>> node_118 
	return 
endf 

def node_080
	if self.angular_18(270,90) 
		>> node_079 
		>> node_020 
		reset 
	else 
	endif 
	return 
endf 

def node_081
	if function#101() 
		>> node_120 
	else 
		>> node_104 
	endif 
	return 
endf 

def node_082
	if function#101() 
		>> node_120 
	else 
		>> node_104 
	endif 
	return 
endf 

def node_083
	>> node_077 
	>> node_103 
	return 
endf 

def node_084
	>> node_077 
	>> node_106 
	return 
endf 

def node_085
	>> node_077 
	>> node_107 
	return 
endf 

def node_086
	>> node_155 
	return 
endf 

def node_087
	if function#107() 
		if function#104(1) 
			if function#101() 
				>> node_148 
			else 
				>> node_151 
			endif 
		else 
		endif 
	elif function#107(1) 
		if function#101() 
			>> node_157 
		else 
			>> node_158 
		endif 
	endif 
	return 
endf 

def node_088
	>> node_146 
	return 
endf 

def node_089
	>> node_044 
	>> node_149 
	return 
endf 

def node_090
	random (50) 
				>> node_106 
	elser (50) 
	endr 
	return 
endf 

def node_091
	>> node_109 
	return 
endf 

def node_092
	>> node_110 
	return 
endf 

def node_093
	>> node_111 
	return 
endf 

def node_094
	>> node_112 
	return 
endf 

def node_095
	>> node_038 
	>> node_113 
	return 
endf 

def node_096
	>> node_152 
	return 
endf 

def node_097
	>> node_039 
	>> node_154 
	return 
endf 

def node_098
	return 
endf 

def node_099
	-> tobikadachi.turn() 
	>> node_105 
	return 
endf 

def node_100
	>> node_153 
	return 
endf 

def node_101
	random (35) 
				>> node_076 
	elser (65) 
	endr 
	return 
endf 

def node_102
	>> node_077 
	-> tobikadachi.idle() 
	return 
endf 

def node_103
	>> node_077 
	-> tobikadachi.discover() 
	return 
endf 

def node_104
	>> node_077 
	-> tobikadachi.search() 
	return 
endf 

def node_105
	>> node_077 
	-> tobikadachi.marking() 
	return 
endf 

def node_106
	>> node_077 
	-> tobikadachi.threat() 
	return 
endf 

def node_107
	>> node_077 
	-> tobikadachi.threat_short() 
	return 
endf 

def node_108
	>> node_077 
	-> tobikadachi.tired() 
	return 
endf 

def node_109
	>> node_077 
	-> tobikadachi.sniff_s() 
	return 
endf 

def node_110
	>> node_077 
	-> tobikadachi.sniff_l() 
	return 
endf 

def node_111
	>> node_077 
	-> tobikadachi.lost_search_short() 
	return 
endf 

def node_112
	>> node_077 
	-> tobikadachi.lost_search() 
	return 
endf 

def node_113
	>> node_077 
	-> tobikadachi.peep_grass_search() 
	return 
endf 

def node_114
	>> node_077 
	-> tobikadachi.side_turn() 
	return 
endf 

def node_115
	>> node_077 
	-> tobikadachi.side_turn_to_idle() 
	return 
endf 

def node_116
	>> node_077 
	-> tobikadachi.side_walk(2,0,0,500) 
	return 
endf 

def node_117
	>> node_077 
	-> tobikadachi.seamless_jump_to_climb() 
	return 
endf 

def node_118
	if function#101() 
		-> tobikadachi.jump_to_ground() 
	else 
		>> node_084 
	endif 
	return 
endf 

def node_119
	if function#101() 
		-> tobikadachi.climb_idle_switch() 
	else 
		>> node_084 
	endif 
	return 
endf 

def node_120
	if function#101() 
		-> tobikadachi.climb_life_search() 
	else 
		>> node_084 
	endif 
	return 
endf 

def node_121
	if function#101() 
		-> tobikadachi.climb_balance_break() 
	else 
		>> node_084 
	endif 
	return 
endf 

def node_122
	>> node_077 
	-> tobikadachi.side_step_l() 
	return 
endf 

def node_123
	>> node_077 
	-> tobikadachi.side_step_r() 
	return 
endf 

def node_124
	>> node_077 
	-> tobikadachi.side_bite() 
	return 
endf 

def node_125
	>> node_077 
	-> tobikadachi.side_bite_to_idle() 
	return 
endf 

def node_126
	>> node_077 
	-> tobikadachi.side_tail_attack() 
	return 
endf 

def node_127
	>> node_077 
	-> tobikadachi.side_quick_tail() 
	return 
endf 

def node_128
	>> node_077 
	-> tobikadachi.shock_side_head() 
	return 
endf 

def node_129
	>> node_077 
	-> tobikadachi.shock_side_head_to_idle() 
	return 
endf 

def node_130
	>> node_077 
	-> tobikadachi.shock_side_tail_attack() 
	return 
endf 

def node_131
	>> node_077 
	-> tobikadachi.shock_side_quick_tail() 
	return 
endf 

def node_132
	>> node_077 
	-> tobikadachi.side_rush_bite() 
	return 
endf 

def node_133
	>> node_077 
	-> tobikadachi.back_step() 
	return 
endf 

def node_134
	>> node_077 
	-> tobikadachi.reposition_attack_l() 
	return 
endf 

def node_135
	>> node_077 
	-> tobikadachi.reposition_attack_r() 
	return 
endf 

def node_136
	>> node_077 
	-> tobikadachi.discharge() 
	return 
endf 

def node_137
	>> node_077 
	-> tobikadachi.broken_discharge() 
	return 
endf 

def node_138
	>> node_077 
	-> tobikadachi.broken_side_tail_attack() 
	return 
endf 

def node_139
	>> node_077 
	-> tobikadachi.long_glide_attack() 
	return 
endf 

def node_140
	>> node_077 
	-> tobikadachi.long_bite_attack() 
	return 
endf 

def node_141
	>> node_077 
	-> tobikadachi.jump_attack() 
	return 
endf 

def node_142
	>> node_077 
	-> tobikadachi.fall_attack() 
	return 
endf 

def node_143
	if function#101() 
		-> tobikadachi.climb_glide_shock() 
	else 
		>> node_058 
	endif 
	return 
endf 

def node_144
	if function#101() 
		-> tobikadachi.climb_glide_attack() 
	else 
		>> node_058 
	endif 
	return 
endf 

def node_145
	if function#101() 
		-> tobikadachi.climb_glide_quick() 
	else 
		>> node_058 
	endif 
	return 
endf 

def node_146
	if function#101() 
		-> tobikadachi.climb_charge_start() 
	else 
		-> tobikadachi.charge_start() 
	endif 
	return 
endf 

def node_147
	if function#101() 
		-> tobikadachi.climb_charge_max() 
	else 
		-> tobikadachi.charge_max() 
	endif 
	return 
endf 

def node_148
	if function#101() 
		-> tobikadachi.climb_charge_refresh() 
	else 
		-> tobikadachi.charge_refresh() 
	endif 
	return 
endf 

def node_149
	>> node_077 
	-> tobikadachi.charge_start() 
	return 
endf 

def node_150
	>> node_077 
	-> tobikadachi.charge_max() 
	return 
endf 

def node_151
	>> node_077 
	-> tobikadachi.charge_refresh() 
	return 
endf 

def node_152
	>> node_077 
	-> tobikadachi.sleep() 
	return 
endf 

def node_153
	>> node_077 
	if function#C9() 
		-> tobikadachi.dying_sleep(3,0,0,150) 
	else 
		function#CA() 
	endif 
	return 
endf 

def node_154
	>> node_077 
	-> tobikadachi.drink() 
	return 
endf 

def node_155
	>> node_077 
	-> tobikadachi.refresh() 
	return 
endf 

def node_156
	if function#101() 
		-> tobikadachi.climb_super_charge_max() 
	else 
	endif 
	return 
endf 

def node_157
	if function#101() 
		-> tobikadachi.climb_super_charge_refresh() 
	else 
		-> tobikadachi.super_charge_refresh() 
	endif 
	return 
endf 

def node_158
	>> node_077 
	-> tobikadachi.super_charge_refresh() 
	return 
endf 

def node_159
	>> node_077 
	-> tobikadachi.super_shock_side_tail_attack() 
	return 
endf 

def node_160
	>> node_077 
	-> tobikadachi.super_discharge() 
	return 
endf 

def node_161
	if function#101() 
		-> tobikadachi.climb_glide_super_shock() 
	else 
		>> node_058 
	endif 
	return 
endf 

def node_162
	if self.distance_2d_to_target().leq(1200) 
		if self.enraged() 
			random (35) >> node_163 
			elser (65) 
			endr 
		elif self.fatigued() 
			random (15) >> node_163 
			elser (85) 
			endr 
		else 
			random (25) >> node_163 
			elser (75) 
			endr 
		endif 
	else 
	endif 
	return 
endf 

def node_163
	if function#105() 
		function#103() 
		>> node_117 
		if self.part(1).is_broken(1) 
			random (20) 
						>> node_121 
			elser (80) 
			endr 
		else 
		endif 
		reset 
	else 
	endif 
	return 
endf 

def node_164
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.vertical_distance_to_target().leq(1000) 
				if self.distance_3d_to_target().leq(3000) 
					if self.target_is(em.Anjanath) 
						>> node_167 
					elif self.target_is(em.Deviljho) 
						if self.target(49) 
							>> node_011 
						else 
							>> node_166 
						endif 
					elif self.target_is(em.Savage_Deviljho) 
						if self.target(49) 
							>> node_011 
						else 
							>> node_166 
						endif 
					elif function#30(2) 
						>> node_166 
					else 
						>> node_165 
					endif 
				else 
				else 
				endif 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_165
	if self.target.in_combat() 
		random (10) >> node_008 
		elser (10) >> node_009 
		elser (65) >> node_013 
		elser (0) >> node_011 
		elser (15) >> node_016 
		endr 
	else 
		random (30) >> node_008 
		elser (10) >> node_009 
		elser (60) >> node_013 
		elser (0) >> node_011 
		elser (0) >> node_016 
		endr 
	endif 
	return 
endf 

def node_166
	if self.target.in_combat() 
		random (10) >> node_008 
		elser (5) >> node_009 
		elser (50) >> node_010 
		elser (15) >> node_011 
		elser (20) >> node_016 
		endr 
	else 
		random (10) >> node_008 
		elser (5) >> node_009 
		elser (65) >> node_010 
		elser (20) >> node_011 
		elser (0) >> node_016 
		endr 
	endif 
	return 
endf 

def node_167
	if self.target(39) 
		>> node_166 
	else 
		if self.in_combat() 
			if self.target.in_combat() 
				random (75) >> node_008 
				elser (15) >> node_009 
				elser (10) >> node_010 
				elser (0) >> node_011 
				elser (0) >> node_016 
				endr 
			else 
				random (40) >> node_008 
				elser (60) >> node_009 
				elser (0) >> node_010 
				elser (0) >> node_011 
				elser (0) >> node_016 
				endr 
			endif 
		else 
			if self.target.in_combat() 
				random (10) >> node_008 
				elser (5) >> node_009 
				elser (65) >> node_010 
				elser (20) >> node_011 
				elser (0) >> node_016 
				endr 
			else 
				random (10) >> node_008 
				elser (5) >> node_009 
				elser (65) >> node_010 
				elser (20) >> node_011 
				elser (0) >> node_016 
				endr 
			endif 
		endif 
	endif 
	return 
endf 

