importactions Velkhana as velkhana

def node_000 : 37
	conclude 
endf 

def node_001 : 888
	[RegisterVar10 |-] 
	if self.in_map(st.Elder_Recess).in_area(1) 
		if function#10F(1500) 
		else 
			[RegisterVar10 ++] 
		endif 
	elif self.in_map(st.Elder_Recess).in_area(2) 
		if function#10F(1250) 
		else 
			[RegisterVar10 ++] 
		endif 
	elif self.in_map(st.Elder_Recess).in_area(4) 
		if function#10F(1750) 
		else 
			[RegisterVar10 ++] 
		endif 
	elif self.in_map(st.Elder_Recess).in_area(5) 
		if function#10F(1500) 
		else 
			[RegisterVar10 ++] 
		endif 
	elif self.in_map(st.Elder_Recess).in_area(6) 
		if function#10F(1250) 
		else 
			[RegisterVar10 ++] 
		endif 
	elif self.in_map(st.Elder_Recess).in_area(7) 
		if function#10F(1500) 
		else 
			[RegisterVar10 ++] 
		endif 
	elif self.in_map(st.Elder_Recess).in_area(8) 
		if function#10F(1825) 
		else 
			[RegisterVar10 ++] 
		endif 
	else 
		if function#10F(1500) 
		else 
			[RegisterVar10 ++] 
		endif 
	endif 
	return 
endf 

def node_002 : 900
	>> node_001 
	if [RegisterVar10 == 0] 
		random (60) >> node_004 
		elser (40) >> node_025 
		endr 
	else 
		random (40) >> node_004 
		elser (60) >> node_025 
		endr 
	endif 
	return 
endf 

def node_003 : 836
	>> node_001 
	if self.target(44) 
		>> node_004 
	else 
		if [RegisterVar10 == 0] 
			random (55) >> node_008 
			elser (45) >> node_025 
			endr 
		else 
			random (40) >> node_008 
			elser (60) >> node_025 
			endr 
		endif 
	endif 
	return 
endf 

def node_004 : 881
	>> node_001 
	if [RegisterVar10 == 0] 
		>> node_005 
	else 
		>> node_007 
	endif 
	return 
endf 

def node_005 : 870
	>> node_001 
	if [RegisterVar10 == 0] 
		>> node_046 
		if self.distance_2d_to_target().leq(800) 
			-> velkhana.adjust_bite() @ comboSetting:1 
			-> velkhana.ex_rotate_ice_wall_breath_seq() 
		elif self.distance_2d_to_target().leq(1500) 
			-> velkhana.ex_rotate_ice_wall_breath_seq() 
		else 
			>> node_233 
			-> velkhana.adjust_bite() @ comboSetting:1 
			-> velkhana.ex_rotate_ice_wall_breath_seq() 
		endif 
	else 
		if self.enraged() 
			random (20) >> node_033 
			elser (0) >> node_031 
			elser (0) >> node_030 
			elser (0) >> node_032 
			elser (20) >> node_036 
			elser (20) >> node_039 
			elser (40) >> node_025 
			endr 
		else 
			random (0) >> node_033 
			elser (0) >> node_031 
			elser (0) >> node_030 
			elser (0) >> node_032 
			elser (50) >> node_036 
			elser (0) >> node_039 
			elser (50) >> node_025 
			endr 
		endif 
	endif 
	return 
endf 

def node_006 : 906
	>> node_046 
	-> velkhana.adjust_bite() @ comboSetting:1 
	-> velkhana.ex_rotate_ice_wall_breath() 
	return 
endf 

def node_007 : 831
	>> node_046 
	if function#101(2) 
		if self.distance_2d_to_target().leq(800) 
			-> velkhana.adjust_bite() @ comboSetting:1 
			-> velkhana.ex_area_breath() @ comboSetting:1 
			-> velkhana.chance() 
		else 
			-> velkhana.ex_area_breath() @ comboSetting:1 
			-> velkhana.chance() 
		endif 
	else 
		-> velkhana.ex_area_breath() @ comboSetting:1 
		-> velkhana.chance() 
	endif 
	return 
endf 

def node_008 : 871
	>> node_001 
	if [RegisterVar10 == 0] 
		>> node_012 
	else 
		>> node_009 
	endif 
	return 
endf 

def node_009 : 869
	if [RegisterVar9 == 0] 
		>> node_010 
	elif [RegisterVar9 == 1] 
		>> node_010 
	elif [RegisterVar9 == 2] 
		>> node_011 
	else 
		>> node_011 
	endif 
	return 
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.ex_back_step_pierce2() @ comboSetting:1 
	-> velkhana.adjust_bite() @ comboSetting:1 
	-> velkhana.ex_area_breath() @ comboSetting:1 
	-> velkhana.chance() 
	return 
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.rush5() @ comboSetting:1 
	-> velkhana.adjust_bite() @ comboSetting:1 
	-> velkhana.ex_area_breath() @ comboSetting:1 
	-> velkhana.chance() 
	return 
endf 

def node_010 : 902
	>> node_044 
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.rush5() @ comboSetting:1 
	-> velkhana.adjust_bite() @ comboSetting:1 
	-> velkhana.ex_area_breath() @ comboSetting:1 
	-> velkhana.chance() 
	return 
endf 

def node_011 : 903
	>> node_045 
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.ex_back_step_pierce2() @ comboSetting:1 
	-> velkhana.adjust_bite() @ comboSetting:1 
	-> velkhana.ex_area_breath() @ comboSetting:1 
	-> velkhana.chance() 
	return 
endf 

def node_012 : 849
	if [RegisterVar9 == 0] 
		>> node_013 
	elif [RegisterVar9 == 1] 
		>> node_013 
	elif [RegisterVar9 == 2] 
		>> node_014 
	else 
		>> node_014 
	endif 
	return 
	>> node_046 
	-> velkhana.rush5() @ comboSetting:1 
	-> velkhana.adjust_bite() @ comboSetting:1 
	-> velkhana.ex_rotate_ice_wall_breath_seq() 
	return 
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.ex_back_step_pierce2() @ comboSetting:1 
	-> velkhana.adjust_bite() @ comboSetting:1 
	-> velkhana.ex_rotate_ice_wall_breath_seq() 
	return 
endf 

def node_013 : 904
	>> node_044 
	>> node_046 
	-> velkhana.rush5() @ comboSetting:1 
	-> velkhana.adjust_bite() @ comboSetting:1 
	-> velkhana.ex_rotate_ice_wall_breath_seq() 
	return 
endf 

def node_014 : 905
	>> node_045 
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.ex_back_step_pierce2() @ comboSetting:1 
	-> velkhana.adjust_bite() @ comboSetting:1 
	-> velkhana.ex_rotate_ice_wall_breath_seq() 
	return 
endf 

def node_015 : 901
	>> node_046 
	-> velkhana.rush3() @ comboSetting:1 
	-> velkhana.adjust_bite() @ comboSetting:1 
	-> velkhana.ex_rotate_ice_wall_breath() 
	return 
endf 

def node_016 : 840
	if function#10F(750) 
		random (50) >> node_021 
		elser (50) >> node_023 
		endr 
	else 
		if function#110(315,45) 
			>> node_017 
		elif function#110(135,225) 
			>> node_018 
		elif function#110(45,135) 
			>> node_019 
		else 
			>> node_020 
		endif 
	endif 
	return 
endf 

def node_017 : 855
	if self.angle_2d_cw_between(315,45) 
		>> node_021 
	elif self.angle_2d_cw_between(135,225) 
		>> node_023 
	elif self.angle_2d_cw_between(45,135) 
		random (50) >> node_021 
		elser (50) >> node_023 
		endr 
	else 
		random (50) >> node_021 
		elser (50) >> node_023 
		endr 
	endif 
	return 
endf 

def node_018 : 856
	if self.angle_2d_cw_between(315,45) 
		>> node_023 
	elif self.angle_2d_cw_between(135,225) 
		>> node_021 
	elif self.angle_2d_cw_between(45,135) 
		random (50) >> node_021 
		elser (50) >> node_023 
		endr 
	else 
		random (50) >> node_021 
		elser (50) >> node_023 
		endr 
	endif 
	return 
endf 

def node_019 : 857
	if self.angle_2d_cw_between(315,45) 
		random (50) >> node_021 
		elser (50) >> node_023 
		endr 
	elif self.angle_2d_cw_between(135,225) 
		random (50) >> node_021 
		elser (50) >> node_023 
		endr 
	elif self.angle_2d_cw_between(45,135) 
		>> node_021 
	else 
		>> node_023 
	endif 
	return 
endf 

def node_020 : 858
	if self.angle_2d_cw_between(315,45) 
		random (50) >> node_021 
		elser (50) >> node_023 
		endr 
	elif self.angle_2d_cw_between(135,225) 
		random (50) >> node_021 
		elser (50) >> node_023 
		endr 
	elif self.angle_2d_cw_between(45,135) 
		>> node_023 
	else 
		>> node_021 
	endif 
	return 
endf 

def node_021 : 838
	>> node_046 
	-> velkhana.rush4() @ comboSetting:1 
	-> velkhana.adjust_bite() 
	return 
endf 

def node_022 : 897
	>> node_046 
	-> velkhana.rush3() @ comboSetting:1 
	-> velkhana.adjust_bite() 
	return 
endf 

def node_023 : 886
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.ex_back_step_pierce2() @ comboSetting:1 
	-> velkhana.adjust_bite() 
	return 
endf 

def node_024 : 854
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.ex_back_step_pierce2() 
	return 
endf 

def node_025 : 837
	>> node_001 
	if [RegisterVar10 == 0] 
		>> node_029 
	else 
		if [RegisterVar7 == 1] 
			>> node_029 
		else 
			>> node_026 
		endif 
	endif 
	return 
endf 

def node_026 : 850
	>> node_046 
	if function#111() 
		function#111() 
		-> velkhana.ex_rush_halt() 
		self.targetEnemy(50) 
		-> velkhana.sweep_180_breath_turn() 
	else 
		-> velkhana.ex_rush_halt() 
		-> velkhana.sweep_180_breath_turn() 
	endif 
	return 
endf 

def node_027 : 898
	>> node_046 
	if function#111() 
		function#111() 
		-> velkhana.ex_rush_halt() 
		self.targetEnemy(50) 
		-> velkhana.sweep_180_breath_turn() 
	else 
		-> velkhana.ex_rush_halt() 
		-> velkhana.sweep_180_breath_turn() 
	endif 
	return 
endf 

def node_028 : 899
	>> node_046 
	if function#111() 
		function#111() 
		-> velkhana.ex_rush_halt() 
		>> node_381 
		-> velkhana.sweep_180_breath_turn() 
	else 
		>> node_381 
		-> velkhana.ex_rush_halt() 
		-> velkhana.sweep_180_breath_turn() 
	endif 
	return 
endf 

def node_029 : 795
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.ex_back_step_pierce_halt() 
	if self.distance_2d_to_target().leq(800) 
		-> velkhana.ex_ice_wave_start() 
	else 
		-> velkhana.ex_ice_block_breath_to_ground() 
	endif 
	return 
endf 

def node_030 : 832
	>> node_046 
	>> node_069 
	return 
endf 

def node_031 : 833
	>> node_046 
	if self.target(44) 
		random (50) >> node_080 
		elser (50) >> node_065 
		endr 
	else 
		if self.distance_2d_to_target().leq(1600) 
		else 
			>> node_233 
		endif 
		[RegisterVar7 |-] 
		[RegisterVar7 ++] 
		[RegisterVar7 ++] 
		>> node_085 
		>> node_142 
	endif 
	return 
endf 

def node_032 : 887
	>> node_046 
	if self.distance_2d_to_target().leq(2200) 
	else 
		>> node_239 
	endif 
	-> velkhana.ex_ice_block_breath_to_ground() 
	return 
endf 

def node_033 : 809
	if [RegisterVar7 == 1] 
		[RegisterVar7 |-] 
		if self.distance_2d_to_target().leq(1300) 
			>> node_035 
		else 
			>> node_080 
		endif 
	else 
		>> node_080 
	endif 
	return 
endf 

def node_034 : 811
	if [RegisterVar7 == 1] 
		[RegisterVar7 |-] 
		if self.distance_2d_to_target().leq(1600) 
			>> node_035 
		else 
			>> node_084 
		endif 
	else 
		>> node_084 
	endif 
	return 
endf 

def node_035 : 812
	if function#101() 
		if self.distance_2d_to_target().leq(1000) 
			random (35) >> node_058 
			elser (65) >> node_065 
			endr 
		else 
			if self.enraged() 
				>> node_072 
			else 
				>> node_071 
			endif 
		endif 
	elif function#101(1) 
		if self.distance_2d_to_target().leq(800) 
			random (40) >> node_030 
			elser (0) >> node_007 
			elser (60) >> node_036 
			endr 
		else 
			random (0) >> node_030 
			elser (40) >> node_007 
			elser (60) >> node_036 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(1000) 
			random (0) >> node_030 
			elser (20) >> node_007 
			elser (40) >> node_036 
			elser (40) >> node_025 
			endr 
		else 
			random (0) >> node_030 
			elser (20) >> node_007 
			elser (40) >> node_036 
			elser (40) >> node_025 
			endr 
		endif 
	endif 
	return 
endf 

def node_036 : 851
	if [RegisterVar9 == 0] 
		>> node_037 
	elif [RegisterVar9 == 1] 
		>> node_038 
	elif [RegisterVar9 == 2] 
		>> node_037 
	else 
		>> node_038 
	endif 
	return 
endf 

def node_037 : 794
	>> node_046 
	if self.distance_2d_to_target().leq(1000) 
	else 
		>> node_233 
	endif 
	>> node_042 
	-> velkhana.fly_tail_sting() @ comboSetting:1 
	-> velkhana.ex_ice_wave_start_fly() 
	return 
endf 

def node_038 : 796
	>> node_046 
	if self.target(44) 
		random (50) >> node_080 
		elser (50) >> node_065 
		endr 
	else 
		if self.distance_2d_to_target().leq(1300) 
		else 
			>> node_233 
		endif 
		>> node_043 
		-> velkhana.ex_tail_swing_halt() 
		if self.distance_2d_to_target().leq(850) 
			[RegisterVar7 |-] 
			[RegisterVar7 ++] 
			[RegisterVar7 ++] 
			-> velkhana.freeze_breath() 
			>> node_086 
			>> node_142 
		else 
			-> velkhana.ex_area_breath() @ comboSetting:1 
			-> velkhana.chance() 
		endif 
	endif 
	return 
endf 

def node_039 : 802
	if self.target(44) 
		>> node_036 
	else 
		if [RegisterVar9 == 0] 
			>> node_040 
		elif [RegisterVar9 == 1] 
			>> node_041 
		elif [RegisterVar9 == 2] 
			>> node_040 
		else 
			>> node_041 
		endif 
	endif 
	return 
endf 

def node_040 : 798
	>> node_046 
	if self.distance_2d_to_target().leq(250) 
	elif self.distance_2d_to_target().leq(800) 
	else 
		>> node_233 
	endif 
	>> node_042 
	-> velkhana.tail_sting() @ comboSetting:1 
	-> velkhana.combo_fly_tail_sting() @ comboSetting:1 
	-> velkhana.ex_ice_wave_start_fly() 
	return 
endf 

def node_041 : 797
	>> node_046 
	if self.target(44) 
		random (100) >> node_080 
		elser (0) >> node_065 
		endr 
	else 
		if self.distance_2d_to_target().leq(250) 
		elif self.distance_2d_to_target().leq(800) 
		else 
			>> node_233 
		endif 
		>> node_043 
		-> velkhana.tail_sting() @ comboSetting:1 
		-> velkhana.ex_combo_tail_swing_halt() 
		if self.distance_2d_to_target().leq(850) 
			[RegisterVar7 |-] 
			[RegisterVar7 ++] 
			[RegisterVar7 ++] 
			-> velkhana.freeze_breath() 
			>> node_086 
			>> node_142 
		else 
			-> velkhana.ex_area_breath() @ comboSetting:1 
			-> velkhana.chance() 
		endif 
	endif 
	return 
endf 

def node_042 : 846
	if [RegisterVar9 == 0] 
		[RegisterVar9 ++] 
	elif [RegisterVar9 == 1] 
	elif [RegisterVar9 == 2] 
		[RegisterVar9 ++] 
	elif [RegisterVar9 == 3] 
	else 
		[RegisterVar9 |-] 
	endif 
	return 
endf 

def node_043 : 845
	if [RegisterVar9 == 0] 
	elif [RegisterVar9 == 1] 
		[RegisterVar9 |-] 
	elif [RegisterVar9 == 2] 
	elif [RegisterVar9 == 3] 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	else 
		[RegisterVar9 |-] 
	endif 
	return 
endf 

def node_044 : 848
	if [RegisterVar9 == 0] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	elif [RegisterVar9 == 1] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	elif [RegisterVar9 == 2] 
	elif [RegisterVar9 == 3] 
	else 
		[RegisterVar9 |-] 
	endif 
	return 
endf 

def node_045 : 847
	if [RegisterVar9 == 0] 
	elif [RegisterVar9 == 1] 
	elif [RegisterVar9 == 2] 
		[RegisterVar9 |-] 
	elif [RegisterVar9 == 3] 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
	else 
		[RegisterVar9 |-] 
	endif 
	return 
endf 

def node_046 : 222
	if self.flying() 
		if function#AF(5000) 
			-> velkhana.landing() 
		else 
			>> node_048 
		endif 
	else 
	endif 
	return 
endf 

def node_047 : 223
	if self.flying() 
	else 
		-> velkhana.take_off() 
	endif 
	return 
endf 

def node_048 : 411
	self.targetArea(target_area.area_aerial_center) 
	>> node_253 
	self.targetArea(target_area.area_center) 
	-> velkhana.landing() 
	return 
endf 

def node_049 : 558
	>> node_046 
	-> velkhana.adjust_bite() 
	return 
endf 

def node_050 : 586
	>> node_046 
	-> velkhana.rush() 
	return 
endf 

def node_051 : 632
	>> node_046 
	-> velkhana.rush_2() 
	return 
endf 

def node_052 : 613
	if self.distance_2d_to_target().leq(1500) 
		>> node_050 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_113 
	else 
	endif 
	return 
endf 

def node_053 : 590
	>> node_046 
	-> velkhana.back_step_pierce() 
	return 
endf 

def node_054 : 633
	>> node_046 
	-> velkhana.back_step_pierce_2() 
	return 
endf 

def node_055 : 614
	if self.distance_2d_to_target().leq(1300) 
		>> node_053 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_113 
	else 
	endif 
	return 
endf 

def node_056 : 559
	>> node_046 
	if self.distance_2d_to_target().leq(250) 
	elif self.distance_2d_to_target().leq(800) 
	else 
		>> node_233 
	endif 
	-> velkhana.tail_sting() 
	return 
endf 

def node_057 : 698
	>> node_046 
	if self.distance_2d_to_target().leq(900) 
	else 
		>> node_233 
	endif 
	-> velkhana.fly_tail_sting_to_ground() 
	return 
endf 

def node_058 : 562
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.tail_swing() 
	return 
endf 

def node_059 : 560
	>> node_046 
	if self.distance_2d_to_target().leq(250) 
	elif self.distance_2d_to_target().leq(800) 
	else 
		>> node_233 
	endif 
	-> velkhana.tail_sting() @ comboSetting:1 
	-> velkhana.combo_tail_sting() 
	return 
endf 

def node_060 : 699
	>> node_046 
	if self.distance_2d_to_target().leq(250) 
	elif self.distance_2d_to_target().leq(800) 
	else 
		>> node_233 
	endif 
	-> velkhana.tail_sting() @ comboSetting:1 
	-> velkhana.combo_fly_tail_sting_to_ground() 
	return 
endf 

def node_061 : 561
	>> node_046 
	if self.distance_2d_to_target().leq(250) 
	elif self.distance_2d_to_target().leq(800) 
	else 
		>> node_233 
	endif 
	-> velkhana.tail_sting() @ comboSetting:1 
	-> velkhana.combo_tail_swing() 
	return 
endf 

def node_062 : 563
	>> node_046 
	if self.distance_2d_to_target().leq(250) 
	elif self.distance_2d_to_target().leq(800) 
	else 
		>> node_233 
	endif 
	-> velkhana.tail_sting() @ comboSetting:1 
	-> velkhana.combo_tail_sting() @ comboSetting:1 
	-> velkhana.combo_tail_sting() 
	return 
endf 

def node_063 : 700
	>> node_046 
	if self.distance_2d_to_target().leq(250) 
	elif self.distance_2d_to_target().leq(800) 
	else 
		>> node_233 
	endif 
	-> velkhana.tail_sting() @ comboSetting:1 
	-> velkhana.combo_tail_sting() @ comboSetting:1 
	-> velkhana.combo_fly_tail_sting_to_ground() 
	return 
endf 

def node_064 : 564
	>> node_046 
	if self.distance_2d_to_target().leq(250) 
	elif self.distance_2d_to_target().leq(800) 
	else 
		>> node_233 
	endif 
	-> velkhana.tail_sting() @ comboSetting:1 
	-> velkhana.combo_tail_sting() @ comboSetting:1 
	-> velkhana.combo_tail_swing() 
	return 
endf 

def node_065 : 659
	if self.distance_2d_to_target().leq(900) 
	else 
		>> node_233 
	endif 
	if self.enraged() 
		random (0) >> node_059 
		elser (50) >> node_062 
		elser (0) >> node_060 
		elser (25) >> node_063 
		elser (0) >> node_061 
		elser (25) >> node_064 
		endr 
	else 
		random (60) >> node_059 
		elser (0) >> node_057 
		elser (20) >> node_060 
		elser (0) >> node_058 
		elser (20) >> node_061 
		endr 
	endif 
	return 
endf 

def node_066 : 701
	>> node_046 
	if self.current_quest().is_rank(rank.AT) 
		-> velkhana.ex_ice_block_breath_to_ground() 
	else 
		-> velkhana.ice_block_breath_to_ground() 
	endif 
	return 
endf 

def node_067 : 702
	>> node_046 
	if self.current_quest().is_rank(rank.AT) 
		if function#101(2) 
			-> velkhana.ex_ice_block_breath() 
		else 
			-> velkhana.ice_block_breath() 
		endif 
	else 
		-> velkhana.ice_block_breath() 
	endif 
	return 
endf 

def node_068 : 587
	>> node_046 
	if self.current_quest().is_rank(rank.AT) 
		-> velkhana.ex_area_breath() @ comboSetting:1 
		-> velkhana.chance() 
	else 
		-> velkhana.area_breath() @ comboSetting:1 
		-> velkhana.chance() 
	endif 
	return 
endf 

def node_069 : 600
	>> node_046 
	if self.current_quest().is_rank(rank.AT) 
		-> velkhana.ex_ice_wave_start() 
	else 
		-> velkhana.ice_wave_start() 
	endif 
	return 
endf 

def node_070 : 639
	>> node_046 
	if self.current_quest().is_rank(rank.AT) 
		-> velkhana.ex_ice_drop() 
	else 
		-> velkhana.ice_drop() 
	endif 
	return 
endf 

def node_071 : 565
	>> node_046 
	-> velkhana.straight_breath() 
	return 
endf 

def node_072 : 634
	>> node_046 
	-> velkhana.straight_breath() @ comboSetting:1 
	-> velkhana.combo_straight_breath() 
	return 
endf 

def node_073 : 566
	>> node_046 
	-> velkhana.sweep_90_breath() 
	[RegisterVar4 ++] 
	return 
endf 

def node_074 : 635
	>> node_046 
	-> velkhana.sweep_180_breath_turn() 
	[RegisterVar4 ++] 
	return 
endf 

def node_075 : 567
	>> node_046 
	if self.angle_2d_cw_between(315,45) 
		-> velkhana.sweep_180_breath() 
	elif self.angle_2d_cw_between(45,135) 
		-> velkhana.sweep_180_breath_lf() 
	elif self.angle_2d_cw_between(135,180) 
		-> velkhana.sweep_180_breath_lb() 
	elif self.angle_2d_cw_between(180,225) 
		-> velkhana.sweep_180_breath_rb() 
	else 
		-> velkhana.sweep_180_breath_rf() 
	endif 
	[RegisterVar4 ++] 
	return 
endf 

def node_076 : 575
	if self.current_quest().is_rank(rank.AT) 
		>> node_046 
		if self.angle_2d_cw_between(0,180) 
			-> velkhana.turn_step_side_r() @ comboSetting:1 
			-> velkhana.straight_breath() 
		else 
			-> velkhana.turn_step_side_l() @ comboSetting:1 
			-> velkhana.straight_breath() 
		endif 
	else 
		>> node_110 
		>> node_071 
	endif 
	return 
endf 

def node_077 : 667
	if self.current_quest().is_rank(rank.AT) 
		>> node_046 
		if self.angle_2d_cw_between(0,180) 
			-> velkhana.turn_step_side_r() @ comboSetting:1 
			-> velkhana.straight_breath() @ comboSetting:1 
			-> velkhana.combo_straight_breath() 
		else 
			-> velkhana.turn_step_side_l() @ comboSetting:1 
			-> velkhana.straight_breath() @ comboSetting:1 
			-> velkhana.combo_straight_breath() 
		endif 
	else 
		>> node_110 
		>> node_072 
	endif 
	return 
endf 

def node_078 : 576
	>> node_046 
	>> node_113 
	>> node_073 
	return 
endf 

def node_079 : 577
	>> node_046 
	>> node_113 
	>> node_074 
	return 
endf 

def node_080 : 644
	if self.target(44) 
		if self.enraged() 
			>> node_077 
		else 
			>> node_076 
		endif 
	else 
		if self.distance_2d_to_target().leq(600) 
			if self.enraged() 
				>> node_077 
			else 
				>> node_076 
			endif 
		elif self.distance_2d_to_target().leq(1300) 
			if self.enraged() 
				>> node_077 
			else 
				>> node_076 
			endif 
		else 
			if self.enraged() 
				>> node_072 
			else 
				>> node_071 
			endif 
		endif 
	endif 
	return 
endf 

def node_081 : 645
	if self.distance_2d_to_target().leq(1600) 
		>> node_078 
	else 
		>> node_073 
	endif 
	return 
endf 

def node_082 : 646
	if self.distance_2d_to_target().leq(1600) 
		>> node_079 
	else 
		>> node_074 
	endif 
	return 
endf 

def node_083 : 647
	if function#101(2) 
		if self.enraged() 
			random (20) >> node_082 
			elser (80) >> node_080 
			endr 
		else 
			random (10) >> node_082 
			elser (90) >> node_080 
			endr 
		endif 
	elif function#101(1) 
		if self.enraged() 
			random (20) >> node_081 
			elser (80) >> node_080 
			endr 
		else 
			random (10) >> node_081 
			elser (90) >> node_080 
			endr 
		endif 
	else 
		>> node_080 
	endif 
	return 
endf 

def node_084 : 689
	if self.current_quest().is_rank(rank.AT) 
		if function#101(2) 
			>> node_082 
		elif function#101(1) 
			>> node_082 
		else 
			>> node_080 
		endif 
	else 
		if function#101(2) 
			>> node_082 
		elif function#101(1) 
			>> node_081 
		else 
			>> node_080 
		endif 
	endif 
	reset 
endf 

def node_085 : 703
	>> node_046 
	if self.target(44) 
		random (50) >> node_080 
		elser (50) >> node_065 
		endr 
	else 
		if self.angle_2d_cw_between(330,30) 
			-> velkhana.freeze_breath() 
		else 
			-> velkhana.quick_turn() @ comboSetting:1 
			-> velkhana.freeze_breath_front() 
		endif 
		>> node_086 
	endif 
	return 
endf 

def node_086 : 704
	if self.target(57) 
		-> velkhana.freeze_breath_to_attack() 
		reset 
	else 
		-> velkhana.freeze_breath_miss() @ comboSetting:1 
		-> velkhana.chance() 
	endif 
	return 
endf 

def node_087 : 603
	>> node_046 
	if self.distance_2d_to_target().leq(1300) 
	else 
		>> node_233 
	endif 
	-> velkhana.fly_tail_sting() 
	return 
endf 

def node_088 : 616
	>> node_046 
	if self.distance_2d_to_target().leq(900) 
	else 
		>> node_233 
	endif 
	-> velkhana.tail_sting() @ comboSetting:1 
	-> velkhana.combo_fly_tail_sting() 
	return 
endf 

def node_089 : 617
	>> node_046 
	if self.distance_2d_to_target().leq(900) 
	else 
		>> node_233 
	endif 
	-> velkhana.tail_sting() @ comboSetting:1 
	-> velkhana.combo_tail_sting() @ comboSetting:1 
	-> velkhana.combo_fly_tail_sting() 
	return 
endf 

def node_090 : 660
	if self.distance_2d_to_target().leq(900) 
		if self.enraged() 
			random (100) >> node_087 
			elser (0) >> node_088 
			elser (0) >> node_089 
			endr 
		else 
			random (100) >> node_087 
			elser (0) >> node_088 
			elser (0) >> node_089 
			endr 
		endif 
	else 
		>> node_087 
	endif 
	return 
endf 

def node_091 : 607
	>> node_047 
	if self.angle_2d_cw_between(0,180) 
		-> velkhana.turn_step_r_fly() 
	else 
		-> velkhana.turn_step_l_fly() 
	endif 
	return 
endf 

def node_092 : 601
	>> node_047 
	-> velkhana.fly_tail_sting_fly_start() 
	return 
endf 

def node_093 : 602
	>> node_047 
	-> velkhana.tail_swing_fly() 
	return 
endf 

def node_094 : 568
	>> node_047 
	-> velkhana.rush_fly() 
	return 
endf 

def node_095 : 569
	>> node_047 
	-> velkhana.vertical_breath_fly() 
	return 
endf 

def node_096 : 570
	>> node_047 
	-> velkhana.vertical_breath_fly_to_ground() 
	return 
endf 

def node_097 : 604
	>> node_047 
	if self.current_quest().is_rank(rank.AT) 
		-> velkhana.ex_ice_wave_start_fly() 
	else 
		-> velkhana.ice_wave_start_fly() 
	endif 
	return 
endf 

def node_098 : 608
	if self.distance_2d_to_target().leq(300) 
		random (50) >> node_092 
		elser (50) >> node_093 
		elser (0) >> node_094 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (50) >> node_092 
		elser (50) >> node_093 
		elser (0) >> node_094 
		endr 
	else 
		>> node_094 
	endif 
	return 
endf 

def node_099 : 609
	if self.distance_2d_to_target().leq(400) 
		>> node_091 
	else 
		>> node_098 
	endif 
	return 
endf 

def node_100 : 664
	if function#101() 
		>> node_103 
	else 
		>> node_106 
	endif 
	return 
endf 

def node_101 : 665
	if function#101() 
		>> node_104 
	else 
		>> node_107 
	endif 
	return 
endf 

def node_102 : 666
	if function#101() 
		>> node_105 
	else 
		>> node_108 
	endif 
	return 
endf 

def node_103 : 630
	>> node_090 
	>> node_405 
	>> node_096 
	return 
endf 

def node_104 : 605
	>> node_090 
	>> node_405 
	>> node_098 
	>> node_405 
	>> node_096 
	return 
endf 

def node_105 : 606
	>> node_090 
	>> node_405 
	>> node_098 
	>> node_405 
	>> node_098 
	>> node_405 
	>> node_096 
	return 
endf 

def node_106 : 631
	>> node_090 
	>> node_405 
	random (50) 
				>> node_097 
	elser (50) 
				>> node_096 
	endr 
	return 
endf 

def node_107 : 611
	>> node_090 
	>> node_405 
	random (50) 
				>> node_095 
				>> node_405 
				>> node_097 
	elser (50) 
				>> node_098 
				>> node_405 
				>> node_096 
	endr 
	return 
endf 

def node_108 : 612
	>> node_090 
	>> node_405 
	random (30) 
				>> node_098 
				>> node_405 
				>> node_095 
				>> node_405 
				>> node_097 
	elser (30) 
				>> node_098 
				>> node_405 
				>> node_098 
				>> node_405 
				>> node_097 
	elser (40) 
				>> node_098 
				>> node_405 
				>> node_098 
				>> node_405 
				>> node_096 
	endr 
	return 
endf 

def node_109 : 578
	>> node_046 
	if self.current_quest().is_rank(rank.AT) 
		if self.target(44) 
		else 
			if self.distance_2d_to_target().leq(1250) 
				>> node_113 
			else 
				>> node_238 
			endif 
			[RegisterVar2 |-] 
			[RegisterVar7 |-] 
			[RegisterVar7 ++] 
			[RegisterVar7 ++] 
			-> velkhana.ex_special_breath_attack_start() @ comboSetting:1 
			-> velkhana.chance() 
			>> node_142 
		endif 
	else 
		if self.distance_2d_to_target().leq(1500) 
		else 
			>> node_233 
		endif 
		if function#7D() 
			-> velkhana.special_breath_attack_start_2() 
		else 
			-> velkhana.special_breath_attack_start() 
		endif 
	endif 
	return 
endf 

def node_110 : 571
	>> node_046 
	if self.angle_2d_cw_between(0,180) 
		-> velkhana.turn_step_side_r() 
	else 
		-> velkhana.turn_step_side_l() 
	endif 
	return 
endf 

def node_111 : 572
	>> node_046 
	if self.angle_2d_cw_between(0,180) 
		-> velkhana.turn_step_front_r() 
	else 
		-> velkhana.turn_step_front_l() 
	endif 
	return 
endf 

def node_112 : 573
	>> node_046 
	if self.angle_2d_cw_between(0,180) 
		-> velkhana.turn_step_back_r() 
	else 
		-> velkhana.turn_step_back_l() 
	endif 
	return 
endf 

def node_113 : 615
	if self.angle_2d_cw_between(270,90) 
		>> node_112 
	else 
		>> node_111 
	endif 
	return 
endf 

def node_114 : 574
	>> node_046 
	if self.angle_2d_cw_between(0,180) 
		-> velkhana.turn_step_front_far_r() 
	else 
		-> velkhana.turn_step_front_far_l() 
	endif 
	return 
endf 

def node_115 : 786
	if function#101() 
		[RegisterVar1 |-] 
		[RegisterVar0 ++] 
		>> node_116 
	elif function#101(1) 
		[RegisterVar0 |-] 
		[RegisterVar1 ++] 
		>> node_117 
	else 
		[RegisterVar0 |-] 
		[RegisterVar1 |-] 
		[RegisterVar2 ++] 
		>> node_118 
	endif 
	return 
endf 

def node_116 : 787
	if self.hp_percent().gt(20) 
		if [RegisterVar0 <= 4] 
			[RegisterVar0 |-] 
			>> node_279 
		else 
		endif 
	elif self.hp_percent().gt(40) 
		if [RegisterVar0 <= 5] 
			[RegisterVar0 |-] 
			>> node_279 
		else 
		endif 
	elif self.hp_percent().gt(60) 
		if [RegisterVar0 <= 6] 
			[RegisterVar0 |-] 
			[RegisterVar2 |-] 
			>> node_279 
		else 
		endif 
	elif self.hp_percent().gt(80) 
		if [RegisterVar0 <= 7] 
			[RegisterVar0 |-] 
			[RegisterVar2 |-] 
			>> node_279 
		else 
		endif 
	else 
		if [RegisterVar0 <= 8] 
			[RegisterVar0 |-] 
			[RegisterVar2 |-] 
			>> node_279 
		else 
		endif 
	endif 
	return 
endf 

def node_117 : 788
	if self.hp_percent().gt(20) 
		if [RegisterVar1 <= 4] 
			[RegisterVar1 |-] 
			>> node_279 
		else 
		endif 
	elif self.hp_percent().gt(40) 
		if [RegisterVar1 <= 5] 
			[RegisterVar1 |-] 
			>> node_279 
		else 
		endif 
	elif self.hp_percent().gt(60) 
		if [RegisterVar1 <= 6] 
			[RegisterVar1 |-] 
			>> node_279 
		else 
		endif 
	elif self.hp_percent().gt(80) 
		if [RegisterVar1 <= 8] 
			[RegisterVar1 |-] 
			>> node_279 
		else 
		endif 
	else 
		if [RegisterVar1 <= 11] 
			[RegisterVar1 |-] 
			>> node_279 
		else 
		endif 
	endif 
	return 
endf 

def node_118 : 790
	if self.flying() 
		return 
	else 
	endif 
	if self.hp_percent().gt(30) 
		if [RegisterVar2 <= 9] 
			>> node_109 
		else 
		endif 
	elif self.hp_percent().gt(50) 
		if [RegisterVar2 <= 10] 
			>> node_109 
		else 
		endif 
	elif self.hp_percent().gt(75) 
		if [RegisterVar2 <= 11] 
			>> node_109 
		else 
		endif 
	else 
		if [RegisterVar2 <= 12] 
			>> node_109 
		else 
		endif 
	endif 
	return 
endf 

def node_119 : 789
	[RegisterVar3 ++] 
	if self.target(44) 
	else 
		if function#101() 
			[RegisterVar3 |-] 
		elif function#101(1) 
			if [RegisterVar3 <= 5] 
				[RegisterVar3 |-] 
				>> node_405 
				>> node_129 
				>> node_125 
			else 
				>> node_126 
			endif 
		else 
			[RegisterVar3 |-] 
			>> node_126 
		endif 
	endif 
	return 
endf 

def node_120 : 496
	if function#B0(1) 
	else 
		if function#101() 
			[RegisterVar1 |-] 
			[RegisterVar0 ++] 
			>> node_121 
		elif function#101(1) 
			[RegisterVar0 |-] 
			[RegisterVar1 ++] 
			>> node_122 
		else 
			if self.quest_id(1404) 
			else 
				[RegisterVar0 |-] 
				[RegisterVar1 |-] 
				[RegisterVar2 ++] 
				>> node_123 
			endif 
		endif 
	endif 
	return 
endf 

def node_121 : 588
	if self.hp_percent().gt(30) 
		if [RegisterVar0 <= 6] 
			[RegisterVar0 |-] 
			[RegisterVar2 |-] 
			>> node_279 
		else 
		endif 
	elif self.hp_percent().gt(50) 
		if [RegisterVar0 <= 9] 
			[RegisterVar0 |-] 
			[RegisterVar2 |-] 
			>> node_279 
		else 
		endif 
	elif self.hp_percent().gt(75) 
		if [RegisterVar0 <= 12] 
			[RegisterVar0 |-] 
			[RegisterVar2 |-] 
			>> node_279 
		else 
		endif 
	else 
		if [RegisterVar0 <= 15] 
			[RegisterVar0 |-] 
			[RegisterVar2 |-] 
			>> node_279 
		else 
		endif 
	endif 
	return 
endf 

def node_122 : 583
	if self.hp_percent().gt(30) 
		if [RegisterVar1 <= 6] 
			[RegisterVar1 |-] 
			>> node_279 
		else 
		endif 
	elif self.hp_percent().gt(50) 
		if [RegisterVar1 <= 9] 
			[RegisterVar1 |-] 
			>> node_279 
		else 
		endif 
	elif self.hp_percent().gt(75) 
		if [RegisterVar1 <= 12] 
			[RegisterVar1 |-] 
			>> node_279 
		else 
		endif 
	else 
		if [RegisterVar1 <= 15] 
			[RegisterVar1 |-] 
			>> node_279 
		else 
		endif 
	endif 
	return 
endf 

def node_123 : 589
	if self.flying() 
		return 
	else 
	endif 
	if self.hp_percent().gt(30) 
		if [RegisterVar2 <= 6] 
			random (30) 
						[RegisterVar2 |-] 
						>> node_109 
			elser (70) 
			endr 
		elif [RegisterVar2 <= 12] 
			[RegisterVar2 |-] 
			>> node_109 
		else 
		endif 
	elif self.hp_percent().gt(50) 
		if [RegisterVar2 <= 6] 
			random (20) 
						[RegisterVar2 |-] 
						>> node_109 
			elser (80) 
			endr 
		elif [RegisterVar2 <= 12] 
			[RegisterVar2 |-] 
			>> node_109 
		else 
		endif 
	elif self.hp_percent().gt(75) 
		if [RegisterVar2 <= 10] 
			random (30) 
						[RegisterVar2 |-] 
						>> node_109 
			elser (70) 
			endr 
		elif [RegisterVar2 <= 15] 
			[RegisterVar2 |-] 
			>> node_109 
		else 
		endif 
	else 
		if [RegisterVar2 <= 10] 
			random (20) 
						[RegisterVar2 |-] 
						>> node_109 
			elser (80) 
			endr 
		elif [RegisterVar2 <= 15] 
			[RegisterVar2 |-] 
			>> node_109 
		else 
		endif 
	endif 
	return 
endf 

def node_124 : 579
	[RegisterVar3 ++] 
	if self.target(44) 
	else 
		if function#101() 
			[RegisterVar3 |-] 
		elif function#101(1) 
			if [RegisterVar3 <= 4] 
				random (75) 
							[RegisterVar3 |-] 
							>> node_128 
							self.targetArea(1) 
							>> node_125 
				elser (25) 
							>> node_126 
				endr 
			else 
				>> node_126 
			endif 
		else 
			if [RegisterVar3 <= 3] 
				random (75) 
							[RegisterVar3 |-] 
							>> node_128 
							self.targetArea(1) 
							>> node_125 
				elser (25) 
							>> node_126 
				endr 
			else 
				>> node_126 
			endif 
		endif 
	endif 
	return 
endf 

def node_125 : 580
	[RegisterVar3 |-] 
	if self.current_quest().is_rank(rank.AT) 
		if function#101(2) 
			>> node_074 
		elif function#101(1) 
			>> node_074 
		else 
			>> node_073 
		endif 
		return 
	else 
		if function#101(2) 
			>> node_082 
		elif function#101(1) 
			>> node_081 
		else 
			>> node_080 
		endif 
	endif 
	reset 
endf 

def node_126 : 697
	if self.current_quest().is_rank(rank.AT) 
		if self.target(44) 
		else 
			if function#101(2) 
				if function#10E(3,50) 
				elif self.target.helpless_0() 
				else 
					return 
				endif 
				if [RegisterVar2 <= 7] 
					random (0) 
								>> node_405 
								[RegisterVar2 |-] 
								>> node_109 
					elser (100) 
					endr 
				else 
					if self.enraged() 
						random (0) 
									>> node_405 
									[RegisterVar3 |-] 
									>> node_008 
						elser (0) 
									>> node_405 
									[RegisterVar3 |-] 
									>> node_025 
						elser (100) 
						endr 
					else 
						random (0) 
									>> node_405 
									[RegisterVar3 |-] 
									>> node_004 
						elser (0) 
									>> node_405 
									[RegisterVar3 |-] 
									>> node_025 
						elser (100) 
						endr 
					endif 
				endif 
			elif function#101(1) 
				if function#10E(3,50) 
				elif self.target.helpless_0() 
				else 
					return 
				endif 
				random (25) 
							>> node_405 
							[RegisterVar3 |-] 
							>> node_129 
							>> node_125 
				elser (75) 
				endr 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_127 : 599
	self.targetEnemy(50) 
	random (70) >> node_055 
	elser (30) >> node_052 
	endr 
	return 
endf 

def node_128 : 598
	if self.distance_2d_to_target().leq(1300) 
	else 
		random (50) >> node_233 
		elser (50) 
		endr 
	endif 
	self.targetArea(target_area.area_center) 
	if self.distance_2d_to_target().leq(500) 
		self.targetArea(1) 
		random (50) >> node_052 
		elser (50) >> node_055 
		endr 
	else 
		if self.angle_2d_cw_between(270,90) 
			self.targetArea(1) 
			if self.angle_2d_cw_between(270,90) 
				>> node_052 
			else 
				>> node_055 
			endif 
		else 
			self.targetArea(1) 
			if self.angle_2d_cw_between(270,90) 
				>> node_055 
			else 
				>> node_052 
			endif 
		endif 
	endif 
	return 
endf 

def node_129 : 853
	if self.distance_2d_to_target().leq(1300) 
	else 
		random (50) >> node_233 
		elser (50) 
		endr 
	endif 
	if function#10F(750) 
		random (50) >> node_052 
		elser (50) >> node_055 
		endr 
	else 
		if function#110(315,45) 
			>> node_130 
		elif function#110(135,225) 
			>> node_131 
		elif function#110(45,135) 
			>> node_132 
		else 
			>> node_133 
		endif 
	endif 
	return 
endf 

def node_130 : 863
	if self.angle_2d_cw_between(315,45) 
		>> node_052 
	elif self.angle_2d_cw_between(135,225) 
		>> node_055 
	elif self.angle_2d_cw_between(45,135) 
		random (50) >> node_052 
		elser (50) >> node_055 
		endr 
	else 
		random (50) >> node_052 
		elser (50) >> node_055 
		endr 
	endif 
	return 
endf 

def node_131 : 864
	if self.angle_2d_cw_between(315,45) 
		>> node_055 
	elif self.angle_2d_cw_between(135,225) 
		>> node_052 
	elif self.angle_2d_cw_between(45,135) 
		random (50) >> node_052 
		elser (50) >> node_055 
		endr 
	else 
		random (50) >> node_052 
		elser (50) >> node_055 
		endr 
	endif 
	return 
endf 

def node_132 : 865
	if self.angle_2d_cw_between(315,45) 
		random (50) >> node_052 
		elser (50) >> node_055 
		endr 
	elif self.angle_2d_cw_between(135,225) 
		random (50) >> node_052 
		elser (50) >> node_055 
		endr 
	elif self.angle_2d_cw_between(45,135) 
		>> node_052 
	else 
		>> node_055 
	endif 
	return 
endf 

def node_133 : 866
	if self.angle_2d_cw_between(315,45) 
		random (50) >> node_052 
		elser (50) >> node_055 
		endr 
	elif self.angle_2d_cw_between(135,225) 
		random (50) >> node_052 
		elser (50) >> node_055 
		endr 
	elif self.angle_2d_cw_between(45,135) 
		>> node_055 
	else 
		>> node_052 
	endif 
	return 
endf 

def node_134 : 636
	self.targetArea(target_area.area_center) 
	if self.distance_2d_to_target().leq(500) 
		self.targetEnemy(50) 
		random (50) >> node_051 
		elser (50) >> node_054 
		endr 
	else 
		if self.angle_2d_cw_between(270,90) 
			self.targetEnemy(50) 
			if self.angle_2d_cw_between(270,90) 
				>> node_051 
			else 
				>> node_054 
			endif 
		else 
			self.targetEnemy(50) 
			if self.angle_2d_cw_between(270,90) 
				>> node_054 
			else 
				>> node_051 
			endif 
		endif 
	endif 
	return 
endf 

def node_135 : 637
	if self.distance_2d_to_target().leq(600) 
		random (25) >> node_056 
		elser (25) >> node_058 
		elser (50) >> node_065 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		>> node_076 
	else 
		>> node_071 
	endif 
	return 
endf 

def node_136 : 640
	self.targetArea(target_area.area_center) 
	if self.angle_2d_cw_between(270,90) 
		self.targetEnemy(50) 
		if self.angle_2d_cw_between(270,90) 
			>> node_051 
			>> node_137 
		else 
			>> node_054 
			>> node_138 
		endif 
	else 
		self.targetEnemy(50) 
		if self.angle_2d_cw_between(270,90) 
			>> node_054 
			>> node_138 
		else 
			>> node_051 
			>> node_137 
		endif 
	endif 
	>> node_135 
	return 
endf 

def node_137 : 641
	if [RegisterVar3 <= 0] 
		self.targetArea(target_area.area_center) 
		if self.distance_2d_to_target().leq(1000) 
			self.targetEnemy(50) 
			if self.distance_2d_to_target().leq(1500) 
				>> node_055 
				>> node_125 
			else 
			endif 
		else 
			if self.angle_2d_cw_between(270,90) 
				self.targetEnemy(50) 
				if self.angle_2d_cw_between(270,90) 
				else 
					if self.distance_2d_to_target().leq(1500) 
						>> node_055 
						>> node_125 
					else 
					endif 
				endif 
			else 
				self.targetEnemy(50) 
				if self.angle_2d_cw_between(270,90) 
					if self.distance_2d_to_target().leq(1500) 
						>> node_055 
						>> node_125 
					else 
					endif 
				else 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_138 : 642
	if [RegisterVar3 <= 0] 
		self.targetArea(target_area.area_center) 
		if self.distance_2d_to_target().leq(1000) 
			self.targetEnemy(50) 
			if self.distance_2d_to_target().leq(1500) 
				>> node_052 
				>> node_125 
			else 
			endif 
		else 
			if self.angle_2d_cw_between(270,90) 
				self.targetEnemy(50) 
				if self.angle_2d_cw_between(270,90) 
					if self.distance_2d_to_target().leq(1500) 
						>> node_052 
						>> node_125 
					else 
					endif 
				else 
				endif 
			else 
				self.targetEnemy(50) 
				if self.angle_2d_cw_between(270,90) 
				else 
					if self.distance_2d_to_target().leq(1500) 
						>> node_052 
						>> node_125 
					else 
					endif 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_139 : 679
	if self.target(3) 
	else 
		if [RegisterVar4 <= 1] 
			[RegisterVar4 |-] 
		else 
			if self.distance_2d_to_target().leq(250) 
			elif self.distance_2d_to_target().leq(1300) 
				if function#101(2) 
					random (20) >> node_070 
					elser (80) 
					endr 
				elif function#101(1) 
					random (15) >> node_070 
					elser (85) 
					endr 
				else 
				endif 
			elif self.distance_2d_to_target().leq(3500) 
				if function#101(2) 
					random (35) >> node_070 
					elser (65) 
					endr 
				elif function#101(1) 
					random (25) >> node_070 
					elser (75) 
					endr 
				else 
				endif 
			else 
			endif 
		endif 
	endif 
	return 
endf 

def node_140 : 694
	if self.distance_2d_to_target().leq(1300) 
	elif self.distance_2d_to_target().leq(3000) 
		if function#101() 
			random (75) >> node_233 
			elser (25) 
			endr 
		else 
			if [RegisterVar3 <= 4] 
				>> node_233 
			elif [RegisterVar3 <= 2] 
				random (70) >> node_233 
				elser (30) 
				endr 
			else 
				random (40) >> node_233 
				elser (60) 
				endr 
			endif 
		endif 
	else 
		>> node_233 
	endif 
	return 
endf 

def node_141 : 815
	if self.flying() 
		[RegisterVar7 |-] 
	elif self.target(3) 
		[RegisterVar7 |-] 
	elif function#101() 
		[RegisterVar7 |-] 
	else 
		if [RegisterVar7 == 3] 
			[RegisterVar7 |-] 
		elif [RegisterVar7 == 2] 
			[RegisterVar7 |-] 
			>> node_070 
		else 
			[RegisterVar7 |-] 
			if function#101(2) 
				if self.distance_2d_to_target().leq(2200) 
					random (0) 
								>> node_070 
					elser (100) 
					endr 
				elif self.distance_2d_to_target().leq(4400) 
					random (25) 
								>> node_070 
					elser (75) 
					endr 
				else 
				endif 
			else 
				if self.distance_2d_to_target().leq(2200) 
					random (0) 
								>> node_070 
					elser (100) 
					endr 
				elif self.distance_2d_to_target().leq(4400) 
					random (15) 
								>> node_070 
					elser (85) 
					endr 
				else 
				endif 
			endif 
		endif 
	endif 
	return 
endf 

def node_142 : 896
	if self.flying() 
		[RegisterVar7 |-] 
	elif self.target(3) 
		[RegisterVar7 |-] 
	elif function#101() 
		[RegisterVar7 |-] 
	else 
		[RegisterVar7 |-] 
		>> node_070 
		[RegisterVar7 ++] 
		[RegisterVar7 ++] 
		[RegisterVar7 ++] 
	endif 
	return 
endf 

def node_143 : 810
	[RegisterVar7 |-] 
	if self.distance_2d_to_target().leq(1300) 
	elif self.distance_2d_to_target().leq(3300) 
		if function#101() 
			random (75) >> node_233 
						[RegisterVar7 ++] 
			elser (0) >> node_239 
						[RegisterVar7 ++] 
			elser (25) 
			endr 
		else 
			if [RegisterVar3 <= 4] 
				>> node_233 
				[RegisterVar7 ++] 
			elif [RegisterVar3 <= 2] 
				random (50) >> node_233 
							[RegisterVar7 ++] 
				elser (0) >> node_239 
							[RegisterVar7 ++] 
				elser (50) 
				endr 
			else 
				random (25) >> node_233 
							[RegisterVar7 ++] 
				elser (0) >> node_239 
							[RegisterVar7 ++] 
				elser (75) 
				endr 
			endif 
		endif 
	else 
		if function#101() 
			>> node_233 
			[RegisterVar7 ++] 
		else 
			random (40) >> node_233 
						[RegisterVar7 ++] 
			elser (60) >> node_239 
						[RegisterVar7 ++] 
			elser (0) 
			endr 
		endif 
	endif 
	return 
endf 

def node_144 : 661
	if self.current_quest().is_rank(rank.AT) 
		if function#101(2) 
			>> node_168 
		elif function#101(1) 
			>> node_163 
		else 
			>> node_160 
		endif 
	else 
		if function#101(2) 
			>> node_157 
		elif function#101(1) 
			>> node_154 
		else 
			>> node_151 
		endif 
	endif 
	return 
endf 

def node_145 : 693
	if self.distance_2d_to_target().leq(300) 
		random (20) >> node_049 
					>> node_148 
		elser (0) >> node_051 
					>> node_147 
		elser (80) >> node_054 
					>> node_146 
		endr 
	elif self.distance_2d_to_target().leq(700) 
		random (50) >> node_049 
					>> node_148 
		elser (25) >> node_051 
					>> node_147 
		elser (25) >> node_054 
					>> node_146 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (20) >> node_049 
					>> node_148 
		elser (80) >> node_051 
					>> node_147 
		elser (0) >> node_054 
					>> node_146 
		endr 
	else 
	endif 
	return 
endf 

def node_146 : 690
	>> node_126 
	if self.distance_2d_to_target().leq(300) 
		random (65) >> node_049 
		elser (0) >> node_134 
		elser (35) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (65) >> node_049 
		elser (0) >> node_134 
		elser (35) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (65) >> node_049 
		elser (0) >> node_134 
		elser (35) >> node_051 
		elser (0) >> node_054 
		endr 
	else 
	endif 
	return 
endf 

def node_147 : 691
	>> node_126 
	if self.distance_2d_to_target().leq(300) 
		random (65) >> node_049 
		elser (0) >> node_134 
		elser (0) >> node_051 
		elser (35) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (65) >> node_049 
		elser (0) >> node_134 
		elser (0) >> node_051 
		elser (35) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (100) >> node_049 
		elser (0) >> node_134 
		elser (0) >> node_051 
		elser (0) >> node_054 
		endr 
	else 
	endif 
	return 
endf 

def node_148 : 692
	>> node_126 
	if self.distance_2d_to_target().leq(300) 
		random (50) >> node_049 
		elser (50) >> node_134 
		elser (0) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (50) >> node_049 
		elser (50) >> node_134 
		elser (0) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (100) >> node_049 
		elser (0) >> node_134 
		elser (0) >> node_051 
		elser (0) >> node_054 
		endr 
	else 
	endif 
	return 
endf 

def node_149 : 662
	if self.current_quest().is_rank(rank.AT) 
		if function#101(2) 
			>> node_169 
		elif function#101(1) 
			>> node_164 
		else 
			>> node_161 
		endif 
	else 
		if function#101(2) 
			>> node_158 
		elif function#101(1) 
			>> node_155 
		else 
			>> node_152 
		endif 
	endif 
	return 
endf 

def node_150 : 663
	if self.current_quest().is_rank(rank.AT) 
		if function#101(2) 
			>> node_170 
		elif function#101(1) 
			>> node_165 
		else 
			>> node_162 
		endif 
	else 
		if function#101(2) 
			>> node_159 
		elif function#101(1) 
			>> node_156 
		else 
			>> node_153 
		endif 
	endif 
	return 
endf 

def node_151 : 669
	if self.distance_2d_to_target().leq(1600) 
	else 
		>> node_233 
	endif 
	if self.distance_2d_to_target().leq(300) 
		random (20) >> node_049 
		elser (80) >> node_134 
		elser (0) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(700) 
		random (20) >> node_049 
		elser (80) >> node_134 
		elser (0) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (20) >> node_049 
		elser (0) >> node_134 
		elser (80) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1600) 
		>> node_049 
	else 
		>> node_050 
	endif 
	return 
endf 

def node_152 : 680
	if self.distance_2d_to_target().leq(200) 
		random (0) >> node_049 
		elser (40) >> node_058 
		elser (60) >> node_065 
		elser (0) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(600) 
		random (0) >> node_049 
		elser (20) >> node_058 
		elser (80) >> node_065 
		elser (0) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (0) >> node_049 
		elser (20) >> node_058 
		elser (50) >> node_065 
		elser (30) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (50) >> node_049 
		elser (25) >> node_058 
		elser (25) >> node_065 
		elser (0) >> node_080 
		endr 
	else 
		random (0) >> node_049 
		elser (0) >> node_058 
		elser (0) >> node_065 
		elser (100) >> node_080 
		endr 
	endif 
	return 
endf 

def node_153 : 671
	if self.distance_2d_to_target().leq(300) 
		random (0) >> node_065 
		elser (0) >> node_057 
		elser (0) >> node_058 
		elser (65) >> node_080 
		elser (0) >> node_084 
		elser (35) >> node_085 
		endr 
	elif self.distance_2d_to_target().leq(700) 
		random (0) >> node_065 
		elser (0) >> node_057 
		elser (0) >> node_058 
		elser (60) >> node_080 
		elser (0) >> node_084 
		elser (40) >> node_085 
		endr 
	else 
		random (0) >> node_065 
		elser (0) >> node_057 
		elser (0) >> node_058 
		elser (100) >> node_080 
		elser (0) >> node_084 
		endr 
	endif 
	return 
endf 

def node_154 : 672
	if self.distance_2d_to_target().leq(1600) 
	else 
		>> node_233 
	endif 
	if self.distance_2d_to_target().leq(300) 
		random (20) >> node_049 
		elser (80) >> node_134 
		elser (0) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(700) 
		random (20) >> node_049 
		elser (80) >> node_134 
		elser (0) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (20) >> node_049 
		elser (0) >> node_134 
		elser (80) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1600) 
		>> node_049 
	else 
		>> node_050 
	endif 
	return 
endf 

def node_155 : 673
	if self.distance_2d_to_target().leq(200) 
		random (0) >> node_049 
		elser (40) >> node_058 
		elser (60) >> node_065 
		elser (0) >> node_066 
		elser (0) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(600) 
		random (0) >> node_049 
		elser (20) >> node_058 
		elser (80) >> node_065 
		elser (0) >> node_066 
		elser (0) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (0) >> node_049 
		elser (20) >> node_058 
		elser (50) >> node_065 
		elser (0) >> node_066 
		elser (30) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (50) >> node_049 
		elser (25) >> node_058 
		elser (25) >> node_065 
		elser (0) >> node_066 
		elser (0) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(1600) 
		random (50) >> node_049 
		elser (0) >> node_058 
		elser (0) >> node_065 
		elser (50) >> node_066 
		elser (0) >> node_080 
		endr 
	else 
		random (0) >> node_049 
		elser (0) >> node_058 
		elser (0) >> node_065 
		elser (0) >> node_066 
		elser (100) >> node_080 
		endr 
	endif 
	return 
endf 

def node_156 : 674
	if self.distance_2d_to_target().leq(350) 
		random (10) >> node_080 
		elser (10) >> node_084 
		elser (40) >> node_069 
		elser (40) >> node_068 
		elser (0) >> node_066 
		elser (0) >> node_085 
		endr 
	elif self.distance_2d_to_target().leq(750) 
		random (10) >> node_080 
		elser (10) >> node_084 
		elser (25) >> node_069 
		elser (25) >> node_068 
		elser (0) >> node_066 
		elser (30) >> node_085 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (20) >> node_080 
		elser (10) >> node_084 
		elser (0) >> node_069 
		elser (60) >> node_068 
		elser (10) >> node_066 
		elser (0) >> node_085 
		endr 
	elif self.distance_2d_to_target().leq(1700) 
		random (15) >> node_080 
		elser (10) >> node_084 
		elser (0) >> node_069 
		elser (10) >> node_068 
		elser (65) >> node_066 
		elser (0) >> node_085 
		endr 
	else 
		random (80) >> node_080 
		elser (20) >> node_084 
		elser (0) >> node_069 
		elser (0) >> node_068 
		elser (0) >> node_066 
		elser (0) >> node_085 
		endr 
	endif 
	return 
endf 

def node_157 : 675
	if self.distance_2d_to_target().leq(1600) 
	else 
		>> node_233 
	endif 
	if self.distance_2d_to_target().leq(300) 
		random (20) >> node_049 
		elser (80) >> node_134 
		elser (0) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(700) 
		random (20) >> node_049 
		elser (80) >> node_134 
		elser (0) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (20) >> node_049 
		elser (0) >> node_134 
		elser (80) >> node_051 
		elser (0) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1600) 
		>> node_049 
	else 
		>> node_050 
	endif 
	return 
endf 

def node_158 : 676
	if self.distance_2d_to_target().leq(200) 
		random (0) >> node_049 
		elser (40) >> node_058 
		elser (60) >> node_065 
		elser (0) >> node_066 
		elser (0) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(600) 
		random (0) >> node_049 
		elser (20) >> node_058 
		elser (80) >> node_065 
		elser (0) >> node_066 
		elser (0) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (0) >> node_049 
		elser (20) >> node_058 
		elser (50) >> node_065 
		elser (0) >> node_066 
		elser (30) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (50) >> node_049 
		elser (25) >> node_058 
		elser (25) >> node_065 
		elser (0) >> node_066 
		elser (0) >> node_080 
		endr 
	elif self.distance_2d_to_target().leq(1600) 
		random (50) >> node_049 
		elser (0) >> node_058 
		elser (0) >> node_065 
		elser (50) >> node_066 
		elser (0) >> node_080 
		endr 
	else 
		random (0) >> node_049 
		elser (0) >> node_058 
		elser (0) >> node_065 
		elser (0) >> node_066 
		elser (100) >> node_080 
		endr 
	endif 
	return 
endf 

def node_159 : 677
	if self.distance_2d_to_target().leq(300) 
		random (10) >> node_080 
		elser (10) >> node_084 
		elser (40) >> node_069 
		elser (40) >> node_068 
		elser (0) >> node_066 
		elser (0) >> node_085 
		endr 
	elif self.distance_2d_to_target().leq(800) 
		random (10) >> node_080 
		elser (10) >> node_084 
		elser (25) >> node_069 
		elser (25) >> node_068 
		elser (0) >> node_066 
		elser (30) >> node_085 
		endr 
	elif self.distance_2d_to_target().leq(1300) 
		random (15) >> node_080 
		elser (10) >> node_084 
		elser (35) >> node_069 
		elser (30) >> node_068 
		elser (10) >> node_066 
		elser (0) >> node_085 
		endr 
	elif self.distance_2d_to_target().leq(2300) 
		random (20) >> node_080 
		elser (10) >> node_084 
		elser (0) >> node_069 
		elser (20) >> node_068 
		elser (50) >> node_066 
		elser (0) >> node_085 
		endr 
	elif self.distance_2d_to_target().leq(2800) 
		random (50) >> node_080 
		elser (20) >> node_084 
		elser (0) >> node_069 
		elser (30) >> node_068 
		elser (0) >> node_066 
		elser (0) >> node_085 
		endr 
	else 
		random (80) >> node_080 
		elser (20) >> node_084 
		elser (0) >> node_069 
		elser (0) >> node_068 
		elser (0) >> node_066 
		elser (0) >> node_085 
		endr 
	endif 
	return 
endf 

def node_160 : 806
	if self.distance_2d_to_target().leq(1600) 
	else 
		>> node_233 
	endif 
	if self.enraged() 
		if self.distance_2d_to_target().leq(1000) 
			random (0) >> node_049 
			elser (100) >> node_016 
			elser (0) >> node_051 
			elser (0) >> node_024 
			endr 
		else 
			random (100) >> node_049 
			elser (0) >> node_016 
			elser (0) >> node_051 
			elser (0) >> node_024 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(1000) 
			random (30) >> node_049 
			elser (70) >> node_016 
			elser (0) >> node_051 
			elser (0) >> node_024 
			endr 
		else 
			random (100) >> node_049 
			elser (0) >> node_016 
			elser (0) >> node_051 
			elser (0) >> node_024 
			endr 
		endif 
	endif 
	return 
endf 

def node_161 : 807
	if self.distance_2d_to_target().leq(200) 
		random (0) >> node_065 
		elser (35) >> node_058 
		elser (35) >> node_033 
		elser (30) >> node_085 
		endr 
	elif self.distance_2d_to_target().leq(800) 
		random (40) >> node_065 
		elser (20) >> node_058 
		elser (20) >> node_033 
		elser (20) >> node_085 
		endr 
	else 
		random (35) >> node_065 
		elser (0) >> node_058 
		elser (65) >> node_033 
		elser (0) >> node_085 
		endr 
	endif 
	return 
endf 

def node_162 : 808
	if self.distance_2d_to_target().leq(200) 
		random (0) >> node_065 
		elser (35) >> node_058 
		elser (35) >> node_033 
		elser (30) >> node_085 
		endr 
	elif self.distance_2d_to_target().leq(800) 
		random (40) >> node_065 
		elser (20) >> node_058 
		elser (20) >> node_033 
		elser (20) >> node_085 
		endr 
	else 
		random (35) >> node_065 
		elser (0) >> node_058 
		elser (65) >> node_033 
		elser (0) >> node_085 
		endr 
	endif 
	return 
endf 

def node_163 : 803
	if function#7F(-999) 
	else 
		if self.distance_2d_to_target().leq(1600) 
		else 
			>> node_233 
		endif 
		if self.enraged() 
			if self.distance_2d_to_target().leq(1000) 
				random (0) >> node_049 
				elser (100) >> node_016 
				elser (0) >> node_051 
				elser (0) >> node_024 
				endr 
			else 
				random (100) >> node_049 
				elser (0) >> node_016 
				elser (0) >> node_051 
				elser (0) >> node_024 
				endr 
			endif 
		else 
			if self.distance_2d_to_target().leq(1000) 
				random (30) >> node_049 
				elser (70) >> node_016 
				elser (0) >> node_051 
				elser (0) >> node_024 
				endr 
			else 
				random (100) >> node_049 
				elser (0) >> node_016 
				elser (0) >> node_051 
				elser (0) >> node_024 
				endr 
			endif 
		endif 
	endif 
	return 
endf 

def node_164 : 804
	if self.distance_2d_to_target().leq(200) 
	elif self.distance_2d_to_target().leq(800) 
		random (0) >> node_033 
		elser (0) >> node_030 
		elser (0) >> node_007 
		elser (0) >> node_031 
		elser (0) >> node_066 
		elser (100) >> node_065 
		elser (0) >> node_039 
		elser (0) >> node_038 
		elser (0) >> node_037 
		elser (0) >> node_025 
		elser (0) 
		endr 
		[RegisterVar7 |-] 
		>> node_405 
		>> node_126 
	elif self.distance_2d_to_target().leq(1500) 
	elif self.distance_2d_to_target().leq(2200) 
		random (0) >> node_033 
		elser (0) >> node_030 
		elser (0) >> node_007 
		elser (0) >> node_031 
		elser (100) >> node_066 
		elser (0) >> node_065 
		elser (0) >> node_039 
		elser (0) >> node_038 
		elser (0) >> node_037 
		elser (0) >> node_025 
		elser (0) 
		endr 
		[RegisterVar7 |-] 
		>> node_405 
		>> node_126 
	else 
	endif 
	return 
endf 

def node_165 : 805
	if self.enraged() 
		>> node_167 
	else 
		>> node_166 
	endif 
	return 
endf 

def node_166 : 843
	if self.distance_2d_to_target().leq(200) 
		random (10) >> node_033 
		elser (10) >> node_034 
		elser (20) >> node_030 
		elser (20) >> node_007 
		elser (10) >> node_031 
		elser (0) >> node_032 
		elser (30) >> node_036 
		endr 
	elif self.distance_2d_to_target().leq(800) 
		random (10) >> node_033 
		elser (10) >> node_034 
		elser (15) >> node_030 
		elser (15) >> node_007 
		elser (10) >> node_031 
		elser (0) >> node_032 
		elser (40) >> node_036 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (10) >> node_033 
		elser (10) >> node_034 
		elser (15) >> node_030 
		elser (15) >> node_007 
		elser (10) >> node_031 
		elser (0) >> node_032 
		elser (40) >> node_036 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (15) >> node_033 
		elser (15) >> node_034 
		elser (0) >> node_030 
		elser (30) >> node_007 
		elser (0) >> node_031 
		elser (0) >> node_032 
		elser (40) >> node_036 
		endr 
	elif self.distance_2d_to_target().leq(2200) 
		random (10) >> node_033 
		elser (20) >> node_034 
		elser (0) >> node_030 
		elser (20) >> node_007 
		elser (0) >> node_031 
		elser (50) >> node_032 
		elser (0) >> node_036 
		endr 
	else 
		random (10) >> node_033 
		elser (20) >> node_034 
		elser (0) >> node_030 
		elser (20) >> node_007 
		elser (0) >> node_031 
		elser (20) >> node_032 
		elser (30) >> node_036 
		endr 
	endif 
	return 
endf 

def node_167 : 844
	if self.distance_2d_to_target().leq(200) 
		random (10) >> node_033 
		elser (10) >> node_034 
		elser (20) >> node_030 
		elser (20) >> node_007 
		elser (10) >> node_031 
		elser (0) >> node_032 
		elser (0) >> node_039 
		elser (30) >> node_036 
		endr 
	elif self.distance_2d_to_target().leq(800) 
		random (10) >> node_033 
		elser (10) >> node_034 
		elser (15) >> node_030 
		elser (15) >> node_007 
		elser (10) >> node_031 
		elser (0) >> node_032 
		elser (20) >> node_039 
		elser (20) >> node_036 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (10) >> node_033 
		elser (10) >> node_034 
		elser (15) >> node_030 
		elser (15) >> node_007 
		elser (10) >> node_031 
		elser (0) >> node_032 
		elser (0) >> node_039 
		elser (40) >> node_036 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (20) >> node_033 
		elser (20) >> node_034 
		elser (0) >> node_030 
		elser (20) >> node_007 
		elser (0) >> node_031 
		elser (0) >> node_032 
		elser (20) >> node_039 
		elser (20) >> node_036 
		endr 
	elif self.distance_2d_to_target().leq(2200) 
		random (10) >> node_033 
		elser (20) >> node_034 
		elser (0) >> node_030 
		elser (20) >> node_007 
		elser (0) >> node_031 
		elser (50) >> node_032 
		elser (0) >> node_039 
		elser (0) >> node_036 
		endr 
	else 
		random (10) >> node_033 
		elser (20) >> node_034 
		elser (0) >> node_030 
		elser (20) >> node_007 
		elser (0) >> node_031 
		elser (20) >> node_032 
		elser (15) >> node_039 
		elser (15) >> node_036 
		endr 
	endif 
	return 
endf 

def node_168 : 799
	if function#7F(-999) 
	else 
		if self.distance_2d_to_target().leq(1600) 
		else 
			>> node_233 
		endif 
		if self.enraged() 
			if self.distance_2d_to_target().leq(1000) 
				random (0) >> node_049 
				elser (100) >> node_016 
				elser (0) >> node_051 
				elser (0) >> node_024 
				endr 
			else 
				random (0) >> node_049 
				elser (100) >> node_016 
				elser (0) >> node_051 
				elser (0) >> node_024 
				endr 
			endif 
		else 
			if self.distance_2d_to_target().leq(1000) 
				random (0) >> node_049 
				elser (100) >> node_016 
				elser (0) >> node_051 
				elser (0) >> node_024 
				endr 
			else 
				random (0) >> node_049 
				elser (100) >> node_016 
				elser (0) >> node_051 
				elser (0) >> node_024 
				endr 
			endif 
		endif 
	endif 
	return 
endf 

def node_169 : 800
	if self.distance_2d_to_target().leq(200) 
	elif self.distance_2d_to_target().leq(800) 
		random (0) >> node_033 
		elser (0) >> node_030 
		elser (0) >> node_007 
		elser (0) >> node_031 
		elser (0) >> node_066 
		elser (100) >> node_065 
		elser (0) >> node_039 
		elser (0) >> node_036 
		elser (0) 
		endr 
		[RegisterVar7 |-] 
		>> node_405 
		>> node_126 
	elif self.distance_2d_to_target().leq(1500) 
	elif self.distance_2d_to_target().leq(2200) 
		random (0) >> node_033 
		elser (0) >> node_030 
		elser (0) >> node_007 
		elser (0) >> node_031 
		elser (100) >> node_066 
		elser (0) >> node_065 
		elser (0) >> node_039 
		elser (0) >> node_036 
		elser (0) >> node_025 
		elser (0) 
		endr 
		[RegisterVar7 |-] 
		>> node_405 
		>> node_126 
	else 
	endif 
	return 
endf 

def node_170 : 801
	if self.enraged() 
		>> node_172 
	else 
		>> node_171 
	endif 
	return 
endf 

def node_171 : 841
	if self.distance_2d_to_target().leq(200) 
		random (5) >> node_033 
		elser (10) >> node_031 
		elser (10) >> node_030 
		elser (0) >> node_032 
		elser (25) >> node_036 
		elser (50) >> node_002 
		endr 
	elif self.distance_2d_to_target().leq(800) 
		random (5) >> node_033 
		elser (10) >> node_031 
		elser (10) >> node_030 
		elser (0) >> node_032 
		elser (25) >> node_036 
		elser (50) >> node_002 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (5) >> node_033 
		elser (10) >> node_031 
		elser (10) >> node_030 
		elser (0) >> node_032 
		elser (25) >> node_036 
		elser (50) >> node_002 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (5) >> node_033 
		elser (0) >> node_031 
		elser (10) >> node_030 
		elser (0) >> node_032 
		elser (25) >> node_036 
		elser (60) >> node_002 
		endr 
	elif self.distance_2d_to_target().leq(2200) 
		random (10) >> node_033 
		elser (20) >> node_034 
		elser (20) >> node_007 
		elser (50) >> node_032 
		elser (0) >> node_036 
		elser (0) >> node_004 
		elser (0) >> node_025 
		endr 
	else 
		random (10) >> node_033 
		elser (20) >> node_034 
		elser (20) >> node_007 
		elser (20) >> node_032 
		elser (30) >> node_036 
		endr 
	endif 
	return 
endf 

def node_172 : 842
	if self.distance_2d_to_target().leq(200) 
		random (10) >> node_033 
		elser (0) >> node_031 
		elser (0) >> node_030 
		elser (0) >> node_032 
		elser (30) >> node_036 
		elser (0) >> node_039 
		elser (15) >> node_004 
		elser (45) >> node_003 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(800) 
		random (10) >> node_033 
		elser (0) >> node_031 
		elser (0) >> node_030 
		elser (0) >> node_032 
		elser (15) >> node_036 
		elser (15) >> node_039 
		elser (15) >> node_004 
		elser (45) >> node_003 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (10) >> node_033 
		elser (0) >> node_031 
		elser (0) >> node_030 
		elser (0) >> node_032 
		elser (30) >> node_036 
		elser (0) >> node_039 
		elser (15) >> node_004 
		elser (45) >> node_003 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (10) >> node_033 
		elser (0) >> node_031 
		elser (0) >> node_030 
		elser (0) >> node_032 
		elser (15) >> node_036 
		elser (15) >> node_039 
		elser (15) >> node_004 
		elser (45) >> node_003 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(2200) 
		random (10) >> node_033 
		elser (20) >> node_034 
		elser (20) >> node_007 
		elser (50) >> node_032 
		elser (0) >> node_036 
		elser (0) >> node_039 
		elser (0) >> node_004 
		elser (0) >> node_003 
		elser (0) >> node_008 
		elser (0) >> node_025 
		endr 
	else 
		random (10) >> node_033 
		elser (20) >> node_034 
		elser (20) >> node_007 
		elser (20) >> node_032 
		elser (15) >> node_036 
		elser (15) >> node_039 
		endr 
	endif 
	return 
endf 

def node_173 : 681
	>> node_144 
	[RegisterVar7 |-] 
	>> node_405 
	>> node_126 
	>> node_149 
	return 
endf 

def node_174 : 682
	>> node_144 
	[RegisterVar7 |-] 
	>> node_405 
	>> node_126 
	>> node_150 
	return 
endf 

def node_175 : 688
	>> node_149 
	if self.current_quest().is_rank(rank.AT) 
	else 
		[RegisterVar7 |-] 
		>> node_405 
		>> node_126 
	endif 
	>> node_150 
	return 
endf 

def node_176 : 683
	>> node_145 
	[RegisterVar7 |-] 
	>> node_405 
	>> node_126 
	>> node_149 
	return 
endf 

def node_177 : 684
	>> node_145 
	[RegisterVar7 |-] 
	>> node_405 
	>> node_126 
	>> node_150 
	return 
endf 

def node_178 : 685
	>> node_144 
	[RegisterVar7 |-] 
	>> node_405 
	>> node_126 
	>> node_149 
	if self.current_quest().is_rank(rank.AT) 
	else 
		[RegisterVar7 |-] 
		>> node_405 
		>> node_126 
	endif 
	>> node_150 
	return 
endf 

def node_179 : 686
	>> node_145 
	[RegisterVar7 |-] 
	>> node_405 
	>> node_126 
	>> node_149 
	if self.current_quest().is_rank(rank.AT) 
	else 
		[RegisterVar7 |-] 
		>> node_405 
		>> node_126 
	endif 
	>> node_150 
	return 
endf 

def node_180 : 687
	>> node_144 
	[RegisterVar7 |-] 
	>> node_405 
	>> node_126 
	>> node_149 
	if self.current_quest().is_rank(rank.AT) 
	else 
		[RegisterVar7 |-] 
		>> node_405 
		>> node_126 
	endif 
	>> node_150 
	[RegisterVar7 |-] 
	>> node_405 
	>> node_126 
	>> node_150 
	return 
endf 

def node_181 : 705
	if self.in_combat() 
		>> node_183 
	elif self.alert_out_of_combat() 
		>> node_182 
	else 
		>> node_182 
	endif 
	return 
endf 

def node_182 : 706
	if function#102() 
		if function#103() 
			>> node_047 
			-> velkhana.search_fly() 
			function#103() 
			>> node_321 
			-> velkhana.threat_short_fly() 
			if function#103() 
				if self.distance_2d_to_target().leq(1000) 
					-> velkhana.step_back_fly() 
				else 
					>> node_249 
				endif 
			else 
			endif 
			if function#103() 
				>> node_184 
				-> velkhana.freeze_yokuryu_zako_breath() 
			else 
			endif 
			reset 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_183 : 707
	if function#104() 
		if function#102(1) 
			if function#103(1) 
				>> node_046 
				-> velkhana.anger_search() 
				function#103(1) 
				>> node_321 
				-> velkhana.threat_short() 
				if function#103(1) 
					if self.distance_2d_to_target().leq(800) 
						-> velkhana.back_turn() 
					else 
						>> node_236 
					endif 
				else 
				endif 
				if function#103(1) 
					-> velkhana.freeze_combat_zako_breath() 
				else 
				endif 
				reset 
			else 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_184 : 780
	if function#103() 
		if function#11(500) 
		else 
			if self.above_area() 
				-> velkhana.short_up_step_fly() 
			else 
				-> velkhana.short_down_step_fly() 
			endif 
		endif 
	else 
	endif 
	if function#103() 
		if function#11(500) 
		else 
			if self.above_area() 
				-> velkhana.short_up_step_fly() 
			else 
				-> velkhana.short_down_step_fly() 
			endif 
		endif 
	else 
	endif 
	if function#103() 
		if function#11(500) 
		else 
			if self.above_area() 
				-> velkhana.short_up_step_fly() 
			else 
				-> velkhana.short_down_step_fly() 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_185 : 753
	if self.quest_id(1404) 
		>> node_046 
		if function#101() 
			>> node_279 
		else 
		endif 
		>> node_224 
		>> node_225 
		>> node_223 
	else 
	endif 
	return 
endf 

def node_186 : 711
	if self.quest_id(1404) 
		>> node_187 
		>> node_192 
	else 
	endif 
	return 
endf 

def node_187 : 733
	if function#105() 
		>> node_188 
	elif function#105(0,1) 
		>> node_189 
	elif function#105(0,2) 
		>> node_190 
	elif function#105(0,3) 
	else 
	endif 
	return 
endf 

def node_188 : 734
	if function#107(0,8) 
	elif function#107(0,7) 
		if [RegisterVar5 <= 1] 
			[RegisterVar5 |-] 
			function#108(0,8) 
		else 
		endif 
	elif function#109(0,2) 
		function#108(0,7) 
	elif function#109(0,3) 
		function#106(0,1) 
	elif function#107(0,2) 
		if function#109(0,1) 
			function#108(0,3) 
		else 
		endif 
	elif function#107(0,3) 
		if [RegisterVar5 <= 1] 
			[RegisterVar5 |-] 
			function#108(0,4) 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_189 : 735
	if function#107() 
		if function#109(0,5) 
			function#10B() 
			function#108(0,1) 
		else 
		endif 
	elif function#107(0,1) 
		if [RegisterVar5 <= 1] 
			[RegisterVar5 |-] 
			function#108(0,2) 
		else 
		endif 
	elif function#107(0,2) 
		if function#109(0,6) 
			function#108(0,3) 
		else 
		endif 
	elif function#107(0,6) 
		if function#109(0,2) 
			function#108(0,7) 
		elif function#109(0,8) 
			function#108(0,7) 
		elif function#109(0,7) 
			function#108(0,7) 
		else 
		endif 
	elif function#107(0,7) 
		if [RegisterVar5 <= 1] 
			[RegisterVar5 |-] 
		else 
		endif 
		if function#109(0,9) 
			function#108(0,8) 
		endif 
	else 
	endif 
	return 
endf 

def node_190 : 736
	if function#107() 
		if function#109(0,8) 
			self.targetEnemy(73) 
			if function#109(0,12) 
				function#108(0,1) 
			elif self.vertical_distance_to_target().leq(300) 
				if self.distance_3d_to_target().leq(2500) 
					function#108(0,1) 
				else 
				endif 
			elif self.distance_3d_to_target().leq(1500) 
				function#108(0,1) 
			else 
			endif 
		else 
		endif 
	elif function#107(0,1) 
		if [RegisterVar5 <= 1] 
			[RegisterVar5 |-] 
			function#108(0,2) 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_191 : 737
endf 

def node_192 : 713
	if function#105() 
		>> node_193 
	elif function#105(0,1) 
		>> node_198 
	elif function#105(0,2) 
		>> node_205 
	elif function#105(0,3) 
		>> node_209 
	else 
	endif 
	return 
endf 

def node_193 : 714
	if function#107() 
	elif function#107(0,1) 
	elif function#107(0,2) 
		>> node_211 
	elif function#107(0,3) 
		>> node_211 
		>> node_194 
	elif function#107(0,4) 
		>> node_211 
		>> node_212 
	elif function#107(0,5) 
	elif function#107(0,6) 
		>> node_211 
	elif function#107(0,7) 
		>> node_196 
	elif function#107(0,8) 
		>> node_197 
	else 
	endif 
	return 
endf 

def node_194 : 718
	self.targetEnemy(72) 
	[RegisterVar5 |-] 
	if self.distance_3d_to_target().leq(1600) 
		>> node_212 
		[RegisterVar5 ++] 
	else 
		return 
	endif 
	reset 
endf 

def node_195 : 760
	>> node_212 
	reset 
endf 

def node_196 : 740
	self.targetEnemy(72) 
	if self.distance_3d_to_target().leq(600) 
	else 
		>> node_046 
		-> velkhana.dash(1,2,0,500,2000) 
		repeat 
	endif 
	>> node_319 
	[RegisterVar5 |-] 
	[RegisterVar5 ++] 
	reset 
endf 

def node_197 : 744
	function#10A() 
	>> node_221 
	if self.flying() 
	else 
		-> velkhana.take_off(7,0,0,1000) 
	endif 
	-> velkhana.quick_turn_fly() 
	-> velkhana.event_fence_break_quest_fail() 
	-> velkhana.landing() 
	reset 
endf 

def node_198 : 720
	if function#107() 
		>> node_211 
	elif function#107(0,1) 
		>> node_199 
	elif function#107(0,2) 
		>> node_200 
	elif function#107(0,3) 
		>> node_201 
	elif function#107(0,4) 
	elif function#107(0,5) 
	elif function#107(0,6) 
		>> node_211 
		>> node_202 
	elif function#107(0,7) 
		>> node_203 
	elif function#107(0,8) 
		>> node_204 
	else 
	endif 
	return 
endf 

def node_199 : 722
	self.targetEnemy(72) 
	if self.distance_3d_to_target().leq(600) 
	else 
		>> node_046 
		-> velkhana.dash(1,2,0,500,2000) 
		repeat 
	endif 
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_319 
	[RegisterVar5 |-] 
	[RegisterVar5 ++] 
	reset 
endf 

def node_200 : 742
	>> node_212 
	reset 
endf 

def node_201 : 724
	-> velkhana.damage_low() 
	reset 
endf 

def node_202 : 751
	self.targetEnemy(48) 
	if function#109(0,11) 
		>> node_215 
	else 
		return 
	endif 
	reset 
endf 

def node_203 : 725
	self.targetEnemy(72) 
	if self.distance_3d_to_target().leq(600) 
	else 
		>> node_046 
		-> velkhana.dash(1,2,0,500,2000) 
		repeat 
	endif 
	if function#10A() 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
	endif 
	>> node_219 
	[RegisterVar5 |-] 
	[RegisterVar5 ++] 
	reset 
endf 

def node_204 : 743
	if function#109(0,10) 
		function#10B(0,1) 
		-> velkhana.threat_short() 
	else 
		function#10A() 
		>> node_221 
		if self.flying() 
		else 
			-> velkhana.take_off(7,0,0,1000) 
		endif 
		-> velkhana.quick_turn_fly() 
		-> velkhana.event_fence_break() 
		-> velkhana.landing() 
	endif 
	>> node_222 
	reset 
endf 

def node_205 : 726
	if function#107() 
		>> node_206 
	elif function#107(0,1) 
		>> node_207 
	elif function#107(0,2) 
		>> node_208 
	elif function#107(0,3) 
	else 
	endif 
	return 
endf 

def node_206 : 727
	self.targetEnemy(50) 
	if self.target(54) 
		>> node_214 
	else 
		return 
	endif 
	reset 
endf 

def node_207 : 728
	self.targetEnemy(73) 
	if self.distance_3d_to_target().leq(600) 
	else 
		>> node_046 
		-> velkhana.dash(1,2,0,500,2000) 
		repeat 
	endif 
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_319 
	[RegisterVar5 |-] 
	[RegisterVar5 ++] 
	reset 
endf 

def node_208 : 729
	function#10B() 
	>> node_216 
	reset 
endf 

def node_209 : 731
	if function#107() 
		>> node_210 
	else 
	endif 
	return 
endf 

def node_210 : 732
	self.targetEnemy(48) 
	if function#109(0,8) 
		>> node_213 
	elif self.target(54) 
		>> node_213 
	else 
		return 
	endif 
	reset 
endf 

def node_211 : 756
	self.targetEnemy(50) 
	if self.target(4) 
		>> node_215 
		reset 
	elif self.distance_2d_to_target().leq(1500) 
	elif self.distance_2d_to_target().leq(2000) 
		random (75) 
		elser (25) 
					>> node_215 
					reset 
		endr 
	elif self.distance_2d_to_target().leq(2500) 
		random (60) 
		elser (40) 
					>> node_215 
					reset 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (40) 
		elser (60) 
					>> node_215 
					reset 
		endr 
	else 
		random (25) 
		elser (75) 
					>> node_215 
					reset 
		endr 
	endif 
	return 
endf 

def node_212 : 745
	>> node_046 
	self.targetEnemy(72) 
	if self.vertical_distance_to_target().leq(400) 
		if self.distance_2d_to_target().leq(650) 
		else 
			>> node_233 
		endif 
	else 
		>> node_233 
	endif 
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#101() 
		>> node_279 
	else 
	endif 
	>> node_217 
	return 
endf 

def node_213 : 749
	>> node_046 
	self.targetEnemy(73) 
	if self.vertical_distance_to_target().leq(400) 
		if self.distance_2d_to_target().leq(650) 
		else 
			>> node_233 
		endif 
	else 
		>> node_233 
	endif 
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#101() 
		>> node_279 
	else 
	endif 
	if self.target(4) 
		>> node_267 
	else 
		>> node_217 
	endif 
	return 
endf 

def node_214 : 757
	>> node_046 
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#101() 
		>> node_279 
	else 
	endif 
	if self.target(4) 
		>> node_267 
	else 
		>> node_217 
	endif 
	return 
endf 

def node_215 : 746
	>> node_046 
	if function#10A() 
	else 
		self.targetEnemy(72) 
	endif 
	if self.vertical_distance_to_target().leq(400) 
		if self.distance_2d_to_target().leq(1500) 
		else 
			>> node_220 
		endif 
	else 
		>> node_220 
	endif 
	if function#10A() 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
	endif 
	if function#101() 
		>> node_279 
	else 
	endif 
	>> node_219 
	return 
endf 

def node_216 : 759
	>> node_046 
	self.targetEnemy(73) 
	if self.vertical_distance_to_target().leq(400) 
		if self.distance_2d_to_target().leq(650) 
		else 
			>> node_233 
		endif 
	else 
		>> node_233 
	endif 
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#101() 
		>> node_279 
	else 
	endif 
	if self.target(4) 
		>> node_267 
	else 
		>> node_070 
	endif 
	return 
endf 

def node_217 : 752
	if self.distance_2d_to_target().leq(600) 
		random (35) >> node_059 
		elser (25) >> node_071 
		elser (20) >> node_069 
		elser (10) >> node_070 
		elser (10) >> node_278 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (25) >> node_066 
		elser (30) >> node_071 
		elser (25) >> node_069 
		elser (10) >> node_070 
		elser (10) >> node_278 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (40) >> node_066 
		elser (40) >> node_071 
		elser (10) >> node_070 
		elser (10) >> node_278 
		endr 
	else 
		random (30) >> node_070 
		elser (30) >> node_071 
		elser (10) >> node_081 
		elser (30) >> node_278 
		endr 
	endif 
	return 
endf 

def node_218 : 747
	if function#101(2) 
		if self.distance_2d_to_target().leq(600) 
			random (25) >> node_065 
			elser (25) >> node_057 
			elser (25) >> node_069 
			elser (25) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (25) >> node_058 
			elser (25) >> node_057 
			elser (25) >> node_069 
			elser (25) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(1200) 
			random (25) >> node_066 
			elser (25) >> node_071 
			elser (25) >> node_069 
			elser (25) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(1500) 
			random (35) >> node_066 
			elser (30) >> node_071 
			elser (35) >> node_068 
			endr 
		else 
			random (35) >> node_070 
			elser (30) >> node_071 
			elser (35) >> node_068 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(600) 
			random (25) >> node_065 
			elser (25) >> node_057 
			elser (25) >> node_069 
			elser (25) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(750) 
			random (25) >> node_058 
			elser (25) >> node_057 
			elser (25) >> node_069 
			elser (25) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (35) >> node_066 
			elser (30) >> node_071 
			elser (35) >> node_068 
			endr 
		else 
			random (35) >> node_070 
			elser (35) >> node_071 
			elser (30) >> node_278 
			endr 
		endif 
	endif 
	return 
endf 

def node_219 : 748
	if function#101(2) 
		if self.distance_2d_to_target().leq(600) 
			random (40) >> node_056 
			elser (40) >> node_057 
			elser (0) >> node_069 
			elser (20) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (40) >> node_058 
			elser (40) >> node_057 
			elser (0) >> node_069 
			elser (20) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(1200) 
			random (35) >> node_066 
			elser (35) >> node_057 
			elser (0) >> node_071 
			elser (0) >> node_069 
			elser (30) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(1500) 
			random (30) >> node_066 
			elser (40) >> node_071 
			elser (30) >> node_068 
			endr 
		else 
			random (50) >> node_071 
			elser (50) >> node_068 
			endr 
		endif 
	else 
		if self.distance_2d_to_target().leq(600) 
			random (40) >> node_056 
			elser (40) >> node_057 
			elser (0) >> node_069 
			elser (20) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (40) >> node_058 
			elser (40) >> node_057 
			elser (0) >> node_069 
			elser (20) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(1200) 
			random (35) >> node_066 
			elser (35) >> node_057 
			elser (0) >> node_071 
			elser (30) >> node_068 
			endr 
		elif self.distance_2d_to_target().leq(1500) 
			random (30) >> node_066 
			elser (40) >> node_071 
			elser (30) >> node_068 
			endr 
		else 
			random (50) >> node_071 
			elser (50) >> node_278 
			endr 
		endif 
	endif 
	return 
endf 

def node_220 : 754
	>> node_046 
	if self.distance_3d_to_target().leq(1200) 
	else 
		-> velkhana.dash(1,2,0,1100,1500) 
	endif 
	if self.distance_3d_to_target().leq(1200) 
	else 
		-> velkhana.dash(1,2,0,1100,1500) 
	endif 
	if self.distance_3d_to_target().leq(1200) 
	else 
		-> velkhana.dash(1,2,0,1100,1500) 
	endif 
	if self.distance_3d_to_target().leq(1200) 
	else 
		-> velkhana.dash(1,2,0,1100,1500) 
	endif 
	if self.distance_3d_to_target().leq(1200) 
	else 
		-> velkhana.dash(1,2,0,1100,1500) 
	endif 
	return 
endf 

def node_221 : 755
	>> node_046 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	return 
endf 

def node_222 : 758
	self.targetEnemy(73) 
	>> node_046 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.dash(1,2,0,500,2000) 
		repeat 
	endif 
	return 
endf 

def node_223 : 777
	if function#105(3,1) 
		function#10A() 
		if self.distance_3d_to_target().leq(1500) 
		else 
			>> node_220 
		endif 
		>> node_219 
	else 
		>> node_267 
	endif 
	reset 
endf 

def node_224 : 778
	if function#105() 
		if function#107(0,7) 
			if [RegisterVar5 <= 1] 
				[RegisterVar5 |-] 
				function#108(0,8) 
			else 
			endif 
		elif function#109(0,2) 
			function#108(0,7) 
		else 
		endif 
		if function#107(0,7) 
			>> node_196 
		elif function#107(0,8) 
			>> node_197 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_225 : 779
	if function#105(0,1) 
		if function#107(0,6) 
			if function#109(0,2) 
				function#108(0,7) 
			elif function#109(0,8) 
				function#108(0,7) 
			elif function#109(0,7) 
				function#108(0,7) 
			else 
			endif 
		elif function#107(0,7) 
			if [RegisterVar5 <= 1] 
				[RegisterVar5 |-] 
			else 
			endif 
			if function#109(0,9) 
				function#108(0,8) 
			endif 
		else 
		endif 
		if function#107(0,7) 
			>> node_203 
		elif function#107(0,8) 
			>> node_204 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_226 : 198
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_227 : 444
	>> node_376 
	self.targetArea(target_area.nearest_entrance) 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_228 : 445
	>> node_376 
	self.targetArea(target_area.area_center) 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_229 : 446
	>> node_376 
	self.targetArea(39) 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.walk(1,2,5,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_230 : 356
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.dying_walk(1,2,0,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_231 : 194
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_232 : 272
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_233 : 529
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_234 : 530
	if self.distance_2d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_235 : 531
	if self.distance_2d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> velkhana.dash(1,2,0,600,1500) 
	endif 
	return 
endf 

def node_236 : 709
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	return 
endf 

def node_237 : 816
	if self.distance_2d_to_target().leq(1500) 
	else 
		-> velkhana.dash(6,2,0,1400,1500) 
	endif 
	if self.distance_2d_to_target().leq(1500) 
	else 
		-> velkhana.dash(6,2,0,1400,1500) 
	endif 
	if self.distance_2d_to_target().leq(1500) 
	else 
		-> velkhana.dash(6,2,0,1400,1500) 
	endif 
	if self.distance_2d_to_target().leq(1500) 
	else 
		-> velkhana.dash(6,2,0,1400,1500) 
	endif 
	if self.distance_2d_to_target().leq(1500) 
	else 
		-> velkhana.dash(6,2,0,1400,1500) 
	endif 
	return 
endf 

def node_238 : 813
	if self.distance_2d_to_target().leq(1750) 
	else 
		-> velkhana.dash(6,2,0,1650,1500) 
	endif 
	if self.distance_2d_to_target().leq(1750) 
	else 
		-> velkhana.dash(6,2,0,1650,1500) 
	endif 
	if self.distance_2d_to_target().leq(1750) 
	else 
		-> velkhana.dash(6,2,0,1650,1500) 
	endif 
	if self.distance_2d_to_target().leq(1750) 
	else 
		-> velkhana.dash(6,2,0,1650,1500) 
	endif 
	if self.distance_2d_to_target().leq(1750) 
	else 
		-> velkhana.dash(6,2,0,1650,1500) 
	endif 
	return 
endf 

def node_239 : 852
	if self.distance_2d_to_target().leq(1900) 
	else 
		-> velkhana.dash(6,2,0,1800,1500) 
	endif 
	if self.distance_2d_to_target().leq(1900) 
	else 
		-> velkhana.dash(6,2,0,1800,1500) 
	endif 
	if self.distance_2d_to_target().leq(1900) 
	else 
		-> velkhana.dash(6,2,0,1800,1500) 
	endif 
	if self.distance_2d_to_target().leq(1900) 
	else 
		-> velkhana.dash(6,2,0,1800,1500) 
	endif 
	if self.distance_2d_to_target().leq(1900) 
	else 
		-> velkhana.dash(6,2,0,1800,1500) 
	endif 
	return 
endf 

def node_240 : 343
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.dying_walk_fly(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_241 : 344
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.dying_glide_direct_move(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_242 : 345
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.dying_glide_direct_move(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_243 : 346
	if self.distance_2d_to_target().leq(600) 
	else 
		-> velkhana.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_244 : 347
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> velkhana.glide_combat(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_245 : 401
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.glide(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_246 : 402
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.glide_direct_move(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_247 : 403
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.glide_direct_move(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_248 : 708
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,900) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,900) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,900) 
	endif 
	return 
endf 

def node_249 : 710
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,1900) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,1900) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,1900) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,1900) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,1900) 
	endif 
	return 
endf 

def node_250 : 404
	if self.distance_2d_to_target().leq(600) 
	else 
		-> velkhana.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_251 : 405
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> velkhana.glide_combat(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_252 : 196
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.glide(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_253 : 195
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.glide_direct_move(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_254 : 279
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_255 : 532
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,500) 
	endif 
	return 
endf 

def node_256 : 197
	if self.distance_2d_to_target().leq(600) 
	else 
		-> velkhana.glide_combat(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_257 : 280
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> velkhana.glide_combat(2,1,0,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_258 : 533
	if self.distance_2d_to_target().leq(600) 
	else 
		-> velkhana.glide_combat(2,1,0,1500,500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> velkhana.glide_combat(2,1,0,1500,500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
	else 
		-> velkhana.glide_combat(2,1,0,1500,500) 
	endif 
	return 
endf 

def node_259 : 257
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> velkhana.glide_direct_move(2,1,0,1500,700) 
	endif 
	return 
endf 

def node_260 : 256
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> velkhana.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> velkhana.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> velkhana.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> velkhana.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> velkhana.glide_combat(2,0,0,1500) 
	endif 
	return 
endf 

def node_261 : 552
	>> node_046 
	-> velkhana.take_off_switch_pattern_by_dist() 
	>> node_254 
	return 
endf 

def node_262 : 398
	>> node_046 
	-> velkhana.sudden_rise() 
	return 
endf 

def node_263 : 400
	>> node_047 
	-> velkhana.sudden_drop() 
	return 
endf 

def node_264 : 585
	if self.current_quest().is_rank(rank.AT) 
		if function#101(4) 
			if self.flying() 
				-> velkhana.barrier_max_fly() 
			else 
				-> velkhana.barrier_max() 
			endif 
		else 
			if self.flying() 
				-> velkhana.discover_roar_fly() 
			else 
				-> velkhana.discover_roar() 
			endif 
		endif 
		if self.flying() 
		else 
		endif 
	else 
		if function#101(4) 
			if self.flying() 
				-> velkhana.discover_roar_fly_2() 
			else 
				-> velkhana.discover_roar_2() 
			endif 
		else 
			if self.flying() 
				-> velkhana.discover_roar_fly() 
			else 
				-> velkhana.discover_roar() 
			endif 
		endif 
	endif 
	return 
endf 

def node_265 : 324
	if self.flying() 
		-> velkhana.discover_fly() 
	else 
		-> velkhana.discover() 
	endif 
	return 
endf 

def node_266 : 526
	if self.flying() 
		-> velkhana.threat_short_fly() 
	else 
		-> velkhana.threat_short() 
	endif 
	return 
endf 

def node_267 : 325
	if self.flying() 
		-> velkhana.threat_short_fly() 
	else 
		-> velkhana.threat_short() 
	endif 
	return 
endf 

def node_268 : 556
	if function#AB() 
		function#AA() 
		>> node_267 
	else 
	endif 
	return 
endf 

def node_269 : 328
	if self.flying() 
		-> velkhana.search_fly() 
	else 
		-> velkhana.combat_search() 
	endif 
	return 
endf 

def node_270 : 330
	if self.flying() 
		-> velkhana.search_fly() 
	else 
		-> velkhana.combat_search() 
	endif 
	return 
endf 

def node_271 : 329
	if self.flying() 
		-> velkhana.search_fly() 
	else 
		-> velkhana.lost_search() 
	endif 
	return 
endf 

def node_272 : 584
	if self.flying() 
		-> velkhana.discover_fly() 
	else 
		-> velkhana.discover() 
	endif 
	return 
endf 

def node_273 : 336
	>> node_046 
	-> velkhana.tired() 
	return 
endf 

def node_274 : 337
	>> node_046 
	-> velkhana.refresh() 
	return 
endf 

def node_275 : 369
	>> node_046 
	if self.in_combat() 
		-> velkhana.lost_search() 
	else 
		-> velkhana.life_search() 
	endif 
	return 
endf 

def node_276 : 370
	>> node_046 
	-> velkhana.lost_search() 
	return 
endf 

def node_277 : 457
	if self.flying() 
		-> velkhana.chance_fly() 
	else 
		-> velkhana.chance() 
	endif 
	return 
endf 

def node_278 : 695
	if self.flying() 
		-> velkhana.chance_fly() 
	else 
		-> velkhana.chance() 
	endif 
	return 
endf 

def node_279 : 485
	if self.current_quest().is_rank(rank.AT) 
		>> node_280 
	else 
		if function#7D() 
			if self.flying() 
				-> velkhana.barrier_max_fly() 
			else 
				-> velkhana.barrier_max() 
			endif 
		elif function#101(4) 
			if self.flying() 
				-> velkhana.barrier_max_fly() 
			else 
				-> velkhana.barrier_max() 
			endif 
		else 
			if self.flying() 
				-> velkhana.barrier_up_fly() @ comboSetting:1 
				-> velkhana.threat_short_fly() 
			else 
				-> velkhana.barrier_up() @ comboSetting:1 
				-> velkhana.chance() 
			endif 
		endif 
	endif 
	return 
endf 

def node_280 : 791
	if function#7D() 
		if self.flying() 
			-> velkhana.barrier_max_fly() 
		else 
			-> velkhana.barrier_max() 
		endif 
	elif self.hp_percent().gt(40) 
		if self.flying() 
			-> velkhana.barrier_max_fly() 
		else 
			-> velkhana.barrier_max() 
		endif 
	elif function#101(4) 
		if self.flying() 
			-> velkhana.barrier_max_fly() 
		else 
			-> velkhana.barrier_max() 
		endif 
	else 
		if self.flying() 
			-> velkhana.barrier_up_fly() @ comboSetting:1 
			-> velkhana.threat_short_fly() 
		else 
			-> velkhana.barrier_up() @ comboSetting:1 
			-> velkhana.chance() 
		endif 
	endif 
	return 
endf 

def node_281 : 206
	self.targetArea(target_area.nearest_entrance) 
	>> node_282 
	return 
endf 

def node_282 : 424
	if function#5A(20) 
		>> node_283 
	elif function#5A(21) 
		>> node_283 
	elif function#5A(22) 
		>> node_283 
	elif function#5A(23) 
		>> node_283 
	elif function#5A(24) 
		>> node_283 
	elif function#5A(25) 
		>> node_283 
	elif function#5A(30) 
		>> node_284 
	elif function#5A(31) 
		>> node_284 
	elif function#5A(32) 
		>> node_284 
	elif function#5A(33) 
		>> node_284 
	elif function#5A(34) 
		>> node_284 
	elif function#5A(35) 
		>> node_284 
	else 
		>> node_285 
	endif 
	return 
endf 

def node_283 : 425
	if self.distance_3d_to_target().leq(20000) 
		>> node_046 
		>> node_286 
	else 
		>> node_285 
	endif 
	return 
endf 

def node_284 : 426
	if self.distance_3d_to_target().leq(20000) 
		>> node_047 
		>> node_286 
	else 
		>> node_285 
	endif 
	return 
endf 

def node_285 : 427
	if function#AD() 
		>> node_286 
	else 
		>> node_287 
	endif 
	return 
endf 

def node_286 : 207
	if function#5A(10) 
		>> node_047 
	elif function#5A(11) 
		>> node_047 
	elif function#5A(12) 
		>> node_047 
	elif function#5A(13) 
		>> node_047 
	elif function#5A(14) 
		>> node_047 
	elif function#5A(15) 
		>> node_047 
	elif function#5A(30) 
		>> node_047 
	elif function#5A(31) 
		>> node_047 
	elif function#5A(32) 
		>> node_047 
	elif function#5A(33) 
		>> node_047 
	elif function#5A(34) 
		>> node_047 
	elif function#5A(35) 
		>> node_047 
	else 
		>> node_046 
	endif 
	if self.flying() 
		>> node_246 
	else 
		>> node_227 
	endif 
	return 
endf 

def node_287 : 208
	>> node_288 
	>> node_289 
	>> node_290 
	>> node_291 
	return 
endf 

def node_288 : 209
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_247 
	else 
		self.targetArea(target_area.area_center) 
		>> node_228 
		self.targetArea(target_area.area_aerial_center) 
		>> node_261 
	endif 
	return 
endf 

def node_289 : 210
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		self.targetArea(40) 
		>> node_245 
	else 
		self.targetArea(39) 
		>> node_229 
	endif 
	return 
endf 

def node_290 : 205
	if function#5A(10) 
	elif function#5A(11) 
	elif function#5A(12) 
	elif function#5A(13) 
	elif function#5A(14) 
	elif function#5A(15) 
	elif function#5A(30) 
	elif function#5A(31) 
	elif function#5A(32) 
	elif function#5A(33) 
	elif function#5A(34) 
	elif function#5A(35) 
	else 
		if self.flying() 
			self.targetArea(target_area.area_center) 
			>> node_046 
		else 
		endif 
	endif 
	return 
endf 

def node_291 : 278
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		>> node_246 
	else 
		>> node_227 
	endif 
	return 
endf 

def node_292 : 199
	self.targetArea(14) 
	if function#AD() 
		>> node_293 
	else 
		>> node_294 
	endif 
	>> node_298 
	return 
endf 

def node_293 : 200
	if self.flying() 
		self.targetArea(40) 
		>> node_253 
	else 
		>> node_231 
	endif 
	return 
endf 

def node_294 : 201
	>> node_295 
	>> node_297 
	return 
endf 

def node_295 : 553
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_254 
	else 
		self.targetArea(target_area.area_aerial_center) 
		>> node_261 
	endif 
	return 
endf 

def node_296 : 554
	self.targetArea(target_area.area_center) 
	>> node_231 
	self.targetArea(target_area.area_aerial_center) 
	>> node_261 
	return 
endf 

def node_297 : 203
	self.targetArea(14) 
	if self.flying() 
		self.targetArea(40) 
		>> node_252 
	else 
		>> node_231 
	endif 
	return 
endf 

def node_298 : 204
	self.targetArea(14) 
	if self.flying() 
		if self.fatigued() 
			>> node_046 
		else 
			>> node_263 
			>> node_046 
		endif 
	else 
	endif 
	return 
endf 

def node_299 : 349
	self.targetArea(24) 
	if function#AD() 
		>> node_300 
	else 
		>> node_301 
	endif 
	return 
endf 

def node_300 : 350
	>> node_046 
	self.targetArea(24) 
	>> node_230 
	return 
endf 

def node_301 : 351
	>> node_302 
	>> node_303 
	>> node_304 
	>> node_305 
	return 
endf 

def node_302 : 352
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_242 
	else 
		self.targetArea(target_area.area_center) 
		>> node_230 
		self.targetArea(target_area.area_aerial_center) 
		>> node_047 
	endif 
	return 
endf 

def node_303 : 353
	self.targetArea(24) 
	if self.flying() 
		self.targetArea(40) 
		>> node_240 
	else 
		self.targetArea(39) 
		>> node_230 
	endif 
	return 
endf 

def node_304 : 354
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_046 
	else 
	endif 
	return 
endf 

def node_305 : 355
	if self.flying() 
	else 
		self.targetArea(24) 
		>> node_230 
	endif 
	return 
endf 

def node_306 : 362
	if function#AD() 
		>> node_307 
	else 
		>> node_308 
	endif 
	return 
endf 

def node_307 : 363
	if self.flying() 
		>> node_257 
	else 
		if self.in_combat() 
			>> node_231 
		else 
			>> node_226 
		endif 
	endif 
	return 
endf 

def node_308 : 364
	>> node_309 
	>> node_310 
	>> node_311 
	return 
endf 

def node_309 : 365
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_253 
	else 
		self.targetArea(target_area.area_center) 
		if self.in_combat() 
			>> node_231 
		else 
			>> node_226 
		endif 
		self.targetArea(target_area.area_aerial_center) 
		>> node_261 
	endif 
	return 
endf 

def node_310 : 366
	if self.flying() 
		self.targetArea(40) 
		>> node_252 
	else 
		self.targetArea(39) 
		if self.in_combat() 
			>> node_231 
		else 
			>> node_226 
		endif 
	endif 
	return 
endf 

def node_311 : 367
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_046 
	else 
	endif 
	return 
endf 

def node_312 : 557
	self.targetArea(target_area.area_center) 
	if self.flying() 
		if self.fatigued() 
			>> node_046 
		else 
			>> node_263 
		endif 
	else 
	endif 
	return 
endf 

def node_313 : 368
	if self.flying() 
		>> node_257 
	else 
		if self.in_combat() 
			>> node_231 
		else 
			>> node_226 
		endif 
	endif 
	return 
endf 

def node_314 : 309
	if self.flying() 
		-> velkhana.turn_fly() 
	else 
		-> velkhana.turn() 
	endif 
	return 
endf 

def node_315 : 310
	if self.angle_2d_cw_between(15,345) 
		>> node_314 
	else 
	endif 
	return 
endf 

def node_316 : 311
	if self.angle_2d_cw_between(30,330) 
		>> node_314 
	else 
	endif 
	return 
endf 

def node_317 : 312
	if self.angle_2d_cw_between(60,300) 
		>> node_314 
	else 
	endif 
	return 
endf 

def node_318 : 313
	if self.angle_2d_cw_between(90,270) 
		>> node_314 
	else 
	endif 
	return 
endf 

def node_319 : 357
	if self.flying() 
		-> velkhana.quick_turn_fly() 
	else 
		-> velkhana.quick_turn() 
	endif 
	return 
endf 

def node_320 : 358
	if self.angle_2d_cw_between(15,345) 
		>> node_319 
	else 
	endif 
	return 
endf 

def node_321 : 359
	if self.angle_2d_cw_between(30,330) 
		>> node_319 
	else 
	endif 
	return 
endf 

def node_322 : 360
	if self.angle_2d_cw_between(60,300) 
		>> node_319 
	else 
	endif 
	return 
endf 

def node_323 : 361
	if self.angle_2d_cw_between(90,270) 
		>> node_319 
	else 
	endif 
	return 
endf 

def node_324 : 226
	>> node_046 
	-> velkhana.lost_search() 
	return 
endf 

def node_325 : 227
	>> node_046 
	-> velkhana.lost_search() 
	return 
endf 

def node_326 : 228
	>> node_046 
	random (50) -> velkhana.combat_search() 
	elser (50) -> velkhana.lost_search() 
	endr 
	return 
endf 

def node_327 : 229
	>> node_046 
	random (50) -> velkhana.combat_search() 
	elser (50) -> velkhana.lost_search() 
	endr 
	return 
endf 

def node_328 : 230
	>> node_046 
	-> velkhana.dash(2,1,0,1000,750) 
	return 
endf 

def node_329 : 231
	>> node_046 
	-> velkhana.dash(2,1,0,2000,750) 
	return 
endf 

def node_330 : 232
	>> node_046 
	>> node_333 
	return 
endf 

def node_331 : 233
	>> node_046 
	if self.target(10) 
		-> velkhana.dash(2,0,0,1000) 
	else 
	endif 
	if self.enraged() 
		>> node_050 
	else 
		>> node_050 
	endif 
	return 
endf 

def node_332 : 242
	>> node_046 
	-> velkhana.tired() 
	return 
endf 

def node_333 : 776
	>> node_046 
	-> velkhana.lost_tail_swing() 
	return 
endf 

def node_334 : 282
	if self.distance_3d_to_target().leq(900) 
		>> node_364 
	elif self.distance_3d_to_target().leq(1350) 
		>> node_366 
	else 
	endif 
	return 
endf 

def node_335 : 289
	if self.distance_2d_to_target().leq(900) 
	else 
		-> velkhana.dash(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> velkhana.dash(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> velkhana.dash(2,0,0,1500) 
	endif 
	return 
endf 

def node_336 : 292
	>> node_046 
	-> velkhana.lost_search() 
	return 
endf 

def node_337 : 295
	>> node_046 
	>> node_316 
	-> velkhana.life_search() 
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		random (50) 
					self.targetArea(22) @ parameter2:500 
					>> node_316 
					-> velkhana.life_search() 
		elser (50) 
		endr 
	endif 
	return 
endf 

def node_338 : 300
	>> node_046 
	self.targetArea(17) 
	>> node_316 
	-> velkhana.marking() 
	return 
endf 

def node_339 : 307
	>> node_046 
	self.targetArea(17) 
	random (75) >> node_337 
	elser (25) >> node_316 
				-> velkhana.rest() 
	endr 
	return 
endf 

def node_340 : 303
	>> node_046 
	self.targetArea(17) 
	>> node_316 
	-> velkhana.rest() 
	return 
endf 

def node_341 : 305
	>> node_046 
	>> node_315 
	-> velkhana.life_search() 
	return 
endf 

def node_342 : 306
	>> node_046 
	self.targetArea(17) 
	>> node_316 
	-> velkhana.sleep() 
	return 
endf 

def node_343 : 296
	>> node_047 
	>> node_316 
	-> velkhana.search_fly() 
	return 
endf 

def node_344 : 301
	>> node_047 
	>> node_316 
	-> velkhana.chance_fly() 
	return 
endf 

def node_345 : 308
	>> node_047 
	>> node_316 
	-> velkhana.search_fly() 
	return 
endf 

def node_346 : 299
	>> node_047 
	>> node_315 
	-> velkhana.search_fly() 
	return 
endf 

def node_347 : 297
	>> node_047 
	>> node_316 
	-> velkhana.search_fly() 
	return 
endf 

def node_348 : 534
	>> node_047 
	self.targetEnemy(17) 
	-> velkhana.sudden_drop() 
	return 
endf 

def node_349 : 348
	>> node_046 
	>> node_316 
	if function#C9() 
		-> velkhana.dying_sleep() 
	else 
		function#CA() 
	endif 
	return 
endf 

def node_350 : 422
	if self.distance_2d_to_target().leq(500) 
	else 
		-> velkhana.glide_direct_move(1,2,0,400,1500) 
		repeat 
	endif 
	return 
endf 

def node_351 : 385
	>> node_047 
	self.targetArea(22) @ parameter2:500 
	-> velkhana.quick_turn_fly() 
	return 
endf 

def node_352 : 527
	>> node_047 
	-> velkhana.ride_rage_head() 
	return 
endf 

def node_353 : 386
	>> node_047 
	-> velkhana.ride_rage_head_lv2() 
	return 
endf 

def node_354 : 528
	>> node_047 
	-> velkhana.ride_rage_body() 
	return 
endf 

def node_355 : 387
	>> node_047 
	-> velkhana.ride_rage_body_lv2() 
	return 
endf 

def node_356 : 394
	>> node_047 
	if self.distance_2d_to_target().leq(600) 
		>> node_384 
	else 
	endif 
	>> node_350 
	>> node_357 
	return 
endf 

def node_357 : 551
	if function#11(1000) 
	else 
		if self.above_area() 
			-> velkhana.short_up_step_fly() 
		else 
			-> velkhana.short_down_step_fly() 
		endif 
	endif 
	return 
endf 

def node_358 : 388
	>> node_047 
	-> velkhana.ride_rage_crash_head() 
	return 
endf 

def node_359 : 389
	>> node_047 
	-> velkhana.ride_rage_crash_head_lv2() 
	return 
endf 

def node_360 : 390
	>> node_047 
	-> velkhana.ride_rage_crash_body() 
	return 
endf 

def node_361 : 391
	>> node_047 
	-> velkhana.ride_rage_crash_body_lv2() 
	return 
endf 

def node_362 : 393
	>> node_047 
	-> velkhana.chance_fly() 
	return 
endf 

def node_363 : 392
	>> node_047 
	-> velkhana.ride_tired() 
	return 
endf 

def node_364 : 275
	>> node_046 
	-> velkhana.back_turn() 
	return 
endf 

def node_365 : 284
	if self.angle_2d_cw_between(15,345) 
		>> node_364 
	else 
	endif 
	return 
endf 

def node_366 : 285
	if self.angle_2d_cw_between(30,330) 
		>> node_364 
	else 
	endif 
	return 
endf 

def node_367 : 286
	if self.angle_2d_cw_between(45,315) 
		>> node_364 
	else 
	endif 
	return 
endf 

def node_368 : 287
	if self.angle_2d_cw_between(60,300) 
		>> node_364 
	else 
	endif 
	return 
endf 

def node_369 : 288
	if self.angle_2d_cw_between(90,270) 
		>> node_364 
	else 
	endif 
	return 
endf 

def node_370 : 271
	>> node_046 
	-> velkhana.quick_turn() 
	return 
endf 

def node_371 : 212
	if self.angle_2d_cw_between(15,345) 
		>> node_370 
	else 
	endif 
	return 
endf 

def node_372 : 213
	if self.angle_2d_cw_between(30,330) 
		>> node_370 
	else 
	endif 
	return 
endf 

def node_373 : 214
	if self.angle_2d_cw_between(45,315) 
		>> node_370 
	else 
	endif 
	return 
endf 

def node_374 : 216
	if self.angle_2d_cw_between(60,300) 
		>> node_370 
	else 
	endif 
	return 
endf 

def node_375 : 215
	if self.angle_2d_cw_between(90,270) 
		>> node_370 
	else 
	endif 
	return 
endf 

def node_376 : 458
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if function#30(2) 
						if self.target.in_combat() 
							random (35) >> node_377 
							elser (0) >> node_378 
							elser (10) >> node_379 
							elser (55) >> node_380 
							endr 
						else 
							random (10) >> node_377 
							elser (35) >> node_378 
							elser (0) >> node_379 
							elser (55) >> node_380 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (35) >> node_377 
							elser (10) >> node_378 
							elser (55) >> node_379 
							elser (0) >> node_380 
							endr 
						else 
							random (35) >> node_377 
							elser (55) >> node_378 
							elser (10) >> node_379 
							elser (0) >> node_380 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_377 : 459
	return 
endf 

def node_378 : 460
	>> node_321 
	>> node_277 
	return 
endf 

def node_379 : 461
	>> node_378 
	if self.flying() 
		if self.distance_2d_to_target().leq(750) 
		else 
		endif 
	else 
		if self.distance_2d_to_target().leq(1500) 
		else 
		endif 
	endif 
	return 
endf 

def node_380 : 462
	self.force_area_change2() 
	return 
endf 

def node_381 : 397
	random (15) 
				self.targetArea(21) @ parameter2:700 
	elser (35) 
				self.targetArea(22) @ parameter2:700 
	elser (15) 
				self.targetArea(21) @ parameter2:700 
	elser (35) 
				self.targetArea(22) @ parameter2:700 
	endr 
	return 
endf 

def node_382 : 535
	random (35) 
				if self.flying() 
					-> velkhana.chance_fly() 
				else 
					-> velkhana.chance() 
				endif 
	elser (65) 
	endr 
	return 
endf 

def node_383 : 536
	if self.flying() 
		-> velkhana.chance_fly() 
	else 
		-> velkhana.chance() 
	endif 
	return 
endf 

def node_384 : 464
	>> node_047 
	-> velkhana.step_back_fly() 
	return 
endf 

def node_385 : 465
	if self.angle_2d_cw_between(15,345) 
		>> node_384 
	else 
	endif 
	return 
endf 

def node_386 : 466
	if self.angle_2d_cw_between(30,330) 
		>> node_384 
	else 
	endif 
	return 
endf 

def node_387 : 467
	if self.angle_2d_cw_between(45,315) 
		>> node_384 
	else 
	endif 
	return 
endf 

def node_388 : 468
	if self.angle_2d_cw_between(90,270) 
		>> node_384 
	else 
	endif 
	return 
endf 

def node_389 : 469
	if self.angle_2d_cw_between(0,180) 
		-> velkhana.quick_turn_fly() 
	else 
		-> velkhana.quick_turn_fly() 
	endif 
	return 
endf 

def node_390 : 470
	if self.angle_2d_cw_between(15,345) 
		>> node_389 
	else 
	endif 
	return 
endf 

def node_391 : 471
	if self.angle_2d_cw_between(30,330) 
		>> node_389 
	else 
	endif 
	return 
endf 

def node_392 : 472
	if self.angle_2d_cw_between(45,315) 
		>> node_389 
	else 
	endif 
	return 
endf 

def node_393 : 473
	if self.angle_2d_cw_between(90,270) 
		>> node_389 
	else 
	endif 
	return 
endf 

def node_394 : 518
	>> node_046 
	>> node_321 
	if self.flying() 
		-> velkhana.chance_fly() 
	else 
		-> velkhana.chance() 
	endif 
	return 
endf 

def node_395 : 519
	>> node_046 
	if self.targetEnemy(target_em.any_monster) 
		random (20) >> node_321 
		elser (80) 
		endr 
	else 
		if self.current_quest().is_rank(rank.AT) 
			self.targetEnemy(48) 
			>> node_321 
		else 
		endif 
	endif 
	random (60) -> velkhana.chance() 
	elser (10) -> velkhana.lost_search() 
	elser (30) -> velkhana.combat_search() 
	endr 
	return 
endf 

def node_396 : 520
	>> node_046 
	>> node_321 
	random (40) -> velkhana.chance() 
	elser (20) -> velkhana.lost_search() 
	elser (40) -> velkhana.combat_search() 
	elser (0) -> velkhana.threat_short() 
	endr 
	return 
endf 

def node_397 : 521
	>> node_046 
	>> node_316 
	-> velkhana.life_search() 
	return 
endf 

def node_398 : 522
	>> node_046 
	self.targetEnemy(58) 
	random (0) >> node_399 
	elser (100) 
	endr 
	self.targetEnemy(22) @ parameter2:2000 
	random (40) >> node_316 
	elser (60) 
	endr 
	random (70) -> velkhana.life_search() 
	elser (30) -> velkhana.marking() 
	endr 
	return 
endf 

def node_399 : 523
	-> velkhana.walk(1,2,0,600,1500) 
	return 
endf 

def node_400 : 524
	-> velkhana.glide_combat(1,2,0,600,2000) 
	return 
endf 

def node_401 : 525
	if self.fatigued() 
		>> node_046 
	else 
	endif 
	return 
endf 

def node_402 : 537
	if self.current_quest().is_rank(rank.AT) 
		>> node_404 
	else 
		>> node_403 
	endif 
	return 
endf 

def node_403 : 894
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5D() 
		>> node_410 
	elif self.target(3) 
		>> node_411 
	elif self.target(4) 
		>> node_411 
	elif self.target(55) 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_414 
		else 
			>> node_415 
		endif 
	elif self.target(14) 
		>> node_416 
	elif self.target(11) 
		>> node_417 
	elif self.target.mudded() 
		>> node_426 
	elif self.target(12) 
	elif self.flying() 
		if self.above_area() 
			>> node_420 
		elif function#11(900) 
			if self.above_area() 
				>> node_420 
			else 
			endif 
		else 
			>> node_420 
		endif 
	elif self.target(52) 
		>> node_419 
	else 
		>> node_408 
	endif 
	return 
endf 

def node_404 : 892
	if function#5D() 
		>> node_410 
	elif self.target(3) 
		>> node_411 
	elif self.target(4) 
		>> node_411 
	elif function#7F(-999) 
		>> node_429 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_414 
		else 
			>> node_415 
		endif 
	elif self.target(14) 
		>> node_416 
	elif self.target(11) 
		>> node_417 
	elif self.target.mudded() 
		>> node_426 
	elif self.target(12) 
	elif self.flying() 
		if self.above_area() 
			>> node_420 
		elif function#11(900) 
			if self.above_area() 
				>> node_420 
			else 
			endif 
		else 
			>> node_420 
		endif 
	elif self.target(52) 
		>> node_419 
	else 
		>> node_408 
	endif 
	return 
endf 

def node_405 : 610
	if self.current_quest().is_rank(rank.AT) 
		>> node_407 
	else 
		>> node_406 
	endif 
	return 
endf 

def node_406 : 895
	if function#5D() 
		>> node_410 
	elif self.target(3) 
		>> node_411 
	elif self.target(4) 
		>> node_411 
	elif self.target(55) 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_414 
		else 
			>> node_415 
		endif 
	elif self.target(14) 
		>> node_416 
	elif self.target(11) 
		>> node_417 
	elif self.target.mudded() 
		>> node_426 
	elif self.flying() 
		return 
	elif self.target(52) 
		>> node_419 
		return 
	else 
		return 
	endif 
	reset 
endf 

def node_407 : 893
	if function#5D() 
		>> node_410 
	elif self.target(3) 
		>> node_411 
	elif self.target(4) 
		>> node_411 
	elif function#7F(-999) 
		>> node_430 
		return 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_414 
		else 
			>> node_415 
		endif 
	elif self.target(14) 
		>> node_416 
	elif self.target(11) 
		>> node_417 
	elif self.target.mudded() 
		>> node_426 
	elif self.flying() 
		return 
	elif self.target(52) 
		>> node_419 
		return 
	else 
		return 
	endif 
	reset 
endf 

def node_408 : 773
	if self.in_map(st.Ancient_Forest).in_area(2) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_419 
		endif 
	elif self.in_map(st.Ancient_Forest).in_area(5) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_419 
		endif 
	elif self.in_map(st.Ancient_Forest).in_area(6) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_419 
		endif 
	elif self.in_map(st.Coral_Highlands).in_area(2) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_419 
		endif 
	elif self.in_map(st.Coral_Highlands).in_area(10) 
		if self.vertical_distance_to_target().leq(400) 
		else 
			>> node_419 
		endif 
	elif self.vertical_distance_to_target().leq(450) 
	else 
		>> node_419 
	endif 
	return 
endf 

def node_409 : 538
	if [RegisterVar4 <= 10] 
		[RegisterVar4 |-] 
	elif [RegisterVar4 <= 1] 
		[RegisterVar4 ++] 
	else 
	endif 
	return 
endf 

def node_410 : 539
	if self.distance_2d_to_target().leq(1500) 
		if self.angle_2d_cw_between(300,60) 
		else 
			function#5E() 
			>> node_269 
		endif 
	else 
		if self.angle_2d_cw_between(300,60) 
			function#5E() 
			>> node_269 
		else 
			function#5E() 
			>> node_270 
		endif 
	endif 
	return 
endf 

def node_411 : 540
	>> node_412 
	>> node_413 
	reset 
endf 

def node_412 : 331
	self.targetArea(19) 
	if self.distance_2d_to_target().leq(900) 
	else 
		if self.flying() 
			>> node_256 
		else 
			>> node_231 
		endif 
	endif 
	return 
endf 

def node_413 : 335
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_046 
	-> velkhana.lost_search() 
	return 
endf 

def node_414 : 541
	if self.flying() 
		>> node_420 
		>> node_425 
	else 
		>> node_425 
		>> node_418 
		if self.distance_2d_to_target().leq(1000) 
			if self.target(0) 
				if self.above_area() 
					-> velkhana.jump_attack_wall_up() 
				else 
					-> velkhana.jump_attack_wall_down() 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_415 : 542
	if self.flying() 
		>> node_420 
		>> node_425 
	else 
		>> node_425 
		>> node_418 
		if self.distance_2d_to_target().leq(1000) 
			if self.target(0) 
				if self.above_area() 
					-> velkhana.jump_attack_wall_up() 
				else 
					self.targetArea(77) 
					-> velkhana.dash(1,2,0,0,1500) 
					self.targetArea(1) 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_416 : 543
	if self.flying() 
		>> node_420 
		>> node_425 
	else 
		>> node_425 
		>> node_418 
		if self.distance_2d_to_target().leq(2000) 
			if self.target(14) 
				if self.above_area() 
					-> velkhana.jump_attack_wall_up() 
				else 
					-> velkhana.jump_attack_wall_down() 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_417 : 544
	if self.flying() 
		>> node_424 
	else 
		>> node_419 
	endif 
	return 
endf 

def node_418 : 545
	if self.distance_2d_to_target().leq(600) 
		if function#11(1500) 
		else 
			-> velkhana.dash(1,2,0,500,1500) 
		endif 
	else 
		-> velkhana.dash(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if function#11(1500) 
		else 
			-> velkhana.dash(1,2,0,500,1500) 
		endif 
	else 
		-> velkhana.dash(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if function#11(1500) 
		else 
			-> velkhana.dash(1,2,0,500,1500) 
		endif 
	else 
		-> velkhana.dash(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_419 : 546
	if self.distance_3d_to_target().leq(400) 
	else 
		-> velkhana.dash(1,2,0,300,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.dash(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.dash(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_420 : 547
	if self.distance_2d_to_target().leq(300) 
		if function#11(1000) 
		else 
			-> velkhana.glide_combat(1,2,0,200,1500) 
		endif 
	else 
		-> velkhana.glide_combat(1,2,0,200,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if function#11(1000) 
		else 
			-> velkhana.glide_combat(1,2,0,500,1500) 
		endif 
	else 
		-> velkhana.glide_combat(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if function#11(1000) 
		else 
			-> velkhana.glide_combat(1,2,0,500,1500) 
		endif 
	else 
		-> velkhana.glide_combat(1,2,0,500,1500) 
	endif 
	>> node_421 
	return 
endf 

def node_421 : 548
	if function#11(500) 
	else 
		if self.above_area() 
			>> node_422 
		else 
			>> node_423 
		endif 
	endif 
	return 
endf 

def node_422 : 549
	>> node_047 
	-> velkhana.short_up_step_fly() 
	return 
endf 

def node_423 : 762
	>> node_047 
	-> velkhana.short_down_step_fly() 
	return 
endf 

def node_424 : 550
	if self.distance_3d_to_target().leq(300) 
	else 
		-> velkhana.glide_direct_move(1,2,0,200,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.glide_direct_move(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> velkhana.glide_direct_move(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_425 : 761
	if self.flying() 
		random (60) >> node_092 
		elser (40) 
		endr 
		>> node_096 
	else 
		if self.target(0) 
		elif self.target(14) 
		else 
			return 
		endif 
		if function#101(4) 
			random (35) >> node_070 
			elser (65) 
			endr 
		else 
		endif 
		if self.target(0) 
		elif self.target(14) 
		else 
			return 
		endif 
		if self.above_area() 
			if self.distance_2d_to_target().leq(1500) 
				-> velkhana.back_turn() 
			elif self.distance_2d_to_target().leq(3000) 
			else 
				-> velkhana.dash(6,2,0,2500,2000) 
			endif 
		else 
		endif 
		if self.target(0) 
		elif self.target(14) 
		else 
			return 
		endif 
		if self.above_area() 
			-> velkhana.vertical_breath() 
		else 
		endif 
	endif 
	return 
endf 

def node_426 : 763
	if self.flying() 
		>> node_096 
	else 
		if function#101(4) 
			random (35) >> node_070 
			elser (65) 
			endr 
		else 
		endif 
		>> node_427 
		>> node_428 
	endif 
	reset 
endf 

def node_427 : 765
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	return 
endf 

def node_428 : 764
	if self.flying() 
		>> node_096 
	else 
		if function#101(2) 
			if self.distance_2d_to_target().leq(1300) 
				random (30) >> node_080 
				elser (10) >> node_084 
				elser (30) >> node_069 
				elser (30) >> node_068 
				endr 
			elif self.distance_2d_to_target().leq(2300) 
				random (25) >> node_080 
				elser (10) >> node_084 
				elser (25) >> node_068 
				elser (40) >> node_066 
				endr 
			else 
				random (75) >> node_080 
				elser (25) >> node_084 
				endr 
			endif 
		elif function#101(1) 
			if self.distance_2d_to_target().leq(1300) 
				random (40) >> node_080 
				elser (20) >> node_084 
				elser (40) >> node_068 
				endr 
			elif self.distance_2d_to_target().leq(1700) 
				random (30) >> node_080 
				elser (10) >> node_084 
				elser (10) >> node_068 
				elser (50) >> node_066 
				endr 
			else 
				random (75) >> node_080 
				elser (25) >> node_084 
				endr 
			endif 
		else 
			if self.distance_2d_to_target().leq(900) 
				random (25) >> node_065 
				elser (15) >> node_058 
				elser (60) >> node_080 
				endr 
			else 
				random (65) >> node_080 
				elser (35) 
							-> velkhana.fly_tail_sting() 
							>> node_093 
							>> node_096 
				endr 
			endif 
		endif 
	endif 
	return 
endf 

def node_429 : 826
	if self.current_quest().is_rank(rank.AT) 
		if function#101(2) 
			if self.flying() 
			else 
				if self.enraged() 
					[RegisterVar7 |-] 
					[RegisterVar7 ++] 
					random (40) >> node_027 
					elser (40) >> node_015 
					elser (20) 
					endr 
				else 
					[RegisterVar7 |-] 
					[RegisterVar7 ++] 
					random (20) >> node_006 
					elser (20) >> node_022 
					elser (40) >> node_027 
					elser (20) 
					endr 
				endif 
			endif 
		else 
			if self.flying() 
			else 
				if self.enraged() 
					[RegisterVar7 |-] 
					[RegisterVar7 ++] 
					random (40) >> node_049 
					elser (40) >> node_022 
					elser (20) 
					endr 
				else 
					[RegisterVar7 |-] 
					[RegisterVar7 ++] 
					random (40) >> node_049 
					elser (40) >> node_022 
					elser (20) 
					endr 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_430 : 827
	if self.current_quest().is_rank(rank.AT) 
		if function#101(2) 
			if self.flying() 
				reset 
			else 
				if self.enraged() 
					random (40) >> node_027 
					elser (40) >> node_015 
					elser (20) 
					endr 
				else 
					random (20) >> node_006 
					elser (20) >> node_022 
					elser (40) >> node_027 
					elser (20) 
					endr 
				endif 
			endif 
		else 
			if self.flying() 
				reset 
			else 
				if self.enraged() 
					random (40) >> node_049 
					elser (40) >> node_022 
					elser (20) 
					endr 
				else 
					random (40) >> node_049 
					elser (40) >> node_022 
					elser (20) 
					endr 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_431 : 772
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Gold_Rathian) 
						>> node_437 
					elif self.target_is(em.Silver_Rathalos) 
						>> node_437 
					elif function#30(2) 
						if self.target.in_combat() 
							random (0) >> node_433 
							elser (0) >> node_434 
							elser (0) >> node_436 
							elser (100) >> node_437 
							endr 
						else 
							random (0) >> node_433 
							elser (0) >> node_434 
							elser (0) >> node_435 
							elser (100) >> node_437 
							endr 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (0) >> node_433 
							elser (0) >> node_434 
							elser (100) >> node_436 
							elser (0) >> node_437 
							endr 
						else 
							random (0) >> node_433 
							elser (70) >> node_434 
							elser (30) >> node_435 
							elser (0) >> node_437 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (0) >> node_433 
							elser (20) >> node_434 
							elser (80) >> node_436 
							elser (0) >> node_437 
							endr 
						else 
							random (0) >> node_433 
							elser (60) >> node_434 
							elser (20) >> node_435 
							elser (20) >> node_437 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	>> node_438 
	return 
endf 

def node_432 : 771
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Gold_Rathian) 
						>> node_437 
					elif self.target_is(em.Silver_Rathalos) 
						>> node_437 
					elif function#30(2) 
						if self.target.in_combat() 
							random (30) >> node_433 
							elser (0) >> node_434 
							elser (0) >> node_435 
							elser (70) >> node_437 
							endr 
						else 
							random (30) >> node_433 
							elser (0) >> node_434 
							elser (0) >> node_435 
							elser (70) >> node_437 
							endr 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (30) >> node_433 
							elser (0) >> node_434 
							elser (70) >> node_435 
							elser (0) >> node_437 
							endr 
						else 
							random (50) >> node_433 
							elser (0) >> node_434 
							elser (50) >> node_435 
							elser (0) >> node_437 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (30) >> node_433 
							elser (20) >> node_434 
							elser (30) >> node_435 
							elser (20) >> node_437 
							endr 
						else 
							random (30) >> node_433 
							elser (20) >> node_434 
							elser (50) >> node_435 
							elser (0) >> node_437 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	>> node_438 
	return 
endf 

def node_433 : 770
	return 
endf 

def node_434 : 766
	self.targetEnemy(target_em.closest_entity) 
	>> node_321 
	if self.in_combat() 
		>> node_277 
	else 
		if self.target.in_combat() 
			>> node_277 
		else 
			>> node_277 
		endif 
	endif 
	return 
endf 

def node_435 : 767
	self.targetEnemy(target_em.closest_entity) 
	if self.flying() 
		>> node_096 
	else 
		>> node_439 
		self.targetEnemy(target_em.closest_entity) 
		if function#101(2) 
			if self.distance_2d_to_target().leq(1500) 
				random (30) >> node_080 
				elser (0) >> node_084 
				elser (35) >> node_069 
				elser (35) >> node_068 
				endr 
			elif self.distance_2d_to_target().leq(2500) 
				random (30) >> node_080 
				elser (0) >> node_084 
				elser (30) >> node_068 
				elser (40) >> node_066 
				endr 
			else 
				random (100) >> node_080 
				elser (0) >> node_084 
				endr 
			endif 
		elif function#101(1) 
			if self.distance_2d_to_target().leq(1000) 
				random (30) >> node_058 
				elser (30) >> node_060 
				elser (20) >> node_080 
				elser (20) >> node_068 
				endr 
			elif self.distance_2d_to_target().leq(1500) 
				random (50) >> node_080 
				elser (0) >> node_084 
				elser (50) >> node_068 
				endr 
			elif self.distance_2d_to_target().leq(2000) 
				random (30) >> node_080 
				elser (0) >> node_084 
				elser (20) >> node_068 
				elser (50) >> node_066 
				endr 
			else 
				random (100) >> node_080 
				elser (0) >> node_084 
				endr 
			endif 
		else 
			if self.distance_2d_to_target().leq(1000) 
				random (25) >> node_058 
				elser (25) >> node_060 
				elser (50) >> node_080 
				endr 
			else 
				>> node_080 
			endif 
		endif 
	endif 
	return 
endf 

def node_436 : 768
	>> node_435 
	>> node_435 
	random (70) 
	elser (30) 
				return 
	endr 
	>> node_435 
	random (70) 
	elser (30) 
				return 
	endr 
	>> node_435 
	return 
endf 

def node_437 : 769
	if self.in_map(st.Special_Arena).in_area(-1) 
		>> node_435 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
		>> node_435 
	else 
		if [RegisterVar6 <= 8] 
			[RegisterVar6 |-] 
			self.force_area_change2() 
		elif [RegisterVar6 <= 5] 
			random (30) 
						[RegisterVar6 |-] 
						self.force_area_change2() 
			elser (70) 
			endr 
		else 
		endif 
		[RegisterVar6 ++] 
		if self.target.in_combat() 
			>> node_435 
			[RegisterVar6 ++] 
		else 
			[RegisterVar6 ++] 
			>> node_434 
		endif 
		self.targetEnemy(target_em.closest_entity) 
		if self.distance_2d_to_target().leq(3000) 
			if self.vertical_distance_to_target().leq(1000) 
				if function#5F() 
					repeat 
				elif self.in_combat() 
				else 
					repeat 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_438 : 774
	if self.defense_downed() 
		if function#31(49,3000) 
			self.targetEnemy(target_em.closest_entity) 
			random (25) >> node_321 
						>> node_277 
			elser (75) 
			endr 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_439 : 775
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_3d_to_target().leq(1000) 
		random (50) >> node_364 
					return 
		elser (50) 
		endr 
	elif self.distance_3d_to_target().leq(2000) 
	elif self.distance_3d_to_target().leq(3000) 
		random (50) 
					return 
		elser (50) 
		endr 
	else 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	self.targetEnemy(target_em.closest_entity) 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> velkhana.dash(1,2,0,1500,1500) 
	endif 
	return 
endf 

