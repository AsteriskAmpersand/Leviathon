importactions Boaboa as boaboa

def node_000
endf 

def node_001
	random (33) 
				self.targetEnemy(21) @ parameter2:500 
	elser (25) 
				self.targetEnemy(22) @ parameter2:500 
	elser (18) 
				self.targetEnemy(11) @ parameter2:500 
	elser (24) 
				self.targetEnemy(12) @ parameter2:500 
	endr 
	return 
endf 

def node_002
	if function#51(0,1500) 
		if self.distance_3d_to_target().leq(300) 
			>> node_024 => reset 
		elif self.distance_3d_to_target().leq(1500) 
			>> node_019 
			>> node_031 => reset 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_003
	if self.targetEnemy(33) 
		if self.distance_3d_to_target().leq(3500) 
			if self.distance_3d_to_target().leq(1000) 
				>> node_024 => reset 
			else 
				>> node_054 => reset 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_004
	[RegisterVar1 ++] 
	if self.target(20) 
		if function#3A() 
			[RegisterVar1 |-] 
		elif self.target(4) 
			[RegisterVar1 |-] 
		elif self.target(7) 
			[RegisterVar1 |-] 
		elif self.target(10) 
			[RegisterVar1 |-] 
		elif self.target(11) 
			[RegisterVar1 |-] 
		elif self.target(12) 
			*&
		elif self.target(14) 
			[RegisterVar1 |-] 
		elif self.target(0) 
			*&
		else 
			[RegisterVar1 ++] 
		endif 
	else 
		[RegisterVar1 |-] 
	endif 
	if [RegisterVar1 -= 1] 
		if self.distance_3d_to_target().leq(1000) 
			>> node_024 => reset 
		else 
			>> node_054 => reset 
		endif 
	else 
	endif 
	return 
endf 

def node_005
	self.targetEnemy(target_em.any_monster) 
	if self.target.helpless_0() 
		>> node_027 
	else 
	endif 
	return 
endf 

def node_006
endf 

def node_007
	>> node_038 
	-> action#08(2,1,0,1000,300) 
	return 
endf 

def node_008
	>> node_038 
	-> action#08(2,1,0,2000,300) 
	return 
endf 

def node_009
	>> node_038 
	-> action#08(2,1,0,3000,300) 
	return 
endf 

def node_010
	>> node_038 
	-> action#09(2,1,0,1000,200) 
	return 
endf 

def node_011
	>> node_038 
	-> action#09(2,1,0,2000,200) 
	return 
endf 

def node_012
	>> node_038 
	-> action#09(2,1,0,3000,200) 
	return 
endf 

def node_013
	>> node_038 
	-> action#0A(2,1,0,1000,300) 
	return 
endf 

def node_014
	>> node_038 
	-> action#0A(2,1,0,2000,400) 
	return 
endf 

def node_015
	>> node_038 
	-> action#0A(2,1,0,5000,500) 
	return 
endf 

def node_016
	>> node_038 
	if self.angle_2d_cw_between(10,350) 
		-> action#0B() 
	else 
	endif 
	return 
endf 

def node_017
	>> node_038 
	if self.angle_2d_cw_between(45,315) 
		-> action#0B() 
	else 
	endif 
	return 
endf 

def node_018
	>> node_038 
	if self.angle_2d_cw_between(90,270) 
		-> action#0B() 
	else 
	endif 
	return 
endf 

def node_019
	>> node_038 
	if self.angle_2d_cw_between(20,340) 
		-> action#0C() 
	else 
	endif 
	return 
endf 

def node_020
	>> node_038 
	if self.angle_2d_cw_between(45,315) 
		-> action#0C() 
	else 
	endif 
	return 
endf 

def node_021
	>> node_038 
	if self.angle_2d_cw_between(90,270) 
		-> action#0C() 
	else 
	endif 
	return 
endf 

def node_022
	>> node_038 
	if self.angle_2d_cw_between(60,300) 
		-> action#0C() 
	else 
	endif 
	return 
endf 

def node_023
	>> node_038 
	>> node_021 
	-> action#0D() 
	return 
endf 

def node_024
	>> node_038 
	>> node_021 
	-> action#0E() 
	return 
endf 

def node_025
	>> node_038 
	>> node_021 
	-> action#0F() 
	return 
endf 

def node_026
	>> node_038 
	>> node_021 
	-> action#10() 
	return 
endf 

def node_027
	self.targetEnemy(target_em.any_monster) 
	>> node_038 
	if self.distance_2d_to_target().leq(2100) 
		if function#F8() 
			>> node_029 
		else 
			>> node_041 
		endif 
	elif self.distance_2d_to_target().leq(3500) 
		-> action#0A(2,1,0,3500,2000) 
		if self.in_combat() 
			if function#F8() 
				>> node_029 
			else 
				>> node_041 
			endif 
		else 
		endif 
	elif self.distance_2d_to_target().leq(5000) 
		-> action#0A(2,6,0,5000,2000) 
		if self.in_combat() 
			if function#F8() 
				>> node_029 
			else 
				>> node_041 
			endif 
		else 
		endif 
	else 
		-> action#0A(2,6,0,5000,2000) 
		if self.in_combat() 
			if function#F8() 
				>> node_029 
			else 
				>> node_041 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_028
endf 

def node_029
	>> node_038 
	-> action#11() 
	return 
endf 

def node_030
	>> node_038 
	-> action#12() 
	return 
endf 

def node_031
	>> node_038 
	-> action#16() 
	return 
endf 

def node_032
	>> node_038 
	-> action#19() 
	return 
endf 

def node_033
	>> node_038 
	-> action#15() 
	return 
endf 

def node_034
	>> node_038 
	-> action#1A() 
	return 
endf 

def node_035
	if function#3F() 
		-> action#26() 
	else 
		-> action#24() 
	endif 
	return 
endf 

def node_036
	if function#3F() 
	else 
		-> action#24() 
	endif 
	return 
endf 

def node_037
	if function#3F() 
		-> action#26() 
	else 
		-> action#24() 
	endif 
	return 
endf 

def node_038
	if function#3F() 
		-> action#25() 
	else 
	endif 
	return 
endf 

def node_039
	>> node_038 
	-> action#17() 
	return 
endf 

def node_040
	>> node_038 
	-> action#18() 
	return 
endf 

def node_041
	>> node_038 
	if function#F8() 
		>> node_054 
	else 
		if self.in_combat() 
			if [RegisterVar2 -= 2] 
				-> action#3E() 
				[RegisterVar2 ++] 
				-> action#3F() 
			else 
				[RegisterVar2 |-] 
				-> action#3D() 
			endif 
		else 
			if [RegisterVar2 -= 7] 
				-> action#3E() 
				[RegisterVar2 ++] 
				-> action#3F() 
			else 
				[RegisterVar2 |-] 
				-> action#3D() 
			endif 
		endif 
	endif 
	return 
endf 

def node_042
	>> node_038 
	if [RegisterVar3 -= 2] 
		[RegisterVar3 ++] 
		>> node_041 
	else 
		[RegisterVar3 |-] 
		>> node_054 
	endif 
	return 
endf 

def node_043
endf 

def node_044
	if function#63() 
		-> action#5A() 
	else 
		if function#10D() 
			-> action#5B() 
		else 
			-> action#5C() 
		endif 
	endif 
	return 
endf 

def node_045
	if function#63() 
		-> action#5D() 
	else 
		if function#10D() 
			-> action#60() 
		elif function#10D(0,1) 
			-> action#61() 
		elif function#10D(0,2) 
			-> action#62() 
		else @ parameter2:3 
			-> action#63() 
		endif 
	endif 
	return 
endf 

def node_046
	if function#63() 
		-> action#64() 
	else 
		if function#10D() 
			-> action#65() 
		else 
			-> action#66() 
		endif 
	endif 
	return 
endf 

def node_047
	if function#63() 
		-> action#6F() 
	else 
		if function#10D() 
			-> action#70() 
		else 
			-> action#71() 
		endif 
	endif 
	return 
endf 

def node_048
	if function#63() 
		-> action#75() 
	else 
		if function#10D() 
			-> action#76() 
		else 
			-> action#77() 
		endif 
	endif 
	return 
endf 

def node_049
endf 

def node_050
	>> node_038 
	>> node_017 
	-> action#13() 
	return 
endf 

def node_051
	>> node_038 
	-> action#02() 
	return 
endf 

def node_052
	>> node_038 
	-> action#03() 
	return 
endf 

def node_053
	>> node_038 
	-> action#04() 
	return 
endf 

def node_054
	>> node_038 
	>> node_017 
	-> action#14() 
	return 
endf 

def node_055
	>> node_038 
	>> node_019 
	-> action#1D() 
	return 
endf 

def node_056
	>> node_038 
	>> node_022 
	random (50) 
				-> action#4D() 
	elser (25) 
				-> action#4E() 
	elser (25) 
				-> action#4F() 
	endr 
	return 
endf 

def node_057
	>> node_038 
	>> node_022 
	-> action#1E() 
	return 
endf 

def node_058
	>> node_038 
	>> node_019 
	-> action#20() 
	return 
endf 

def node_059
	>> node_038 
	>> node_054 
	>> node_019 
	-> action#20() 
	return 
endf 

def node_060
	>> node_038 
	>> node_019 
	-> action#1C() 
	return 
endf 

def node_061
	>> node_038 
	>> node_022 
	-> action#7E() 
	-> action#7F() 
	return 
endf 

def node_062
	>> node_038 
	>> node_019 
	-> action#7D() 
	return 
endf 

def node_063
endf 

def node_064
	random (35) 
				-> action#4D() 
	elser (35) 
				-> action#4E() 
	elser (30) 
				-> action#4F() 
	endr 
	return 
endf 

def node_065
	-> action#51() 
	return 
endf 

def node_066
	if function#10E(22) 
		*&
	else 
		return 
	endif 
	if function#10E(5) 
		return 
	else 
		*&
	endif 
	if function#10C(4) 
		*&
	else 
		return 
	endif 
	if function#10E(23) 
		if function#10E(11) 
			if function#10E(12) 
				if function#B0(8) 
					>> node_035 
					repeat 
				else 
					*&
				endif 
			else 
				if function#B0(8) 
					*&
				else 
					function#54() 
					function#52(0,5) 
					self.targetEnemy(16) 
					if self.distance_3d_recalc_to_target().leq(5500) 
						>> node_035 
						repeat 
					else 
						*&
					endif 
				endif 
				return 
			endif 
		else 
			if function#B0(8) 
				if [RegisterVar9 += 0] 
					>> node_019 
					>> node_033 
					>> node_019 
					>> node_033 
					>> node_019 
					>> node_033 
					>> node_019 
					>> node_033 
					>> node_019 
					>> node_033 
					>> node_019 
					>> node_033 
					[RegisterVar9 ++] 
					[RegisterVar9 |-] 
				else 
					>> node_035 
				endif 
				repeat 
			else 
			endif 
		endif 
	else 
		if function#B0(8) 
			*&
		else 
			>> node_035 
			repeat 
		endif 
	endif 
	return 
endf 

