importactions Boaboa as boaboa
importlibrary Global as Global

def node_000
	>> node_001 
	if function#B0(8) 
		>> node_030 
		>> node_171 
		>> node_031 
	elif function#B0(9) 
		>> node_030 
		>> node_119 
	elif function#B0(13) 
		>> node_030 
		>> node_119 
	else 
		>> Global.node_002 
		function#54() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_005 
	endif 
	reset 
endf 

def node_001
	if function#10E(22) 
		if function#10E(5) 
			*&
		else 
			if function#10C(4) 
				if function#10E(23) 
					if function#10E(11) 
						if function#10E(12) 
							if function#B0(8) 
								>> node_194 
								repeat 
							else 
								*&
							endif 
						else 
							if function#B0(8) 
								*&
							else 
								function#54() 
								function#52(0,5) 
								self.targetEnemy(16) 
								if self.distance_3d_recalc_to_target().leq(5500) 
									>> node_194 
									repeat 
								else 
								endif 
							endif 
							return 
						endif 
					else 
						if function#B0(8) 
							if [RegisterVar9 %= 5] 
								>> node_225 
								>> node_188 
								>> node_199 
								[RegisterVar9 |-] 
							else 
								>> node_194 
							endif 
							repeat 
						else 
						endif 
					endif 
				else 
					if function#B0(8) 
						*&
					else 
						>> node_194 
						repeat 
					endif 
				endif 
			else 
				*&
			endif 
		endif 
	else 
		*&
	endif 
	return 
endf 

def node_002
	if function#B0(8) 
		>> node_194 
	else 
		*&
	endif 
	return 
endf 

def node_003
	if function#B0(8) 
		*&
	else 
		>> node_194 
	endif 
	return 
endf 

def node_004
endf 

def node_005
	function#52(0,4) 
	self.targetEnemy(16) 
	if self.distance_2d_to_target().leq(1000) 
	else 
		>> node_028 
	endif 
	if function#B0() 
		>> node_007 
	elif function#B0(1) 
		>> node_008 
	elif function#B0(2) 
		>> node_009 
	elif function#B0(3) 
		>> node_010 
	elif function#B0(4) 
		>> node_011 
	elif function#B0(5) 
		>> node_012 
	elif function#B0(6) 
		>> node_013 
	elif function#B0(7) 
		>> node_014 
	elif function#B0(8) 
		>> node_031 
	elif function#B0(9) 
		>> node_119 
	elif function#B0(12) 
		>> node_015 
	else 
		>> node_007 
	endif 
	return 
endf 

def node_006
	if self.targetEnemy(target_em.any_monster) 
		if self.distance_2d_to_target().leq(6000) 
			if function#B0(12) 
				>> node_016 
			else 
				>> node_018 
			endif 
		else 
			if function#B0(12) 
				>> node_017 
			else 
				>> node_019 
			endif 
		endif 
	else 
		if function#B0(12) 
			>> node_017 
		else 
			>> node_019 
		endif 
	endif 
	return 
endf 

def node_007
	>> Global.node_001 
	>> Global.node_017 
	random (40) >> Global.node_007 
	elser (10) >> Global.node_010 
	elser (50) 
	endr 
	random (25) >> Global.node_029 
	elser (15) >> node_024 
	elser (35) >> node_027 
	elser (25) >> Global.node_030 
	endr 
	return 
endf 

def node_008
	>> node_007 
	return 
endf 

def node_009
	>> node_007 
	return 
endf 

def node_010
	>> node_007 
	return 
endf 

def node_011
	>> Global.node_001 
	>> Global.node_017 
	random (50) >> Global.node_007 
	elser (30) >> Global.node_010 
	elser (20) 
	endr 
	random (45) >> Global.node_029 
	elser (0) >> node_024 
	elser (10) >> node_027 
	elser (45) >> Global.node_030 
	endr 
	return 
endf 

def node_012
	>> node_011 
	return 
endf 

def node_013
	>> node_011 
	return 
endf 

def node_014
	>> node_011 
	return 
endf 

def node_015
	>> Global.node_001 
	>> Global.node_017 
	random (30) >> Global.node_007 
	elser (60) >> Global.node_010 
	elser (10) 
	endr 
	random (10) >> Global.node_029 
	elser (40) >> node_024 
	elser (40) >> node_027 
	elser (10) >> Global.node_030 
	endr 
	return 
endf 

def node_016
	>> Global.node_001 
	>> Global.node_017 
	random (20) >> Global.node_029 
	elser (0) >> node_023 
	elser (20) >> node_024 
	elser (10) 
				if function#10A(4) 
					>> node_024 
				else 
					>> Global.node_041 
				endif 
	elser (10) >> Global.node_030 
	elser (40) >> Global.node_027 
	endr 
	return 
endf 

def node_017
	>> Global.node_001 
	>> Global.node_017 
	random (10) >> Global.node_029 
	elser (0) >> node_023 
	elser (25) >> node_024 
	elser (15) 
				if function#10A(4) 
					>> node_024 
				else 
					>> Global.node_041 
				endif 
	elser (15) >> Global.node_030 
	elser (35) >> Global.node_007 
	endr 
	return 
endf 

def node_018
	>> Global.node_001 
	>> Global.node_017 
	random (20) >> Global.node_029 
	elser (0) >> node_023 
	elser (20) >> node_024 
	elser (10) 
				if function#10A(4) 
					>> node_024 
				else 
					>> Global.node_041 
				endif 
	elser (10) >> Global.node_030 
	elser (40) >> Global.node_027 
	endr 
	return 
endf 

def node_019
	>> Global.node_001 
	>> Global.node_017 
	random (10) >> Global.node_029 
	elser (0) >> node_023 
	elser (25) >> node_024 
	elser (15) 
				if function#10A(4) 
					>> node_024 
				else 
					>> Global.node_041 
				endif 
	elser (15) >> Global.node_030 
	elser (35) >> Global.node_007 
	endr 
	return 
endf 

def node_020
endf 

def node_021
	self.targetEnemy(48) 
	>> Global.node_017 
	>> Global.node_029 
	return 
endf 

def node_022
	>> Global.node_001 
	>> Global.node_017 
	>> Global.node_029 
	return 
endf 

def node_023
	>> Global.node_039 
	return 
endf 

def node_024
	>> Global.node_040 
	return 
endf 

def node_025
	>> Global.node_001 
	>> Global.node_017 
	-> action#1E() 
	return 
endf 

def node_026
	>> Global.node_001 
	>> Global.node_017 
	-> action#20() 
	return 
endf 

def node_027
	>> Global.node_038 
	-> action#3D() 
	return 
endf 

def node_028
	>> Global.node_038 
	function#54() 
	function#52(0,4) 
	self.targetEnemy(16) 
	-> action#09(2,1,0,1000,400) 
	function#54() 
	return 
endf 

def node_029
endf 

def node_030
	if function#10E(7) 
		*&
	else 
		>> node_194 
		repeat 
	endif 
	return 
endf 

def node_031
	if self.quest_id(1224) 
		>> node_086 
	else 
		>> node_070 
		>> node_033 
	endif 
	return 
endf 

def node_032
endf 

def node_033
	if function#10E(11) 
		>> node_069 
	else 
		>> node_039 
	endif 
	return 
endf 

def node_034
	if function#10E(11) 
		*&
	else 
		return 
	endif 
	if [RegisterVar12 += 0] 
		>> node_035 
		>> node_073 
		>> node_036 
		if function#63() 
			>> node_076 
			[RegisterVar12 ++] 
			[RegisterVar12 |-] 
		else 
			if function#10E() 
				>> node_076 
				[RegisterVar12 ++] 
				[RegisterVar12 |-] 
			elif function#10E(0,1) 
				>> node_076 
				[RegisterVar12 ++] 
				[RegisterVar12 |-] 
			elif function#10E(0,2) 
				>> node_077 
			else 
				>> node_077 
			endif 
		endif 
	else 
		*&
	endif 
	>> node_069 
	return 
endf 

def node_035
	>> node_194 
	function#BE() 
	>> node_195 
	return 
endf 

def node_036
	if function#63() 
		>> node_076 
		>> node_037 
	else 
		if function#10E() 
			>> node_076 
			>> node_037 
		elif function#10E(0,1) 
			>> node_076 
			>> node_037 
		elif function#10E(0,2) 
			>> node_077 
		else 
			>> node_077 
		endif 
	endif 
	return 
endf 

def node_037
	[RegisterVar12 ++] 
	[RegisterVar12 |-] 
	return 
endf 

def node_038
endf 

def node_039
	>> node_045 
	>> node_048 
	>> node_225 
	>> node_070 
	>> node_049 
	>> node_059 
	if self.target(4) 
		>> node_194 
		function#10E(6) 
		return 
	else 
		*&
	endif 
	>> node_040 
	return 
endf 

def node_040
	if function#10D(11,1000) 
		>> node_041 
	else 
		>> node_044 
	endif 
	return 
endf 

def node_041
	if function#10E(21) 
		>> node_042 
	else 
		>> node_043 
	endif 
	return 
endf 

def node_042
	>> node_052 
	>> node_053 
	if [RegisterVar18 += 0] 
		>> node_051 
	else 
		>> node_061 
	endif 
	return 
endf 

def node_043
	>> node_052 
	>> node_053 
	if [RegisterVar18 += 0] 
		>> node_051 
	else 
		>> node_061 
	endif 
	return 
endf 

def node_044
	if [RegisterVar18 += 0] 
		>> node_055 
	else 
		>> node_061 
	endif 
	return 
endf 

def node_045
	>> node_046 
	if function#10E(8,100) 
		*&
	else 
		if function#10E(17) 
			*&
		elif function#10E(13) 
			if function#63() 
				>> node_194 
				repeat 
			else 
				if function#10E() 
					*&
				elif function#10E(0,1) 
					*&
				elif function#10E(0,2) 
					*&
				elif function#10E(0,3) 
					*&
				else 
					>> node_194 
					repeat 
				endif 
			endif 
		else 
			if function#63() 
				>> node_194 
				repeat 
			else 
				if function#10E() 
					*&
				elif function#10E(0,1) 
					*&
				else 
					>> node_194 
					repeat 
				endif 
			endif 
		endif 
	endif 
	return 
endf 

def node_046
	if [RegisterVar10 += 0] 
		>> node_047 
		[RegisterVar10 ++] 
		[RegisterVar10 |-] 
	else 
		*&
	endif 
	return 
endf 

def node_047
	if function#63() 
		*&
	else 
		if function#10D(5,800) 
			*&
		else 
			>> node_226 
			>> node_216 
			repeat 
		endif 
	endif 
	return 
endf 

def node_048
	if function#10E(11) 
		>> node_194 
		reset 
	else 
		*&
	endif 
	return 
endf 

def node_049
	if function#63() 
		*&
	else 
		if function#10E() 
			>> node_050 
		elif function#10E(0,1) 
			>> node_050 
		else 
			*&
		endif 
	endif 
	return 
endf 

def node_050
	if [RegisterVar17 += 0] 
		>> node_225 
		if self.target(4) 
			if self.distance_3d_recalc_to_target().leq(5000) 
				>> node_195 
				>> node_188 
				>> node_203 
			else 
				>> node_194 
				if function#10E() 
					function#54() 
					function#105(0,37) 
				else 
					function#54() 
					function#105(0,38) 
				endif 
				function#10E(6) 
			endif 
		else 
			if self.distance_3d_recalc_to_target().leq(4000) 
				>> node_195 
				>> node_188 
				>> node_203 
				>> node_188 
				>> node_203 
				>> node_188 
				>> node_203 
			elif self.distance_3d_recalc_to_target().leq(8000) 
				>> node_195 
				>> node_216 
				repeat 
			else 
				function#10E(6) 
				>> node_194 
				repeat 
			endif 
			[RegisterVar17 ++] 
			[RegisterVar17 |-] 
		endif 
		repeat 
	else 
		*&
	endif 
	return 
endf 

def node_051
	function#10E(18,1000) 
	if self.distance_3d_recalc_to_target().leq(200) 
		>> node_057 
	elif self.distance_3d_recalc_to_target().leq(500) 
		-> action#0A(2,1,0,300,100) 
		>> node_057 
	elif self.distance_3d_recalc_to_target().leq(800) 
		-> action#0A(2,1,0,600,100) 
		>> node_057 
	elif self.distance_3d_recalc_to_target().leq(1000) 
		-> action#0A(2,1,0,800,100) 
		>> node_057 
	elif self.distance_3d_recalc_to_target().leq(1200) 
		-> action#0A(2,1,0,1000,100) 
		>> node_057 
	elif self.distance_3d_recalc_to_target().leq(1500) 
		-> action#0A(2,1,0,1300,100) 
		>> node_057 
	else 
		>> node_054 
	endif 
	return 
endf 

def node_052
	>> node_034 
	function#54() 
	self.targetEnemy(target_em.any_monster) 
	if self.target(13) 
		if [RegisterVar18 += 0] 
			>> node_051 
		else 
			>> node_061 
		endif 
	else 
	endif 
	return 
endf 

def node_053
	>> node_034 
	function#54() 
	self.targetEnemy(target_em.any_monster) 
	if self.distance_3d_recalc_to_target().leq(800) 
		-> action#0E() 
		function#54() 
		self.targetArea(10) @ parameter2:1000 
		-> action#0A(2,3,0,1000,5) 
		>> node_225 
		>> node_188 
		>> node_208 
	else 
		*&
	endif 
	return 
endf 

def node_054
	>> node_034 
	>> node_059 
	>> node_225 
	if self.distance_3d_recalc_to_target().leq(1500) 
		>> node_067 
		>> node_188 
		>> node_208 
	elif self.distance_3d_recalc_to_target().leq(5000) 
		>> node_216 
	else 
		>> node_062 
	endif 
	return 
endf 

def node_055
	>> node_225 
	if self.distance_3d_recalc_to_target().leq(1000) 
		>> node_063 
	elif self.distance_3d_recalc_to_target().leq(1500) 
		>> node_188 
		if self.distance_3d_recalc_to_target().leq(1000) 
			>> node_063 
		else 
			>> node_067 
			if self.distance_3d_recalc_to_target().leq(1000) 
				>> node_063 
			else 
				>> node_225 
				>> node_188 
				if self.distance_3d_recalc_to_target().leq(1000) 
					>> node_063 
				else 
					-> action#6F() 
				endif 
			endif 
		endif 
		>> node_188 
	elif self.distance_3d_recalc_to_target().leq(8000) 
		>> node_225 
		>> node_216 
	else 
		>> node_194 
		function#10E(6) 
		>> node_062 
	endif 
	return 
endf 

def node_056
	>> node_225 
	if self.distance_3d_recalc_to_target().leq(1000) 
		>> node_063 
	elif self.distance_3d_recalc_to_target().leq(5000) 
		>> node_188 
		>> node_067 
		if self.distance_3d_recalc_to_target().leq(1000) 
			>> node_063 
		else 
			>> node_225 
			-> action#6F() 
		endif 
		>> node_188 
	else 
		>> node_194 
		function#10E(6) 
		>> node_062 
	endif 
	return 
endf 

def node_057
	>> node_034 
	function#54() 
	self.targetEnemy(target_em.any_monster) 
	if self.distance_3d_recalc_to_target().leq(800) 
		-> action#0E() 
		function#54() 
		self.targetArea(10) @ parameter2:1000 
		-> action#0A(2,3,0,1000,5) 
		>> node_225 
		>> node_188 
		>> node_058 
	else 
		>> node_225 
		>> node_188 
		>> node_058 
	endif 
	return 
endf 

def node_058
	if self.distance_3d_recalc_to_target().leq(1000) 
		random (50) 
					>> Global.node_024 
		elser (50) 
					function#54() 
					self.targetArea(10) @ parameter2:1000 
					-> action#0A(2,3,0,1000,5) 
		endr 
	else 
		if function#106() 
			-> action#16() 
		elif function#106(1) 
			-> action#16() 
		elif function#106(2) 
			-> action#6F() 
		elif function#106(3) 
			-> action#6F() 
		else 
			>> node_208 
		endif 
	endif 
	return 
endf 

def node_059
	if function#10E(10) 
		>> node_060 
	else 
		*&
	endif 
	return 
endf 

def node_060
	if function#3F() 
	else 
		>> node_225 
		>> node_188 
		>> node_199 
	endif 
	return 
endf 

def node_061
	if function#3F() 
	else 
		>> node_059 
	endif 
	if self.distance_3d_recalc_to_target().leq(1000) 
		if [RegisterVar14 += 0] 
			>> node_194 
			function#10E(14) 
			[RegisterVar14 |-] 
		else 
			>> node_194 
		endif 
	elif self.distance_3d_recalc_to_target().leq(1500) 
		if [RegisterVar14 += 0] 
			>> node_194 
			function#10E(14) 
			[RegisterVar14 |-] 
		else 
			>> node_194 
		endif 
		>> node_194 
	elif self.distance_3d_recalc_to_target().leq(6000) 
		if function#3F() 
			>> node_195 
			function#10E(14) 
		else 
			>> node_211 
		endif 
		[RegisterVar14 ++] 
		[RegisterVar18 ++] 
	else 
		>> node_062 
	endif 
	return 
endf 

def node_062
	>> node_034 
	if function#10D(2,3000) 
		>> node_195 
		if [RegisterVar18 += 0] 
			*&
		else 
			function#10E(14) 
			[RegisterVar14 ++] 
			[RegisterVar18 ++] 
		endif 
		>> node_211 
	else 
		>> node_194 
		function#10E(6) 
		>> node_195 
	endif 
	return 
endf 

def node_063
	-> action#0E() 
	function#54() 
	self.targetArea(10) @ parameter2:1000 
	>> node_064 
	>> node_225 
	>> node_188 
	[RegisterVar18 |-] 
	[RegisterVar18 |-] 
	[RegisterVar18 |-] 
	return 
endf 

def node_064
	-> action#0A(2,3,0,1000,7) 
	return 
endf 

def node_065
	[RegisterVar18 |-] 
	[RegisterVar18 |-] 
	[RegisterVar18 |-] 
	return 
endf 

def node_066
	if [RegisterVar18 += 0] 
		*&
	else 
		function#10E(14) 
		[RegisterVar18 ++] 
	endif 
	return 
endf 

def node_067
	if function#3F() 
		-> action#25() 
	else 
	endif 
	if self.angle_2d_cw_between(90,270) 
		-> action#0C() 
	else 
	endif 
	random (20) 
				-> action#10() 
	elser (20) 
				-> action#0F() 
	elser (20) 
				-> action#0E() 
	elser (40) 
				*&
	endr 
	return 
endf 

def node_068
endf 

def node_069
	>> node_072 
	>> node_075 
	>> node_070 
	>> node_195 
	>> node_078 
	return 
endf 

def node_070
	if function#10E(12) 
		if self.quest_id(1224) 
			>> node_086 
		else 
			>> node_194 
			repeat 
		endif 
	else 
		*&
	endif 
	return 
endf 

def node_071
	if function#10E(12) 
		>> node_194 
		repeat 
	else 
		*&
	endif 
	return 
endf 

def node_072
	if [RegisterVar12 += 0] 
		>> node_194 
		function#BE() 
		>> node_195 
		>> node_073 
	else 
		*&
	endif 
	return 
endf 

def node_073
	if [RegisterVar5 += 0] 
		if function#63() 
			function#105(0,17) 
		else 
			if function#10E() 
				function#105(0,16) 
			elif function#10E(0,1) 
				function#105(0,18) 
			elif function#10E(0,2) 
				function#105(0,20) 
			else 
				function#105(0,21) 
			endif 
		endif 
		>> node_074 
	else 
		*&
	endif 
	return 
endf 

def node_074
	if self.distance_3d_recalc_to_target().leq(200) 
		>> node_225 
		>> Global.node_017 
	elif self.distance_3d_recalc_to_target().leq(500) 
		>> node_217 
		repeat 
	else 
		>> node_215 
		repeat 
	endif 
	return 
endf 

def node_075
	[RegisterVar12 ++] 
	[RegisterVar12 |-] 
	if function#63() 
		>> node_076 
	else 
		if function#10E() 
			>> node_076 
		elif function#10E(0,1) 
			>> node_076 
		elif function#10E(0,2) 
			>> node_077 
			repeat 
		else 
			>> node_077 
			repeat 
		endif 
	endif 
	return 
endf 

def node_076
	if function#10E(7) 
		*&
	else 
		>> node_194 
		reset 
	endif 
	if [RegisterVar5 += 0] 
		if function#10D(10,1500) 
			>> node_204 
			[RegisterVar5 ++] 
			[RegisterVar5 |-] 
			function#107(5) 
		else 
			>> node_225 
			>> node_188 
			>> node_187 
			repeat 
		endif 
	else 
		*&
	endif 
	return 
endf 

def node_077
	if function#10E(7) 
		*&
	else 
		>> node_194 
		reset 
	endif 
	>> node_071 
	>> node_225 
	if self.distance_3d_recalc_to_target().leq(3000) 
		function#54() 
		function#105(0,23) 
		>> node_188 
		>> node_204 
	else 
		>> node_188 
		>> node_206 
		repeat 
	endif 
	return 
endf 

def node_078
	if function#63() 
		>> node_079 
	else 
		if function#10E() 
			>> node_080 
		else 
			>> node_080 
		endif 
	endif 
	return 
endf 

def node_079
	if function#10E(7) 
		*&
	else 
		>> node_194 
		reset 
	endif 
	>> node_071 
	if function#10D(10,3000) 
		function#54() 
		function#105(0,22) 
		if self.distance_3d_recalc_to_target().leq(200) 
			function#54() 
			function#105(0,23) 
			>> node_188 
			>> node_204 
			function#107(5) 
		elif self.distance_3d_recalc_to_target().leq(1000) 
			>> node_218 
			function#107(5) 
			repeat 
		else 
			>> node_216 
			function#107(5) 
			repeat 
		endif 
	else 
		>> node_225 
		>> node_188 
		>> node_204 
		repeat 
	endif 
	return 
endf 

def node_080
	if function#10E(7) 
		*&
	else 
		>> node_194 
		reset 
	endif 
	>> node_071 
	>> node_226 
	if self.distance_3d_recalc_to_target().leq(200) 
		function#54() 
		function#105(0,22) 
		if self.distance_3d_recalc_to_target().leq(800) 
			if function#10E() 
				if [RegisterVar16 += 0] 
					>> node_225 
					>> node_188 
					>> Global.node_026 
					[RegisterVar16 ++] 
					[RegisterVar16 |-] 
				else 
					>> node_225 
					>> node_188 
					>> node_204 
				endif 
			else 
				>> node_225 
				>> node_188 
				>> node_204 
			endif 
		else 
			>> node_225 
			>> node_188 
			>> node_204 
		endif 
		repeat 
	elif self.distance_3d_recalc_to_target().leq(400) 
		if [RegisterVar16 += 0] 
			>> node_218 
		else 
			>> node_225 
			>> node_188 
			>> node_204 
		endif 
		repeat 
	elif self.distance_3d_recalc_to_target().leq(800) 
		if [RegisterVar16 += 0] 
			>> node_214 
		else 
			>> node_225 
			>> node_188 
			>> node_204 
		endif 
		repeat 
	else 
		if [RegisterVar16 += 0] 
			>> node_216 
		else 
			>> node_225 
			>> node_188 
			>> node_204 
		endif 
		repeat 
	endif 
	return 
endf 

def node_081
	function#54() 
	function#52(0,5) 
	self.targetEnemy(16) 
	return 
endf 

def node_082
	-> action#0A(2,1,0,1500,200) 
	return 
endf 

def node_083
	if function#10D(10,2000) 
		>> node_084 
		function#107(5) 
	else 
		>> node_225 
		>> node_188 
		>> node_211 
		[RegisterVar11 |-] 
		[RegisterVar11 |-] 
		[RegisterVar11 |-] 
		repeat 
	endif 
	return 
endf 

def node_084
	if [RegisterVar11 += 0] 
		*&
	else 
		>> node_204 
		[RegisterVar11 ++] 
	endif 
	return 
endf 

def node_085
endf 

def node_086
	>> node_098 
	>> node_087 
	>> node_092 
	>> node_093 
	>> node_094 
	>> node_095 
	return 
endf 

def node_087
	if [RegisterVar16 += 0] 
		>> node_225 
		>> node_188 
		if self.target(4) 
			>> node_089 
			repeat 
		else 
			if function#63() 
				>> node_187 
				>> node_187 
				function#10E(15) 
			else 
			endif 
			>> node_204 
		endif 
		[RegisterVar16 ++] 
		[RegisterVar16 |-] 
	else 
		*&
	endif 
	return 
endf 

def node_088
	if [RegisterVar17 += 0] 
		function#10E(15) 
		[RegisterVar17 ++] 
		[RegisterVar17 |-] 
	else 
		*&
	endif 
	return 
endf 

def node_089
	if function#63() 
		>> node_225 
		>> node_203 
	else 
		if function#10E() 
			>> node_091 
		elif function#10E(0,1) 
			>> node_090 
		elif function#10E(0,2) 
			>> node_091 
		elif function#10E(0,3) 
			>> node_090 
		else 
			>> node_225 
			>> node_203 
		endif 
	endif 
	return 
endf 

def node_090
	function#54() 
	function#105(0,5) 
	>> node_188 
	>> node_205 
	return 
endf 

def node_091
	function#54() 
	function#105(0,6) 
	>> node_188 
	>> node_206 
	return 
endf 

def node_092
	if function#103(5) 
		>> node_171 
	else 
		>> node_194 
		repeat 
	endif 
	return 
endf 

def node_093
	if function#10E(5) 
		>> node_194 
		repeat 
	else 
		*&
	endif 
	return 
endf 

def node_094
	if function#103(2) 
		>> node_194 
		repeat 
	else 
		if function#103(7) 
			>> node_194 
			repeat 
		else 
			*&
		endif 
	endif 
	return 
endf 

def node_095
	if function#63() 
		>> node_097 
	else 
		if function#10E(0,2) 
			>> node_113 
		else 
			>> node_097 
		endif 
	endif 
	return 
endf 

def node_096
endf 

def node_097
	if function#10A(3) 
		>> node_098 
		>> node_229 
		>> node_100 
	else 
		>> node_190 
		repeat 
	endif 
	return 
endf 

def node_098
	if function#103(7) 
		>> node_230 
		>> node_099 
	else 
		*&
	endif 
	return 
endf 

def node_099
	if function#103(11) 
		>> node_195 
		>> node_135 
	else 
		>> node_194 
	endif 
	return 
endf 

def node_100
	if [RegisterVar3 += 0] 
		>> node_101 
		>> node_243 
	else 
		>> node_194 
	endif 
	reset 
endf 

def node_101
	if function#10A() 
		>> node_103 
		>> node_106 
		repeat 
	else 
		if function#10A(3) 
			>> node_108 
		else 
			>> node_190 
		endif 
	endif 
	function#54() 
	return 
endf 

def node_102
endf 

def node_103
	*&
	>> node_111 
	if function#10A(3) 
		if [RegisterVar15 += 0] 
			if function#10A(9) 
				>> node_104 
				[RegisterVar15 ++] 
				[RegisterVar15 |-] 
			else 
				if self.distance_3d_recalc_to_target().leq(1000) 
					>> node_208 
				else 
					-> action#0A(2,1,4,400,200) @ unknExtra0:100 
				endif 
				repeat 
			endif 
		else 
			>> node_105 
		endif 
	else 
		>> node_211 
	endif 
	return 
endf 

def node_104
	function#54() 
	if function#63() 
		function#105(0,4) 
	else 
		if function#10E() 
			function#105() 
		elif function#10E(0,1) 
			function#105(0,1) 
		elif function#10E(0,2) 
			function#105(0,2) 
		else 
			function#105(0,3) 
		endif 
	endif 
	if self.distance_3d_recalc_to_target().leq(200) 
		>> node_209 
	elif self.distance_3d_recalc_to_target().leq(500) 
		>> node_218 
		repeat 
	else 
		>> node_215 
		repeat 
	endif 
	-> action#7C() 
	return 
endf 

def node_105
	if function#63() 
		>> node_211 
	else 
		if function#10E() 
			>> node_190 
		elif function#10E(0,1) 
			>> node_228 
			>> node_188 
			>> node_203 
		elif function#10E(0,2) 
			>> node_204 
		else 
			>> node_191 
		endif 
	endif 
	return 
endf 

def node_106
	>> node_098 
	>> node_111 
	if function#103(1) 
		>> node_186 
		>> node_194 
		>> node_175 
	else 
		>> node_105 
		repeat 
	endif 
	return 
endf 

def node_107
endf 

def node_108
	if function#63() 
		>> node_109 
	else 
		>> node_236 
	endif 
	return 
endf 

def node_109
	if [RegisterVar13 += 0] 
		[RegisterVar13 ++] 
		[RegisterVar13 |-] 
		>> node_234 
	else 
		>> node_235 
	endif 
	return 
endf 

def node_110
	>> node_098 
	>> node_111 
	if function#103(1) 
		>> node_103 
		>> node_186 
		>> node_194 
		>> node_175 
	else 
		if self.distance_3d_recalc_to_target().leq(1200) 
			>> node_190 
		elif self.distance_3d_recalc_to_target().leq(1800) 
			-> action#09(2,1,0,200,100) 
		else 
		endif 
		-> action#0A(2,1,0,200,100) 
		repeat 
	endif 
	return 
endf 

def node_111
	if function#3F() 
		>> node_194 
		repeat 
	else 
		*&
	endif 
	return 
endf 

def node_112
endf 

def node_113
	if function#10A() 
		>> node_097 
	else 
		if function#10A(4) 
			>> node_097 
		else 
			>> node_114 
			>> node_115 
			>> node_116 
			repeat 
		endif 
	endif 
	return 
endf 

def node_114
	>> node_225 
	if self.distance_3d_recalc_to_target().leq(1000) 
		>> node_188 
		-> action#5A() 
	else 
		if [RegisterVar14 += 0] 
			>> node_216 
		else 
			>> node_211 
			[RegisterVar14 ++] 
		endif 
		repeat 
	endif 
	return 
endf 

def node_115
	if function#10A(3) 
		*&
	else 
		>> node_188 
		-> action#72() 
		>> node_211 
		repeat 
	endif 
	return 
endf 

def node_116
	>> node_229 
	if self.distance_3d_recalc_to_target().leq(2000) 
		>> node_236 
	else 
		if [RegisterVar14 += 0] 
			-> action#0A(2,1,0,800,500) 
			>> Global.node_026 
			-> action#6D() 
		else 
			*&
		endif 
		>> node_225 
		if self.distance_3d_recalc_to_target().leq(1000) 
			>> node_229 
			-> action#0A(2,1,0,1000,500) 
			[RegisterVar14 |-] 
			[RegisterVar14 |-] 
			[RegisterVar14 |-] 
			repeat 
		else 
			>> node_211 
		endif 
	endif 
	return 
endf 

def node_117
	>> node_098 
	if function#3F() 
		>> node_194 
		repeat 
	else 
		if function#103(1) 
			>> node_104 
			>> node_186 
			>> node_194 
			>> node_175 
		else 
			if self.distance_3d_recalc_to_target().leq(1200) 
				>> node_190 
			elif self.distance_3d_recalc_to_target().leq(1800) 
				-> action#09(2,1,0,200,100) 
			else 
				-> action#0A(2,1,0,200,100) 
			endif 
			repeat 
		endif 
	endif 
	return 
endf 

def node_118
endf 

def node_119
	>> node_120 
	>> node_121 
	if function#103(7) 
		>> node_230 
		>> node_128 
		>> node_131 
	else 
		>> node_132 
	endif 
	return 
endf 

def node_120
	if function#10E(5) 
		if function#3F() 
			>> node_193 
		else 
			>> node_194 
		endif 
		reset 
	else 
		*&
	endif 
	return 
endf 

def node_121
	>> node_230 
	if function#103(2) 
		if [RegisterVar2 /= 0] 
			>> node_123 
			>> node_199 
			>> node_199 
			>> node_199 
			>> node_199 
			>> node_199 
			>> node_199 
			>> node_199 
			>> node_199 
			>> node_199 
		else 
			>> node_194 
		endif 
		repeat 
	else 
		*&
	endif 
	return 
endf 

def node_122
	if function#103(2) 
		>> node_230 
		if [RegisterVar2 += 0] 
			>> node_123 
			>> node_199 
		else 
			>> node_194 
		endif 
		reset 
	else 
		*&
	endif 
	return 
endf 

def node_123
	>> node_230 
	>> node_195 
	if self.distance_3d_to_target().leq(1500) 
		>> node_124 
	else 
		>> node_216 
		repeat 
	endif 
	return 
endf 

def node_124
	if function#B0(9) 
		random (50) 
					>> node_125 
		elser (50) 
					>> node_126 
		endr 
	else 
		>> node_127 
	endif 
	-> action#15() 
	return 
endf 

def node_125
	>> node_230 
	if self.distance_3d_recalc_to_target().leq(1200) 
		*&
	elif self.distance_3d_recalc_to_target().leq(2000) 
		>> node_214 
		repeat 
	else 
		>> node_216 
		repeat 
	endif 
	return 
endf 

def node_126
	>> node_230 
	if self.distance_3d_recalc_to_target().leq(1500) 
		*&
	elif self.distance_3d_recalc_to_target().leq(2000) 
		>> node_214 
		repeat 
	else 
		>> node_216 
		repeat 
	endif 
	return 
endf 

def node_127
	>> node_225 
	if self.distance_3d_recalc_to_target().leq(1000) 
		*&
	elif self.distance_3d_recalc_to_target().leq(1200) 
		>> node_214 
		repeat 
	else 
		>> node_216 
		repeat 
	endif 
	return 
endf 

def node_128
	>> node_129 
	>> node_130 
	return 
endf 

def node_129
	>> node_230 
	if function#110() 
		return 
	else 
		*&
	endif 
	if function#103(18) 
		return 
	else 
		*&
	endif 
	if function#103(6) 
		if function#3F() 
			*&
		else 
			>> node_194 
		endif 
		>> node_164 
		if function#105(5,3500) 
			*&
		else 
			*&
		endif 
		>> node_230 
		>> node_198 
		repeat 
	else 
		*&
	endif 
	return 
endf 

def node_130
	if function#103(17) 
		>> node_230 
		if self.distance_3d_recalc_to_target().leq(3000) 
			>> node_194 
		else 
			>> node_194 
			>> node_230 
			function#10E(6) 
		endif 
		if function#105(5,3500) 
			*&
		else 
			*&
		endif 
		>> node_164 
		>> node_198 
		repeat 
	else 
		if function#3F() 
			>> Global.node_038 
		else 
			*&
		endif 
		*&
	endif 
	return 
endf 

def node_131
	if function#63() 
		>> node_135 
	else 
		if function#10E() 
			>> node_135 
		elif function#10E(0,1) 
			>> node_135 
		else 
			>> node_159 
			>> node_135 
		endif 
	endif 
	return 
endf 

def node_132
	if [RegisterVar1 += 0] 
		*&
	else 
		>> node_195 
	endif 
	if function#103(1) 
		if function#10E(16) 
			>> node_230 
			>> node_133 
			>> node_198 
			[RegisterVar0 ++] 
			[RegisterVar0 |-] 
		else 
			>> node_193 
		endif 
	else 
		>> node_194 
	endif 
	return 
endf 

def node_133
	random (50) 
				>> node_193 
	elser (10) 
				*&
	elser (35) 
				>> node_193 
				>> node_193 
	elser (5) 
				>> node_193 
				>> node_193 
				>> node_193 
	endr 
	return 
endf 

def node_134
endf 

def node_135
	if function#103(12) 
		if [RegisterVar11 += 0] 
			>> node_136 
		else 
			>> node_144 
		endif 
	else 
		if [RegisterVar11 += 0] 
			>> node_136 
		else 
			>> node_144 
		endif 
	endif 
	return 
endf 

def node_136
	if function#63() 
		random (50) 
					>> node_137 
		elser (50) 
					>> node_139 
		endr 
	else 
		if function#10E() 
			random (50) 
						>> node_137 
			elser (50) 
						>> node_139 
			endr 
		elif function#10E(0,1) 
			random (50) 
						>> node_137 
			elser (50) 
						>> node_139 
			endr 
		else 
			>> node_141 
		endif 
	endif 
	return 
endf 

def node_137
	>> node_166 
	if self.target.in_combat() 
		if function#103(8) 
			if self.distance_3d_recalc_to_target().leq(2000) 
				>> node_138 
			else 
				>> node_216 
			endif 
		else 
			if function#63() 
				>> node_225 
				-> action#0A(2,1,0,5500,200) 
				>> node_225 
				>> node_189 
				>> node_205 
			else 
				if function#10E() 
					>> node_225 
					-> action#0A(2,1,0,5500,300) 
					>> node_225 
					>> node_189 
					>> node_205 
				elif function#10E(0,1) 
					>> node_225 
					-> action#0A(2,1,0,5500,300) 
					>> node_225 
					>> node_189 
					>> node_205 
				else 
					function#54() 
					self.targetArea(10) @ parameter2:1500 
					-> action#0A(2,1,3,5500,300) @ unknExtra0:3 
					>> node_230 
					>> node_189 
					>> node_208 
				endif 
			endif 
		endif 
	else 
		if self.distance_3d_recalc_to_target().leq(2000) 
			if self.distance_3d_recalc_to_target().leq(800) 
				>> Global.node_024 
			else 
				>> node_153 
			endif 
		else 
			>> node_216 
		endif 
	endif 
	return 
endf 

def node_138
	if function#103(15) 
		>> node_188 
		>> node_199 
	else 
		if self.distance_3d_recalc_to_target().leq(500) 
			>> node_149 
		else 
			>> node_216 
		endif 
	endif 
	return 
endf 

def node_139
	>> node_166 
	if self.distance_3d_recalc_to_target().leq(2500) 
		if self.target.in_combat() 
			if function#103(8) 
				>> node_140 
			else 
				if function#63() 
					>> node_225 
					-> action#0A(2,1,0,5500,200) 
					>> node_225 
					>> node_189 
					>> node_205 
				else 
					if function#10E() 
						>> node_225 
						-> action#0A(2,1,0,5500,300) 
						>> node_225 
						>> node_189 
						>> node_205 
					elif function#10E(0,1) 
						>> node_225 
						-> action#0A(2,1,0,5500,300) 
						>> node_225 
						>> node_189 
						>> node_205 
					else 
						function#54() 
						self.targetArea(10) @ parameter2:1500 
						-> action#0A(2,1,3,1000,300) @ unknExtra0:3 
						>> node_230 
						>> node_189 
						>> node_208 
					endif 
				endif 
			endif 
		else 
			if self.distance_3d_recalc_to_target().leq(800) 
				>> Global.node_024 
			else 
				>> node_153 
			endif 
		endif 
	else 
		>> node_216 
	endif 
	return 
endf 

def node_140
	if function#103(15) 
		>> node_188 
		>> node_199 
	else 
		if self.distance_3d_recalc_to_target().leq(600) 
			>> node_149 
		else 
			>> node_216 
		endif 
	endif 
	return 
endf 

def node_141
	>> node_166 
	if self.distance_3d_recalc_to_target().leq(1000) 
		>> node_148 
	elif self.distance_3d_recalc_to_target().leq(2000) 
		if self.target.in_combat() 
			>> node_142 
		else 
			if self.distance_3d_recalc_to_target().leq(800) 
				>> Global.node_024 
			else 
				>> node_153 
			endif 
		endif 
	else 
		>> node_216 
	endif 
	return 
endf 

def node_142
	if function#103(15) 
		>> node_188 
		>> node_199 
	else 
		>> node_150 
	endif 
	return 
endf 

def node_143
	random (30) 
				-> action#75() 
	elser (30) 
				-> action#76() 
	elser (40) 
				-> action#77() 
	endr 
	return 
endf 

def node_144
	if function#63() 
		random (50) 
					>> node_145 
		elser (50) 
					>> node_146 
		endr 
	else 
		if function#10E(0,20) 
			>> node_147 
		else 
			random (50) 
						>> node_145 
			elser (50) 
						>> node_146 
			endr 
		endif 
	endif 
	return 
endf 

def node_145
	>> node_166 
	if self.distance_3d_recalc_to_target().leq(2000) 
		if self.target.in_combat() 
			if self.distance_3d_recalc_to_target().leq(2500) 
				random (70) 
							>> node_156 
							>> node_151 
				elser (30) 
							>> node_192 
				endr 
			else 
				>> node_216 
			endif 
		elif function#103(18) 
			if self.distance_3d_recalc_to_target().leq(2500) 
				random (70) 
							>> node_156 
							>> node_151 
				elser (30) 
							>> node_192 
				endr 
			else 
				>> node_216 
			endif 
		else 
			if self.distance_3d_recalc_to_target().leq(1000) 
				>> Global.node_024 
			else 
				>> node_153 
			endif 
		endif 
	else 
		>> node_216 
	endif 
	return 
endf 

def node_146
	>> node_166 
	if self.distance_3d_recalc_to_target().leq(2500) 
		if self.target.in_combat() 
			if self.distance_3d_recalc_to_target().leq(2000) 
				random (70) 
							>> node_157 
							>> node_151 
				elser (30) 
							>> node_192 
				endr 
			else 
				>> node_216 
			endif 
		elif function#103(18) 
			if self.distance_3d_recalc_to_target().leq(2500) 
				random (70) 
							>> node_156 
							>> node_151 
				elser (30) 
							>> node_192 
				endr 
			else 
				>> node_216 
			endif 
		else 
			if self.distance_3d_recalc_to_target().leq(1000) 
				>> Global.node_024 
			else 
				>> node_153 
			endif 
		endif 
	else 
		>> node_216 
	endif 
	return 
endf 

def node_147
	>> node_166 
	if self.distance_3d_recalc_to_target().leq(1000) 
		>> node_148 
	elif self.distance_3d_recalc_to_target().leq(2000) 
		if self.target.in_combat() 
			>> node_152 
		else 
			if self.distance_3d_recalc_to_target().leq(1000) 
				>> Global.node_024 
			else 
				>> node_153 
			endif 
		endif 
	else 
		>> node_216 
	endif 
	return 
endf 

def node_148
	function#54() 
	self.targetArea(10) @ parameter2:1000 
	-> action#0A(2,3,0,1000,7) 
	>> node_225 
	>> node_189 
	return 
endf 

def node_149
	random (50) 
				>> Global.node_055 
	elser (25) 
				>> Global.node_060 
	elser (20) 
				>> Global.node_054 
	elser (5) 
				>> Global.node_024 
				>> Global.node_057 
	endr 
	return 
endf 

def node_150
	random (1) 
				>> Global.node_026 
				>> node_197 
	elser (90) 
				>> node_189 
				>> node_143 
	elser (9) 
				>> node_189 
				>> Global.node_025 
				>> node_143 
	endr 
	return 
endf 

def node_151
	random (15) 
				>> Global.node_024 
	elser (40) 
				>> Global.node_055 
	elser (30) 
				>> Global.node_025 
				>> Global.node_055 
	elser (15) 
				>> Global.node_060 
	endr 
	return 
endf 

def node_152
	random (40) 
				>> Global.node_026 
				>> node_192 
	elser (10) 
				>> Global.node_057 
	elser (20) 
				>> Global.node_024 
				>> node_197 
	elser (10) 
				>> Global.node_025 
				>> Global.node_026 
				>> node_197 
	elser (20) 
				>> Global.node_025 
				>> Global.node_057 
	endr 
	return 
endf 

def node_153
	if function#103(16) 
		if self.distance_3d_recalc_to_target().leq(1000) 
			random (50) 
						>> node_155 
			elser (50) 
						>> Global.node_024 
			endr 
		elif self.distance_3d_recalc_to_target().leq(3000) 
			random (30) 
						>> Global.node_026 
			elser (40) 
						>> Global.node_025 
			elser (30) 
						*&
			endr 
			>> node_188 
			random (40) 
						-> action#6F() 
			elser (30) 
						-> action#70() 
			elser (30) 
						-> action#71() 
			endr 
		else 
			>> node_230 
			>> node_188 
		endif 
		>> node_154 
	elif function#103(15) 
		if self.distance_3d_recalc_to_target().leq(1000) 
			random (50) 
						>> node_155 
			elser (50) 
						>> Global.node_024 
			endr 
		elif self.distance_3d_recalc_to_target().leq(3000) 
			>> node_188 
			>> node_199 
		endif 
	elif function#103(17) 
		if self.distance_3d_recalc_to_target().leq(1000) 
			random (50) 
						>> node_155 
			elser (50) 
						>> Global.node_024 
			endr 
		elif self.distance_3d_recalc_to_target().leq(3000) 
			>> node_188 
			>> Global.node_048 
		endif 
	else 
		random (20) 
					>> node_188 
					>> node_208 
		elser (20) 
					>> node_188 
					>> node_192 
		elser (15) 
					>> node_188 
					>> Global.node_026 
					>> node_192 
		elser (15) 
					>> node_188 
					>> Global.node_025 
					>> node_192 
		elser (30) 
					>> node_188 
					>> node_203 
		endr 
		>> node_154 
	endif 
	return 
endf 

def node_154
	if [RegisterVar11 += 0] 
		*&
	else 
		[RegisterVar11 ++] 
	endif 
	return 
endf 

def node_155
	function#54() 
	self.targetArea(10) @ parameter2:1000 
	-> action#0A(2,3,0,1000,3) 
	return 
endf 

def node_156
	random (50) 
				-> action#0A(2,1,0,2000,1200) 
	elser (50) 
				-> action#0A(2,1,0,2000,1000) 
	endr 
	return 
endf 

def node_157
	random (50) 
				-> action#0A(2,1,0,2000,700) 
	elser (50) 
				-> action#0A(2,1,0,2000,500) 
	endr 
	return 
	return 
endf 

def node_158
endf 

def node_159
	>> node_130 
	>> node_160 
	>> node_129 
	return 
endf 

def node_160
	if function#103(14) 
		>> node_230 
		if function#10E(26,3) 
			>> node_161 
		elif function#10E(26,6) 
			>> node_161 
		elif function#10E(26,9) 
			>> node_161 
		elif function#10E(26,12) 
			>> node_161 
		elif function#10E(26,15) 
			>> node_161 
		elif function#10E(26,18) 
			>> node_161 
		elif function#10E(26,21) 
			>> node_161 
		else 
			*&
		endif 
	else 
		*&
	endif 
	return 
endf 

def node_161
	if function#103(13) 
		function#10E(24) 
		>> node_162 
		>> node_163 
	else 
		>> node_194 
		repeat 
	endif 
	return 
endf 

def node_162
	if self.distance_3d_recalc_to_target().leq(3000) 
		*&
	else 
		>> node_194 
		function#10E(6) 
	endif 
	return 
endf 

def node_163
	>> node_121 
	if function#10E(25) 
		[RegisterVar11 ++] 
		[RegisterVar11 |-] 
		[RegisterVar15 ++] 
		if function#105(5,5000) 
			*&
		else 
			*&
		endif 
		if self.distance_3d_recalc_to_target().leq(1200) 
			>> node_194 
		elif self.distance_3d_recalc_to_target().leq(6000) 
			>> node_164 
			>> node_198 
		else 
			random (40) 
						-> action#0A(2,1,0,500,1000) 
						-> action#0F() 
						>> node_197 
			elser (30) 
						-> action#0A(2,1,0,500,1000) 
						-> action#10() 
						>> node_197 
			elser (30) 
						-> action#0F() 
						-> action#0A(2,1,0,500,1500) 
						-> action#0F() 
						>> node_197 
			endr 
		endif 
		repeat 
	else 
		*&
	endif 
	return 
endf 

def node_164
	random (10) 
				>> node_193 
	elser (10) 
				>> node_193 
				>> node_193 
	elser (20) 
				>> node_193 
				>> node_193 
				>> node_193 
	elser (20) 
				>> node_193 
				>> node_193 
				>> node_193 
	elser (20) 
				>> node_193 
				>> node_193 
				>> node_193 
				>> node_193 
	elser (20) 
				>> node_193 
				>> node_193 
				>> node_193 
				>> node_193 
	endr 
	return 
endf 

def node_165
endf 

def node_166
	if function#63() 
		if function#10E(26,3) 
			>> node_167 
		elif function#10E(26,6) 
			>> node_167 
		elif function#10E(26,9) 
			>> node_167 
		elif function#10E(26,12) 
			>> node_167 
		elif function#10E(26,15) 
			>> node_167 
		elif function#10E(26,18) 
			>> node_167 
		elif function#10E(26,21) 
			>> node_167 
		else 
			*&
		endif 
	else 
		if function#10E() 
			if function#10E(26,3) 
				>> node_167 
			elif function#10E(26,6) 
				>> node_167 
			elif function#10E(26,9) 
				>> node_167 
			elif function#10E(26,12) 
				>> node_167 
			elif function#10E(26,15) 
				>> node_167 
			elif function#10E(26,18) 
				>> node_167 
			elif function#10E(26,21) 
				>> node_167 
			else 
				*&
			endif 
		elif function#10E(0,1) 
			if function#10E(26,3) 
				>> node_167 
			elif function#10E(26,6) 
				>> node_167 
			elif function#10E(26,9) 
				>> node_167 
			elif function#10E(26,12) 
				>> node_167 
			elif function#10E(26,15) 
				>> node_167 
			elif function#10E(26,18) 
				>> node_167 
			elif function#10E(26,21) 
				>> node_167 
			else 
				*&
			endif 
		else 
			*&
		endif 
	endif 
	return 
endf 

def node_167
	>> node_121 
	if function#10E(25) 
		[RegisterVar11 ++] 
		[RegisterVar11 |-] 
		if [RegisterVar13 += 0] 
			-> action#0A(2,1,0,1000,2000) 
			>> node_225 
			if self.distance_3d_recalc_to_target().leq(2500) 
				*&
			else 
				>> node_188 
				>> node_204 
			endif 
			[RegisterVar13 ++] 
			[RegisterVar13 |-] 
		else 
			*&
		endif 
		>> node_230 
		if self.distance_3d_recalc_to_target().leq(1000) 
			>> Global.node_024 
		elif self.distance_3d_recalc_to_target().leq(2000) 
			>> node_197 
		else 
			>> node_216 
		endif 
		repeat 
	else 
		[RegisterVar13 ++] 
	endif 
	return 
endf 

def node_168
	if function#105(5,5000) 
		random (20) 
					-> action#0A(2,1,0,500,1000) 
					-> action#0F() 
					>> node_194 
		elser (20) 
					-> action#0A(2,1,0,500,1000) 
					-> action#10() 
					>> node_194 
		elser (20) 
					-> action#0F() 
					-> action#0A(2,1,0,500,1500) 
					-> action#0F() 
					>> node_194 
		elser (20) 
					-> action#10() 
					-> action#0A(2,1,0,500,1500) 
					-> action#10() 
					>> node_194 
		elser (20) 
					-> action#0A(2,1,0,500,2000) 
					>> node_194 
		endr 
	else 
		random (30) 
					-> action#0F() 
		elser (30) 
					-> action#10() 
		elser (40) 
					*&
		endr 
		-> action#0A(2,1,0,500,2000) 
		>> node_194 
	endif 
	return 
endf 

def node_169
	>> node_216 
	return 
endf 

def node_170
endf 

def node_171
	if function#10E(2) 
		function#10E(3) 
	else 
		*&
	endif 
	return 
endf 

def node_172
endf 

def node_173
	[RegisterVar1 |-] 
	[RegisterVar1 |-] 
	[RegisterVar1 |-] 
	return 
endf 

def node_174
	[RegisterVar2 |-] 
	[RegisterVar2 |-] 
	[RegisterVar2 |-] 
	return 
endf 

def node_175
	[RegisterVar3 |-] 
	[RegisterVar3 |-] 
	[RegisterVar3 |-] 
	return 
endf 

def node_176
	[RegisterVar4 |-] 
	return 
endf 

def node_177
	[RegisterVar5 |-] 
	[RegisterVar5 |-] 
	[RegisterVar5 |-] 
	return 
endf 

def node_178
	[RegisterVar6 |-] 
	[RegisterVar6 |-] 
	[RegisterVar6 |-] 
	return 
endf 

def node_179
	[RegisterVar7 |-] 
	[RegisterVar7 |-] 
	[RegisterVar7 |-] 
	return 
endf 

def node_180
	[RegisterVar0 ++] 
	[RegisterVar1 ++] 
	[RegisterVar2 ++] 
	[RegisterVar3 ++] 
	[RegisterVar4 ++] 
	[RegisterVar5 ++] 
	[RegisterVar6 ++] 
	[RegisterVar7 ++] 
	return 
endf 

def node_181
	[RegisterVar8 |-] 
	[RegisterVar8 |-] 
	[RegisterVar8 |-] 
	[RegisterVar8 |-] 
	[RegisterVar8 |-] 
	return 
endf 

def node_182
endf 

def node_183
	[RegisterVar0 |-] 
	[RegisterVar0 |-] 
	[RegisterVar0 |-] 
	return 
endf 

def node_184
	[RegisterVar2 |-] 
	[RegisterVar2 |-] 
	[RegisterVar2 |-] 
	return 
endf 

def node_185
endf 

def node_186
	-> action#4A() 
	return 
endf 

def node_187
	-> action#02() 
	return 
endf 

def node_188
	if self.angle_2d_cw_between(30,330) 
		-> action#0B() 
	else 
	endif 
	return 
endf 

def node_189
	if self.angle_2d_cw_between(30,330) 
		-> action#0C() 
	else 
	endif 
	return 
endf 

def node_190
	-> action#11() 
	return 
endf 

def node_191
	-> action#12() 
	return 
endf 

def node_192
	-> action#14() 
	return 
endf 

def node_193
	-> action#26() 
	return 
endf 

def node_194
	if function#3F() 
		-> action#26() 
	else 
		*&
		-> action#24() 
	endif 
	return 
endf 

def node_195
	if function#3F() 
		-> action#25() 
	else 
	endif 
	return 
endf 

def node_196
	-> action#13() 
	return 
endf 

def node_197
	random (35) 
				-> action#4D() 
	elser (35) 
				-> action#4E() 
	elser (30) 
				-> action#4F() 
	endr 
	return 
endf 

def node_198
	>> node_230 
	if function#3F() 
		*&
	else 
		>> node_194 
	endif 
	if self.distance_3d_recalc_to_target().leq(1000) 
		>> node_194 
	else 
		random (50) 
					>> node_193 
		elser (30) 
					>> node_193 
					>> node_193 
		elser (20) 
					>> node_193 
					>> node_193 
					>> node_193 
		endr 
		-> action#51() 
	endif 
	[RegisterVar0 ++] 
	[RegisterVar0 |-] 
	return 
endf 

def node_199
	-> action#15() 
	return 
endf 

def node_200
endf 

def node_201
	if function#63() 
		-> action#57() 
	else 
		if function#10E() 
			-> action#58() 
		else 
			-> action#59() 
		endif 
	endif 
	return 
endf 

def node_202
	if function#63() 
		-> action#6E() 
	else 
		if function#10E() 
			-> action#6B() 
		else 
			-> action#6C() 
		endif 
	endif 
	return 
endf 

def node_203
	if function#63() 
		-> action#6F() 
	else 
		random (20) 
					-> action#6F() 
		elser (40) 
					-> action#70() 
		elser (40) 
					-> action#71() 
		endr 
	endif 
	return 
endf 

def node_204
	if function#63() 
		-> action#5D() 
		-> action#01() 
	else 
		if function#10E() 
			-> action#60() 
		elif function#10E(0,1) 
			-> action#61() 
		elif function#10E(0,2) 
			-> action#62() 
		else 
			-> action#63() 
		endif 
	endif 
	return 
endf 

def node_205
	if function#63() 
		-> action#5A() 
	else 
		if function#10E() 
			-> action#5B() 
		else 
			-> action#5C() 
		endif 
	endif 
	return 
endf 

def node_206
	if function#63() 
		-> action#64() 
	else 
		if function#10E() 
			-> action#65() 
		else 
			-> action#66() 
		endif 
	endif 
	return 
endf 

def node_207
	-> action#74() 
	return 
endf 

def node_208
	if function#63() 
		-> action#75() 
	else 
		if function#10E() 
		else 
			-> action#76() 
		endif 
		-> action#77() 
	endif 
	return 
endf 

def node_209
	-> action#7A() 
	if function#10E(4) 
		reset 
	else 
		*&
	endif 
	return 
endf 

def node_210
	-> action#7B() 
	return 
endf 

def node_211
	-> action#41() 
	return 
endf 

def node_212
endf 

def node_213
	-> action#09(2,0,0,200) 
	return 
endf 

def node_214
	-> action#09(2,4,0,500,50) 
	return 
endf 

def node_215
	-> action#0A(2,0,0,200) 
	return 
endf 

def node_216
	-> action#0A(2,4,0,500,50) 
	return 
endf 

def node_217
	-> action#08(2,0,0,200) 
	return 
endf 

def node_218
	-> action#08(2,4,0,200,50) 
	return 
endf 

def node_219
	-> action#42(2,0,0,200) 
	return 
endf 

def node_220
	-> action#42(2,4,0,200,50) 
	return 
endf 

def node_221
	-> action#43(2,0,0,200) 
	return 
endf 

def node_222
	-> action#43(2,4,0,200,50) 
	return 
endf 

def node_223
	if function#63() 
		-> action#78() 
	else 
		if function#10E() 
			-> action#78() 
		else 
			-> action#79() 
		endif 
	endif 
	return 
endf 

def node_224
endf 

def node_225
	function#54() 
	self.targetEnemy(50) 
	return 
endf 

def node_226
	function#54() 
	function#108() 
	return 
endf 

def node_227
	function#54() 
	function#10E(19) 
	return 
endf 

def node_228
	function#54() 
	function#10A(3) 
	return 
endf 

def node_229
	function#54() 
	function#10A(7) 
	return 
endf 

def node_230
	function#54() 
	function#103(3) 
	return 
endf 

def node_231
	function#54() 
	self.targetArea(10) @ parameter2:1000 
	return 
endf 

def node_232
endf 

def node_233
	if function#10D(10,3000) 
		>> node_228 
		>> node_235 
		function#107(5) 
	else 
		>> node_228 
		>> node_236 
	endif 
	return 
endf 

def node_234
	function#10A(7) 
	if self.distance_3d_recalc_to_target().leq(1000) 
		-> action#74() 
	elif self.distance_3d_recalc_to_target().leq(2000) 
		>> node_214 
		repeat 
	else 
		>> node_216 
		repeat 
	endif 
	return 
endf 

def node_235
	function#10A(7) 
	if self.distance_3d_recalc_to_target().leq(600) 
		>> Global.node_024 
	elif self.distance_3d_recalc_to_target().leq(1200) 
		>> node_188 
		-> action#74() 
	elif self.distance_3d_recalc_to_target().leq(2000) 
		>> node_214 
	else 
		>> node_216 
		repeat 
	endif 
	return 
endf 

def node_236
	if self.distance_3d_recalc_to_target().leq(1100) 
		>> node_188 
		-> action#75() 
	elif self.distance_3d_recalc_to_target().leq(1700) 
		>> node_214 
	else 
		>> node_216 
		repeat 
	endif 
	return 
endf 

def node_237
	if self.distance_3d_recalc_to_target().leq(1200) 
		>> node_188 
		-> action#76() 
	elif self.distance_3d_recalc_to_target().leq(1700) 
		>> node_214 
	else 
		>> node_216 
		repeat 
	endif 
	return 
endf 

def node_238
	if self.distance_3d_recalc_to_target().leq(1300) 
		>> node_188 
		-> action#77() 
	elif self.distance_3d_recalc_to_target().leq(1700) 
		>> node_214 
	else 
		>> node_216 
		repeat 
	endif 
	return 
endf 

def node_239
	if function#10A(3) 
		if [RegisterVar18 += 0] 
			if self.target(13) 
				-> action#1A() 
				[RegisterVar18 |-] 
				[RegisterVar18 |-] 
				[RegisterVar18 |-] 
			else 
				>> node_211 
			endif 
			repeat 
		else 
			[RegisterVar18 ++] 
		endif 
	else 
		*&
	endif 
	return 
endf 

def node_240
endf 

def node_241
	if function#10A() 
		>> node_242 
		function#54() 
	else 
		>> node_190 
		repeat 
	endif 
	return 
endf 

def node_242
	if function#10A(3) 
		>> node_117 
	endif 
	return 
endf 

def node_243
	if function#103(2) 
		>> node_194 
		function#BE() 
		repeat 
	endif 
	if [RegisterVar3 *= 0] 
		>> node_194 
	endif 
	return 
endf 

def node_244
endf 

def node_245
	>> node_230 
	if self.distance_3d_recalc_to_target().leq(1300) 
		>> node_183 
		>> node_197 
	else 
		>> node_215 
		repeat 
	endif 
	return 
endf 

def node_246
	if [RegisterVar0 -= 1] 
		>> node_230 
		>> node_248 
	endif 
	return 
endf 

def node_247
endf 

def node_248
	>> node_195 
	>> node_230 
	>> node_129 
	>> node_121 
	if function#103() 
		>> node_230 
		>> node_249 
		>> node_129 
		>> node_121 
		repeat 
	else 
		>> node_230 
		if [RegisterVar0 -= 1] 
			>> node_129 
			>> node_121 
			if function#103(2) 
				>> node_123 
			else 
				if self.distance_3d_to_target().leq(600) 
					>> node_129 
					>> node_121 
					random (60) >> Global.node_024 
					elser (20) >> Global.node_025 
					elser (20) >> Global.node_026 
					endr 
				else 
					>> node_216 
					repeat 
				endif 
				>> node_121 
				>> node_129 
			endif 
			>> node_192 
		else 
			>> node_187 
		endif 
	endif 
	return 
endf 

def node_249
	>> node_121 
	>> node_129 
	if self.distance_3d_to_target().leq(1200) 
		>> node_121 
		>> node_169 
		>> node_129 
	else 
		function#103(3) 
		>> node_169 
	endif 
	>> node_121 
	>> node_129 
	return 
endf 

