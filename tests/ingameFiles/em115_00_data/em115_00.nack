importactions Vaal_Hazak as vaal_hazak
importlibrary Global as Global

def node_000
	if function#45() 
	else 
		>> Global.node_039 
	endif 
	>> node_001 
	if self.target(4) 
		>> node_002 => reset 
	elif self.target(3) 
		>> node_002 => reset 
	elif self.target(55) 
		if self.flying() 
			>> Global.node_001 => reset 
		else 
			if function#101(1) 
				>> node_007 => reset 
			else 
				>> node_008 => reset 
			endif 
		endif 
	elif self.target(12) 
		>> node_003 
	elif self.target(14) 
		>> node_004 => reset 
	elif self.target(11) 
		>> node_005 => reset 
	elif self.target(0) 
		>> node_006 => reset 
	elif self.flying() 
		>> Global.node_001 => reset 
	elif self.target(52) 
		>> node_011 
	elif self.vertical_distance_to_target().gt(450) 
		>> node_010 
	else 
		if function#101(1) 
			>> node_007 => reset 
		else 
			>> node_008 => reset 
		endif 
	endif 
	reset 
endf 

def node_001
	if function#5D() 
		function#5E() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_009 
		self.targetArea(4) 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
	endif 
	return 
endf 

def node_002
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> Global.node_007 
		repeat 
	else 
		self.targetEnemy(50) 
		if self.in_combat() 
			>> Global.node_005 
		elif self.alert_out_of_combat() 
			>> Global.node_005 
		else 
			>> Global.node_054 
		endif 
		if self.current_quest().is_rank(rank.AT) 
			random (30) >> Global.node_033 
			elser (30) >> Global.node_081 
			elser (40) 
			endr 
		else 
		endif 
		random (50) >> Global.node_011 
		elser (50) >> Global.node_013 
		endr 
	endif 
	return 
endf 

def node_003
	if self.flying() 
		>> Global.node_001 
	else 
		>> Global.node_026 
	endif 
	return 
endf 

def node_004
	>> Global.node_001 
	if self.distance_2d_to_target().gt(1500) 
		>> Global.node_010 
	else 
		if self.above_target() 
			random (0) 
			elser (5) >> Global.node_014 
			elser (90) >> Global.node_035 
			elser (5) >> Global.node_012 
			elser (0) 
			endr 
		else 
			random (50) >> Global.node_036 
			elser (50) >> Global.node_010 
			endr 
		endif 
	endif 
	return 
endf 

def node_005
	if self.flying() 
		>> Global.node_001 
	else 
		>> Global.node_026 
	endif 
	return 
endf 

def node_006
	>> Global.node_001 
	if self.distance_2d_to_target().gt(1500) 
		>> Global.node_010 
	else 
		if self.above_target() 
			if self.vertical_distance_to_target().gt(500) 
				>> Global.node_035 
			else 
				if function#101(1) 
					>> node_007 => reset 
				else 
					>> node_008 => reset 
				endif 
			endif 
		else 
			if self.vertical_distance_to_target().gt(100) 
				>> Global.node_036 
			else 
				if function#101(1) 
					>> node_007 => reset 
				else 
					>> node_008 => reset 
				endif 
			endif 
		endif 
	endif 
	return 
endf 

def node_007
	>> node_032 
	if self.distance_2d_to_target().leq(500) 
		self.enraged() >> node_012 => reset 
		>> node_013 => reset 
	elif self.distance_2d_to_target().leq(1000) 
		self.enraged() >> node_014 => reset 
		>> node_015 => reset 
	elif self.distance_2d_to_target().leq(2000) 
		self.enraged() >> node_016 => reset 
		>> node_017 => reset 
	elif self.distance_2d_to_target().leq(5000) 
		self.enraged() >> node_018 => reset 
		>> node_019 => reset 
	else 
		self.enraged() >> node_020 => reset 
		>> node_021 => reset 
	endif 
	return 
endf 

def node_008
	>> node_032 
	if self.distance_2d_to_target().leq(500) 
		self.enraged() >> node_022 => reset 
		>> node_023 => reset 
	elif self.distance_2d_to_target().leq(1000) 
		self.enraged() >> node_024 => reset 
		>> node_025 => reset 
	elif self.distance_2d_to_target().leq(2000) 
		self.enraged() >> node_026 => reset 
		>> node_027 => reset 
	elif self.distance_2d_to_target().leq(5000) 
		self.enraged() >> node_028 => reset 
		>> node_029 => reset 
	else 
		self.enraged() >> node_030 => reset 
		>> node_031 => reset 
	endif 
	return 
endf 

def node_009
	if self.angle_2d_cw_between(270,90) 
		>> Global.node_047 
	else 
		>> Global.node_048 
	endif 
	return 
endf 

def node_010
	if self.current_quest().is_rank(rank.AT) 
		random (30) >> Global.node_033 
		elser (70) 
		endr 
	else 
	endif 
	if self.vertical_distance_to_target().leq(700) 
		if self.distance_3d_to_target().leq(3000) 
			random (90) >> Global.node_010 
			elser (10) >> Global.node_014 
			endr 
		else 
			random (100) >> Global.node_010 
			elser (0) >> Global.node_014 
			endr 
		endif 
	else 
		random (90) >> Global.node_010 
		elser (10) >> Global.node_014 
		endr 
	endif 
	return 
endf 

def node_011
	>> Global.node_010 
	return 
endf 

def node_012
	random (0) 
	elser (0) >> Global.node_011 
	elser (5) >> Global.node_014 
	elser (0) >> Global.node_016 
	elser (30) >> Global.node_019 
	elser (20) >> Global.node_020 
	elser (15) >> Global.node_022 
	elser (10) >> Global.node_026 
	elser (20) >> Global.node_029 
	elser (0) 
	endr 
	return 
endf 

def node_013
	random (0) 
	elser (3) >> Global.node_011 
	elser (10) >> Global.node_014 
	elser (5) >> Global.node_016 
	elser (25) >> Global.node_019 
	elser (20) >> Global.node_020 
	elser (10) >> Global.node_022 
	elser (7) >> Global.node_026 
	elser (20) >> Global.node_029 
	elser (0) 
	endr 
	return 
endf 

def node_014
	random (0) 
	elser (0) >> Global.node_011 
	elser (0) >> Global.node_013 
	elser (0) >> Global.node_018 
	elser (20) >> Global.node_019 
	elser (25) >> Global.node_020 
	elser (15) >> Global.node_021 
	elser (10) >> Global.node_022 
	elser (20) >> Global.node_026 
	elser (10) >> Global.node_029 
	elser (0) 
	endr 
	return 
endf 

def node_015
	random (0) 
	elser (3) >> Global.node_011 
	elser (0) >> Global.node_013 
	elser (5) >> Global.node_018 
	elser (20) >> Global.node_019 
	elser (25) >> Global.node_020 
	elser (10) >> Global.node_021 
	elser (7) >> Global.node_022 
	elser (20) >> Global.node_026 
	elser (10) >> Global.node_029 
	elser (0) 
	endr 
	return 
endf 

def node_016
	random (0) 
	elser (0) >> Global.node_011 
	elser (10) >> Global.node_015 
	elser (25) >> Global.node_021 
	elser (5) >> Global.node_022 
	elser (30) >> Global.node_026 
	elser (30) >> Global.node_030 
	elser (0) 
	endr 
	return 
endf 

def node_017
	random (0) 
	elser (3) >> Global.node_011 
	elser (15) >> Global.node_015 
	elser (25) >> Global.node_021 
	elser (3) >> Global.node_022 
	elser (30) >> Global.node_026 
	elser (24) >> Global.node_030 
	elser (0) 
	endr 
	return 
endf 

def node_018
	random (0) 
	elser (0) >> Global.node_011 
	elser (20) >> Global.node_015 
	elser (40) >> Global.node_025 
	elser (40) >> Global.node_030 
	elser (0) 
	endr 
	return 
endf 

def node_019
	random (0) 
	elser (5) >> Global.node_011 
	elser (20) >> Global.node_015 
	elser (40) >> Global.node_025 
	elser (35) >> Global.node_030 
	elser (0) 
	endr 
	return 
endf 

def node_020
	random (0) 
	elser (0) >> Global.node_011 
	elser (0) >> Global.node_015 
	elser (70) >> Global.node_025 
	elser (30) >> Global.node_030 
	elser (0) 
	endr 
	return 
endf 

def node_021
	random (0) 
	elser (5) >> Global.node_011 
	elser (20) >> Global.node_015 
	elser (55) >> Global.node_025 
	elser (20) >> Global.node_030 
	elser (0) 
	endr 
	return 
endf 

def node_022
	random (0) 
	elser (0) >> Global.node_011 
	elser (5) >> Global.node_014 
	elser (0) >> Global.node_016 
	elser (25) >> Global.node_019 
	elser (20) >> Global.node_020 
	elser (10) >> Global.node_023 
	elser (5) >> Global.node_024 
	elser (10) >> Global.node_026 
	elser (25) >> Global.node_029 
	elser (0) >> Global.node_031 
	elser (0) 
	endr 
	return 
endf 

def node_023
	random (0) 
	elser (5) >> Global.node_011 
	elser (14) >> Global.node_014 
	elser (0) >> Global.node_016 
	elser (22) >> Global.node_019 
	elser (20) >> Global.node_020 
	elser (8) >> Global.node_023 
	elser (4) >> Global.node_024 
	elser (7) >> Global.node_026 
	elser (20) >> Global.node_029 
	elser (0) >> Global.node_031 
	elser (0) 
	endr 
	return 
endf 

def node_024
	random (0) 
	elser (0) >> Global.node_011 
	elser (0) >> Global.node_018 
	elser (13) >> Global.node_019 
	elser (25) >> Global.node_020 
	elser (15) >> Global.node_021 
	elser (8) >> Global.node_023 
	elser (4) >> Global.node_024 
	elser (20) >> Global.node_026 
	elser (10) >> Global.node_029 
	elser (5) >> Global.node_031 
	elser (0) 
	endr 
	return 
endf 

def node_025
	random (0) 
	elser (5) >> Global.node_011 
	elser (0) >> Global.node_018 
	elser (16) >> Global.node_019 
	elser (25) >> Global.node_020 
	elser (10) >> Global.node_021 
	elser (6) >> Global.node_023 
	elser (3) >> Global.node_024 
	elser (20) >> Global.node_026 
	elser (10) >> Global.node_029 
	elser (5) >> Global.node_031 
	elser (0) 
	endr 
	return 
endf 

def node_026
	random (0) 
	elser (0) >> Global.node_011 
	elser (10) >> Global.node_015 
	elser (30) >> Global.node_021 
	elser (4) >> Global.node_023 
	elser (2) >> Global.node_024 
	elser (9) >> Global.node_025 
	elser (30) >> Global.node_026 
	elser (15) >> Global.node_031 
	elser (0) 
	endr 
	return 
endf 

def node_027
	random (0) 
	elser (5) >> Global.node_011 
	elser (15) >> Global.node_015 
	elser (25) >> Global.node_021 
	elser (4) >> Global.node_023 
	elser (2) >> Global.node_024 
	elser (9) >> Global.node_025 
	elser (30) >> Global.node_026 
	elser (10) >> Global.node_031 
	elser (0) 
	endr 
	return 
endf 

def node_028
	random (0) 
	elser (0) >> Global.node_011 
	elser (20) >> Global.node_015 
	elser (60) >> Global.node_025 
	elser (20) >> Global.node_031 
	elser (0) 
	endr 
	return 
endf 

def node_029
	random (0) 
	elser (7) >> Global.node_011 
	elser (30) >> Global.node_015 
	elser (43) >> Global.node_025 
	elser (20) >> Global.node_031 
	elser (0) 
	endr 
	return 
endf 

def node_030
	random (0) 
	elser (0) >> Global.node_011 
	elser (20) >> Global.node_015 
	elser (70) >> Global.node_025 
	elser (10) >> Global.node_031 
	elser (0) 
	endr 
	return 
endf 

def node_031
	random (0) 
	elser (10) >> Global.node_011 
	elser (30) >> Global.node_015 
	elser (50) >> Global.node_025 
	elser (10) >> Global.node_031 
	elser (0) 
	endr 
	return 
endf 

def node_032
	if function#101(2) 
	elif function#101(1) 
		random (5) >> node_033 
		elser (95) 
		endr 
	else 
		random (20) >> node_033 
		elser (80) 
		endr 
	endif 
	return 
endf 

def node_033
	if self.current_quest().is_rank(rank.AT) 
	else 
		if function#102(5000) 
			if self.target.miasmaed() 
				random (50) >> Global.node_031 
				elser (0) >> Global.node_024 
				elser (50) >> Global.node_059 
				endr 
				reset 
			else 
				>> Global.node_059 
				reset 
			endif 
		endif 
	endif 
	return 
endf 

def node_034
	if self.flying() 
		>> Global.node_001 
	else 
		>> node_010 
	endif 
	return 
endf 

def node_035
	>> Global.node_001 
	if self.above_target() 
		if self.distance_2d_to_target().gt(3000) 
			-> vaal_hazak.dash(2,0,0,3000) 
		else 
			-> vaal_hazak.quick_turn() 
			if self.vertical_distance_to_target().gt(400) 
				random (10) >> Global.node_014 
				elser (20) >> Global.node_015 
				elser (60) >> Global.node_026 
				elser (10) >> Global.node_012 
				endr 
			else 
				if function#101(1) 
					>> node_007 => reset 
				else 
					>> node_008 => reset 
				endif 
			endif 
		endif 
	else 
		if self.distance_2d_to_target().gt(1000) 
			-> vaal_hazak.dash(2,0,0,3000) 
		else 
			-> vaal_hazak.quick_turn() 
			if self.vertical_distance_to_target().gt(100) 
				random (10) >> Global.node_014 
				elser (0) >> Global.node_015 
				elser (0) >> Global.node_026 
				elser (80) >> node_036 
				elser (10) >> Global.node_012 
				endr 
			else 
				if function#101(1) 
					>> node_007 => reset 
				else 
					>> node_008 => reset 
				endif 
			endif 
		endif 
	endif 
	return 
endf 

def node_036
	self.targetArea(10) @ parameter2:1000 
	>> Global.node_004 
	>> Global.node_014 
	return 
endf 

