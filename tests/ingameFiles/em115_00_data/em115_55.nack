importactions Vaal_Hazak as vaal_hazak

def node_000
	>> node_030 
	conclude 
endf 

def node_001
	if self.flying() 
		if function#AF(5000) 
			-> vaal_hazak.landing() 
		else 
			>> node_002 
		endif 
	else 
	endif 
	return 
endf 

def node_002
	self.targetArea(target_area.area_aerial_center) 
	>> node_063 
	self.targetArea(target_area.area_center) 
	-> vaal_hazak.landing() 
	return 
endf 

def node_003
	if self.flying() 
	else 
		-> vaal_hazak.take_off() 
	endif 
	return 
endf 

def node_004
	if self.angle_2d_cw_between(30,330) 
		if self.flying() 
			-> vaal_hazak.quick_turn_fly() 
		else 
			-> vaal_hazak.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_005
	if self.angle_2d_cw_between(60,300) 
		if self.flying() 
			-> vaal_hazak.quick_turn_fly() 
		else 
			-> vaal_hazak.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_006
	if self.angle_2d_cw_between(90,270) 
		if self.flying() 
			-> vaal_hazak.quick_turn_fly() 
		else 
			-> vaal_hazak.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_007
	>> node_001 
	-> vaal_hazak.dash(5) 
	return 
endf 

def node_008
	>> node_001 
	-> vaal_hazak.dash(1,5,0,1000) 
	return 
endf 

def node_009
	>> node_001 
	-> vaal_hazak.dash(2,1,5,1500,800) 
	return 
endf 

def node_010
	>> node_001 
	-> vaal_hazak.dash(2,5,0,3000) 
	return 
endf 

def node_011
	>> node_004 
	if self.flying() 
		-> vaal_hazak.chance_fly() 
	else 
		-> vaal_hazak.threat_short() 
	endif 
	return 
endf 

def node_012
	if self.flying() 
		-> vaal_hazak.threat_short_fly() 
	else 
		-> vaal_hazak.discover() 
	endif 
	return 
endf 

def node_013
	if self.flying() 
		-> vaal_hazak.threat_short_fly() 
	else 
		-> vaal_hazak.threat_short() 
	endif 
	return 
endf 

def node_014
	>> node_001 
	-> vaal_hazak.step_back() 
	return 
endf 

def node_015
	>> node_001 
	>> node_004 
	-> vaal_hazak.step_front() 
	return 
endf 

def node_016
	>> node_001 
	>> node_006 
	-> vaal_hazak.face_swing() 
	return 
endf 

def node_017
	>> node_001 
	-> vaal_hazak.side_scratch() 
	return 
endf 

def node_018
	>> node_001 
	-> vaal_hazak.rotate_attack() 
	return 
endf 

def node_019
	>> node_001 
	if self.angle_2d_cw_between(60,120) 
		>> node_017 
	elif self.angle_2d_cw_between(120,240) 
		>> node_018 
	elif self.angle_2d_cw_between(240,300) 
		>> node_017 
	else 
		>> node_016 
	endif 
	return 
endf 

def node_020
	>> node_001 
	>> node_006 
	-> vaal_hazak.bite_middle() 
	return 
endf 

def node_021
	>> node_001 
	>> node_006 
	-> vaal_hazak.bite_3ren() 
	if self.enraged() 
		>> node_038 
	endif 
	return 
endf 

def node_022
	>> node_001 
	-> vaal_hazak.syouki_breath() 
	if self.enraged() 
		if self.distance_3d_to_target().gt(1500) 
			>> node_030 
		endif 
	endif 
	return 
endf 

def node_023
	>> node_001 
	-> vaal_hazak.desperate_tackle_no_breath() 
	return 
endf 

def node_024
	>> node_001 
	-> vaal_hazak.desperate_tackle() 
	return 
endf 

def node_025
	>> node_001 
	if self.enraged() 
	else 
		>> node_004 
	endif 
	-> vaal_hazak.rush() 
	return 
endf 

def node_026
	>> node_001 
	-> vaal_hazak.strong_bite() 
	return 
endf 

def node_027
	>> node_001 
	-> vaal_hazak.scratch_bite() 
	return 
endf 

def node_028
	>> node_001 
	-> vaal_hazak.tail_to_scratch() 
	return 
endf 

def node_029
	if self.angle_2d_cw_between(60,120) 
		>> node_027 
	elif self.angle_2d_cw_between(120,240) 
		>> node_028 
	elif self.angle_2d_cw_between(240,300) 
		>> node_027 
	else 
		>> node_016 
	endif 
	return 
endf 

def node_030
	>> node_001 
	if self.current_quest().is_rank(rank.AT) 
	else 
		>> node_006 
	endif 
	-> vaal_hazak.syouki_laser() 
	if self.enraged() 
		>> node_038 
	endif 
	return 
endf 

def node_031
	>> node_001 
	if self.current_quest().is_rank(rank.AT) 
		if function#102(5000) 
			-> vaal_hazak.syouki_drain_laser() 
			if self.enraged() 
				>> node_038 
			endif 
		else 
			>> node_025 
		endif 
	else 
		>> node_006 
		-> vaal_hazak.syouki_drain_laser() 
		if self.enraged() 
			>> node_038 
		endif 
	endif 
	return 
endf 

def node_032
	if function#101(1) 
		>> node_030 
	else 
		>> node_031 
	endif 
	return 
endf 

def node_033
	if function#101(1) 
		>> node_030 
	else 
		>> node_010 
	endif 
	return 
endf 

def node_034
	if function#101(1) 
		>> node_030 
	else 
		>> node_024 
	endif 
	return 
endf 

def node_035
	>> node_001 
	-> vaal_hazak.jump_attack_high() 
	return 
endf 

def node_036
	>> node_001 
	-> vaal_hazak.jump_attack_wall_down() 
	return 
endf 

def node_037
	random (33) 
				self.targetEnemy(21) @ parameter2:1000 
	elser (25) 
				self.targetEnemy(22) @ parameter2:1000 
	elser (18) 
				self.targetEnemy(11) @ parameter2:1000 
	elser (24) 
				self.targetEnemy(12) @ parameter2:1000 
	endr 
	return 
endf 

def node_038
	self.targetUnknown(48,0) 
	if self.distance_3d_to_target().leq(1000) 
		>> node_029 
	endif 
	return 
endf 

def node_039
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.vertical_distance_to_target().leq(1000) 
				if self.distance_3d_to_target().leq(3000) 
					if self.target.in_combat() 
						>> node_040 
					else 
						>> node_041 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_040
	if function#30(2) 
		random (70) 
		elser (0) >> node_042 
		elser (10) >> node_045 
		elser (20) >> node_044 
		endr 
	else 
		random (80) 
		elser (0) >> node_042 
		elser (20) >> node_045 
		elser (0) >> node_044 
		endr 
	endif 
	return 
endf 

def node_041
	if function#30(2) 
		random (80) 
		elser (0) >> node_042 
		elser (0) >> node_045 
		elser (20) >> node_044 
		endr 
	else 
		random (90) 
		elser (0) >> node_042 
		elser (10) >> node_045 
		elser (0) >> node_044 
		endr 
	endif 
	return 
endf 

def node_042
	>> node_001 
	>> node_005 
	-> vaal_hazak.threat_short() 
	return 
endf 

def node_043
endf 

def node_044
	if self.target_is(em.Odogaron) 
		if self.target(39) 
			self.force_area_change2() 
		else 
			>> node_042 
		endif 
	elif self.target_is(em.Rajang) 
		if self.target(39) 
			self.force_area_change2() 
		else 
			>> node_042 
		endif 
	elif self.target_is(em.Furious_Rajang) 
		if self.target(39) 
			self.force_area_change2() 
		else 
			>> node_042 
		endif 
	else 
		self.force_area_change2() 
	endif 
	return 
endf 

def node_045
	if self.vertical_distance_to_target().gt(500) 
		>> node_012 
	elif self.distance_3d_to_target().gt(2500) 
		random (40) >> node_026 
		elser (30) >> node_021 
		elser (20) >> node_032 
		elser (10) >> node_012 
		endr 
	else 
		>> node_020 
	endif 
	return 
endf 

def node_046
	>> node_001 
	if self.distance_3d_to_target().leq(1000) 
		return 
	else 
		-> vaal_hazak.dying_walk(2,1,5,1500,800) 
	endif 
	return 
endf 

def node_047
	>> node_001 
	-> vaal_hazak.lost_search() 
	return 
endf 

def node_048
	>> node_001 
	-> vaal_hazak.combat_search() 
	return 
endf 

def node_049
	>> node_001 
	-> vaal_hazak.anger_search() 
	return 
endf 

def node_050
	>> node_001 
	-> vaal_hazak.life_search() 
	return 
endf 

def node_051
	>> node_001 
	-> vaal_hazak.tired() 
	return 
endf 

def node_052
	>> node_001 
	-> vaal_hazak.refresh() 
	return 
endf 

def node_053
	if self.angle_2d_cw_between(30,330) 
		if self.flying() 
			-> vaal_hazak.turn_fly() 
		else 
			-> vaal_hazak.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_054
	if self.angle_2d_cw_between(60,300) 
		if self.flying() 
			-> vaal_hazak.turn_fly() 
		else 
			-> vaal_hazak.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_055
	if self.angle_2d_cw_between(90,270) 
		if self.flying() 
			-> vaal_hazak.turn_fly() 
		else 
			-> vaal_hazak.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_056
	>> node_001 
	-> vaal_hazak.walk(5) 
	return 
endf 

def node_057
	>> node_001 
	-> vaal_hazak.walk(1,5,0,1000) 
	return 
endf 

def node_058
	>> node_001 
	-> vaal_hazak.walk(2,5,0,3000) 
	return 
endf 

def node_059
	>> node_001 
	-> vaal_hazak.eat() 
	return 
endf 

def node_060
	>> node_001 
	-> vaal_hazak.rest() 
	return 
endf 

def node_061
	>> node_001 
	-> vaal_hazak.sleep() 
	return 
endf 

def node_062
	>> node_001 
	if function#C9() 
		-> vaal_hazak.dying_sleep(3,0,0,150) 
	else 
		function#CA() 
	endif 
	return 
endf 

def node_063
	if self.distance_2d_to_target().leq(600) 
	else 
		-> vaal_hazak.glide_combat(2,6,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_064
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> vaal_hazak.glide_combat(2,6,0,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_065
	if function#5A(20) 
		>> node_066 
	elif function#5A(21) 
		>> node_066 
	elif function#5A(22) 
		>> node_066 
	elif function#5A(23) 
		>> node_066 
	elif function#5A(24) 
		>> node_066 
	elif function#5A(25) 
		>> node_066 
	elif function#5A(30) 
		>> node_067 
	elif function#5A(31) 
		>> node_067 
	elif function#5A(32) 
		>> node_067 
	elif function#5A(33) 
		>> node_067 
	elif function#5A(34) 
		>> node_067 
	elif function#5A(35) 
		>> node_067 
	else 
		>> node_067 
	endif 
	return 
endf 

def node_066
	if self.distance_3d_to_target().leq(12000) 
		>> node_001 
		>> node_068 
	else 
		>> node_067 
	endif 
	return 
endf 

def node_067
	if function#AD() 
		>> node_068 
	else 
		>> node_069 
	endif 
	return 
endf 

def node_068
	if function#5A(10) 
		>> node_003 
	elif function#5A(11) 
		>> node_003 
	elif function#5A(12) 
		>> node_003 
	elif function#5A(13) 
		>> node_003 
	elif function#5A(14) 
		>> node_003 
	elif function#5A(15) 
		>> node_003 
	elif function#5A(30) 
		>> node_003 
	elif function#5A(31) 
		>> node_003 
	elif function#5A(32) 
		>> node_003 
	elif function#5A(33) 
		>> node_003 
	elif function#5A(34) 
		>> node_003 
	elif function#5A(35) 
		>> node_003 
	else 
		>> node_001 
	endif 
	if self.flying() 
		>> node_065 
	else 
		>> node_056 
	endif 
	return 
endf 

def node_069
	>> node_070 
	>> node_071 
	>> node_072 
	>> node_073 
	return 
endf 

def node_070
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_065 
	else 
		self.targetArea(target_area.area_center) 
		>> node_056 
		self.targetArea(target_area.area_aerial_center) 
		>> node_003 
	endif 
	return 
endf 

def node_071
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		self.targetArea(40) 
		>> node_065 
	else 
		self.targetArea(39) 
		>> node_056 
	endif 
	return 
endf 

def node_072
	if function#5A(10) 
	elif function#5A(11) 
	elif function#5A(12) 
	elif function#5A(13) 
	elif function#5A(14) 
	elif function#5A(15) 
	elif function#5A(30) 
	elif function#5A(31) 
	elif function#5A(32) 
	elif function#5A(33) 
	elif function#5A(34) 
	elif function#5A(35) 
	else 
		if self.flying() 
			self.targetArea(target_area.area_center) 
			>> node_001 
		else 
		endif 
	endif 
	return 
endf 

def node_073
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		>> node_065 
	else 
		>> node_056 
	endif 
	return 
endf 

def node_074
	if self.flying() 
		>> node_063 
	else 
		if self.in_combat() 
			>> node_008 
		else 
			>> node_056 
		endif 
	endif 
	return 
endf 

def node_075
	>> node_077 
	>> node_078 
	>> node_079 
	return 
endf 

def node_076
	if self.flying() 
		>> node_063 
	else 
		if self.in_combat() 
			>> node_007 
		else 
			>> node_056 
		endif 
	endif 
	return 
endf 

def node_077
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_063 
	else 
		self.targetArea(target_area.area_center) 
		if self.in_combat() 
			>> node_007 
		else 
			>> node_056 
		endif 
		self.targetArea(target_area.area_aerial_center) 
		>> node_003 
	endif 
	return 
endf 

def node_078
	if self.flying() 
		self.targetArea(40) 
		>> node_063 
	else 
		self.targetArea(39) 
		if self.in_combat() 
			>> node_007 
		else 
			>> node_056 
		endif 
	endif 
	return 
endf 

def node_079
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_001 
	else 
	endif 
	return 
endf 

def node_080
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> node_009 
		repeat 
	else 
	endif 
	return 
endf 

def node_081
	if self.current_quest().is_rank(rank.AT) 
		if function#101(2) 
		elif function#58(0,10) 
			if function#102(5000) 
				>> node_059 
			else 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

