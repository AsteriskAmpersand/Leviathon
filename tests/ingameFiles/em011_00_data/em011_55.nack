importactions Kirin as kirin

def node_000 : 1
	conclude 
endf 

def node_001 : 151
	if self.angle_2d_cw_between(90,270) 
		if self.distance_2d_to_target().gt(500) 
			>> node_005 
		elif self.distance_2d_to_target().leq(250) 
			>> node_004 
		else 
			>> node_003 
		else 
			>> node_003 
		endif 
	else 
		if self.distance_2d_to_target().gt(700) 
			>> node_005 
		elif self.distance_2d_to_target().leq(300) 
			>> node_004 
		else 
			>> node_003 
		endif 
	endif 
	>> node_047 
	return 
endf 

def node_002 : 203
	>> node_088 
	-> kirin.goround_containing() 
	>> node_001 
	return 
endf 

def node_003 : 153
	>> node_096 
	-> kirin.peripheral_lightning1() 
	return 
endf 

def node_004 : 154
	-> kirin.peripheral_lightning2() 
	return 
endf 

def node_005 : 155
	>> node_095 
	if self.angle_2d_cw_between(0,180) 
		-> kirin.peripheral_lightning3() 
	else 
		-> kirin.peripheral_lightning4() 
	endif 
	return 
endf 

def node_006 : 156
	>> node_095 
	if self.angle_2d_cw_between(0,180) 
		-> kirin.peripheral_lightning3() 
	else 
		-> kirin.peripheral_lightning4() 
	endif 
	return 
endf 

def node_007 : 152
	-> kirin.shock_attack() 
	return 
endf 

def node_008 : 204
	>> node_088 
	-> kirin.goround_containing() 
	-> kirin.shock_attack() 
	return 
endf 

def node_009 : 157
	>> node_097 
	-> kirin.head_butt() 
	return 
endf 

def node_010 : 205
	>> node_088 
	-> kirin.goround_containing() 
	-> kirin.head_butt() 
	return 
endf 

def node_011 : 200
	>> node_087 
	-> kirin.horn_attack() 
	>> node_009 
	return 
endf 

def node_012 : 181
	>> node_087 
	-> kirin.horn_attack() 
	>> node_001 
	return 
endf 

def node_013 : 191
	>> node_007 
	>> node_001 
	return 
endf 

def node_014 : 170
	>> node_095 
	-> kirin.horn_attack() 
	return 
endf 

def node_015 : 159
	-> kirin.back_kick() 
	return 
endf 

def node_016 : 161
	if self.distance_3d_to_target().leq(1000) 
		-> kirin.head_butt_rush() 
	else 
		-> kirin.head_butt_rush_loop() 
	endif 
	>> node_037 
	return 
endf 

def node_017 : 201
	if self.distance_3d_to_target().leq(1000) 
		-> kirin.head_butt_rush() 
	else 
		-> kirin.head_butt_rush_loop() 
	endif 
	return 
endf 

def node_018 : 160
	if self.distance_3d_to_target().leq(1000) 
		-> kirin.zigzag_step() 
	else 
		-> kirin.zigzag_step2() 
	endif 
	>> node_037 
	return 
endf 

def node_019 : 202
	if self.distance_3d_to_target().leq(1000) 
		-> kirin.zigzag_step() 
	else 
		-> kirin.zigzag_step2() 
	endif 
	return 
endf 

def node_020 : 158
	-> kirin.super_shock_attack() 
	>> node_047 
	return 
endf 

def node_021 : 214
	>> node_088 
	-> kirin.goround_containing() 
	>> node_020 
	return 
endf 

def node_022 : 199
	>> node_087 
	-> kirin.horn_attack() 
	>> node_020 
	return 
endf 

def node_023 : 168
	if self.current_quest().is_rank(rank.AT) 
		-> kirin.multi_lightning_strike_start() 
	elif self.current_quest().is_rank(rank.MR) 
		-> kirin.multi_lightning_strike_start() 
	else 
		-> kirin.lightning_strike_start() 
	endif 
	return 
endf 

def node_024 : 221
	-> kirin.lightning_strike_start() 
	return 
endf 

def node_025 : 166
	-> kirin.lightning_run_through() 
	return 
endf 

def node_026 : 167
	-> kirin.lightning_run_through_side() 
	return 
endf 

def node_027 : 206
	-> kirin.continuous_head_swing() 
	return 
endf 

def node_028 : 210
	>> node_027 
	if self.angle_2d_cw_between(90,270) 
		if self.distance_3d_to_target().leq(600) 
			>> node_015 
		else 
			>> node_047 
		endif 
	else 
		>> node_047 
	endif 
	return 
endf 

def node_029 : 211
	>> node_027 
	>> node_007 
	return 
endf 

def node_030 : 208
	>> node_088 
	-> kirin.goround_containing() 
	random (50) >> node_028 
	elser (50) >> node_029 
	endr 
	return 
endf 

def node_031 : 207
	>> node_088 
	if self.angle_2d_cw_between(90,270) 
		if self.distance_3d_to_target().leq(400) 
			>> node_015 
		else 
			>> node_030 
		endif 
	else 
		>> node_028 
	endif 
	return 
endf 

def node_032 : 212
	-> kirin.lightning_run_through_g() 
	>> node_002 
	return 
endf 

def node_033 : 215
	-> kirin.lightning_run_through_g() 
	>> node_021 
	return 
endf 

def node_034 : 218
	-> kirin.lightning_run_through_g_twice() 
	return 
endf 

def node_035 : 216
	-> kirin.lightning_run_through_side_g() 
	>> node_001 
	return 
endf 

def node_036 : 213
	-> kirin.lightning_run_through_side_g_twice() 
	return 
endf 

def node_037 : 177
	if self.distance_2d_to_target().gt(1000) 
		if function#101(2) 
			random (15) >> node_039 
						if self.enraged() 
							>> node_038 
						else 
						endif 
			elser (85) 
			endr 
		else 
			random (35) >> node_039 
						if self.enraged() 
							>> node_038 
						else 
						endif 
			elser (65) 
			endr 
		endif 
	else 
	endif 
	return 
endf 

def node_038 : 178
	if self.distance_3d_to_target().leq(1000) 
		random (50) >> node_014 
		elser (30) >> node_009 
		elser (20) >> node_001 
		endr 
	else 
		>> node_049 
	endif 
	return 
endf 

def node_039 : 163
	>> node_049 
	if self.angle_2d_cw_between(60,300) 
		if self.distance_2d_to_target().gt(1000) 
			-> kirin.walk_turn() 
		else 
			-> kirin.intimidation() 
		endif 
	else 
		-> kirin.intimidation() 
	endif 
	return 
endf 

def node_040 : 176
	>> node_049 
	if self.angle_2d_cw_between(60,300) 
		if self.distance_2d_to_target().gt(1000) 
			-> kirin.walk_turn() 
		else 
			-> kirin.walk_single() 
		endif 
	else 
		-> kirin.walk_single() 
	endif 
	return 
endf 

def node_041 : 165
	-> kirin.charge_transfer() 
	return 
endf 

def node_042 : 171
	if self.target.helpless_0() 
		if self.enraged() 
			random (30) >> node_043 
			elser (70) >> node_044 
			endr 
		elif function#101(2) 
			random (30) >> node_043 
			elser (70) >> node_044 
			endr 
		elif function#101() 
			random (50) >> node_044 
			elser (50) >> node_040 
			endr 
		else 
			random (80) >> node_044 
			elser (20) >> node_040 
			endr 
		endif 
	else 
		if function#101() 
			random (80) >> node_044 
			elser (20) >> node_040 
			endr 
		else 
		endif 
	endif 
	return 
endf 

def node_043 : 172
	if self.distance_2d_to_target().leq(400) >> node_004 
	elif self.distance_2d_to_target().leq(750) >> node_020 
	else 
		if self.current_quest().is_rank(rank.MR) 
			random (40) >> node_001 
			elser (30) >> node_023 
			elser (15) >> node_033 
			elser (15) >> node_036 
			endr 
		else 
			random (40) >> node_001 
			elser (30) >> node_023 
			elser (15) >> node_025 
			elser (15) >> node_026 
			endr 
		endif 
	endif 
	return 
endf 

def node_044 : 173
	return 
endf 

def node_045 : 174
	if function#101(2) 
	else 
		if self.current_quest().is_rank(rank.MR) 
			if [RegisterVar1 <= 15] 
				>> node_046 
			else 
				[RegisterVar1 ++] 
			endif 
		elif self.current_quest().is_rank(rank.AT) 
			if [RegisterVar1 <= 12] 
				>> node_046 
			else 
				[RegisterVar1 ++] 
			endif 
		elif function#B9() 
			if [RegisterVar1 <= 15] 
				>> node_046 
			else 
				[RegisterVar1 ++] 
			endif 
		elif self.current_quest().is_rank(rank.HR) 
			if [RegisterVar1 <= 25] 
				>> node_046 
			else 
				[RegisterVar1 ++] 
			endif 
		elif self.current_quest().is_rank(rank.LR) 
			if [RegisterVar1 <= 40] 
				>> node_046 
			else 
				[RegisterVar1 ++] 
			endif 
		else 
			if [RegisterVar1 <= 25] 
				>> node_046 
			else 
				[RegisterVar1 ++] 
			endif 
		endif 
	endif 
	return 
endf 

def node_046 : 175
	[RegisterVar1 |-] 
	-> kirin.charge_transfer() 
	return 
endf 

def node_047 : 192
	if function#101(2) 
		random (0) >> node_076 
		elser (100) 
		endr 
	elif function#101(1) 
		random (50) >> node_076 
		elser (50) 
		endr 
	else 
		random (80) >> node_076 
		elser (20) 
		endr 
	endif 
	return 
endf 

def node_048 : 195
	if self.current_quest().is_rank(rank.AT) 
		if self.distance_3d_to_target().leq(1000) 
			[RegisterVar4 |-] 
			return 
		else 
			if [RegisterVar4 <= 1] 
				[RegisterVar4 |-] 
				>> node_050 
				if function#2D(1) 
					reset 
				else 
				endif 
			else 
				[RegisterVar4 ++] 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_049 : 198
	if self.current_quest().is_rank(rank.AT) 
		[RegisterVar4 ++] 
	else 
	endif 
	return 
endf 

def node_050 : 196
	random (30) >> node_019 
	elser (20) >> node_017 
	elser (15) >> node_012 
	elser (20) >> node_011 
	elser (15) >> node_022 
	endr 
	return 
endf 

def node_051 : 40
	random (50) 
	elser (50) >> node_073 
	endr 
	return 
endf 

def node_052 : 68
	>> node_073 
	return 
endf 

def node_053 : 41
	if function#5A() 
		>> node_051 
	elif function#5A(1) 
		>> node_052 
	elif function#5A(2) 
		>> node_081 
	else 
		>> node_075 
	endif 
	return 
endf 

def node_054 : 44
	-> kirin.sleep() 
	return 
endf 

def node_055 : 42
	-> kirin.drink() 
	reset 
endf 

def node_056 : 33
	-> kirin.turn() 
	return 
endf 

def node_057 : 31
	if self.angle_2d_cw_between(30,330) 
		-> kirin.turn() 
	else 
	endif 
	return 
endf 

def node_058 : 32
	if self.angle_2d_cw_between(80,280) 
		-> kirin.turn() 
	else 
	endif 
	return 
endf 

def node_059 : 66
	if self.distance_3d_to_target().leq(800) 
		-> kirin.back_step() 
	elif self.angle_2d_cw_between(30,330) 
		-> kirin.quick_turn() 
	else 
	endif 
	return 
endf 

def node_060 : 45
	-> kirin.back_step() 
	return 
endf 

def node_061 : 111
	-> kirin.back_step() 
	return 
endf 

def node_062 : 10
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.vertical_distance_to_target().leq(1500) 
				if self.distance_3d_to_target().leq(3000) 
					if self.target_is(em.Kirin) 
						>> node_063 
					elif self.target_is(em.Gold_Rathian) 
						>> node_066 
					elif self.target_is(em.Silver_Rathalos) 
						>> node_066 
					elif self.target_is(em.Rajang) 
						>> node_065 
					elif self.target_is(em.Furious_Rajang) 
						>> node_065 
					elif function#30(2) 
						>> node_067 
					else 
						>> node_068 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_063 : 217
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		if [RegisterVar3 <= 10] 
			>> node_072 
			return 
		else 
			[RegisterVar3 ++] 
		endif 
	endif 
	return 
endf 

def node_064 : 222
	if self.target(39) 
		>> node_067 
	else 
		if self.target.in_combat() 
			random (25) >> node_069 
			elser (25) >> node_070 
			elser (50) >> node_071 
			endr 
		else 
			random (35) >> node_069 
			elser (50) >> node_070 
			elser (15) >> node_071 
			endr 
		endif 
	endif 
	return 
endf 

def node_065 : 224
	if self.target(39) 
		>> node_068 
	else 
		if self.target.in_combat() 
			random (20) >> node_069 
			elser (25) >> node_070 
			elser (55) >> node_071 
			endr 
		else 
			random (35) >> node_069 
			elser (50) >> node_070 
			elser (15) >> node_071 
			endr 
		endif 
	endif 
	return 
endf 

def node_066 : 223
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		>> node_072 
	endif 
	return 
endf 

def node_067 : 148
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		if [RegisterVar3 <= 5] 
			>> node_072 
			return 
		else 
		endif 
	endif 
	if self.target.in_combat() 
		random (25) >> node_069 
		elser (25) >> node_070 
		elser (50) >> node_071 
		endr 
	else 
		random (35) >> node_069 
		elser (50) >> node_070 
		elser (15) >> node_071 
		endr 
	endif 
	return 
endf 

def node_068 : 149
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	else 
		if [RegisterVar3 <= 8] 
			>> node_072 
			return 
		else 
		endif 
	endif 
	if self.target.in_combat() 
		random (20) >> node_069 
		elser (25) >> node_070 
		elser (55) >> node_071 
		endr 
	else 
		if self.target_is(em.Deviljho) 
			random (30) >> node_069 
			elser (0) >> node_070 
			elser (70) >> node_071 
			endr 
		elif self.target_is(em.Savage_Deviljho) 
			random (30) >> node_069 
			elser (0) >> node_070 
			elser (70) >> node_071 
			endr 
		else 
			random (35) >> node_069 
			elser (50) >> node_070 
			elser (15) >> node_071 
			endr 
		endif 
	endif 
	return 
endf 

def node_069 : 147
	[RegisterVar3 ++] 
	return 
endf 

def node_070 : 80
	[RegisterVar3 ++] 
	>> node_094 
	>> node_078 
	return 
endf 

def node_071 : 83
	if self.vertical_distance_to_target().gt(800) 
		[RegisterVar3 ++] 
		>> node_078 
	elif self.distance_3d_to_target().gt(1500) 
		>> node_089 
		repeat 
	else 
		[RegisterVar3 ++] 
		random (25) >> node_001 
		elser (25) >> node_089 
					>> node_020 
		elser (25) >> node_024 
		elser (25) >> node_016 
		endr 
	endif 
	return 
endf 

def node_072 : 82
	[RegisterVar3 |-] 
	self.force_area_change2() 
	return 
endf 

def node_073 : 54
	[RegisterVar2 ++] 
	if function#3C() 
		-> kirin.search_life() 
	else 
		-> kirin.search_life2() 
	endif 
	return 
endf 

def node_074 : 55
	if self.enraged() 
		-> kirin.search_life() 
	else 
		-> kirin.search_life() 
	endif 
	return 
endf 

def node_075 : 56
	-> kirin.search_life() 
	return 
endf 

def node_076 : 53
	-> kirin.refresh() 
	return 
endf 

def node_077 : 52
	>> node_039 
	return 
endf 

def node_078 : 23
	-> kirin.intimidation() 
	return 
endf 

def node_079 : 50
	-> kirin.combat_sign() 
	return 
endf 

def node_080 : 20
	-> kirin.combat_sign() 
	return 
endf 

def node_081 : 74
	>> node_057 
	-> kirin.drink() 
	return 
endf 

def node_082 : 85
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.walk(2,1,5,1500,400) 
	endif 
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.walk(2,1,5,1500,400) 
	endif 
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.walk(2,1,5,1500,400) 
	endif 
	return 
endf 

def node_083 : 46
	if self.distance_3d_to_target().leq(600) 
		return 
	else 
		-> kirin.dash(2,1,0,500,500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
		return 
	else 
		-> kirin.dash(2,1,0,500,500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
		return 
	else 
		-> kirin.dash(2,1,0,500,500) 
	endif 
	return 
endf 

def node_084 : 180
	if self.distance_3d_to_target().leq(1000) 
		return 
	else 
		-> kirin.dash(2,1,0,500,900) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
		return 
	else 
		-> kirin.dash(2,1,0,500,900) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
		return 
	else 
		-> kirin.dash(2,1,0,500,900) 
	endif 
	return 
endf 

def node_085 : 182
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.dash(2,1,0,1200,400) 
	endif 
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.dash(2,1,0,1200,400) 
	endif 
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.dash(2,1,0,1200,400) 
	endif 
	return 
endf 

def node_086 : 36
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.dash(2,1,0,800,500) 
	endif 
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.dash(2,1,0,800,500) 
	endif 
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.dash(2,1,0,800,500) 
	endif 
	return 
endf 

def node_087 : 190
	if self.distance_3d_to_target().leq(700) 
		return 
	else 
		-> kirin.dash(2,1,0,1200,700) 
	endif 
	if self.distance_3d_to_target().leq(700) 
		return 
	else 
		-> kirin.dash(2,1,0,1200,700) 
	endif 
	if self.distance_3d_to_target().leq(700) 
		return 
	else 
		-> kirin.dash(2,1,0,1200,700) 
	endif 
	return 
endf 

def node_088 : 209
	if self.distance_3d_to_target().leq(750) 
		return 
	else 
		-> kirin.dash(2,1,0,1200,750) 
	endif 
	if self.distance_3d_to_target().leq(750) 
		return 
	else 
		-> kirin.dash(2,1,0,1200,750) 
	endif 
	if self.distance_3d_to_target().leq(750) 
		return 
	else 
		-> kirin.dash(2,1,0,1200,750) 
	endif 
	return 
endf 

def node_089 : 98
	if self.distance_3d_to_target().leq(1000) 
		return 
	else 
		-> kirin.dash(2,1,0,800,1000) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
		return 
	else 
		-> kirin.dash(2,1,0,800,1000) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
		return 
	else 
		-> kirin.dash(2,1,0,800,1000) 
	endif 
	return 
endf 

def node_090 : 145
	if self.distance_3d_to_target().leq(3000) 
		return 
	else 
		-> kirin.dash(2,1,0,800,2500) 
	endif 
	if self.distance_3d_to_target().leq(3000) 
		return 
	else 
		-> kirin.dash(2,1,0,800,2500) 
	endif 
	if self.distance_3d_to_target().leq(3000) 
		return 
	else 
		-> kirin.dash(2,1,0,800,2500) 
	endif 
	return 
endf 

def node_091 : 94
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.dash(2,1,0,800,500) 
	endif 
	repeat 
endf 

def node_092 : 188
	if self.distance_3d_to_target().leq(850) 
		return 
	else 
		-> kirin.dash(2,1,0,800,750) 
	endif 
	repeat 
endf 

def node_093 : 220
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.dash(2,1,0,500,500) 
	endif 
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.dash(2,1,0,500,500) 
	endif 
	if self.distance_3d_to_target().leq(500) 
		return 
	else 
		-> kirin.dash(2,1,0,500,500) 
	endif 
	return 
endf 

def node_094 : 9
	>> node_098 
	return 
endf 

def node_095 : 34
	if self.angle_2d_cw_between(30,330) 
		>> node_098 
	else 
	endif 
	return 
endf 

def node_096 : 35
	if self.angle_2d_cw_between(60,300) 
		>> node_098 
	else 
	endif 
	return 
endf 

def node_097 : 86
	if self.angle_2d_cw_between(90,270) 
		>> node_098 
	else 
	endif 
	return 
endf 

def node_098 : 162
	if self.angle_2d_cw_between(45,315) 
		-> kirin.jump_turn() 
	else 
		-> kirin.quick_turn() 
	endif 
	return 
endf 

def node_099 : 164
	>> node_095 
	-> kirin.front_step() 
	return 
endf 

def node_100 : 24
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5D() 
		function#5E() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_101 
		self.targetArea(4) 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
	endif 
	return 
endf 

def node_101 : 25
	if self.angle_2d_cw_between(90,270) 
		>> node_103 
	elif self.distance_3d_to_target().gt(3000) 
		>> node_103 
	else 
		>> node_102 
	endif 
	return 
endf 

def node_102 : 26
	-> kirin.search_life() 
	return 
endf 

def node_103 : 27
	-> kirin.search_life() 
	return 
endf 

def node_104 : 30
	self.targetArea(19) 
	if self.distance_2d_to_target().gt(1000) 
		>> node_091 
		repeat 
	else 
		>> node_105 
	endif 
	return 
endf 

def node_105 : 29
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_057 
	>> node_112 
	return 
endf 

def node_106 : 142
	>> node_090 
	>> node_016 
	return 
endf 

def node_107 : 143
	>> node_090 
	>> node_090 
	if self.distance_2d_to_target().leq(3000) 
		random (15) >> node_096 
					>> node_080 
		elser (30) 
					>> node_023 
		elser (55) >> node_095 
					>> node_001 
		endr 
	else 
		>> node_078 
	endif 
	return 
endf 

def node_108 : 146
	>> node_089 
	>> node_020 
	return 
endf 

def node_109 : 219
	if function#7F() 
		random (35) >> node_001 
		elser (35) >> node_018 
		elser (15) >> node_007 
		elser (15) >> node_015 
		endr 
	elif function#7F(2) 
		random (35) >> node_001 
		elser (35) >> node_018 
		elser (15) >> node_007 
		elser (15) >> node_015 
		endr 
	elif function#7F(1) 
		random (30) >> node_001 
		elser (25) >> node_018 
		elser (15) >> node_007 
		elser (30) >> node_015 
		endr 
	elif function#7F(3) 
		random (30) >> node_001 
		elser (25) >> node_018 
		elser (15) >> node_007 
		elser (30) >> node_015 
		endr 
	else 
		random (30) >> node_001 
		elser (25) >> node_018 
		elser (15) >> node_007 
		elser (30) >> node_015 
		endr 
	endif 
	return 
endf 

def node_110 : 183
	self.targetArea(19) 
	if self.distance_3d_recalc_to_target().gt(1000) 
		>> node_091 
	else 
	endif 
	return 
endf 

def node_111 : 184
	random (15) -> kirin.wait() 
	elser (5) -> kirin.sniff_s() 
	elser (20) -> kirin.sniff_l() 
	elser (20) -> kirin.search_battle() 
	elser (30) -> kirin.search_half_lost_flont() 
	elser (10) -> kirin.search_half_lost_back() 
	endr 
	return 
endf 

def node_112 : 185
	random (37) -> kirin.wait() 
	elser (23) -> kirin.search_battle() 
	elser (40) -> kirin.combat_sign() 
	endr 
	return 
endf 

def node_113 : 186
	-> kirin.wait() 
	return 
endf 

def node_114 : 187
	-> kirin.walk(2,1,5,1500,400) 
	return 
endf 

def node_115 : 193
	if self.target(52) 
		>> node_086 
	elif self.vertical_distance_to_target().gt(450) 
		>> node_093 
	else 
	endif 
	return 
endf 

