importactions Alatreon as alatreon

def node_000
	conclude 
endf 

def node_001
	if self.flying() 
		if function#AF(5000) 
			-> alatreon.landing() 
		else 
			>> node_003 
		endif 
	else 
	endif 
	return 
endf 

def node_002
	if self.flying() 
	else 
		-> alatreon.take_off() 
	endif 
	return 
endf 

def node_003
	self.targetArea(target_area.area_aerial_center) 
	>> node_232 
	self.targetArea(target_area.area_center) 
	-> alatreon.landing() 
	return 
endf 

def node_004
endf 

def node_005
	if self.distance_2d_to_target().leq(4000) 
		[RegisterVar6 ++] 
		if function#101(3) 
			if self.enraged() 
				if [RegisterVar6 >= 1] 
					>> node_006 
				elif [RegisterVar6 <= 4] 
					[RegisterVar6 |-] 
					>> node_007 
				else 
					random (60) 
								>> node_006 
					elser (40) 
								[RegisterVar6 |-] 
								>> node_007 
					endr 
				endif 
			else 
				if [RegisterVar6 >= 1] 
					>> node_006 
				elif [RegisterVar6 <= 5] 
					[RegisterVar6 |-] 
					>> node_007 
				else 
					random (60) 
								>> node_006 
					elser (40) 
								[RegisterVar6 |-] 
								>> node_007 
					endr 
				endif 
			endif 
		else 
			if self.enraged() 
				if [RegisterVar6 >= 2] 
					>> node_006 
				elif [RegisterVar6 <= 4] 
					[RegisterVar6 |-] 
					>> node_007 
				else 
					random (60) 
								>> node_006 
					elser (40) 
								[RegisterVar6 |-] 
								>> node_007 
					endr 
				endif 
			else 
				if [RegisterVar6 >= 2] 
					>> node_006 
				elif [RegisterVar6 <= 5] 
					[RegisterVar6 |-] 
					>> node_007 
				else 
					random (60) 
								>> node_006 
					elser (40) 
								[RegisterVar6 |-] 
								>> node_007 
					endr 
				endif 
			endif 
		endif 
	else 
		[RegisterVar6 |-] 
		>> node_007 
	endif 
	return 
endf 

def node_006
	if function#101(1) 
		>> node_015 
		>> node_080 
	elif function#101(2) 
		>> node_037 
		>> node_081 
	else 
		if [RegisterVar2 <= 4] 
			>> node_059 
		else 
			if function#104() 
				>> node_015 
			else 
				>> node_037 
			endif 
		endif 
		>> node_084 
	endif 
	return 
endf 

def node_007
	if function#101(1) 
		>> node_025 
		>> node_082 
	elif function#101(2) 
		>> node_047 
		>> node_083 
	else 
		if [RegisterVar2 <= 4] 
			>> node_068 
		else 
			if function#104() 
				>> node_025 
			else 
				>> node_047 
			endif 
		endif 
		>> node_084 
	endif 
	return 
endf 

def node_008
	if self.distance_2d_to_target().leq(4000) 
		[RegisterVar3 ++] 
		if self.enraged() 
			if [RegisterVar3 >= 1] 
				>> node_009 
			elif [RegisterVar3 <= 3] 
				[RegisterVar3 |-] 
				>> node_010 
			else 
				random (65) 
							>> node_009 
				elser (35) 
							[RegisterVar3 |-] 
							>> node_010 
				endr 
			endif 
		else 
			if [RegisterVar3 >= 1] 
				>> node_009 
			elif [RegisterVar3 <= 3] 
				[RegisterVar3 |-] 
				>> node_010 
			else 
				random (65) 
							>> node_009 
				elser (35) 
							[RegisterVar3 |-] 
							>> node_010 
				endr 
			endif 
		endif 
	else 
		[RegisterVar3 |-] 
		>> node_010 
	endif 
	return 
endf 

def node_009
	if function#101(1) 
		>> node_143 
		>> node_154 
	elif function#101(2) 
		>> node_148 
		>> node_155 
	else 
		if function#104() 
			>> node_148 
		else 
			>> node_143 
		endif 
		>> node_156 
	endif 
	return 
endf 

def node_010
	if function#101(1) 
		>> node_145 
		>> node_154 
	elif function#101(2) 
		>> node_150 
		>> node_155 
	else 
		if function#104() 
			>> node_150 
		else 
			>> node_145 
		endif 
		>> node_156 
	endif 
	return 
endf 

def node_011
endf 

def node_012
	if function#101(3) 
		if [RegisterVar2 <= 4] 
			>> node_111 
			return 
		else 
		endif 
	else 
	endif 
	if [RegisterVar9 == 5] 
		random (50) >> node_106 
		elser (50) >> node_111 
		endr 
	elif [RegisterVar9 == 6] 
		random (50) >> node_106 
		elser (50) >> node_111 
		endr 
	else 
		if function#101(3) 
			if [RegisterVar2 <= 4] 
				[RegisterVar9 |-] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
			else 
				[RegisterVar9 |-] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
			endif 
		else 
			[RegisterVar9 |-] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
		endif 
		>> node_117 
	endif 
	return 
endf 

def node_013
	if function#101(3) 
		if [RegisterVar2 <= 4] 
			>> node_111 
			return 
		else 
		endif 
	else 
	endif 
	if function#101(3) 
		if [RegisterVar2 <= 4] 
			[RegisterVar9 |-] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
		else 
			[RegisterVar9 |-] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
		endif 
	else 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	endif 
	>> node_117 
	return 
endf 

def node_014
	if function#101(3) 
		if [RegisterVar2 <= 4] 
			>> node_111 
			return 
		else 
		endif 
	else 
	endif 
	if [RegisterVar9 == 5] 
		>> node_111 
	elif [RegisterVar9 == 6] 
		>> node_111 
	else 
		if function#101(3) 
			if [RegisterVar2 <= 4] 
				[RegisterVar9 |-] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
			else 
				[RegisterVar9 |-] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
				[RegisterVar9 ++] 
			endif 
		else 
			[RegisterVar9 |-] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
			[RegisterVar9 ++] 
		endif 
		>> node_118 
	endif 
	return 
endf 

def node_015
	if self.target.helpless_0() 
		random (40) 
					return 
		elser (60) 
		endr 
	elif self.target.helpless_1() 
		random (40) 
					return 
		elser (60) 
		endr 
	else 
	endif 
	if [RegisterVar8 == 1] 
		random (50) >> node_016 
		elser (0) >> node_017 
		elser (50) >> node_018 
		endr 
	elif [RegisterVar8 == 2] 
		random (50) >> node_016 
		elser (50) >> node_017 
		elser (0) >> node_018 
		endr 
	else 
		random (0) >> node_016 
		elser (50) >> node_017 
		elser (50) >> node_018 
		endr 
	endif 
	return 
endf 

def node_016
	[RegisterVar8 |-] 
	return 
endf 

def node_017
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(450) 
		random (75) >> node_012 
		elser (25) >> node_135 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(875) 
		random (75) >> node_106 
		elser (25) >> node_135 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (75) >> node_107 
		elser (25) >> node_135 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(2250) 
		random (25) >> node_135 
		elser (75) >> node_120 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (15) >> node_112 
		elser (85) >> node_120 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (100) >> node_120 
		elser (0) 
		endr 
	else 
		>> node_024 
	endif 
	return 
endf 

def node_018
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(400) 
		random (25) >> node_111 
					>> node_022 
		elser (25) >> node_115 
		elser (50) >> node_135 
					>> node_019 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(875) 
		random (70) >> node_106 
					>> node_020 
		elser (30) >> node_135 
					>> node_019 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (70) >> node_107 
					>> node_021 
		elser (30) >> node_135 
					>> node_019 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(2250) 
		random (30) >> node_135 
					>> node_019 
		elser (70) >> node_120 
					>> node_023 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (20) >> node_111 
					>> node_022 
		elser (20) >> node_116 
		elser (60) >> node_120 
					>> node_023 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (20) >> node_111 
					>> node_022 
		elser (20) >> node_116 
		elser (60) >> node_120 
					>> node_023 
		elser (0) 
		endr 
	else 
		>> node_024 
	endif 
	return 
endf 

def node_019
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (100) >> node_013 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(875) 
			random (100) >> node_106 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (100) >> node_107 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (0) >> node_111 
			elser (100) >> node_120 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_120 
			elser (0) 
			endr 
		else 
			>> node_024 
		endif 
	endif 
	return 
endf 

def node_020
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(475) 
			random (100) >> node_013 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(875) 
			random (100) >> node_013 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (100) >> node_107 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (0) >> node_111 
			elser (100) >> node_120 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_120 
			elser (0) 
			endr 
		else 
			>> node_024 
		endif 
	endif 
	return 
endf 

def node_021
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (100) >> node_013 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (100) >> node_106 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (65) >> node_111 
			elser (35) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (0) >> node_111 
			elser (100) >> node_120 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_120 
			elser (0) 
			endr 
		else 
			>> node_024 
		endif 
	endif 
	return 
endf 

def node_022
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(400) 
			random (60) >> node_013 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(875) 
			random (60) >> node_106 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (60) >> node_107 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (0) >> node_111 
			elser (100) >> node_120 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_120 
			elser (0) 
			endr 
		else 
			>> node_024 
		endif 
	endif 
	return 
endf 

def node_023
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (60) >> node_013 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(875) 
			random (60) >> node_106 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (60) >> node_107 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (100) >> node_112 
			elser (0) >> node_120 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_112 
			elser (0) >> node_120 
			elser (0) 
			endr 
		else 
			>> node_024 
		endif 
	endif 
	return 
endf 

def node_024
	>> node_217 
	if self.distance_2d_to_target().leq(450) 
	elif self.distance_2d_to_target().leq(850) 
		>> node_106 
	elif self.distance_2d_to_target().leq(1400) 
		>> node_107 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_111 
	elif self.distance_2d_to_target().leq(3000) 
		random (50) >> node_120 
		elser (50) >> node_115 
		endr 
	else 
	endif 
	return 
endf 

def node_025
	if self.target.helpless_0() 
		random (40) 
					return 
		elser (60) 
		endr 
	elif self.target.helpless_1() 
		random (40) 
					return 
		elser (60) 
		endr 
	else 
	endif 
	if [RegisterVar8 == 1] 
		random (0) >> node_026 
		elser (0) >> node_027 
		elser (100) >> node_028 
		endr 
	elif [RegisterVar8 == 2] 
		random (0) >> node_026 
		elser (100) >> node_027 
		elser (0) >> node_028 
		endr 
	else 
		random (0) >> node_026 
		elser (50) >> node_027 
		elser (50) >> node_028 
		endr 
	endif 
	return 
endf 

def node_026
	[RegisterVar8 |-] 
	return 
endf 

def node_027
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(450) 
		random (45) >> node_112 
		elser (55) >> node_121 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (45) >> node_112 
		elser (55) >> node_121 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (45) >> node_112 
		elser (55) >> node_121 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (40) >> node_111 
		elser (60) >> node_014 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (40) >> node_111 
		elser (60) >> node_014 
		elser (0) 
		endr 
	else 
		>> node_036 
	endif 
	return 
endf 

def node_028
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(450) 
		random (15) >> node_111 
					>> node_032 
		elser (15) >> node_116 
		elser (20) >> node_121 
					>> node_034 
		elser (50) >> node_135 
					>> node_029 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (25) >> node_106 
					>> node_030 
		elser (10) >> node_116 
		elser (15) >> node_121 
					>> node_034 
		elser (50) >> node_135 
					>> node_029 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (25) >> node_107 
					>> node_031 
		elser (10) >> node_116 
		elser (15) >> node_121 
					>> node_034 
		elser (50) >> node_135 
					>> node_029 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(2250) 
		random (10) >> node_116 
		elser (50) >> node_135 
					>> node_029 
		elser (40) >> node_120 
					>> node_035 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (40) >> node_115 
		elser (60) >> node_120 
					>> node_035 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (40) >> node_115 
		elser (60) >> node_120 
					>> node_035 
		elser (0) 
		endr 
	else 
		>> node_036 
	endif 
	return 
endf 

def node_029
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (40) >> node_112 
			elser (60) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (40) >> node_112 
			elser (60) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (40) >> node_112 
			elser (60) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (100) >> node_112 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_112 
			elser (0) 
			endr 
		else 
			>> node_036 
		endif 
	endif 
	return 
endf 

def node_030
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (40) >> node_112 
			elser (60) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (40) >> node_112 
			elser (60) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (40) >> node_112 
			elser (60) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (100) >> node_112 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_112 
			elser (0) 
			endr 
		else 
			>> node_036 
		endif 
	endif 
	return 
endf 

def node_031
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (40) >> node_112 
			elser (60) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (40) >> node_112 
			elser (60) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (40) >> node_112 
			elser (60) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (100) >> node_112 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_112 
			elser (0) 
			endr 
		else 
			>> node_036 
		endif 
	endif 
	return 
endf 

def node_032
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (0) >> node_111 
			elser (100) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (0) >> node_106 
			elser (100) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (0) >> node_107 
			elser (100) >> node_121 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (100) >> node_120 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_120 
			elser (0) 
			endr 
		else 
			>> node_036 
		endif 
	endif 
	return 
endf 

def node_033
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (0) >> node_112 
			elser (100) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (0) >> node_112 
			elser (100) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (0) >> node_112 
			elser (100) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (100) >> node_120 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_120 
			elser (0) 
			endr 
		else 
			>> node_036 
		endif 
	endif 
	return 
endf 

def node_034
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (100) >> node_112 
			elser (0) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (100) >> node_112 
			elser (0) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (100) >> node_112 
			elser (0) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (0) >> node_112 
			elser (100) >> node_120 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (0) >> node_112 
			elser (100) >> node_120 
			elser (0) 
			endr 
		else 
			>> node_036 
		endif 
	endif 
	return 
endf 

def node_035
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (50) >> node_111 
			elser (50) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (50) >> node_106 
			elser (50) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (50) >> node_107 
			elser (50) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (50) >> node_111 
			elser (50) >> node_014 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (50) >> node_111 
			elser (50) >> node_014 
			elser (0) 
			endr 
		else 
			>> node_036 
		endif 
	endif 
	return 
endf 

def node_036
	>> node_217 
	if self.distance_2d_to_target().leq(450) 
	elif self.distance_2d_to_target().leq(850) 
		>> node_106 
	elif self.distance_2d_to_target().leq(1400) 
		>> node_107 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_111 
	elif self.distance_2d_to_target().leq(3000) 
		random (50) >> node_120 
		elser (50) >> node_115 
		endr 
	else 
	endif 
	return 
endf 

def node_037
	if self.target.helpless_0() 
		random (40) 
					return 
		elser (60) 
		endr 
	elif self.target.helpless_1() 
		random (40) 
					return 
		elser (60) 
		endr 
	else 
	endif 
	if [RegisterVar8 == 1] 
		random (50) >> node_038 
		elser (0) >> node_039 
		elser (50) >> node_040 
		endr 
	elif [RegisterVar8 == 2] 
		random (50) >> node_038 
		elser (50) >> node_039 
		elser (0) >> node_040 
		endr 
	else 
		random (0) >> node_038 
		elser (50) >> node_039 
		elser (50) >> node_040 
		endr 
	endif 
	return 
endf 

def node_038
	[RegisterVar8 |-] 
	return 
endf 

def node_039
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(450) 
		random (75) >> node_012 
		elser (25) >> node_135 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(875) 
		random (75) >> node_106 
		elser (25) >> node_135 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (75) >> node_107 
		elser (25) >> node_135 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(2250) 
		random (25) >> node_135 
		elser (75) >> node_129 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (15) >> node_112 
		elser (85) >> node_129 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (100) >> node_129 
		elser (0) 
		endr 
	else 
		>> node_046 
	endif 
	return 
endf 

def node_040
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(400) 
		random (25) >> node_111 
					>> node_044 
		elser (25) >> node_115 
		elser (50) >> node_135 
					>> node_041 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(875) 
		random (70) >> node_106 
					>> node_042 
		elser (30) >> node_135 
					>> node_041 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (70) >> node_107 
					>> node_043 
		elser (30) >> node_135 
					>> node_041 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(2250) 
		random (30) >> node_135 
					>> node_041 
		elser (70) >> node_129 
					>> node_045 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (20) >> node_111 
					>> node_044 
		elser (20) >> node_116 
		elser (60) >> node_129 
					>> node_045 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (20) >> node_111 
					>> node_044 
		elser (20) >> node_116 
		elser (60) >> node_129 
					>> node_045 
		elser (0) 
		endr 
	else 
		>> node_046 
	endif 
	return 
endf 

def node_041
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (100) >> node_013 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(875) 
			random (100) >> node_106 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (100) >> node_107 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (0) >> node_111 
			elser (100) >> node_129 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_129 
			elser (0) 
			endr 
		else 
			>> node_046 
		endif 
	endif 
	return 
endf 

def node_042
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(475) 
			random (100) >> node_013 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(875) 
			random (100) >> node_013 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (100) >> node_107 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (0) >> node_111 
			elser (100) >> node_129 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_129 
			elser (0) 
			endr 
		else 
			>> node_046 
		endif 
	endif 
	return 
endf 

def node_043
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (100) >> node_013 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (100) >> node_106 
			elser (0) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (65) >> node_111 
			elser (35) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (0) >> node_111 
			elser (100) >> node_129 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_129 
			elser (0) 
			endr 
		else 
			>> node_046 
		endif 
	endif 
	return 
endf 

def node_044
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(400) 
			random (60) >> node_013 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(875) 
			random (60) >> node_106 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (60) >> node_107 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (0) >> node_111 
			elser (100) >> node_129 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_129 
			elser (0) 
			endr 
		else 
			>> node_046 
		endif 
	endif 
	return 
endf 

def node_045
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (60) >> node_013 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(875) 
			random (60) >> node_106 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (60) >> node_107 
			elser (40) >> node_135 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (100) >> node_112 
			elser (0) >> node_129 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_112 
			elser (0) >> node_129 
			elser (0) 
			endr 
		else 
			>> node_046 
		endif 
	endif 
	return 
endf 

def node_046
	>> node_217 
	if self.distance_2d_to_target().leq(450) 
	elif self.distance_2d_to_target().leq(850) 
		>> node_106 
	elif self.distance_2d_to_target().leq(1400) 
		>> node_107 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_111 
	elif self.distance_2d_to_target().leq(3000) 
		random (50) >> node_129 
		elser (50) >> node_115 
		endr 
	else 
	endif 
	return 
endf 

def node_047
	if self.target.helpless_0() 
		random (40) 
					return 
		elser (60) 
		endr 
	elif self.target.helpless_1() 
		random (40) 
					return 
		elser (60) 
		endr 
	else 
	endif 
	if [RegisterVar8 == 1] 
		random (0) >> node_048 
		elser (0) >> node_049 
		elser (100) >> node_050 
		endr 
	elif [RegisterVar8 == 2] 
		random (0) >> node_048 
		elser (100) >> node_049 
		elser (0) >> node_050 
		endr 
	else 
		random (0) >> node_048 
		elser (50) >> node_049 
		elser (50) >> node_050 
		endr 
	endif 
	return 
endf 

def node_048
	[RegisterVar8 |-] 
	return 
endf 

def node_049
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(450) 
		random (45) >> node_112 
		elser (55) >> node_126 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (45) >> node_112 
		elser (55) >> node_126 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (45) >> node_112 
		elser (55) >> node_126 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (40) >> node_111 
		elser (60) >> node_014 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (40) >> node_111 
		elser (60) >> node_014 
		elser (0) 
		endr 
	else 
		>> node_058 
	endif 
	return 
endf 

def node_050
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(450) 
		random (15) >> node_111 
					>> node_054 
		elser (15) >> node_116 
		elser (20) >> node_126 
					>> node_056 
		elser (50) >> node_135 
					>> node_051 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (25) >> node_106 
					>> node_052 
		elser (10) >> node_116 
		elser (15) >> node_126 
					>> node_056 
		elser (50) >> node_135 
					>> node_051 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (25) >> node_107 
					>> node_053 
		elser (10) >> node_116 
		elser (15) >> node_126 
					>> node_056 
		elser (50) >> node_135 
					>> node_051 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(2250) 
		random (10) >> node_116 
		elser (50) >> node_135 
					>> node_051 
		elser (40) >> node_129 
					>> node_057 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (40) >> node_115 
		elser (60) >> node_129 
					>> node_057 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (40) >> node_115 
		elser (60) >> node_129 
					>> node_057 
		elser (0) 
		endr 
	else 
		>> node_058 
	endif 
	return 
endf 

def node_051
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (40) >> node_112 
			elser (60) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (40) >> node_112 
			elser (60) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (40) >> node_112 
			elser (60) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(2000) 
			random (100) >> node_112 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_112 
			elser (0) 
			endr 
		else 
			>> node_058 
		endif 
	endif 
	return 
endf 

def node_052
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (40) >> node_112 
			elser (60) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (40) >> node_112 
			elser (60) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (40) >> node_112 
			elser (60) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(2000) 
			random (100) >> node_112 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_112 
			elser (0) 
			endr 
		else 
			>> node_058 
		endif 
	endif 
	return 
endf 

def node_053
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (40) >> node_112 
			elser (60) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (40) >> node_112 
			elser (60) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (40) >> node_112 
			elser (60) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(2000) 
			random (100) >> node_112 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_112 
			elser (0) 
			endr 
		else 
			>> node_058 
		endif 
	endif 
	return 
endf 

def node_054
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (0) >> node_112 
			elser (100) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (0) >> node_112 
			elser (100) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (0) >> node_112 
			elser (100) >> node_126 
			endr 
		elif self.distance_2d_to_target().leq(2000) 
			random (100) >> node_129 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_129 
			elser (0) 
			endr 
		else 
			>> node_058 
		endif 
	endif 
	return 
endf 

def node_055
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (0) >> node_111 
			elser (100) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (0) >> node_106 
			elser (100) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (0) >> node_107 
			elser (100) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (100) >> node_129 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (100) >> node_129 
			elser (0) 
			endr 
		else 
			>> node_058 
		endif 
	endif 
	return 
endf 

def node_056
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (100) >> node_112 
			elser (0) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (100) >> node_112 
			elser (0) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (100) >> node_112 
			elser (0) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(3000) 
			random (0) >> node_112 
			elser (100) >> node_129 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (0) >> node_112 
			elser (100) >> node_129 
			elser (0) 
			endr 
		else 
			>> node_058 
		endif 
	endif 
	return 
endf 

def node_057
	if self.target.helpless_0() 
	elif self.target.helpless_1() 
	elif self.target(44) 
	else 
		if self.distance_2d_to_target().leq(450) 
			random (50) >> node_111 
			elser (50) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(900) 
			random (50) >> node_106 
			elser (50) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(1400) 
			random (50) >> node_107 
			elser (50) >> node_135 
			endr 
		elif self.distance_2d_to_target().leq(2000) 
			random (50) >> node_111 
			elser (50) >> node_014 
			elser (0) 
			endr 
		elif self.distance_2d_to_target().leq(3500) 
			random (50) >> node_111 
			elser (50) >> node_014 
			elser (0) 
			endr 
		else 
			>> node_058 
		endif 
	endif 
	return 
endf 

def node_058
	>> node_217 
	if self.distance_2d_to_target().leq(450) 
	elif self.distance_2d_to_target().leq(850) 
		>> node_106 
	elif self.distance_2d_to_target().leq(1400) 
		>> node_107 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_111 
	elif self.distance_2d_to_target().leq(3000) 
		random (50) >> node_129 
		elser (50) >> node_115 
		endr 
	else 
	endif 
	return 
endf 

def node_059
	if self.target.helpless_0() 
		random (40) 
					return 
		elser (60) 
		endr 
	elif self.target.helpless_1() 
		random (40) 
					return 
		elser (60) 
		endr 
	else 
	endif 
	if [RegisterVar8 == 1] 
		random (50) >> node_060 
		elser (0) >> node_061 
		elser (50) >> node_062 
		endr 
	elif [RegisterVar8 == 2] 
		random (50) >> node_060 
		elser (50) >> node_061 
		elser (0) >> node_062 
		endr 
	else 
		random (0) >> node_060 
		elser (50) >> node_061 
		elser (50) >> node_062 
		endr 
	endif 
	return 
endf 

def node_060
	[RegisterVar8 |-] 
	return 
endf 

def node_061
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(450) 
		random (75) >> node_111 
		elser (25) >> node_135 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (75) >> node_106 
		elser (25) >> node_135 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (75) >> node_107 
		elser (25) >> node_135 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(2250) 
		random (20) >> node_135 
		elser (40) >> node_120 
		elser (40) >> node_129 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (10) >> node_112 
		elser (45) >> node_120 
		elser (45) >> node_129 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (50) >> node_120 
		elser (50) >> node_129 
		elser (0) 
		endr 
	else 
		random (50) >> node_024 
		elser (50) >> node_046 
		endr 
	endif 
	return 
endf 

def node_062
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(400) 
		random (25) >> node_111 
					>> node_066 
		elser (25) >> node_115 
		elser (50) >> node_135 
					>> node_063 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(875) 
		random (70) >> node_106 
					>> node_064 
		elser (30) >> node_135 
					>> node_063 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (70) >> node_107 
					>> node_065 
		elser (30) >> node_135 
					>> node_063 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(2250) 
		random (30) >> node_135 
					>> node_063 
		elser (35) >> node_120 
					>> node_067 
		elser (35) >> node_129 
					>> node_067 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (20) >> node_111 
					>> node_066 
		elser (20) >> node_116 
		elser (30) >> node_120 
					>> node_067 
		elser (30) >> node_129 
					>> node_067 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (20) >> node_111 
					>> node_066 
		elser (20) >> node_116 
		elser (30) >> node_120 
					>> node_067 
		elser (30) >> node_129 
					>> node_067 
		elser (0) 
		endr 
	else 
		random (50) >> node_024 
		elser (50) >> node_046 
		endr 
	endif 
	return 
endf 

def node_063
	random (50) >> node_019 
	elser (50) >> node_041 
	endr 
	return 
endf 

def node_064
	random (50) >> node_020 
	elser (50) >> node_042 
	endr 
	return 
endf 

def node_065
	random (50) >> node_021 
	elser (50) >> node_043 
	endr 
	return 
endf 

def node_066
	random (50) >> node_022 
	elser (50) >> node_044 
	endr 
	return 
endf 

def node_067
	random (50) >> node_023 
	elser (50) >> node_045 
	endr 
	return 
endf 

def node_068
	if self.target.helpless_0() 
		random (40) 
					return 
		elser (60) 
		endr 
	elif self.target.helpless_1() 
		random (40) 
					return 
		elser (60) 
		endr 
	else 
	endif 
	if [RegisterVar8 == 1] 
		random (0) >> node_069 
		elser (0) >> node_070 
		elser (100) >> node_071 
		endr 
	elif [RegisterVar8 == 2] 
		random (0) >> node_069 
		elser (100) >> node_070 
		elser (0) >> node_071 
		endr 
	else 
		random (0) >> node_069 
		elser (50) >> node_070 
		elser (50) >> node_071 
		endr 
	endif 
	return 
endf 

def node_069
	[RegisterVar8 |-] 
	return 
endf 

def node_070
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(450) 
		random (30) >> node_112 
		elser (35) >> node_121 
		elser (35) >> node_126 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (30) >> node_112 
		elser (35) >> node_121 
		elser (35) >> node_126 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (30) >> node_112 
		elser (35) >> node_121 
		elser (35) >> node_126 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (100) >> node_111 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (100) >> node_111 
		elser (0) 
		endr 
	else 
		random (50) >> node_036 
		elser (50) >> node_058 
		endr 
	endif 
	return 
endf 

def node_071
	[RegisterVar8 |-] 
	[RegisterVar8 ++] 
	[RegisterVar8 ++] 
	if self.distance_2d_to_target().leq(450) 
		random (10) >> node_111 
					>> node_075 
		elser (10) >> node_116 
		elser (15) >> node_121 
					>> node_077 
		elser (15) >> node_126 
					>> node_077 
		elser (50) >> node_135 
					>> node_072 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (10) >> node_106 
					>> node_073 
		elser (10) >> node_116 
		elser (15) >> node_121 
					>> node_077 
		elser (15) >> node_126 
					>> node_077 
		elser (50) >> node_135 
					>> node_072 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (10) >> node_107 
					>> node_074 
		elser (10) >> node_116 
		elser (15) >> node_121 
					>> node_077 
		elser (15) >> node_126 
					>> node_077 
		elser (50) >> node_135 
					>> node_072 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(2250) 
		random (10) >> node_116 
		elser (20) >> node_120 
					>> node_078 
		elser (20) >> node_129 
					>> node_078 
		elser (50) >> node_135 
					>> node_072 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (40) >> node_115 
		elser (30) >> node_120 
					>> node_078 
		elser (30) >> node_129 
					>> node_078 
		elser (0) 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (40) >> node_115 
		elser (30) >> node_120 
					>> node_078 
		elser (30) >> node_129 
					>> node_078 
		elser (0) 
		endr 
	else 
		random (50) >> node_036 
		elser (50) >> node_058 
		endr 
	endif 
	return 
endf 

def node_072
	random (50) >> node_029 
	elser (50) >> node_051 
	endr 
	return 
endf 

def node_073
	random (50) >> node_030 
	elser (50) >> node_052 
	endr 
	return 
endf 

def node_074
	random (50) >> node_031 
	elser (50) >> node_053 
	endr 
	return 
endf 

def node_075
	random (50) >> node_032 
	elser (50) >> node_054 
	endr 
	return 
endf 

def node_076
	random (50) >> node_033 
	elser (50) >> node_055 
	endr 
	return 
endf 

def node_077
	random (50) >> node_034 
	elser (50) >> node_056 
	endr 
	return 
endf 

def node_078
	random (50) >> node_035 
	elser (50) >> node_057 
	endr 
	return 
endf 

def node_079
endf 

def node_080
	if self.distance_2d_to_target().leq(1400) 
		if [RegisterVar9 == 1] 
			random (0) >> node_088 
			elser (40) >> node_096 
			elser (60) >> node_101 
			endr 
		elif [RegisterVar9 == 3] 
			random (40) >> node_088 
			elser (0) >> node_096 
			elser (60) >> node_101 
			endr 
		elif [RegisterVar9 == 5] 
			random (60) >> node_088 
			elser (40) >> node_096 
			elser (0) >> node_101 
			endr 
		else 
			random (30) >> node_088 
			elser (30) >> node_096 
			elser (40) >> node_101 
			endr 
		endif 
	else 
		if [RegisterVar9 == 1] 
			random (0) >> node_088 
			elser (100) >> node_096 
			elser (0) >> node_101 
			endr 
		elif [RegisterVar9 == 3] 
			random (100) >> node_088 
			elser (0) >> node_096 
			elser (0) >> node_101 
			endr 
		elif [RegisterVar9 == 5] 
			random (70) >> node_088 
			elser (30) >> node_096 
			elser (0) >> node_101 
			endr 
		else 
			random (70) >> node_088 
			elser (30) >> node_096 
			elser (0) >> node_101 
			endr 
		endif 
	endif 
	return 
endf 

def node_081
	if self.distance_2d_to_target().leq(1400) 
		if [RegisterVar9 == 2] 
			random (0) >> node_092 
			elser (40) >> node_096 
			elser (60) >> node_101 
			endr 
		elif [RegisterVar9 == 3] 
			random (40) >> node_092 
			elser (0) >> node_096 
			elser (60) >> node_101 
			endr 
		elif [RegisterVar9 == 5] 
			random (60) >> node_092 
			elser (40) >> node_096 
			elser (0) >> node_101 
			endr 
		else 
			random (30) >> node_092 
			elser (30) >> node_096 
			elser (40) >> node_101 
			endr 
		endif 
	else 
		if [RegisterVar9 == 2] 
			random (0) >> node_092 
			elser (100) >> node_096 
			elser (0) >> node_101 
			endr 
		elif [RegisterVar9 == 3] 
			random (100) >> node_092 
			elser (0) >> node_096 
			elser (0) >> node_101 
			endr 
		elif [RegisterVar9 == 5] 
			random (70) >> node_092 
			elser (30) >> node_096 
			elser (0) >> node_101 
			endr 
		else 
			random (70) >> node_092 
			elser (30) >> node_096 
			elser (0) >> node_101 
			endr 
		endif 
	endif 
	return 
endf 

def node_082
	if self.distance_2d_to_target().leq(1400) 
		if [RegisterVar9 == 1] 
			random (0) >> node_088 
			elser (30) >> node_096 
			elser (70) >> node_101 
			endr 
		elif [RegisterVar9 == 3] 
			random (70) >> node_088 
			elser (0) >> node_096 
			elser (30) >> node_101 
			endr 
		elif [RegisterVar9 == 5] 
			random (30) >> node_088 
			elser (70) >> node_096 
			elser (0) >> node_101 
			endr 
		else 
			random (40) >> node_088 
			elser (20) >> node_096 
			elser (40) >> node_101 
			endr 
		endif 
	else 
		if [RegisterVar9 == 1] 
			random (0) >> node_088 
			elser (20) >> node_096 
			elser (80) >> node_101 
			endr 
		elif [RegisterVar9 == 3] 
			random (60) >> node_088 
			elser (0) >> node_096 
			elser (40) >> node_101 
			endr 
		elif [RegisterVar9 == 5] 
			random (80) >> node_088 
			elser (20) >> node_096 
			elser (0) >> node_101 
			endr 
		else 
			random (60) >> node_088 
			elser (20) >> node_096 
			elser (20) >> node_101 
			endr 
		endif 
	endif 
	return 
endf 

def node_083
	if self.distance_2d_to_target().leq(1400) 
		if [RegisterVar9 == 2] 
			random (0) >> node_092 
			elser (70) >> node_096 
			elser (30) >> node_101 
			endr 
		elif [RegisterVar9 == 3] 
			random (30) >> node_092 
			elser (0) >> node_096 
			elser (70) >> node_101 
			endr 
		elif [RegisterVar9 == 5] 
			random (70) >> node_092 
			elser (30) >> node_096 
			elser (0) >> node_101 
			endr 
		else 
			random (40) >> node_092 
			elser (20) >> node_096 
			elser (40) >> node_101 
			endr 
		endif 
	else 
		if [RegisterVar9 == 2] 
			random (0) >> node_092 
			elser (20) >> node_096 
			elser (80) >> node_101 
			endr 
		elif [RegisterVar9 == 3] 
			random (60) >> node_092 
			elser (0) >> node_096 
			elser (40) >> node_101 
			endr 
		elif [RegisterVar9 == 5] 
			random (80) >> node_092 
			elser (20) >> node_096 
			elser (0) >> node_101 
			endr 
		else 
			random (60) >> node_092 
			elser (20) >> node_096 
			elser (20) >> node_101 
			endr 
		endif 
	endif 
	return 
endf 

def node_084
	if [RegisterVar2 <= 4] 
		>> node_087 
	else 
		if function#104() 
			>> node_085 
		else 
			>> node_086 
		endif 
	endif 
	return 
endf 

def node_085
	if [RegisterVar9 == 1] 
		random (0) >> node_088 
		elser (50) >> node_096 
		elser (50) >> node_102 
		endr 
	elif [RegisterVar9 == 3] 
		random (50) >> node_088 
		elser (0) >> node_096 
		elser (50) >> node_102 
		endr 
	elif [RegisterVar9 == 6] 
		random (50) >> node_088 
		elser (50) >> node_096 
		elser (0) >> node_102 
		endr 
	else 
		random (30) >> node_088 
		elser (35) >> node_096 
		elser (35) >> node_102 
		endr 
	endif 
	return 
endf 

def node_086
	if [RegisterVar9 == 2] 
		random (0) >> node_092 
		elser (50) >> node_096 
		elser (50) >> node_102 
		endr 
	elif [RegisterVar9 == 3] 
		random (50) >> node_092 
		elser (0) >> node_096 
		elser (50) >> node_102 
		endr 
	elif [RegisterVar9 == 6] 
		random (50) >> node_092 
		elser (50) >> node_096 
		elser (0) >> node_102 
		endr 
	else 
		random (30) >> node_092 
		elser (35) >> node_096 
		elser (35) >> node_102 
		endr 
	endif 
	return 
endf 

def node_087
	if [RegisterVar9 == 1] 
		>> node_102 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	elif [RegisterVar9 == 2] 
		>> node_096 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	elif [RegisterVar9 == 3] 
		>> node_088 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
	elif [RegisterVar9 == 6] 
		>> node_092 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	else 
		>> node_102 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	endif 
	return 
endf 

def node_088
	if [RegisterVar8 == 0] 
		[RegisterVar9 |-] 
	else 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
	endif 
	if self.hp_percent().gt(40) 
		>> node_091 
	elif self.hp_percent().gt(75) 
		>> node_090 
	else 
		>> node_089 
	endif 
	return 
endf 

def node_089
	if self.distance_2d_to_target().leq(500) 
		random (80) >> node_123 
		elser (20) >> node_124 
		elser (0) >> node_125 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (70) >> node_123 
		elser (30) >> node_124 
		elser (0) >> node_125 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (40) >> node_123 
		elser (60) >> node_124 
		elser (0) >> node_125 
		endr 
	elif self.distance_2d_to_target().leq(4000) 
		random (0) >> node_123 
		elser (100) >> node_124 
		elser (0) >> node_125 
		endr 
	else 
		random (0) >> node_123 
		elser (100) >> node_124 
		elser (0) >> node_125 
		endr 
	endif 
	return 
endf 

def node_090
	if self.distance_2d_to_target().leq(500) 
		random (80) >> node_123 
		elser (20) >> node_124 
		elser (0) >> node_125 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (70) >> node_123 
		elser (30) >> node_124 
		elser (0) >> node_125 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (40) >> node_123 
		elser (60) >> node_124 
		elser (0) >> node_125 
		endr 
	elif self.distance_2d_to_target().leq(4000) 
		random (0) >> node_123 
		elser (35) >> node_124 
		elser (65) >> node_125 
		endr 
	else 
		random (0) >> node_123 
		elser (100) >> node_124 
		elser (0) >> node_125 
		endr 
	endif 
	return 
endf 

def node_091
	if self.distance_2d_to_target().leq(500) 
		random (100) >> node_123 
		elser (0) >> node_124 
		elser (0) >> node_125 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (100) >> node_123 
		elser (0) >> node_124 
		elser (0) >> node_125 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (50) >> node_123 
		elser (50) >> node_124 
		elser (0) >> node_125 
		endr 
	elif self.distance_2d_to_target().leq(4000) 
		random (0) >> node_123 
		elser (0) >> node_124 
		elser (100) >> node_125 
		endr 
	else 
		random (0) >> node_123 
		elser (100) >> node_124 
		elser (0) >> node_125 
		endr 
	endif 
	return 
endf 

def node_092
	if [RegisterVar8 == 0] 
		[RegisterVar9 |-] 
	else 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	endif 
	if self.hp_percent().gt(40) 
		>> node_095 
	elif self.hp_percent().gt(75) 
		>> node_094 
	else 
		>> node_093 
	endif 
	return 
endf 

def node_093
	if self.distance_2d_to_target().leq(500) 
		random (80) >> node_128 
		elser (0) >> node_130 
		elser (20) >> node_131 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (65) >> node_128 
		elser (0) >> node_130 
		elser (35) >> node_131 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (40) >> node_128 
		elser (0) >> node_130 
		elser (60) >> node_131 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (0) >> node_128 
		elser (0) >> node_130 
		elser (100) >> node_131 
		endr 
	else 
		random (0) >> node_128 
		elser (0) >> node_130 
		elser (100) >> node_131 
		endr 
	endif 
	return 
endf 

def node_094
	if self.distance_2d_to_target().leq(500) 
		random (80) >> node_128 
		elser (0) >> node_130 
		elser (20) >> node_131 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (65) >> node_128 
		elser (0) >> node_130 
		elser (35) >> node_131 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (40) >> node_128 
		elser (0) >> node_130 
		elser (60) >> node_131 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (0) >> node_128 
		elser (65) >> node_130 
		elser (35) >> node_131 
		endr 
	else 
		random (0) >> node_128 
		elser (0) >> node_130 
		elser (100) >> node_131 
		endr 
	endif 
	return 
endf 

def node_095
	if self.distance_2d_to_target().leq(500) 
		random (80) >> node_128 
		elser (0) >> node_130 
		elser (20) >> node_131 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (65) >> node_128 
		elser (0) >> node_130 
		elser (35) >> node_131 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (40) >> node_128 
		elser (0) >> node_130 
		elser (60) >> node_131 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (0) >> node_128 
		elser (100) >> node_130 
		elser (0) >> node_131 
		endr 
	else 
		random (0) >> node_128 
		elser (0) >> node_130 
		elser (100) >> node_131 
		endr 
	endif 
	return 
endf 

def node_096
	if [RegisterVar8 == 0] 
		[RegisterVar9 |-] 
	else 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	endif 
	if self.hp_percent().gt(40) 
		>> node_099 
	elif self.hp_percent().gt(75) 
		>> node_098 
	else 
		>> node_097 
	endif 
	return 
endf 

def node_097
	if self.distance_2d_to_target().leq(400) 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(2500) 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	else 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	endif 
	return 
endf 

def node_098
	if self.distance_2d_to_target().leq(400) 
		random (50) >> node_138 
		elser (50) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (50) >> node_138 
		elser (50) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (50) >> node_138 
		elser (50) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(2500) 
		random (50) >> node_138 
		elser (50) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	else 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	endif 
	return 
endf 

def node_099
	if self.distance_2d_to_target().leq(400) 
		random (35) >> node_138 
		elser (65) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (25) >> node_138 
		elser (75) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (25) >> node_138 
		elser (75) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(2500) 
		random (35) >> node_138 
		elser (65) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	else 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	endif 
	return 
endf 

def node_100
	if [RegisterVar8 == 0] 
		[RegisterVar9 |-] 
	else 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	endif 
	if self.distance_2d_to_target().leq(450) 
		random (30) >> node_138 
		elser (70) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (30) >> node_138 
		elser (70) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(1400) 
		random (30) >> node_138 
		elser (70) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(2250) 
		random (70) >> node_138 
		elser (30) >> node_139 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	else 
		random (100) >> node_138 
		elser (0) >> node_139 
		endr 
	endif 
	return 
endf 

def node_101
	if [RegisterVar8 == 0] 
		[RegisterVar9 |-] 
	else 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	endif 
	if function#7F() 
		>> node_103 
		>> node_117 
		return 
	elif function#7F(3) 
		>> node_103 
		>> node_117 
		return 
	elif function#7F(14) 
		>> node_103 
		>> node_117 
		return 
	elif function#7F(16) 
		>> node_103 
		>> node_117 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(4000) 
	else 
		>> node_217 
	endif 
	if self.distance_2d_to_target().leq(450) 
		random (100) >> node_103 
					>> node_117 
		elser (0) >> node_108 
		elser (0) >> node_118 
		elser (0) >> node_119 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (50) >> node_103 
					>> node_117 
		elser (50) >> node_108 
		elser (0) >> node_118 
		elser (0) >> node_119 
		endr 
endr 
elif self.distance_2d_to_target().leq(1400) 
random (0) >> node_117 
elser (100) >> node_108 
elser (0) >> node_118 
elser (0) >> node_119 
endr 
else 
random (0) >> node_117 
elser (0) >> node_108 
elser (100) >> node_118 
elser (0) >> node_119 
endr 
endif 
return 
endf 

def node_102
	if [RegisterVar8 == 0] 
		[RegisterVar9 |-] 
	else 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	endif 
	if function#7F() 
		>> node_103 
		>> node_117 
		return 
	elif function#7F(3) 
		>> node_103 
		>> node_117 
		return 
	elif function#7F(14) 
		>> node_103 
		>> node_117 
		return 
	elif function#7F(16) 
		>> node_103 
		>> node_117 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(450) 
		random (45) >> node_103 
					>> node_117 
		elser (0) >> node_108 
		elser (0) >> node_118 
		elser (55) >> node_119 
		endr 
	elif self.distance_2d_to_target().leq(900) 
		random (25) >> node_103 
					>> node_117 
		elser (20) >> node_108 
		elser (0) >> node_118 
		elser (55) >> node_119 
		endr 
endr 
elif self.distance_2d_to_target().leq(1400) 
random (0) >> node_117 
elser (65) >> node_108 
elser (0) >> node_118 
elser (35) >> node_119 
endr 
elif self.distance_2d_to_target().leq(4000) 
random (0) >> node_117 
elser (0) >> node_108 
elser (100) >> node_118 
elser (0) >> node_119 
endr 
else 
>> node_217 
if self.distance_2d_to_target().leq(450) 
>> node_103 
>> node_117 
elif self.distance_2d_to_target().leq(900) 
random (50) >> node_103 
			>> node_117 
elser (50) >> node_108 
endr 
endr 
elif self.distance_2d_to_target().leq(1400) 
>> node_108 
else 
>> node_118 
endif 
endif 
return 
endf 

def node_103
	if function#101(3) 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	else 
		[RegisterVar9 |-] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
		[RegisterVar9 ++] 
	endif 
	return 
endf 

def node_104
endf 

def node_105
	if self.angle_2d_cw_between(0,90) 
		-> alatreon.turn_step_back_r() 
	elif self.angle_2d_cw_between(90,180) 
		-> alatreon.turn_step_front_r() 
	elif self.angle_2d_cw_between(180,270) 
		-> alatreon.turn_step_front_l() 
	else 
		-> alatreon.turn_step_back_l() 
	endif 
	return 
endf 

def node_106
	>> node_001 
	-> alatreon.scratch() 
	return 
endf 

def node_107
	>> node_001 
	-> alatreon.short_step_head_butt() 
	return 
endf 

def node_108
	if self.angle_2d_cw_between(320,40) 
		>> node_109 
	elif self.angle_2d_cw_between(135,225) 
		>> node_110 
	else 
		random (50) >> node_109 
		elser (50) >> node_110 
		endr 
	endif 
	return 
endf 

def node_109
	>> node_001 
	if self.angle_2d_cw_between(40,320) 
		>> node_291 
	else 
	endif 
	-> alatreon.head_sweep() 
	return 
endf 

def node_110
	>> node_001 
	if self.angle_2d_cw_between(135,225) 
	else 
		-> alatreon.turn_reversal_combat() 
	endif 
	-> alatreon.tail_whip() 
	return 
endf 

def node_111
	>> node_001 
	-> alatreon.rush_once() 
	return 
endf 

def node_112
	>> node_001 
	-> alatreon.rush_once2() 
	return 
endf 

def node_113
	>> node_001 
	-> alatreon.rush_once_to_fly() 
	return 
endf 

def node_114
	>> node_001 
	-> alatreon.rush_once_to_fly2() 
	return 
endf 

def node_115
	>> node_001 
	-> alatreon.rush_twice_start() 
	return 
endf 

def node_116
	>> node_001 
	-> alatreon.rush_twice_start2() 
	return 
endf 

def node_117
	>> node_001 
	-> alatreon.press_attack() 
	return 
endf 

def node_118
	>> node_001 
	-> alatreon.back_step_glide_attack() 
	return 
endf 

def node_119
	>> node_001 
	-> alatreon.dragon_nova_ground() 
	return 
endf 

def node_120
	>> node_001 
	-> alatreon.fire_breath_ground() 
	return 
endf 

def node_121
	>> node_001 
	-> alatreon.back_step_fire_breath_to_ground() 
	return 
endf 

def node_122
	>> node_001 
	-> alatreon.back_step_fire_breath_to_fly() 
	return 
endf 

def node_123
	>> node_001 
	-> alatreon.big_fire_ball() 
	return 
endf 

def node_124
	>> node_001 
	-> alatreon.straight_fire_laser_ground() 
	return 
endf 

def node_125
	>> node_001 
	-> alatreon.sweep_fire_laser_turn() @ comboSetting:1 
	-> alatreon.chance() 
	return 
endf 

def node_126
	>> node_001 
	-> alatreon.round_ice_breath() 
	return 
endf 

def node_127
	>> node_001 
	if self.angle_2d_cw_between(0,180) 
		-> alatreon.turn_step_side_r() @ comboSetting:1 
		-> alatreon.ice_breath_ground() 
	else 
		-> alatreon.turn_step_side_l() @ comboSetting:1 
		-> alatreon.ice_breath_ground() 
	endif 
	return 
endf 

def node_128
	>> node_001 
	-> alatreon.under_freeze_breath_g2g() 
	return 
endf 

def node_129
	>> node_001 
	-> alatreon.ice_breath_ground() 
	return 
endf 

def node_130
	>> node_001 
	-> alatreon.ice_breath_3way_ground() @ comboSetting:1 
	-> alatreon.chance() 
	return 
endf 

def node_131
	>> node_001 
	-> alatreon.freeze_laser() @ comboSetting:1 
	-> alatreon.chance() 
	return 
endf 

def node_132
	>> node_001 
	-> alatreon.ice_meteor() 
	return 
endf 

def node_133
	>> node_001 
	-> alatreon.around_thunder() 
	return 
endf 

def node_134
	>> node_001 
	-> alatreon.around_thunder2() 
	return 
endf 

def node_135
	random (50) >> node_133 
	elser (50) >> node_134 
	endr 
	return 
endf 

def node_136
	>> node_001 
	-> alatreon.new_homing_thunder_start() 
	random (50) -> alatreon.new_homing_thunder_vertical() 
	elser (50) -> alatreon.new_homing_thunder_horizontal() 
	endr 
	random (50) -> alatreon.new_homing_thunder_vertical_last() 
	elser (50) -> alatreon.new_homing_thunder_horizontal_last() 
	endr 
	return 
endf 

def node_137
	>> node_001 
	-> alatreon.new_homing_thunder_start() 
	random (50) -> alatreon.new_homing_thunder_vertical() 
	elser (50) -> alatreon.new_homing_thunder_horizontal() 
	endr 
	random (50) -> alatreon.new_homing_thunder_vertical() 
	elser (50) -> alatreon.new_homing_thunder_horizontal() 
	endr 
	random (50) -> alatreon.new_homing_thunder_vertical_last() 
	elser (50) -> alatreon.new_homing_thunder_horizontal_last() 
	endr 
	return 
endf 

def node_138
	if self.enraged() 
		>> node_137 
	else 
		>> node_136 
	endif 
	return 
endf 

def node_139
	>> node_001 
	-> alatreon.wave_thunder() @ comboSetting:1 
	-> alatreon.threat_short() 
	return 
endf 

def node_140
	>> node_001 
	-> alatreon.elemental_explosion_to_fire() 
	return 
endf 

def node_141
	>> node_001 
	-> alatreon.elemental_explosion_to_ice() 
	return 
endf 

def node_142
endf 

def node_143
	if [RegisterVar4 == 1] 
		random (60) >> node_147 
		elser (40) >> node_144 
		endr 
	else 
		random (0) >> node_147 
		elser (100) >> node_144 
		endr 
	endif 
	return 
endf 

def node_144
	[RegisterVar4 |-] 
	[RegisterVar4 ++] 
	if self.distance_2d_to_target().leq(500) 
		random (0) >> node_163 
		elser (50) >> node_173 
		elser (30) >> node_189 
		elser (20) >> node_191 
		elser (0) >> node_192 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (0) >> node_163 
		elser (50) >> node_173 
		elser (30) >> node_189 
		elser (20) >> node_191 
		elser (0) >> node_192 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (0) >> node_163 
		elser (0) >> node_173 
		elser (0) >> node_171 
		elser (60) >> node_190 
		elser (40) >> node_191 
		elser (0) >> node_192 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (0) >> node_164 
		elser (0) >> node_173 
		elser (0) >> node_171 
		elser (40) >> node_190 
		elser (60) >> node_192 
		endr 
	else 
		random (100) >> node_163 
		elser (0) >> node_173 
		elser (0) >> node_171 
		elser (0) >> node_190 
		elser (0) >> node_192 
		endr 
	endif 
	return 
endf 

def node_145
	if [RegisterVar4 == 1] 
		random (0) >> node_147 
		elser (100) >> node_146 
		endr 
	else 
		random (0) >> node_147 
		elser (100) >> node_146 
		endr 
	endif 
	return 
endf 

def node_146
	[RegisterVar4 |-] 
	[RegisterVar4 ++] 
	if self.distance_2d_to_target().leq(1500) 
		random (100) >> node_164 
		elser (0) >> node_173 
		elser (0) >> node_171 
		elser (0) >> node_190 
		elser (0) >> node_192 
		endr 
	else 
		random (100) >> node_163 
		elser (0) >> node_173 
		elser (0) >> node_171 
		elser (0) >> node_190 
		elser (0) >> node_192 
		endr 
	endif 
	return 
endf 

def node_147
	[RegisterVar4 |-] 
	return 
endf 

def node_148
	if [RegisterVar4 == 1] 
		random (60) >> node_152 
		elser (40) >> node_149 
		endr 
	else 
		random (0) >> node_152 
		elser (100) >> node_149 
		endr 
	endif 
	return 
endf 

def node_149
	[RegisterVar4 |-] 
	[RegisterVar4 ++] 
	if self.distance_2d_to_target().leq(500) 
		random (0) >> node_163 
		elser (50) >> node_183 
		elser (30) >> node_179 
		elser (20) >> node_181 
		elser (0) >> node_182 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (0) >> node_163 
		elser (50) >> node_183 
		elser (30) >> node_179 
		elser (20) >> node_181 
		elser (0) >> node_182 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (0) >> node_163 
		elser (0) >> node_183 
		elser (60) >> node_180 
		elser (40) >> node_181 
		elser (0) >> node_182 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (0) >> node_163 
		elser (0) >> node_183 
		elser (40) >> node_180 
		elser (60) >> node_182 
		endr 
	else 
		random (100) >> node_163 
		elser (0) >> node_183 
		elser (0) >> node_180 
		elser (0) >> node_182 
		endr 
	endif 
	return 
endf 

def node_150
	if [RegisterVar4 == 1] 
		random (0) >> node_152 
		elser (100) >> node_151 
		endr 
	else 
		random (0) >> node_152 
		elser (100) >> node_151 
		endr 
	endif 
	return 
endf 

def node_151
	[RegisterVar4 |-] 
	[RegisterVar4 ++] 
	if self.distance_2d_to_target().leq(1500) 
		random (100) >> node_164 
		elser (0) >> node_183 
		elser (0) >> node_180 
		elser (0) >> node_182 
		endr 
	else 
		random (100) >> node_163 
		elser (0) >> node_183 
		elser (0) >> node_180 
		elser (0) >> node_182 
		endr 
	endif 
	return 
endf 

def node_152
	[RegisterVar4 |-] 
	return 
endf 

def node_153
endf 

def node_154
	if [RegisterVar3 == 0] 
		if [RegisterVar5 == 1] 
			[RegisterVar5 |-] 
		else 
		endif 
	else 
	endif 
	if [RegisterVar5 == 1] 
		>> node_159 
	elif [RegisterVar5 == 3] 
		>> node_157 
	else 
		random (65) >> node_157 
		elser (35) >> node_159 
		endr 
	endif 
	return 
endf 

def node_155
	if [RegisterVar3 == 0] 
		if [RegisterVar5 == 2] 
			[RegisterVar5 |-] 
		else 
		endif 
	else 
	endif 
	if [RegisterVar5 == 2] 
		>> node_159 
	elif [RegisterVar5 == 3] 
		>> node_158 
	else 
		random (65) >> node_158 
		elser (35) >> node_159 
		endr 
	endif 
	return 
endf 

def node_156
	if [RegisterVar3 == 0] 
		if [RegisterVar5 == 1] 
			[RegisterVar5 |-] 
		elif [RegisterVar5 == 2] 
			[RegisterVar5 |-] 
		else 
		endif 
	else 
	endif 
	if function#104() 
		if [RegisterVar5 == 2] 
			>> node_160 
		elif [RegisterVar5 == 4] 
			>> node_158 
		else 
			random (65) >> node_158 
			elser (35) >> node_160 
			endr 
		endif 
	else 
		if [RegisterVar5 == 1] 
			>> node_160 
		elif [RegisterVar5 == 4] 
			>> node_157 
		else 
			random (65) >> node_157 
			elser (35) >> node_160 
			endr 
		endif 
	endif 
	return 
endf 

def node_157
	if [RegisterVar4 == 0] 
		[RegisterVar5 |-] 
	else 
		[RegisterVar5 |-] 
		[RegisterVar5 ++] 
	endif 
	if self.distance_2d_to_target().leq(500) 
		random (50) >> node_176 
		elser (50) >> node_177 
		elser (0) >> node_178 
		elser (0) >> node_193 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (40) >> node_176 
		elser (60) >> node_177 
		elser (0) >> node_178 
		elser (0) >> node_193 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (35) >> node_176 
		elser (35) >> node_177 
		elser (30) >> node_178 
		elser (0) >> node_193 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (30) >> node_176 
		elser (0) >> node_177 
		elser (30) >> node_178 
		elser (40) >> node_193 
		endr 
	elif self.distance_2d_to_target().leq(4000) 
		random (60) >> node_176 
		elser (0) >> node_177 
		elser (40) >> node_178 
		elser (0) >> node_193 
		endr 
	else 
		random (100) >> node_176 
		elser (0) >> node_177 
		elser (0) >> node_178 
		elser (0) >> node_193 
		endr 
	endif 
	return 
endf 

def node_158
	if [RegisterVar4 == 0] 
		[RegisterVar5 |-] 
	else 
		[RegisterVar5 |-] 
		[RegisterVar5 ++] 
		[RegisterVar5 ++] 
	endif 
	if self.distance_2d_to_target().leq(500) 
		random (50) >> node_186 
		elser (50) >> node_187 
		elser (0) >> node_188 
		elser (0) >> node_185 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (40) >> node_186 
		elser (60) >> node_187 
		elser (0) >> node_188 
		elser (0) >> node_185 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (35) >> node_186 
		elser (35) >> node_187 
		elser (30) >> node_188 
		elser (0) >> node_185 
		endr 
	elif self.distance_2d_to_target().leq(3000) 
		random (30) >> node_186 
		elser (0) >> node_187 
		elser (30) >> node_188 
		elser (40) >> node_185 
		endr 
	elif self.distance_2d_to_target().leq(4000) 
		random (60) >> node_186 
		elser (0) >> node_187 
		elser (40) >> node_188 
		elser (0) >> node_185 
		endr 
	else 
		random (100) >> node_186 
		elser (0) >> node_187 
		elser (0) >> node_188 
		elser (0) >> node_185 
		endr 
	endif 
	return 
endf 

def node_159
	[RegisterVar5 |-] 
	[RegisterVar5 ++] 
	[RegisterVar5 ++] 
	[RegisterVar5 ++] 
	if function#7F() 
		>> node_166 
		return 
	elif function#7F(3) 
		>> node_166 
		return 
	elif function#7F(14) 
		>> node_166 
		return 
	elif function#7F(16) 
		>> node_166 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(3500) 
	else 
		>> node_239 
	endif 
	if self.distance_2d_to_target().leq(500) 
		random (100) >> node_162 
		elser (0) >> node_166 
		elser (0) >> node_169 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (50) >> node_162 
		elser (50) >> node_166 
		elser (0) >> node_169 
		endr 
	elif self.distance_2d_to_target().leq(1750) 
		random (0) >> node_162 
		elser (100) >> node_166 
		elser (0) >> node_169 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (0) >> node_162 
		elser (100) >> node_166 
		elser (0) >> node_169 
		endr 
	else 
		random (0) >> node_162 
		elser (100) >> node_166 
		elser (0) >> node_169 
		endr 
	endif 
	return 
endf 

def node_160
	[RegisterVar5 |-] 
	[RegisterVar5 ++] 
	[RegisterVar5 ++] 
	[RegisterVar5 ++] 
	[RegisterVar5 ++] 
	if function#7F() 
		>> node_166 
		return 
	elif function#7F(3) 
		>> node_166 
		return 
	elif function#7F(14) 
		>> node_166 
		return 
	elif function#7F(16) 
		>> node_166 
		return 
	else 
	endif 
	if self.distance_2d_to_target().leq(500) 
		random (100) >> node_162 
		elser (0) >> node_166 
		elser (0) >> node_169 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (50) >> node_162 
		elser (50) >> node_166 
		elser (0) >> node_169 
		endr 
	elif self.distance_2d_to_target().leq(1750) 
		random (0) >> node_162 
		elser (100) >> node_166 
		elser (0) >> node_169 
		endr 
	elif self.distance_2d_to_target().leq(3500) 
		random (0) >> node_162 
		elser (40) >> node_166 
		elser (60) >> node_169 
		endr 
	else 
		random (0) >> node_162 
		elser (0) >> node_166 
		elser (100) >> node_169 
		endr 
	endif 
	return 
endf 

def node_161
endf 

def node_162
	>> node_002 
	>> node_294 
	-> alatreon.tail_sweep() 
	return 
endf 

def node_163
	>> node_002 
	-> alatreon.rush_fly() 
	return 
endf 

def node_164
	>> node_002 
	-> alatreon.rush_fly2() 
	return 
endf 

def node_165
	>> node_002 
	-> alatreon.rush_fly_to_ground() 
	return 
endf 

def node_166
	if self.enraged() 
		>> node_168 
	else 
		>> node_167 
	endif 
	return 
endf 

def node_167
	>> node_002 
	-> alatreon.dragon_punch_start() 
	if self.target.helpless_1() 
		-> alatreon.dragon_punch_end() 
		return 
	else 
		-> alatreon.dragon_punch_loop() 
	endif 
	-> alatreon.dragon_punch_end() 
	return 
endf 

def node_168
	>> node_002 
	-> alatreon.dragon_punch_start() 
	if self.target.helpless_1() 
		-> alatreon.dragon_punch_end() 
		return 
	else 
		-> alatreon.dragon_punch_loop() 
	endif 
	if self.target.helpless_1() 
		-> alatreon.dragon_punch_end() 
		return 
	else 
		-> alatreon.dragon_punch_loop() 
	endif 
	-> alatreon.dragon_punch_end() 
	return 
endf 

def node_169
	>> node_002 
	-> alatreon.dragon_nova_fly() @ comboSetting:1 
	-> alatreon.threat_short_fly() 
	return 
endf 

def node_170
	>> node_002 
	-> alatreon.step_back_fly() @ comboSetting:1 
	-> alatreon.fire_breath_fly() 
	return 
endf 

def node_171
	>> node_002 
	-> alatreon.fire_breath_fly() 
	return 
endf 

def node_172
	>> node_002 
	-> alatreon.triple_fire_breath() @ comboSetting:1 
	-> alatreon.threat_short_fly() 
	return 
endf 

def node_173
	>> node_002 
	-> alatreon.under_fire_breath_to_fly() 
	return 
endf 

def node_174
	>> node_002 
	-> alatreon.under_fire_breath_to_ground() 
	return 
endf 

def node_175
	>> node_002 
	-> alatreon.hot_blast() 
	return 
endf 

def node_176
	>> node_002 
	-> alatreon.straight_fire_laser_fly() 
	return 
endf 

def node_177
	>> node_002 
	-> alatreon.rotate_fire_laser() 
	return 
endf 

def node_178
	>> node_002 
	-> alatreon.winding_fire_laser() @ comboSetting:1 
	-> alatreon.unique_chance_fly() 
	return 
endf 

def node_179
	>> node_002 
	-> alatreon.step_back_fly() @ comboSetting:1 
	-> alatreon.ice_breath_fly() 
	return 
endf 

def node_180
	>> node_002 
	-> alatreon.ice_breath_fly() 
	return 
endf 

def node_181
	>> node_002 
	-> alatreon.step_back_fly() @ comboSetting:1 
	-> alatreon.ice_breath_3way_fly() 
	return 
endf 

def node_182
	>> node_002 
	-> alatreon.ice_breath_3way_fly() 
	return 
	>> node_002 
	-> alatreon.ice_breath_3way_fly() @ comboSetting:1 
	-> alatreon.unique_chance_fly() 
	return 
endf 

def node_183
	>> node_002 
	-> alatreon.under_freeze_breath_to_fly() 
	return 
endf 

def node_184
	>> node_002 
	-> alatreon.under_freeze_breath_to_ground() 
	return 
endf 

def node_185
	>> node_002 
	-> alatreon.ice_machinegun_breath() 
	return 
endf 

def node_186
	>> node_002 
	-> alatreon.straight_water_laser() 
	return 
endf 

def node_187
	>> node_002 
	-> alatreon.rotate_water_laser() 
	return 
endf 

def node_188
	>> node_002 
	-> alatreon.winding_water_laser() @ comboSetting:1 
	-> alatreon.unique_chance_fly() 
	return 
endf 

def node_189
	>> node_002 
	-> alatreon.step_back_fly() @ comboSetting:1 
	-> alatreon.water_breath() 
	return 
endf 

def node_190
	>> node_002 
	-> alatreon.water_breath() 
	return 
endf 

def node_191
	>> node_002 
	-> alatreon.step_back_fly() @ comboSetting:1 
	-> alatreon.water_breath_3way() 
	return 
endf 

def node_192
	>> node_002 
	-> alatreon.water_breath_3way() 
	return 
	>> node_002 
	-> alatreon.water_breath_3way() @ comboSetting:1 
	-> alatreon.unique_chance_fly() 
	return 
endf 

def node_193
	>> node_002 
	-> alatreon.water_machinegun_breath() 
	return 
endf 

def node_194
endf 

def node_195
	if self.flying() 
	else 
		[RegisterVar0 ++] 
		>> node_196 
		if [RegisterVar7 == 0] 
			if [RegisterVar0 <= 15] 
				>> node_197 
				reset 
			else 
			endif 
		elif [RegisterVar7 == 1] 
			if [RegisterVar0 <= 13] 
				>> node_197 
				reset 
			else 
			endif 
		else 
			if [RegisterVar0 <= 11] 
				>> node_197 
				reset 
			else 
			endif 
		endif 
	endif 
	return 
endf 

def node_196
	if function#101(3) 
		if [RegisterVar7 == 0] 
			if self.hp_percent().gt(20) 
				if [RegisterVar0 <= 9] 
					>> node_197 
					reset 
				else 
				endif 
			else 
			endif 
		else 
		endif 
	else 
		if [RegisterVar7 == 0] 
			if self.hp_percent().gt(55) 
				if [RegisterVar0 <= 4] 
					>> node_197 
					reset 
				else 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_197
	if function#101(3) 
		>> node_001 
		if function#52(0,2) 
			self.targetArea(target_area.nearest_entrance) 
			>> node_198 
		else 
		endif 
		[RegisterVar7 ++] 
		if function#104() 
			if function#102() 
				>> node_199 
			else 
				>> node_200 
			endif 
		else 
			if function#102() 
				>> node_200 
			else 
				>> node_199 
			endif 
		endif 
	else 
		>> node_201 
	endif 
	[RegisterVar0 |-] 
	[RegisterVar1 |-] 
	[RegisterVar2 |-] 
	return 
endf 

def node_198
	if self.distance_3d_to_target().leq(750) 
	else 
		-> alatreon.dash_no_interrupt(1,2,0,650,1500) 
	endif 
	if self.distance_3d_to_target().leq(750) 
	else 
		-> alatreon.dash_no_interrupt(1,2,0,650,1500) 
	endif 
	if self.distance_3d_to_target().leq(750) 
	else 
		-> alatreon.dash_no_interrupt(1,2,0,650,1500) 
	endif 
	if self.distance_3d_to_target().leq(750) 
	else 
		-> alatreon.dash_no_interrupt(1,2,0,650,1500) 
	endif 
	if self.distance_3d_to_target().leq(750) 
	else 
		-> alatreon.dash_no_interrupt(1,2,0,650,1500) 
	endif 
	return 
endf 

def node_199
	>> node_001 
	-> alatreon.elemental_explosion_to_fire() 
	return 
endf 

def node_200
	>> node_001 
	-> alatreon.elemental_explosion_to_ice() 
	return 
endf 

def node_201
	if self.flying() 
		-> alatreon.mode_change_to_dragon_fly() 
	else 
		-> alatreon.mode_change_to_dragon_ground() 
	endif 
	>> node_103 
	return 
endf 

def node_202
	if self.flying() 
		[RegisterVar1 ++] 
		>> node_203 
		if [RegisterVar7 == 1] 
			if [RegisterVar1 == 4] 
				>> node_205 
				reset 
			elif [RegisterVar1 < 4] 
				>> node_206 
				reset 
			else 
			endif 
		else 
			if [RegisterVar1 == 6] 
				>> node_205 
				reset 
			elif [RegisterVar1 < 6] 
				>> node_206 
				reset 
			else 
			endif 
		endif 
	else 
		[RegisterVar2 ++] 
		if [RegisterVar1 < 0] 
		else 
			if function#101(3) 
				if [RegisterVar2 <= 4] 
					>> node_204 
					reset 
				else 
				endif 
			else 
				if [RegisterVar2 <= 12] 
					>> node_204 
					reset 
				else 
				endif 
			endif 
		endif 
	endif 
	return 
endf 

def node_203
	if self.flying() 
		if [RegisterVar7 == 0] 
			if [RegisterVar1 == 2] 
				if function#101(3) 
					if self.hp_percent().gt(20) 
						>> node_205 
						reset 
					else 
					endif 
				else 
					if self.hp_percent().gt(55) 
						>> node_205 
						reset 
					else 
					endif 
				endif 
			elif [RegisterVar1 < 2] 
				if function#101(3) 
					if self.hp_percent().gt(20) 
						>> node_206 
						reset 
					else 
					endif 
				else 
					if self.hp_percent().gt(55) 
						>> node_206 
						reset 
					else 
					endif 
				endif 
			else 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_204
	if function#101(1) 
		>> node_122 
	elif function#101(2) 
		>> node_132 
	else 
		if function#104() 
			>> node_132 
		else 
			>> node_122 
		endif 
	endif 
	return 
endf 

def node_205
	if function#101(1) 
		>> node_175 
	elif function#101(2) 
		>> node_165 
	else 
		if function#104() 
			>> node_165 
		else 
			>> node_175 
		endif 
	endif 
	return 
endf 

def node_206
	>> node_165 
	return 
endf 

def node_207
endf 

def node_208
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.walk(1,2,5,800,1500) 
		repeat 
	endif 
	return 
endf 

def node_209
	>> node_339 
	self.targetArea(target_area.nearest_entrance) 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.walk(1,2,5,800,1500) 
		repeat 
	endif 
	return 
endf 

def node_210
	>> node_339 
	self.targetArea(target_area.area_center) 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.walk(1,2,5,800,1500) 
		repeat 
	endif 
	return 
endf 

def node_211
	>> node_339 
	self.targetArea(39) 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.walk(1,2,5,800,1500) 
		repeat 
	endif 
	return 
endf 

def node_212
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.walk(1,2,0,800,1500) 
		repeat 
	endif 
	return 
endf 

def node_213
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.dash(1,2,0,800,1500) 
		repeat 
	endif 
	return 
endf 

def node_214
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.dash(1,2,0,800,1500) 
	endif 
	return 
endf 

def node_215
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.dash(1,2,0,800,1500) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> alatreon.dash(1,2,0,800,1500) 
	endif 
	return 
endf 

def node_216
	if self.distance_2d_to_target().leq(950) 
	else 
		-> alatreon.dash(1,2,0,850,1500) 
	endif 
	if self.distance_2d_to_target().leq(950) 
	else 
		-> alatreon.dash(1,2,0,850,1500) 
	endif 
	if self.distance_2d_to_target().leq(950) 
	else 
		-> alatreon.dash(1,2,0,850,1500) 
	endif 
	return 
endf 

def node_217
	if self.distance_2d_to_target().leq(950) 
	else 
		-> alatreon.dash(1,2,0,850,1500) 
	endif 
	if self.distance_2d_to_target().leq(950) 
	else 
		-> alatreon.dash(1,2,0,850,1500) 
	endif 
	if self.distance_2d_to_target().leq(950) 
	else 
		-> alatreon.dash(1,2,0,850,1500) 
	endif 
	if self.distance_2d_to_target().leq(950) 
	else 
		-> alatreon.dash(1,2,0,850,1500) 
	endif 
	if self.distance_2d_to_target().leq(950) 
	else 
		-> alatreon.dash(1,2,0,850,1500) 
	endif 
	return 
endf 

def node_218
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> alatreon.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> alatreon.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> alatreon.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> alatreon.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(1600) 
	else 
		-> alatreon.dash(1,2,0,1500,1500) 
	endif 
	return 
endf 

def node_219
	if self.distance_3d_to_target().leq(600) 
	else 
		-> alatreon.glide(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_220
	if self.distance_3d_to_target().leq(600) 
	else 
		-> alatreon.glide(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_221
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_222
	if self.distance_2d_to_target().leq(700) 
	else 
		-> alatreon.glide_combat(2,1,5,3000,600) 
		repeat 
	endif 
	return 
endf 

def node_223
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> alatreon.glide_combat(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_224
	if self.distance_3d_to_target().leq(700) 
	else 
		-> alatreon.glide(2,1,5,3000,600) 
		repeat 
	endif 
	return 
endf 

def node_225
	if self.distance_3d_to_target().leq(700) 
	else 
		-> alatreon.glide_direct_move(2,1,5,3000,600) 
		repeat 
	endif 
	return 
endf 

def node_226
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide_direct_move(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_227
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,900) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,900) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,900) 
	endif 
	return 
endf 

def node_228
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,1900) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,1900) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,1900) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,1900) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,1900) 
	endif 
	return 
endf 

def node_229
	if self.distance_2d_to_target().leq(600) 
	else 
		-> alatreon.glide_combat(2,1,5,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_230
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> alatreon.glide_combat(2,1,5,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_231
	if self.distance_3d_to_target().leq(600) 
	else 
		-> alatreon.glide(2,1,0,3000,500) 
		repeat 
	endif 
	return 
endf 

def node_232
	if self.distance_3d_to_target().leq(700) 
	else 
		-> alatreon.glide_direct_move(2,1,0,3000,600) 
		repeat 
	endif 
	return 
endf 

def node_233
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_234
	if self.distance_3d_to_target().leq(700) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,600) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,600) 
	endif 
	if self.distance_3d_to_target().leq(700) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,600) 
	endif 
	return 
endf 

def node_235
	if self.distance_2d_to_target().leq(700) 
	else 
		-> alatreon.glide_combat(2,1,0,3000,600) 
		repeat 
	endif 
	return 
endf 

def node_236
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> alatreon.glide_combat(2,1,0,3000,900) 
		repeat 
	endif 
	return 
endf 

def node_237
	if self.distance_2d_to_target().leq(700) 
	else 
		-> alatreon.glide_combat(2,1,0,1500,600) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> alatreon.glide_combat(2,1,0,1500,600) 
	endif 
	if self.distance_2d_to_target().leq(700) 
	else 
		-> alatreon.glide_combat(2,1,0,1500,600) 
	endif 
	return 
endf 

def node_238
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,700) 
	endif 
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> alatreon.glide_direct_move(2,1,0,1500,700) 
	endif 
	return 
endf 

def node_239
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> alatreon.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> alatreon.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> alatreon.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> alatreon.glide_combat(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
	else 
		-> alatreon.glide_combat(2,0,0,1500) 
	endif 
	return 
endf 

def node_240
	>> node_001 
	-> alatreon.take_off_switch_pattern_by_dist() 
	>> node_233 
	return 
endf 

def node_241
	>> node_001 
	-> alatreon.sudden_rise() 
	return 
endf 

def node_242
	>> node_002 
	-> alatreon.sudden_drop() 
	return 
endf 

def node_243
	>> node_001 
	random (50) -> alatreon.mode_change_to_fire() 
	elser (50) -> alatreon.mode_change_to_ice() 
	endr 
	return 
endf 

def node_244
	if self.flying() 
		-> alatreon.discover_fly() 
	else 
		-> alatreon.quick_turn() @ comboSetting:1 
		-> alatreon.discover() 
	endif 
	return 
endf 

def node_245
	if self.flying() 
		-> alatreon.discover_fly() 
	else 
		-> alatreon.discover() 
	endif 
	return 
endf 

def node_246
	if self.flying() 
		-> alatreon.discover_fly() 
	else 
		-> alatreon.discover() 
	endif 
	return 
endf 

def node_247
	if self.flying() 
		-> alatreon.threat_short_fly() 
	else 
		-> alatreon.threat_short() 
	endif 
	return 
endf 

def node_248
	if function#AB() 
		function#AA() 
		>> node_247 
	else 
	endif 
	return 
endf 

def node_249
	if self.flying() 
		-> alatreon.search_fly() 
	else 
		-> alatreon.combat_search() 
	endif 
	return 
endf 

def node_250
	if self.flying() 
		-> alatreon.search_fly() 
	else 
		-> alatreon.combat_search() 
	endif 
	return 
endf 

def node_251
	if self.flying() 
		-> alatreon.search_fly() 
	else 
		-> alatreon.lost_search() 
	endif 
	return 
endf 

def node_252
	if self.flying() 
		-> alatreon.discover_fly() 
	else 
		-> alatreon.discover() 
	endif 
	return 
endf 

def node_253
	>> node_001 
	-> alatreon.chance() 
	return 
endf 

def node_254
	if self.flying() 
		-> alatreon.unique_chance_fly() 
	else 
		-> alatreon.refresh() 
	endif 
	return 
endf 

def node_255
	>> node_001 
	if self.in_combat() 
		-> alatreon.lost_search() 
	else 
		-> alatreon.life_search() 
	endif 
	return 
endf 

def node_256
	>> node_001 
	-> alatreon.lost_search() 
	return 
endf 

def node_257
	if self.flying() 
		-> alatreon.unique_chance_fly() 
	else 
		-> alatreon.chance() 
	endif 
	return 
endf 

def node_258
	if self.flying() 
		-> alatreon.unique_chance_fly() 
	else 
		-> alatreon.chance() 
	endif 
	return 
endf 

def node_259
	if self.flying() 
		-> alatreon.discover_fly() 
	else 
		-> alatreon.discover() 
	endif 
	return 
endf 

def node_260
	self.targetArea(target_area.nearest_entrance) 
	if function#AD() 
		>> node_265 
	else 
		>> node_266 
	endif 
	return 
endf 

def node_261
	if function#5A(20) 
		>> node_262 
	elif function#5A(21) 
		>> node_262 
	elif function#5A(22) 
		>> node_262 
	elif function#5A(23) 
		>> node_262 
	elif function#5A(24) 
		>> node_262 
	elif function#5A(25) 
		>> node_262 
	elif function#5A(30) 
		>> node_263 
	elif function#5A(31) 
		>> node_263 
	elif function#5A(32) 
		>> node_263 
	elif function#5A(33) 
		>> node_263 
	elif function#5A(34) 
		>> node_263 
	elif function#5A(35) 
		>> node_263 
	else 
		>> node_264 
	endif 
	return 
endf 

def node_262
	if self.distance_3d_to_target().leq(20000) 
		>> node_001 
		>> node_265 
	else 
		>> node_264 
	endif 
	return 
endf 

def node_263
	if self.distance_3d_to_target().leq(20000) 
		>> node_002 
		>> node_265 
	else 
		>> node_264 
	endif 
	return 
endf 

def node_264
	if function#AD() 
		>> node_265 
	else 
		>> node_266 
	endif 
	return 
endf 

def node_265
	if function#5A(10) 
		>> node_002 
	elif function#5A(11) 
		>> node_002 
	elif function#5A(12) 
		>> node_002 
	elif function#5A(13) 
		>> node_002 
	elif function#5A(14) 
		>> node_002 
	elif function#5A(15) 
		>> node_002 
	elif function#5A(30) 
		>> node_002 
	elif function#5A(31) 
		>> node_002 
	elif function#5A(32) 
		>> node_002 
	elif function#5A(33) 
		>> node_002 
	elif function#5A(34) 
		>> node_002 
	elif function#5A(35) 
		>> node_002 
	else 
		>> node_001 
	endif 
	if self.flying() 
		>> node_225 
	else 
		>> node_209 
	endif 
	return 
endf 

def node_266
	>> node_267 
	>> node_268 
	>> node_269 
	>> node_270 
	return 
endf 

def node_267
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_226 
	else 
		self.targetArea(target_area.area_center) 
		>> node_210 
		self.targetArea(target_area.area_aerial_center) 
		>> node_240 
	endif 
	return 
endf 

def node_268
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		self.targetArea(40) 
		>> node_224 
	else 
		self.targetArea(39) 
		>> node_211 
	endif 
	return 
endf 

def node_269
	if function#5A(10) 
	elif function#5A(11) 
	elif function#5A(12) 
	elif function#5A(13) 
	elif function#5A(14) 
	elif function#5A(15) 
	elif function#5A(30) 
	elif function#5A(31) 
	elif function#5A(32) 
	elif function#5A(33) 
	elif function#5A(34) 
	elif function#5A(35) 
	else 
		if self.flying() 
			self.targetArea(target_area.area_center) 
			>> node_001 
		else 
		endif 
	endif 
	return 
endf 

def node_270
	self.targetArea(target_area.nearest_entrance) 
	if self.flying() 
		>> node_225 
	else 
		>> node_209 
	endif 
	return 
endf 

def node_271
	self.targetArea(14) 
	if function#AD() 
		>> node_272 
	else 
		>> node_273 
	endif 
	>> node_277 
	return 
endf 

def node_272
	if self.flying() 
		self.targetArea(40) 
		>> node_232 
	else 
		>> node_213 
	endif 
	return 
endf 

def node_273
	>> node_274 
	>> node_276 
	return 
endf 

def node_274
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_233 
	else 
		self.targetArea(target_area.area_aerial_center) 
		>> node_240 
	endif 
	return 
endf 

def node_275
	self.targetArea(target_area.area_center) 
	>> node_213 
	self.targetArea(target_area.area_aerial_center) 
	>> node_240 
	return 
endf 

def node_276
	self.targetArea(14) 
	if self.flying() 
		self.targetArea(40) 
		>> node_231 
	else 
		>> node_213 
	endif 
	return 
endf 

def node_277
	self.targetArea(14) 
	if self.flying() 
		if self.fatigued() 
			>> node_001 
		else 
			>> node_242 
			>> node_001 
		endif 
	else 
	endif 
	return 
endf 

def node_278
	if function#AD() 
		>> node_279 
	else 
		>> node_280 
	endif 
	return 
endf 

def node_279
	if self.flying() 
		>> node_236 
	else 
		if self.in_combat() 
			>> node_213 
		else 
			>> node_208 
		endif 
	endif 
	return 
endf 

def node_280
	>> node_281 
	>> node_282 
	>> node_283 
	return 
endf 

def node_281
	if self.flying() 
		self.targetArea(target_area.area_aerial_center) 
		>> node_232 
	else 
		self.targetArea(target_area.area_center) 
		if self.in_combat() 
			>> node_213 
		else 
			>> node_208 
		endif 
		self.targetArea(target_area.area_aerial_center) 
		>> node_240 
	endif 
	return 
endf 

def node_282
	if self.flying() 
		self.targetArea(40) 
		>> node_231 
	else 
		self.targetArea(39) 
		if self.in_combat() 
			>> node_213 
		else 
			>> node_208 
		endif 
	endif 
	return 
endf 

def node_283
	if self.flying() 
		self.targetArea(target_area.area_center) 
		>> node_001 
	else 
	endif 
	return 
endf 

def node_284
	self.targetArea(target_area.area_center) 
	if self.flying() 
		if self.fatigued() 
			>> node_001 
		else 
			>> node_242 
		endif 
	else 
	endif 
	return 
endf 

def node_285
	if self.flying() 
		>> node_236 
	else 
		if self.in_combat() 
			>> node_213 
		else 
			>> node_208 
		endif 
	endif 
	return 
endf 

def node_286
	if self.flying() 
		-> alatreon.turn_fly() 
	else 
		-> alatreon.turn() 
	endif 
	return 
endf 

def node_287
	if self.angle_2d_cw_between(15,345) 
		>> node_286 
	else 
	endif 
	return 
endf 

def node_288
	if self.angle_2d_cw_between(30,330) 
		>> node_286 
	else 
	endif 
	return 
endf 

def node_289
	if self.angle_2d_cw_between(60,300) 
		>> node_286 
	else 
	endif 
	return 
endf 

def node_290
	if self.angle_2d_cw_between(90,270) 
		>> node_286 
	else 
	endif 
	return 
endf 

def node_291
	if self.flying() 
		-> alatreon.quick_turn_fly() 
	else 
		-> alatreon.quick_turn() 
	endif 
	return 
endf 

def node_292
	if self.angle_2d_cw_between(15,345) 
		>> node_291 
	else 
	endif 
	return 
endf 

def node_293
	if self.angle_2d_cw_between(30,330) 
		>> node_291 
	else 
	endif 
	return 
endf 

def node_294
	if self.angle_2d_cw_between(45,315) 
		>> node_291 
	else 
	endif 
	return 
endf 

def node_295
	if self.angle_2d_cw_between(60,300) 
		>> node_291 
	else 
	endif 
	return 
endf 

def node_296
	if self.angle_2d_cw_between(90,270) 
		>> node_291 
	else 
	endif 
	return 
endf 

def node_297
	>> node_001 
	-> alatreon.lost_search() 
	return 
endf 

def node_298
	>> node_001 
	-> alatreon.lost_search() 
	return 
endf 

def node_299
	>> node_001 
	random (50) -> alatreon.combat_search() 
	elser (50) -> alatreon.lost_search() 
	endr 
	return 
endf 

def node_300
	>> node_001 
	random (50) -> alatreon.combat_search() 
	elser (50) -> alatreon.lost_search() 
	endr 
	return 
endf 

def node_301
	>> node_001 
	-> alatreon.dash(2,1,0,1000,1000) 
	return 
endf 

def node_302
	>> node_001 
	-> alatreon.dash(2,1,0,2000,1000) 
	return 
endf 

def node_303
	>> node_001 
	>> node_306 
	return 
endf 

def node_304
	>> node_001 
	if self.target(10) 
		-> alatreon.dash(2,0,0,1000) 
	else 
	endif 
	if self.enraged() 
		>> node_258 
	else 
		>> node_258 
	endif 
	return 
endf 

def node_305
	>> node_001 
	-> alatreon.chance() 
	return 
endf 

def node_306
	>> node_001 
	if self.distance_2d_to_target().leq(450) 
		>> node_117 
	elif self.distance_2d_to_target().leq(875) 
		>> node_106 
	elif self.distance_2d_to_target().leq(1400) 
		>> node_107 
	else 
		>> node_118 
	endif 
	>> node_001 
	>> node_294 
	-> alatreon.anger_search() 
	return 
endf 

def node_307
	if self.distance_3d_to_target().leq(900) 
		>> node_327 
	elif self.distance_3d_to_target().leq(1350) 
		>> node_329 
	else 
	endif 
	return 
endf 

def node_308
	if self.distance_2d_to_target().leq(900) 
	else 
		-> alatreon.dash(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> alatreon.dash(2,0,0,1500) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		-> alatreon.dash(2,0,0,1500) 
	endif 
	return 
endf 

def node_309
	>> node_001 
	-> alatreon.lost_search() 
	return 
endf 

def node_310
	>> node_001 
	>> node_288 
	-> alatreon.life_search() 
	if self.in_map(st.Special_Arena).in_area(-1) 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
	elif self.in_map(st.Seliana_Supply_Cache_Story).in_area(-1) 
	else 
		random (75) 
					self.targetArea(21) @ parameter2:1000 
					>> node_001 
					>> node_287 
					-> alatreon.life_search() 
		elser (25) 
		endr 
	endif 
	return 
endf 

def node_311
	>> node_002 
	>> node_288 
	-> alatreon.search_fly() 
	return 
endf 

def node_312
	>> node_002 
	self.targetEnemy(17) 
	-> alatreon.sudden_drop() 
	return 
endf 

def node_313
	if self.distance_2d_to_target().leq(700) 
	else 
		-> alatreon.glide_direct_move(1,2,0,600,1500) 
		repeat 
	endif 
	return 
endf 

def node_314
	>> node_002 
	self.targetArea(22) @ parameter2:500 
	-> alatreon.quick_turn_fly() 
	return 
endf 

def node_315
	>> node_002 
	-> alatreon.ride_rage_head() 
	return 
endf 

def node_316
	>> node_002 
	-> alatreon.ride_rage_head_lv2() 
	return 
endf 

def node_317
	>> node_002 
	-> alatreon.ride_rage_body() 
	return 
endf 

def node_318
	>> node_002 
	-> alatreon.ride_rage_body_lv2() 
	return 
endf 

def node_319
	>> node_002 
	if self.distance_2d_to_target().leq(600) 
		>> node_342 
	else 
	endif 
	>> node_313 
	>> node_320 
	return 
endf 

def node_320
	if function#11(1000) 
	else 
		if self.above_area() 
			-> alatreon.short_up_step_fly() 
		else 
			-> alatreon.short_down_step_fly() 
		endif 
	endif 
	return 
endf 

def node_321
	>> node_002 
	-> alatreon.ride_rage_crash_head() 
	return 
endf 

def node_322
	>> node_002 
	-> alatreon.ride_rage_crash_head_lv2() 
	return 
endf 

def node_323
	>> node_002 
	-> alatreon.ride_rage_crash_body() 
	return 
endf 

def node_324
	>> node_002 
	-> alatreon.ride_rage_crash_body_lv2() 
	return 
endf 

def node_325
	>> node_002 
	-> alatreon.unique_chance_fly() 
	return 
endf 

def node_326
	>> node_002 
	-> alatreon.ride_tired() 
	return 
endf 

def node_327
	>> node_001 
	-> alatreon.back_turn() 
	return 
endf 

def node_328
	if self.angle_2d_cw_between(15,345) 
		>> node_327 
	else 
	endif 
	return 
endf 

def node_329
	if self.angle_2d_cw_between(30,330) 
		>> node_327 
	else 
	endif 
	return 
endf 

def node_330
	if self.angle_2d_cw_between(45,315) 
		>> node_327 
	else 
	endif 
	return 
endf 

def node_331
	if self.angle_2d_cw_between(60,300) 
		>> node_327 
	else 
	endif 
	return 
endf 

def node_332
	if self.angle_2d_cw_between(90,270) 
		>> node_327 
	else 
	endif 
	return 
endf 

def node_333
	>> node_001 
	-> alatreon.quick_turn() 
	return 
endf 

def node_334
	if self.angle_2d_cw_between(15,345) 
		>> node_333 
	else 
	endif 
	return 
endf 

def node_335
	if self.angle_2d_cw_between(30,330) 
		>> node_333 
	else 
	endif 
	return 
endf 

def node_336
	if self.angle_2d_cw_between(45,315) 
		>> node_333 
	else 
	endif 
	return 
endf 

def node_337
	if self.angle_2d_cw_between(60,300) 
		>> node_333 
	else 
	endif 
	return 
endf 

def node_338
	if self.angle_2d_cw_between(90,270) 
		>> node_333 
	else 
	endif 
	return 
endf 

def node_339
	random (25) 
				self.targetArea(21) @ parameter2:800 
	elser (25) 
				self.targetArea(22) @ parameter2:800 
	elser (25) 
				self.targetArea(21) @ parameter2:800 
	elser (25) 
				self.targetArea(22) @ parameter2:800 
	endr 
	return 
endf 

def node_340
	random (35) 
				if self.flying() 
					-> alatreon.unique_chance_fly() 
				else 
					-> alatreon.chance() 
				endif 
	elser (65) 
	endr 
	return 
endf 

def node_341
	if self.flying() 
		-> alatreon.unique_chance_fly() 
	else 
		-> alatreon.chance() 
	endif 
	return 
endf 

def node_342
	>> node_002 
	-> alatreon.step_back_fly() 
	return 
endf 

def node_343
	if self.angle_2d_cw_between(15,345) 
		>> node_342 
	else 
	endif 
	return 
endf 

def node_344
	if self.angle_2d_cw_between(30,330) 
		>> node_342 
	else 
	endif 
	return 
endf 

def node_345
	if self.angle_2d_cw_between(45,315) 
		>> node_342 
	else 
	endif 
	return 
endf 

def node_346
	if self.angle_2d_cw_between(90,270) 
		>> node_342 
	else 
	endif 
	return 
endf 

def node_347
	if self.angle_2d_cw_between(0,180) 
		-> alatreon.quick_turn_fly() 
	else 
		-> alatreon.quick_turn_fly() 
	endif 
	return 
endf 

def node_348
	if self.angle_2d_cw_between(15,345) 
		>> node_347 
	else 
	endif 
	return 
endf 

def node_349
	if self.angle_2d_cw_between(30,330) 
		>> node_347 
	else 
	endif 
	return 
endf 

def node_350
	if self.angle_2d_cw_between(45,315) 
		>> node_347 
	else 
	endif 
	return 
endf 

def node_351
	if self.angle_2d_cw_between(90,270) 
		>> node_347 
	else 
	endif 
	return 
endf 

def node_352
	>> node_001 
	>> node_293 
	if self.flying() 
		-> alatreon.unique_chance_fly() 
	else 
		random (50) -> alatreon.chance() 
		elser (50) -> alatreon.lost_search() 
		endr 
	endif 
	return 
endf 

def node_353
	>> node_001 
	if self.targetEnemy(target_em.any_monster) 
		random (20) >> node_293 
		elser (80) 
		endr 
	else 
	endif 
	random (60) -> alatreon.chance() 
	elser (10) -> alatreon.lost_search() 
	elser (30) -> alatreon.combat_search() 
	endr 
	return 
endf 

def node_354
	>> node_001 
	>> node_293 
	random (40) -> alatreon.chance() 
	elser (20) -> alatreon.lost_search() 
	elser (40) -> alatreon.combat_search() 
	elser (0) -> alatreon.threat_short() 
	endr 
	return 
endf 

def node_355
	>> node_001 
	>> node_288 
	-> alatreon.life_search() 
	return 
endf 

def node_356
	>> node_001 
	self.targetEnemy(22) @ parameter2:2000 
	random (40) >> node_288 
	elser (60) 
	endr 
	-> alatreon.life_search() 
	return 
endf 

def node_357
	-> alatreon.walk(1,2,0,600,1500) 
	return 
endf 

def node_358
	-> alatreon.glide_combat(1,2,0,600,2000) 
	return 
endf 

def node_359
	if function#5D() 
		>> node_361 
	elif self.target(3) 
		>> node_362 
	elif self.target(4) 
		>> node_362 
	elif self.target(55) 
		>> node_380 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_365 
		else 
			>> node_366 
		endif 
	elif self.target(14) 
		>> node_367 
	elif self.target(11) 
		>> node_368 
	elif self.target.mudded() 
		>> node_377 
	elif self.target(12) 
	elif self.flying() 
		if self.above_area() 
			>> node_371 
		elif function#11(900) 
			if self.above_area() 
				>> node_371 
			else 
			endif 
		else 
			>> node_371 
		endif 
	elif self.target(52) 
		>> node_370 
	else 
		>> node_360 
	endif 
	return 
endf 

def node_360
	if self.in_map(st.Ancient_Forest).in_area(2) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_370 
		endif 
	elif self.in_map(st.Ancient_Forest).in_area(5) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_370 
		endif 
	elif self.in_map(st.Ancient_Forest).in_area(6) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_370 
		endif 
	elif self.in_map(st.Coral_Highlands).in_area(2) 
		if self.vertical_distance_to_target().leq(300) 
		else 
			>> node_370 
		endif 
	elif self.in_map(st.Coral_Highlands).in_area(10) 
		if self.vertical_distance_to_target().leq(400) 
		else 
			>> node_370 
		endif 
	elif self.vertical_distance_to_target().leq(450) 
	else 
		>> node_370 
	endif 
	return 
endf 

def node_361
	if self.distance_2d_to_target().leq(1500) 
		if self.angle_2d_cw_between(300,60) 
		else 
			function#5E() 
			>> node_249 
		endif 
	else 
		if self.angle_2d_cw_between(300,60) 
			function#5E() 
			>> node_249 
		else 
			function#5E() 
			>> node_250 
		endif 
	endif 
	return 
endf 

def node_362
	>> node_363 
	>> node_364 
	reset 
endf 

def node_363
	if self.in_map(st.Secluded_Valley_Alatreon).in_area(-1) 
		function#54() 
		function#52(0,4) 
		self.targetArea(target_area.nearest_entrance) 
	else 
		self.targetArea(19) 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		if self.flying() 
			>> node_235 
		else 
			>> node_213 
		endif 
	endif 
	return 
endf 

def node_364
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.flying() 
		-> alatreon.search_fly() 
	else 
		-> alatreon.lost_search() 
	endif 
	return 
endf 

def node_365
	if self.flying() 
		>> node_371 
		>> node_376 
	else 
		>> node_376 
		>> node_369 
		if self.distance_2d_to_target().leq(1000) 
			if self.target(0) 
				if self.above_area() 
					-> alatreon.turn_step_front_r() 
				else 
					-> alatreon.turn_step_side_l() 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_366
	if self.flying() 
		>> node_371 
		>> node_376 
	else 
		>> node_376 
		>> node_369 
		if self.distance_2d_to_target().leq(1000) 
			if self.target(0) 
				if self.above_area() 
					-> alatreon.turn_step_front_r() 
				else 
					self.targetArea(77) 
					-> alatreon.dash(1,2,0,0,1500) 
					self.targetArea(1) 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_367
	if self.flying() 
		>> node_371 
		>> node_376 
	else 
		>> node_376 
		>> node_369 
		if self.distance_2d_to_target().leq(2000) 
			if self.target(14) 
				if self.above_area() 
					-> alatreon.turn_step_front_r() 
				else 
					-> alatreon.turn_step_side_l() 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_368
	if self.flying() 
		>> node_375 
	else 
		>> node_370 
	endif 
	return 
endf 

def node_369
	if self.distance_2d_to_target().leq(600) 
		if function#11(1500) 
		else 
			-> alatreon.dash(1,2,0,500,1500) 
		endif 
	else 
		-> alatreon.dash(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if function#11(1500) 
		else 
			-> alatreon.dash(1,2,0,500,1500) 
		endif 
	else 
		-> alatreon.dash(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if function#11(1500) 
		else 
			-> alatreon.dash(1,2,0,500,1500) 
		endif 
	else 
		-> alatreon.dash(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_370
	if self.distance_3d_to_target().leq(400) 
	else 
		-> alatreon.dash(1,2,0,300,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> alatreon.dash(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> alatreon.dash(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_371
	if self.distance_2d_to_target().leq(300) 
		if function#11(1000) 
		else 
			-> alatreon.glide_combat(1,2,0,200,1500) 
		endif 
	else 
		-> alatreon.glide_combat(1,2,0,200,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if function#11(1000) 
		else 
			-> alatreon.glide_combat(1,2,0,500,1500) 
		endif 
	else 
		-> alatreon.glide_combat(1,2,0,500,1500) 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if function#11(1000) 
		else 
			-> alatreon.glide_combat(1,2,0,500,1500) 
		endif 
	else 
		-> alatreon.glide_combat(1,2,0,500,1500) 
	endif 
	>> node_372 
	return 
endf 

def node_372
	if function#11(500) 
	else 
		if self.above_area() 
			>> node_373 
		else 
			>> node_374 
		endif 
	endif 
	return 
endf 

def node_373
	>> node_002 
	-> alatreon.short_up_step_fly() 
	return 
endf 

def node_374
	>> node_002 
	-> alatreon.short_down_step_fly() 
	return 
endf 

def node_375
	if self.distance_3d_to_target().leq(300) 
	else 
		-> alatreon.glide_direct_move(1,2,0,200,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> alatreon.glide_direct_move(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> alatreon.glide_direct_move(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_376
	if self.flying() 
		random (60) >> node_258 
		elser (40) 
		endr 
		>> node_258 
	else 
		if self.target(0) 
		elif self.target(14) 
		else 
			return 
		endif 
		if function#101(4) 
			random (35) >> node_258 
			elser (65) 
			endr 
		else 
		endif 
		if self.target(0) 
		elif self.target(14) 
		else 
			return 
		endif 
		if self.above_area() 
			if self.distance_2d_to_target().leq(1500) 
				-> alatreon.back_turn() 
			elif self.distance_2d_to_target().leq(3000) 
			else 
				-> alatreon.dash(6,2,0,2500,2000) 
			endif 
		else 
		endif 
		if self.target(0) 
		elif self.target(14) 
		else 
			return 
		endif 
		if self.above_area() 
			-> alatreon.die() 
		else 
		endif 
	endif 
	return 
endf 

def node_377
	if self.flying() 
		>> node_258 
	else 
		if function#101(4) 
			random (35) >> node_258 
			elser (65) 
			endr 
		else 
		endif 
		>> node_378 
		>> node_379 
	endif 
	reset 
endf 

def node_378
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> alatreon.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> alatreon.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> alatreon.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> alatreon.dash(1,2,0,1500,1500) 
	endif 
	if self.distance_3d_to_target().leq(2000) 
	else 
		-> alatreon.dash(1,2,0,1500,1500) 
	endif 
	return 
endf 

def node_379
	if self.flying() 
		>> node_258 
	else 
		>> node_258 
	endif 
	return 
endf 

def node_380
	if function#7F() 
		>> node_381 
	elif function#7F(3) 
		>> node_381 
	else 
		random (50) 
					return 
		elser (50) 
		endr 
		>> node_382 
	endif 
	return 
endf 

def node_381
	if self.flying() 
		>> node_164 
		if function#7F() 
		elif function#7F(3) 
		elif function#7F(14) 
		elif function#7F(16) 
		else 
			return 
		endif 
		>> node_166 
	else 
		random (65) >> node_112 
		elser (35) >> node_135 
		endr 
		if function#7F() 
		elif function#7F(3) 
		elif function#7F(14) 
		elif function#7F(16) 
		else 
			return 
		endif 
		random (65) >> node_103 
					>> node_117 
		elser (35) >> node_138 
		endr 
	endif 
	return 
endf 

def node_382
	if self.flying() 
		>> node_164 
		if function#7F() 
		elif function#7F(3) 
		elif function#7F(14) 
		elif function#7F(16) 
		else 
			return 
		endif 
		>> node_166 
	else 
		>> node_112 
		if function#7F() 
		elif function#7F(3) 
		elif function#7F(14) 
		elif function#7F(16) 
		else 
			return 
		endif 
		>> node_103 
		>> node_117 
	endif 
	return 
endf 

