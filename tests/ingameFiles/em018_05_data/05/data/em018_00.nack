importactions Scarred_Yian_Garuga as scarred_yian_garuga
importlibrary Global as Global

def node_000 : 33
	>> node_002 
	>> node_003 
	>> node_004 
	reset 
endf 

def node_001 : 71
	>> node_002 
	>> node_003 
	>> Global.node_035 
	>> Global.node_009 
	reset 
endf 

def node_002 : 35
	if function#45() 
	else 
		>> Global.node_163 
		>> Global.node_275 
	endif 
	return 
endf 

def node_003 : 64
	if self.target(4) 
		>> Global.node_282 => reset 
	elif self.target(3) 
		>> Global.node_282 => reset 
	elif self.target(55) 
		>> Global.node_290 => reset 
	elif self.target(12) 
		>> Global.node_284 => reset 
	elif self.target(14) 
		>> Global.node_285 => reset 
	elif self.target(11) 
		>> Global.node_289 => reset 
	elif self.target(0) 
		>> Global.node_285 => reset 
	else 
	endif 
	return 
endf 

def node_004 : 36
	>> Global.node_296 
	if self.distance_3d_to_target().leq(300) 
		self.enraged() >> node_011 => reset 
		self.fatigued() >> node_017 => reset 
		>> node_005 => reset 
	elif self.distance_3d_to_target().leq(600) 
		self.enraged() >> node_012 => reset 
		self.fatigued() >> node_018 => reset 
		>> node_006 => reset 
	elif self.distance_3d_to_target().leq(1100) 
		self.enraged() >> node_013 => reset 
		self.fatigued() >> node_019 => reset 
		>> node_007 => reset 
	elif self.distance_3d_to_target().leq(1800) 
		self.enraged() >> node_014 => reset 
		self.fatigued() >> node_020 => reset 
		>> node_008 => reset 
	elif self.distance_3d_to_target().leq(2000) 
		self.enraged() >> node_015 => reset 
		self.fatigued() >> node_021 => reset 
		>> node_009 => reset 
	else 
		self.enraged() >> node_016 => reset 
		self.fatigued() >> node_022 => reset 
		>> node_010 => reset 
	endif 
	reset 
endf 

def node_005 : 65
	if self.flying() 
		random (40) >> Global.node_101 
		elser (30) >> Global.node_102 
		elser (30) >> Global.node_103 
		endr 
	else 
		if [RegisterVar5 <= 5] 
			[RegisterVar5 |-] 
			random (60) >> Global.node_078 
			elser (10) >> Global.node_009 
			elser (20) >> Global.node_010 
			elser (10) >> Global.node_034 
			endr 
		else 
			[RegisterVar5 ++] 
			if [RegisterVar6 <= 3] 
				[RegisterVar6 |-] 
				random (20) >> Global.node_097 
				elser (15) >> Global.node_098 
				elser (15) >> Global.node_099 
				elser (10) >> Global.node_118 
				elser (10) >> Global.node_120 
				elser (10) >> Global.node_123 
				elser (10) >> Global.node_124 
				elser (10) >> Global.node_125 
				endr 
			else 
				[RegisterVar6 ++] 
				>> Global.node_126 
			endif 
		endif 
	endif 
	return 
endf 

def node_006 : 52
	>> node_005 
	return 
endf 

def node_007 : 53
	if self.flying() 
		>> Global.node_038 
		>> node_005 
	else 
		>> Global.node_022 
		>> node_005 
	endif 
	return 
endf 

def node_008 : 54
	if self.flying() 
		random (60) >> Global.node_038 
		elser (40) >> Global.node_030 
		endr 
		>> node_005 
	else 
		random (5) >> Global.node_104 
		elser (5) >> Global.node_105 
		elser (10) >> Global.node_106 
		elser (10) >> Global.node_107 
		elser (5) >> Global.node_108 
		elser (5) >> Global.node_109 
		elser (10) >> Global.node_110 
		elser (15) >> Global.node_092 
		elser (5) >> Global.node_093 
		elser (10) >> Global.node_094 
		elser (5) >> Global.node_096 
		elser (15) >> Global.node_095 
		endr 
	endif 
	return 
endf 

def node_009 : 55
	>> node_008 
	return 
endf 

def node_010 : 68
	if self.flying() 
		>> Global.node_231 
	else 
		>> Global.node_203 
	endif 
	return 
endf 

def node_011 : 66
	>> node_005 
	return 
endf 

def node_012 : 56
	>> node_006 
	return 
endf 

def node_013 : 57
	>> node_007 
	return 
endf 

def node_014 : 58
	>> node_008 
	return 
endf 

def node_015 : 59
	>> node_009 
	return 
endf 

def node_016 : 69
	>> node_010 
	return 
endf 

def node_017 : 67
	[RegisterVar5 ++] 
	if [RegisterVar5 <= 2] 
		[RegisterVar5 |-] 
		if [RegisterVar6 <= 2] 
			[RegisterVar6 |-] 
			random (25) >> Global.node_069 
			elser (10) >> Global.node_070 
			elser (20) >> Global.node_071 
			elser (15) >> Global.node_074 
			elser (15) >> Global.node_075 
			elser (10) >> Global.node_076 
			elser (5) >> Global.node_077 
			endr 
		else 
			[RegisterVar6 ++] 
			random (25) >> Global.node_062 
			elser (15) >> Global.node_067 
			elser (15) >> Global.node_063 
			elser (45) >> Global.node_068 
			endr 
		endif 
	else 
		random (60) >> Global.node_078 
		elser (10) >> Global.node_009 
		elser (20) >> Global.node_010 
		elser (10) >> Global.node_034 
		endr 
	endif 
	return 
endf 

def node_018 : 60
	>> node_017 
	return 
endf 

def node_019 : 61
	>> Global.node_022 
	>> node_017 
	return 
endf 

def node_020 : 62
	random (10) >> Global.node_055 
	elser (10) >> Global.node_056 
	elser (20) >> Global.node_057 
	elser (20) >> Global.node_058 
	elser (10) >> Global.node_059 
	elser (10) >> Global.node_060 
	elser (20) >> Global.node_061 
	endr 
	return 
endf 

def node_021 : 63
	>> node_020 
	return 
endf 

def node_022 : 70
	>> node_010 
	return 
endf 

