importactions Brachydios as brachydios

def node_000 : 1
	conclude 
endf 

def node_001 : 20
	if self.in_combat() 
		if function#45() 
			return 
		endif 
	endif 
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		elif self.vertical_distance_to_target().leq(1000) 
			if self.distance_3d_to_target().leq(3000) 
				if self.target.in_combat() >> node_002 
				else >> node_006 
				endif 
			endif 
		endif 
	elif self.defense_downed() >> node_015 
	endif 
	return 
endf 

def node_002 : 21
	if function#30(2) >> node_003 
	elif function#30() >> node_004 
	else >> node_005 
	endif 
	return 
endf 

def node_003 : 27
	random (0) >> node_010 
	elser (10) >> node_011 
	elser (55) >> node_012 
	elser (35) 
	endr 
	return 
endf 

def node_004 : 28
	random (0) >> node_010 
	elser (50) >> node_011 
	elser (0) >> node_012 
	elser (15) >> node_014 
	elser (35) 
	endr 
	return 
endf 

def node_005 : 29
	random (10) >> node_010 
	elser (55) >> node_011 
	elser (0) >> node_012 
	elser (35) 
	endr 
	return 
endf 

def node_006 : 22
	if function#30(2) >> node_007 
	elif function#30() >> node_008 
	else >> node_009 
	endif 
	return 
endf 

def node_007 : 30
	random (35) >> node_010 
	elser (0) >> node_011 
	elser (55) >> node_012 
	elser (10) 
	endr 
	return 
endf 

def node_008 : 31
	random (55) >> node_010 
	elser (10) >> node_011 
	elser (0) >> node_012 
	elser (35) 
	endr 
	return 
endf 

def node_009 : 32
	random (55) >> node_010 
	elser (10) >> node_011 
	elser (0) >> node_012 
	elser (35) 
	endr 
	return 
endf 

def node_010 : 23
	>> node_072 
	if [RegisterVar2 < 0] >> node_063 
		>> node_114 
	else -> brachydios.threat_short() 
		>> node_113 
	endif 
	return 
endf 

def node_011 : 26
	if self.distance_2d_to_target().gt(750) >> node_033 
	else 
		random (50) >> node_019 
		elser (30) >> node_038 
		elser (20) >> node_047 
		endr 
	endif 
	return 
endf 

def node_012 : 25
	if [RegisterVar2 <= 2] 
		>> node_114 
		self.force_area_change2() 
	else 
		>> node_113 
		>> node_072 
		>> node_063 
	endif 
	return 
endf 

def node_013 : 24
	>> node_058 
	>> node_063 
	return 
endf 

def node_014 : 115
	>> node_011 
	>> node_012 
	return 
endf 

def node_015 : 33
	function#31(49,1000) 
	self.targetEnemy(target_em.closest_entity) 
	>> node_005 
	return 
endf 

def node_016 : 3
	if self.angle_2d_cw_between(0,180) >> node_017 
	else >> node_018 
	endif 
	return 
endf 

def node_017 : 99
	-> brachydios.hook_right() 
	>> node_107 
	return 
endf 

def node_018 : 100
	-> brachydios.hook_left() 
	>> node_108 
	return 
endf 

def node_019 : 4
	if self.distance_2d_to_target().leq(350) >> node_039 
	elif self.distance_2d_to_target().leq(500) >> node_029 
	elif self.distance_2d_to_target().leq(1000) >> node_020 
	elif self.distance_2d_to_target().leq(1500) >> node_021 
	else >> node_035 
	endif 
	return 
endf 

def node_020 : 5
	>> node_075 
	>> node_105 
	random (80) 
				if self.angle_2d_cw_between(0,180) >> node_023 
				else >> node_022 
				endif 
	elser (20) 
				if self.angle_2d_cw_between(0,180) >> node_022 
				else >> node_023 
				endif 
	endr 
	return 
endf 

def node_021 : 6
	>> node_105 
	random (80) 
				if self.angle_2d_cw_between(0,180) >> node_025 
				else >> node_024 
				endif 
	elser (20) 
				if self.angle_2d_cw_between(0,180) >> node_024 
				else >> node_025 
				endif 
	endr 
	return 
endf 

def node_022 : 101
	-> brachydios.arm_slammed_r() 
	>> node_107 
	return 
endf 

def node_023 : 102
	-> brachydios.arm_slammed_l() 
	>> node_108 
	return 
endf 

def node_024 : 103
	-> brachydios.arm_slammed_long_r() 
	>> node_107 
	return 
endf 

def node_025 : 104
	-> brachydios.arm_slammed_long_l() 
	>> node_108 
	return 
endf 

def node_026 : 64
	if self.distance_2d_to_target().leq(350) >> node_045 
	else >> node_027 
	endif 
	return 
endf 

def node_027 : 51
	>> node_075 
	>> node_104 
	>> node_104 
	-> brachydios.short_head_atk() 
	return 
endf 

def node_028 : 93
	>> node_027 
	if self.target.blast_blighted() 
		random (50) >> node_019 
		elser (50) 
		endr 
	endif 
	return 
endf 

def node_029 : 14
	>> node_105 
	-> brachydios.head_atk() 
	>> node_106 
	return 
endf 

def node_030 : 9
	if self.distance_2d_to_target().leq(750) >> node_031 
	else >> node_032 
	endif 
	return 
endf 

def node_031 : 7
	>> node_105 
	if self.enraged() 
	else >> node_074 
	endif 
	-> brachydios.large_explosion() 
	>> node_106 
	return 
endf 

def node_032 : 8
	>> node_105 
	-> brachydios.linear_explosion() 
	>> node_106 
	return 
endf 

def node_033 : 57
	if self.fatigued() 
		if self.distance_3d_to_target().leq(500) >> node_036 
		elif self.distance_3d_to_target().leq(750) >> node_036 
		elif self.distance_3d_to_target().leq(1500) >> node_037 
		else >> node_037 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) >> node_036 
		elif self.distance_3d_to_target().leq(750) >> node_034 
		elif self.distance_3d_to_target().leq(1500) >> node_034 
		else >> node_035 
		endif 
	endif 
	return 
endf 

def node_034 : 87
	>> node_072 
	>> node_105 
	-> brachydios.jump_head_atk_direct() 
	>> node_110 
	return 
endf 

def node_035 : 88
	>> node_074 
	>> node_105 
	-> brachydios.jump_head_atk_long_direct() 
	>> node_110 
	return 
endf 

def node_036 : 10
	>> node_105 
	>> node_112 
	-> brachydios.jump_head_atk_start() 
	return 
endf 

def node_037 : 56
	>> node_105 
	>> node_112 
	-> brachydios.jump_head_atk_long_start() 
	return 
endf 

def node_038 : 11
	>> node_105 
	-> brachydios.countinuos_attack_start() 
	>> node_109 
	return 
endf 

def node_039 : 12
	>> node_105 
	-> brachydios.tail_swing() 
	return 
endf 

def node_040 : 69
	if function#B9() 
		if function#102(2) >> node_042 
		elif function#103(2) >> node_041 
		else >> node_042 
		endif 
	else 
		>> node_042 
	endif 
	if self.target.helpless_0() 
	elif self.distance_2d_to_target().gt(1000) 
	elif self.enraged() 
		random (85) >> node_027 
		elser (15) 
		endr 
	else 
		random (70) >> node_027 
		elser (30) 
		endr 
	endif 
	return 
endf 

def node_041 : 67
	>> node_104 
	>> node_104 
	-> brachydios.dash_punch_step_turn_r() 
	>> node_107 
	return 
endf 

def node_042 : 68
	>> node_104 
	>> node_104 
	-> brachydios.dash_punch_step_turn_l() 
	>> node_108 
	return 
endf 

def node_043 : 73
	-> brachydios.predator_attack() 
	return 
endf 

def node_044 : 77
	>> node_104 
	if self.angle_2d_cw_between(0,90) -> brachydios.side_step_left() 
	elif self.angle_2d_cw_between(270,360) -> brachydios.side_step_right() 
	else -> brachydios.back_turn() 
	endif 
	return 
endf 

def node_045 : 13
	>> node_104 
	if self.angle_2d_cw_between(0,90) -> brachydios.side_step_right() 
	elif self.angle_2d_cw_between(270,360) -> brachydios.side_step_left() 
	else -> brachydios.back_turn() 
	endif 
	return 
endf 

def node_046 : 78
	>> node_075 
	random (50) -> brachydios.stamp_turn_l() 
	elser (50) -> brachydios.stamp_turn_r() 
	endr 
	return 
endf 

def node_047 : 18
	>> node_104 
	if self.angle_2d_cw_between(0,180) >> node_049 
	else >> node_050 
	endif 
	return 
endf 

def node_048 : 76
	>> node_104 
	if self.angle_2d_cw_between(0,180) >> node_049 
	else >> node_050 
	endif 
	return 
endf 

def node_049 : 110
	-> brachydios.stamp_turn_r() 
	>> node_107 
	return 
endf 

def node_050 : 111
	-> brachydios.stamp_turn_l() 
	>> node_108 
	return 
endf 

def node_051 : 89
	>> node_047 
	if self.distance_2d_to_target().gt(500) 
		if self.distance_2d_to_target().leq(850) >> node_062 
		endif 
	endif 
	return 
endf 

def node_052 : 70
	>> node_104 
	if self.angle_2d_cw_between(0,180) >> node_055 
	else >> node_056 
	endif 
	return 
endf 

def node_053 : 19
	>> node_104 
	if self.angle_2d_cw_between(0,180) >> node_055 
	else >> node_056 
	endif 
	return 
endf 

def node_054 : 71
	if self.angle_2d_cw_between(0,180) >> node_056 
	else >> node_055 
	endif 
	if self.angle_2d_cw_between(0,180) >> node_056 
	else >> node_055 
	endif 
	>> node_072 
	return 
endf 

def node_055 : 112
	-> brachydios.stamp_turn_long_r() 
	>> node_107 
	return 
endf 

def node_056 : 113
	-> brachydios.stamp_turn_long_l() 
	>> node_108 
	return 
endf 

def node_057 : 90
	>> node_052 
	if self.distance_2d_to_target().gt(500) 
		if self.distance_2d_to_target().leq(850) >> node_062 
		endif 
	endif 
	return 
endf 

def node_058 : 62
	random (40) >> node_060 
	elser (40) >> node_059 
	elser (20) >> node_061 
	endr 
	return 
endf 

def node_059 : 60
	>> node_112 
	>> node_104 
	-> brachydios.back_step_l_hand_reload() 
	return 
endf 

def node_060 : 59
	>> node_112 
	>> node_104 
	-> brachydios.back_step_r_hand_reload() 
	return 
endf 

def node_061 : 61
	>> node_112 
	>> node_104 
	-> brachydios.back_step_2hand_reload() 
	return 
endf 

def node_062 : 79
	>> node_105 
	if self.target.blast_blighted() 
		if self.distance_2d_to_target().gt(550) 
			if self.distance_2d_to_target().gt(850) 
				if self.angle_2d_cw_between(0,180) -> brachydios.hook_right() @ comboSetting:1 
					-> brachydios.arm_slammed_long_l() @ comboSetting:1 
				else -> brachydios.hook_left() @ comboSetting:1 
					-> brachydios.arm_slammed_long_r() @ comboSetting:1 
				endif 
			else 
				if self.angle_2d_cw_between(0,180) -> brachydios.hook_right() @ comboSetting:1 
					-> brachydios.arm_slammed_l() @ comboSetting:1 
				else -> brachydios.hook_left() @ comboSetting:1 
					-> brachydios.arm_slammed_r() @ comboSetting:1 
				endif 
			endif 
		else >> node_016 
		endif 
	else >> node_016 
	endif 
	return 
endf 

def node_063 : 96
	-> brachydios.threat_big() 
	return 
endf 

def node_064 : 58
	>> node_074 
	>> node_112 
	>> node_104 
	-> brachydios.threat_2hand_reload() 
	return 
endf 

def node_065 : 40
	>> node_064 
	return 
endf 

def node_066 : 85
	-> brachydios.combat_search() 
	return 
endf 

def node_067 : 50
	if self.target_on_part(0) >> node_068 
	elif self.target_on_part(1) >> node_069 
	elif self.target_on_part(2) >> node_070 
	endif 
	return 
endf 

def node_068 : 44
	if self.mounted() -> brachydios.ride_rage_head() 
	else -> brachydios.ride_rage_head() 
	endif 
	return 
endf 

def node_069 : 45
	if self.mounted() -> brachydios.ride_rage_body() 
	else -> brachydios.ride_rage_body() 
	endif 
	return 
endf 

def node_070 : 46
	if self.mounted() -> brachydios.ride_rage_tail() 
	else -> brachydios.ride_rage_tail() 
	endif 
	return 
endf 

def node_071 : 15
	if self.in_combat() -> brachydios.quick_turn() 
	else -> brachydios.normal_turn() 
	endif 
	return 
endf 

def node_072 : 41
	if self.distance_2d_to_target().leq(500) -> brachydios.back_turn() 
	endif 
	>> node_074 
	return 
endf 

def node_073 : 42
	self.targetEnemy(22) @ parameter2:2000 
	random (40) >> node_071 
	elser (60) 
	endr 
	return 
endf 

def node_074 : 16
	if self.angular_15(30,0) >> node_071 
	endif 
	return 
endf 

def node_075 : 91
	if self.angular_15(60,0) >> node_071 
	endif 
	return 
endf 

def node_076 : 92
	if self.fatigued() -> brachydios.tired_walk(0,1,5,0,800) 
	else -> brachydios.walk(0,1,5,0,800) 
	endif 
	return 
endf 

def node_077 : 43
	if self.fatigued() -> brachydios.tired_walk(2,1,5,1500,800) 
	else -> brachydios.walk(2,1,5,1500,800) 
	endif 
	return 
endf 

def node_078 : 52
	if self.fatigued() -> brachydios.tired_walk(2,1,5,3000,600) 
	else -> brachydios.walk(2,1,5,3000,600) 
	endif 
	return 
endf 

def node_079 : 54
	if self.fatigued() -> brachydios.tired_walk(2,1,5,4000,600) 
	else -> brachydios.walk(2,1,5,4000,600) 
	endif 
	return 
endf 

def node_080 : 72
	>> node_071 
	random (45) -> brachydios.predator_walk_l() 
	elser (55) -> brachydios.predator_walk_r() 
	endr 
	return 
endf 

def node_081 : 74
	if self.in_combat() -> brachydios.dash() 
	else -> brachydios.fox_walk(2,0,0,2000) 
	endif 
	return 
endf 

def node_082 : 39
	if self.fatigued() -> brachydios.tired_dash(0,1,5,0,800) 
	else -> brachydios.dash(0,1,5,0,800) 
	endif 
	return 
endf 

def node_083 : 114
	if self.fatigued() -> brachydios.tired_dash(0,6,0,0,300) 
	else -> brachydios.dash(0,6,0,0,300) 
	endif 
	return 
endf 

def node_084 : 37
	if self.fatigued() -> brachydios.tired_dash(2,1,5,1500,800) 
	else -> brachydios.dash(2,1,5,1500,800) 
	endif 
	return 
endf 

def node_085 : 35
	if self.fatigued() -> brachydios.tired_dash(2,1,5,3000,800) 
	else -> brachydios.dash(2,1,5,3000,800) 
	endif 
	return 
endf 

def node_086 : 53
	if self.alert_out_of_combat() >> node_087 
	else -> brachydios.tired_dash(2,1,5,3000,800) 
	endif 
	return 
endf 

def node_087 : 75
	>> node_104 
	>> node_104 
	-> brachydios.dash(6,2,0,750,1500) 
	return 
endf 

def node_088 : 80
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5C() 
		function#5E() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_066 
		self.targetEnemy(4) 
	elif self.target.mudded() >> node_096 
		self.targetEnemy(target_em.random_player_or_cat) 
	endif 
	return 
endf 

def node_089 : 81
	if self.target(4) >> node_090 
	elif self.target(3) >> node_090 
	elif self.target(55) 
	elif self.target(12) >> node_091 
	elif self.target(14) >> node_093 
	elif self.target(11) >> node_092 
	elif self.target(0) >> node_097 
	elif self.vertical_distance_to_target().gt(400) >> node_091 
	elif self.target(52) >> node_094 
	endif 
	return 
endf 

def node_090 : 82
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> node_087 
		repeat 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_074 
		random (47) >> node_066 
		elser (13) >> node_064 
		elser (40) >> node_063 
		endr 
	endif 
	reset 
endf 

def node_091 : 83
	>> node_095 
	return 
endf 

def node_092 : 84
	>> node_087 
	>> node_033 
	return 
endf 

def node_093 : 124
	if self.distance_2d_to_target().leq(3000) >> node_033 
	else >> node_094 
	endif 
	return 
endf 

def node_094 : 116
	if self.distance_3d_to_target().leq(400) 
	else 
		-> brachydios.dash(6,2,0,300,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> brachydios.dash(6,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> brachydios.dash(6,2,0,500,1500) 
	endif 
	return 
endf 

def node_095 : 125
	if self.distance_3d_to_target().leq(400) 
	else 
		-> brachydios.dash(1,2,0,300,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> brachydios.dash(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> brachydios.dash(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> brachydios.dash(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_096 : 120
	if self.distance_2d_to_target().gt(1200) >> node_033 
	endif 
	random (50) >> node_026 
	elser (50) >> node_019 
	endr 
	return 
endf 

def node_097 : 121
	if self.above_target() 
		if self.distance_2d_to_target().gt(3000) 
			-> brachydios.dash(6,0,0,2500) 
		else 
			-> brachydios.back_turn() 
		endif 
		random (0) >> node_019 
		elser (100) -> brachydios.jump_attack_high() 
		endr 
	else 
		if self.distance_2d_to_target().gt(1000) 
			-> brachydios.dash(6,0,0,800) 
		else 
			-> brachydios.jump_attack_wall_down() 
		endif 
	endif 
	return 
endf 

def node_098 : 47
	random (40) >> node_099 
	elser (60) >> node_100 
	endr 
	return 
endf 

def node_099 : 48
	random (0) 
				self.targetArea(21) @ parameter2:500 
	elser (40) 
				self.targetArea(21) @ parameter2:750 
	elser (35) 
				self.targetArea(21) @ parameter2:1000 
	elser (25) 
				self.targetArea(21) @ parameter2:1500 
	endr 
	return 
endf 

def node_100 : 49
	random (0) 
				self.targetArea(22) @ parameter2:500 
	elser (40) 
				self.targetArea(22) @ parameter2:750 
	elser (35) 
				self.targetArea(22) @ parameter2:1000 
	elser (25) 
				self.targetArea(22) @ parameter2:1500 
	endr 
	return 
endf 

def node_101 : 34
	self.targetArea(14) 
	if self.distance_3d_to_target().gt(600) >> node_085 
		repeat 
	endif 
	return 
endf 

def node_102 : 36
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) >> node_084 
		repeat 
	endif 
	return 
endf 

def node_103 : 38
	if function#41() >> node_084 
		repeat 
	endif 
	return 
endf 

def node_104 : 94
	[RegisterVar0 ++] 
	return 
endf 

def node_105 : 95
	[RegisterVar0 |-] 
	return 
endf 

def node_106 : 105
	if function#101(1) >> node_111 
	endif 
	return 
endf 

def node_107 : 106
	if function#102(1) >> node_111 
	endif 
	return 
endf 

def node_108 : 107
	if function#103(1) >> node_111 
	endif 
	return 
endf 

def node_109 : 109
	if function#102(1) >> node_111 
		return 
	elif function#103(1) >> node_111 
		return 
	endif 
	return 
endf 

def node_110 : 108
	if function#101(1) >> node_111 
		return 
	elif function#102(1) >> node_111 
		return 
	elif function#103(1) >> node_111 
		return 
	endif 
	return 
endf 

def node_111 : 97
	[RegisterVar1 ++] 
	return 
endf 

def node_112 : 98
	[RegisterVar1 |-] 
	return 
endf 

def node_113 : 118
	[RegisterVar2 ++] 
	return 
endf 

def node_114 : 119
	[RegisterVar2 |-] 
	return 
endf 

