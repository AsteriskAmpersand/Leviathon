importactions Hornetaur as hornetaur
importlibrary Global as Global

def node_000 : 60
	>> Global.node_024 
	>> node_001 
	reset 
endf 

def node_001 : 59
	self.targetEnemy(48) 
	if function#3A() 
		>> node_004 
	elif self.target(4) 
		>> node_004 => reset 
	elif self.target(7) 
		>> node_004 => reset 
	elif self.target(10) 
		>> node_004 => reset 
	elif self.target(20) 
		>> node_002 => reset 
	else 
		>> node_004 => reset 
	endif 
	reset 
endf 

def node_002 : 61
	if self.target(40) 
		>> node_007 
	else 
		>> node_003 
		if [RegisterVar1 == 0] 
			random (10) 
						[RegisterVar1 ++] 
						>> node_007 
			elser (90) 
						>> node_004 
			endr 
		else 
			>> node_007 
		endif 
	endif 
	return 
endf 

def node_003 : 62
	if self.current_quest().is_rank(rank.MR) 
		if [RegisterVar2 <= 1] 
			return 
		else 
			[RegisterVar2 ++] 
			>> node_004 
		endif 
	else 
		if [RegisterVar2 <= 3] 
		else 
			[RegisterVar2 ++] 
			>> node_004 
			reset 
		endif 
	endif 
	return 
endf 

def node_004 : 58
	[RegisterVar1 |-] 
	[RegisterVar0 |-] 
	>> node_005 
	return 
endf 

def node_005 : 57
	function#52() 
	self.targetEnemy(16) @ unkn3:2097152 
	>> Global.node_007 
	>> Global.node_011 
	>> node_006 
	return 
endf 

def node_006 : 56
	if self.distance_3d_to_target().leq(200) 
		function#54() 
		>> Global.node_011 
	else 
	endif 
	return 
endf 

def node_007 : 55
	if [RegisterVar0 >= 0] 
		>> node_008 
	elif [RegisterVar0 >= 2] 
		>> node_009 
		if self.current_quest().is_rank(rank.MR) 
			random (0) 
						[RegisterVar0 |-] 
			elser (100) 
			endr 
		else 
		endif 
	elif [RegisterVar0 >= 3] 
		>> node_009 
		if self.current_quest().is_rank(rank.MR) 
			random (20) 
						[RegisterVar0 |-] 
			elser (80) 
			endr 
		else 
			random (20) 
						[RegisterVar0 |-] 
			elser (80) 
			endr 
		endif 
	elif [RegisterVar0 >= 4] 
		>> node_009 
		if self.current_quest().is_rank(rank.MR) 
			random (40) 
						[RegisterVar0 |-] 
			elser (60) 
			endr 
		else 
			random (40) 
						[RegisterVar0 |-] 
			elser (60) 
			endr 
		endif 
	elif [RegisterVar0 >= 5] 
		>> node_009 
		random (80) 
					[RegisterVar0 |-] 
		elser (20) 
		endr 
	else 
		>> node_009 
		[RegisterVar0 |-] 
	endif 
	return 
endf 

def node_008 : 54
	if self.target(0) 
		random (50) >> Global.node_004 
		elser (50) >> Global.node_005 
		endr 
		random (30) >> Global.node_009 
		elser (70) >> Global.node_015 
					>> Global.node_020 
		endr 
	elif self.target(14) 
		random (50) >> Global.node_004 
		elser (50) >> Global.node_005 
		endr 
		random (30) >> Global.node_009 
		elser (70) >> Global.node_015 
					>> Global.node_020 
		endr 
	else 
		>> Global.node_002 
		[RegisterVar0 ++] 
		>> Global.node_010 
	endif 
	return 
endf 

def node_009 : 53
	if self.target(0) 
		>> Global.node_005 
	else 
		>> Global.node_002 
	endif 
	random (30) >> Global.node_020 
	elser (30) >> Global.node_019 
	elser (40) >> Global.node_009 
	endr 
	[RegisterVar0 ++] 
	random (50) >> Global.node_012 
	elser (30) >> Global.node_013 
	elser (20) >> Global.node_014 
	endr 
	return 
endf 

