importactions Cortos as cortos
importlibrary Global as Global

def node_000
	>> Global.node_009 
	>> Global.node_012 
	>> node_018 
	>> node_002 
	reset 
endf 

def node_001
	function#52(4) 
	self.targetEnemy(16) @ unkn3:8388608 
	>> node_006 
	function#54() 
	return 
endf 

def node_002
	>> node_003 
	>> node_011 
	reset 
endf 

def node_003
	[RegisterVar0 ++] 
	>> node_004 
	>> node_008 
	return 
endf 

def node_004
	function#54() 
	if function#B0(4) 
		if function#111() 
			function#52(0,4) 
		else 
			if function#10E() 
				if function#110() 
					function#52(0,4) 
				else 
					function#52(2,1) 
				endif 
			else 
				function#52(0,4) 
			endif 
		endif 
	else 
		function#52(0,4) 
	endif 
	self.targetArea(target_area.nearest_entrance) @ unkn3:2097152, unkn12:4, unknExtra1:700 
	return 
endf 

def node_005
	if function#63() 
		if function#B0(4) 
			if function#111() 
				if function#10B() 
					function#52(0,4) 
				else 
					function#10A() 
				endif 
			else 
				if function#10E() 
					if function#110() 
						if function#10B() 
							function#52(0,4) 
						else 
							function#10A() 
						endif 
					else 
						if function#10B() 
							function#52(0,1) 
						else 
							function#10A() 
						endif 
					endif 
				else 
					if function#10B() 
						function#52(0,4) 
					else 
						function#10A() 
					endif 
				endif 
			endif 
		else 
			if function#10B() 
				function#52(0,4) 
			else 
				function#10A() 
			endif 
		endif 
	else 
		if function#10A() 
		else 
			-> action#23() 
			repeat 
		endif 
	endif 
	self.targetArea(target_area.nearest_entrance) @ unkn3:2097152, unkn12:4, unknExtra1:700 
	return 
endf 

def node_006
	if self.distance_2d_to_target().gt(4500) 
		-> action#14(1,0,0,5000) 
	else 
		-> action#11(2,1,0,6000,500) 
	endif 
	if self.distance_2d_to_target().leq(700) 
		return 
	else 
		repeat 
	endif 
	return 
endf 

def node_007
	if self.distance_2d_to_target().leq(1500) 
		-> action#12() @ unkn3:2097152 
	else 
		-> action#11(2,1,0,1500,500) @ unkn3:2097152 
	endif 
	if self.distance_2d_to_target().leq(300) 
		return 
	else 
		repeat 
	endif 
	return 
endf 

def node_008
	if self.distance_2d_to_target().gt(5000) -> action#11(2,6,4,2000,700) @ unkn3:2097152, unknExtra0:500 
	elif self.distance_2d_to_target().gt(700) @ unkn3:2097152 
		-> action#11(2,6,4,2000,700) @ unknExtra0:500 
	else 
		[RegisterVar2 ++] 
	endif 
	if self.distance_2d_to_target().leq(700) 
		return 
	else 
		repeat 
	endif 
	return 
endf 

def node_009
	if function#101() 
		return 
	elif function#58(1,100) 
		>> Global.node_015 
	endif 
	return 
endf 

def node_010
	if function#51(0,2000) 
		>> Global.node_013 
	else 
	endif 
	return 
endf 

def node_011
	if function#5A(1) 
		-> action#23() 
		>> node_018 
		>> node_016 
	elif function#5A(2) 
		-> action#23() 
		>> node_018 
		>> node_016 
	elif function#5A(3) 
		if function#111() 
			-> action#23() 
			>> node_018 
			>> node_017 
			-> action#23() 
		else 
			if function#10E() 
				if function#110() 
					-> action#23() 
					>> node_018 
					>> node_017 
					-> action#23() 
				else 
					self.targetEnemy(17) 
					>> Global.node_007 
					-> action#05() 
					return 
				endif 
			else 
				-> action#23() 
				>> node_018 
				>> node_016 
				-> action#23() 
			endif 
		endif 
	elif function#5A(4) 
		if [RegisterVar2 == 0] 
			random (40) -> action#23() 
			elser (60) 
			endr 
		else 
			-> action#23() 
		endif 
		[RegisterVar2 |-] 
	elif function#5A(5) 
		random (50) -> action#23() 
		elser (10) >> node_013 
		elser (15) >> node_014 
					>> Global.node_002 
		elser (25) >> node_014 
		endr 
	else 
		-> action#23() 
		-> action#03() 
	endif 
	function#54() 
	return 
endf 

def node_012
	if function#5A(1) 
		random (70) >> node_006 
		elser (30) >> node_013 
		elser (0) >> node_014 
		elser (0) >> node_015 
		endr 
	else 
		>> node_006 
	endif 
	return 
endf 

def node_013
	>> node_007 
	>> Global.node_010 
	>> Global.node_002 
	return 
endf 

def node_014
	>> node_007 
	>> Global.node_004 
	return 
endf 

def node_015
	>> node_007 
	>> Global.node_005 
	random (50) >> Global.node_002 
	elser (50) 
	endr 
	return 
endf 

def node_016
	-> action#14() 
	function#74(0,1000) 
	-> action#14() 
	function#74(180,1200) 
	function#74(120,1200) 
	-> action#14() 
	return 
endf 

def node_017
	-> action#14() 
	function#74(0,1000) 
	-> action#14() 
	return 
endf 

def node_018
	if function#B0(4) 
		if function#10E() 
			if function#110() 
				>> node_019 
				>> node_020 
				>> node_021 
			else 
			endif 
		else 
			>> node_019 
			>> node_020 
			>> node_021 
		endif 
	else 
		>> node_019 
		>> node_020 
		>> node_021 
	endif 
	return 
endf 

def node_019
	if function#10C(2) 
		self.targetEnemy(26) 
		>> node_022 
		if function#6B(600) 
			>> node_024 
		else 
		endif 
		reset 
	else 
	endif 
	return 
endf 

def node_020
	if [RegisterVar1 == 0] 
		if function#6C(2) 
			self.targetEnemy(29) 
			>> node_023 
			>> node_025 
			reset 
		else 
		endif 
	else 
		if [RegisterVar0 < 40] 
			if function#6C(2) 
				self.targetEnemy(29) 
				>> node_023 
				>> node_025 
				reset 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_021
	if [RegisterVar0 < 40] 
		if function#6D(2) 
			self.targetEnemy(29) 
			>> node_023 
			>> node_025 
			reset 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_022
	if self.distance_2d_to_target().leq(1200) 
		-> action#12(2,1,0,600,300) 
	else 
		-> action#14(2,1,0,600,1000) 
	endif 
	if self.distance_2d_to_target().leq(300) 
		return 
	else 
		repeat 
	endif 
	return 
endf 

def node_023
	if self.distance_2d_to_target().leq(1200) 
		-> action#12(2,1,0,600,400) 
	else 
		-> action#14(2,1,0,600,1000) 
	endif 
	if self.distance_2d_to_target().leq(400) 
		return 
	else 
		repeat 
	endif 
	return 
endf 

def node_024
	>> Global.node_006 
	-> action#0E() 
	-> action#28() 
	function#54() 
	function#104() 
	return 
endf 

def node_025
	>> Global.node_006 
	function#54() 
	function#4B(4) 
	if self.distance_2d_to_target().leq(3000) 
		if self.target.in_combat() 
			function#54() 
			function#104() 
			[RegisterVar0 |-] 
			[RegisterVar1 ++] 
			return 
		else 
		endif 
	else 
	endif 
	-> action#0E() 
	-> action#27() 
	function#54() 
	function#104() 
	[RegisterVar0 |-] 
	[RegisterVar1 ++] 
	return 
endf 

