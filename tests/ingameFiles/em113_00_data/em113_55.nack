importactions Odogaron as odogaron

def node_000
	conclude 
endf 

def node_001
	-> odogaron.discover() 
	return 
endf 

def node_002
	-> odogaron.threat_short() 
	return 
endf 

def node_003
	if [$V += 0] 
		[$V |-] 
		>> node_002 
	else 
	endif 
	return 
endf 

def node_004
	-> odogaron.angry_begin() 
	return 
endf 

def node_005
	return 
endf 

def node_006
	-> odogaron.search() 
	return 
endf 

def node_007
	-> odogaron.lost_search_short() 
	return 
endf 

def node_008
	-> odogaron.lost_search() 
	return 
endf 

def node_009
	-> odogaron.tired() 
	return 
endf 

def node_010
	-> odogaron.refresh() 
	return 
endf 

def node_011
	-> odogaron.sniff_s() 
	return 
endf 

def node_012
	-> odogaron.tired() 
	return 
endf 

def node_013
	-> odogaron.search() 
	return 
endf 

def node_014
	-> odogaron.threat() 
	return 
endf 

def node_015
	if function#104(1) 
		-> odogaron.food_carry_end() 
	else 
	endif 
	return 
endf 

def node_016
	if self.distance_3d_to_target().leq(900) 
	else 
		-> odogaron.dash(1,2,0,800,1500) 
		repeat 
	endif 
	return 
endf 

def node_017
	-> odogaron.dash(1,2,0,800,1500) 
	return 
endf 

def node_018
	if self.distance_3d_to_target().leq(900) 
	else 
		-> odogaron.dash(1,2,0,800,1000) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> odogaron.dash(1,2,0,800,1000) 
	endif 
	return 
endf 

def node_019
	if self.distance_3d_to_target().leq(900) 
	else 
		-> odogaron.dash(1,2,0,800,1000) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> odogaron.dash(1,2,0,800,1000) 
	endif 
	if self.distance_3d_to_target().leq(900) 
	else 
		-> odogaron.dash(1,2,0,800,1000) 
	endif 
	return 
endf 

def node_020
	if self.distance_2d_to_target().leq(900) 
	else 
		>> node_017 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		>> node_017 
	endif 
	if self.distance_2d_to_target().leq(900) 
	else 
		>> node_017 
	endif 
	return 
endf 

def node_021
	-> odogaron.quick_turn() 
	return 
endf 

def node_022
	if self.angle_2d_cw_between(15,345) 
		>> node_021 
	else 
	endif 
	return 
endf 

def node_023
	if self.angle_2d_cw_between(30,330) 
		>> node_021 
	else 
	endif 
	return 
endf 

def node_024
	if self.angle_2d_cw_between(45,315) 
		>> node_021 
	else 
	endif 
	return 
endf 

def node_025
	if self.angle_2d_cw_between(60,300) 
		>> node_021 
	else 
	endif 
	return 
endf 

def node_026
	if self.angle_2d_cw_between(75,285) 
		>> node_021 
	else 
	endif 
	return 
endf 

def node_027
	if self.angle_2d_cw_between(90,270) 
		>> node_021 
	else 
	endif 
	return 
endf 

def node_028
	if self.angle_2d_cw_between(10,320) 
		>> node_021 
	else 
	endif 
	return 
endf 

def node_029
	-> odogaron.back_turn() 
	return 
endf 

def node_030
	if self.angle_2d_cw_between(15,345) 
		>> node_029 
	else 
	endif 
	return 
endf 

def node_031
	if self.angle_2d_cw_between(30,330) 
		>> node_029 
	else 
	endif 
	return 
endf 

def node_032
	if self.angle_2d_cw_between(45,315) 
		>> node_029 
	else 
	endif 
	return 
endf 

def node_033
	if self.angle_2d_cw_between(60,300) 
		>> node_029 
	else 
	endif 
	return 
endf 

def node_034
	if self.angle_2d_cw_between(90,270) 
		>> node_029 
	else 
	endif 
	return 
endf 

def node_035
	-> odogaron.turn() 
	return 
endf 

def node_036
	if self.angle_2d_cw_between(15,345) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_037
	if self.angle_2d_cw_between(30,330) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_038
	if self.angle_2d_cw_between(45,315) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_039
	if self.angle_2d_cw_between(60,300) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_040
	if self.angle_2d_cw_between(90,270) 
		>> node_035 
	else 
	endif 
	return 
endf 

def node_041
	[RegisterVar3 ++] 
	if function#109() 
		>> node_042 
	elif self.fatigued() 
		>> node_045 
	elif self.enraged() 
		>> node_043 
	elif self.target.bleed() 
		>> node_043 
	else 
		>> node_044 
	endif 
	return 
endf 

def node_042
	if self.distance_2d_to_target().leq(800) 
		random (50) >> node_055 
		elser (50) 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (50) >> node_053 
		elser (50) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (30) >> node_145 
					reset 
		elser (35) >> node_053 
		elser (35) >> node_054 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (30) >> node_145 
					reset 
		elser (70) >> node_053 
		endr 
	elif self.distance_2d_to_target().leq(2000) 
		random (30) >> node_145 
					reset 
		elser (70) >> node_051 
					repeat 
		endr 
	else 
		>> node_066 
		[RegisterVar3 |-] 
		if [RegisterVar3 -= 3] 
			return 
		else 
			repeat 
		endif 
	endif 
	return 
endf 

def node_043
	if self.distance_2d_to_target().leq(800) 
	elif self.distance_2d_to_target().leq(1000) 
		random (50) >> node_052 
		elser (50) >> node_051 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (20) >> node_145 
					reset 
		elser (40) >> node_052 
		elser (40) >> node_051 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (20) >> node_145 
					reset 
		elser (80) >> node_051 
		endr 
	elif self.distance_2d_to_target().leq(2000) 
		random (20) >> node_145 
					reset 
		elser (80) >> node_051 
					repeat 
		endr 
	else 
		>> node_066 
		[RegisterVar3 |-] 
		if [RegisterVar3 -= 3] 
			return 
		else 
			repeat 
		endif 
	endif 
	return 
endf 

def node_044
	if self.distance_2d_to_target().leq(800) 
	elif self.distance_2d_to_target().leq(1000) 
		random (30) >> node_052 
		elser (70) >> node_051 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (20) >> node_145 
					reset 
		elser (30) >> node_052 
		elser (50) >> node_051 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (20) >> node_145 
					reset 
		elser (80) >> node_051 
		endr 
	elif self.distance_2d_to_target().leq(2000) 
		random (20) >> node_145 
					reset 
		elser (80) >> node_051 
					repeat 
		endr 
	else 
		>> node_066 
		[RegisterVar3 |-] 
		if [RegisterVar3 -= 3] 
			return 
		else 
			repeat 
		endif 
	endif 
	return 
endf 

def node_045
	if self.distance_2d_to_target().leq(800) 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_051 
	elif self.distance_2d_to_target().leq(1200) 
		>> node_051 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_051 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_051 
	else 
		>> node_066 
		[RegisterVar3 |-] 
		if [RegisterVar3 -= 3] 
			return 
		else 
			repeat 
		endif 
	endif 
	return 
endf 

def node_046
	[RegisterVar3 ++] 
	if function#109() 
		>> node_047 
	elif self.fatigued() 
		>> node_050 
	elif self.enraged() 
		>> node_048 
	elif self.target.bleed() 
		>> node_048 
	else 
		>> node_049 
	endif 
	return 
endf 

def node_047
	if self.distance_2d_to_target().leq(650) 
		random (50) >> node_062 
		elser (50) 
		endr 
	elif self.distance_2d_to_target().leq(1000) 
		random (50) >> node_058 
		elser (50) >> node_063 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (30) >> node_145 
					reset 
		elser (35) >> node_058 
		elser (35) >> node_063 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (30) >> node_145 
					reset 
		elser (70) >> node_058 
		endr 
	elif self.distance_2d_to_target().leq(2000) 
		random (30) >> node_145 
					reset 
		elser (70) >> node_066 
					repeat 
		endr 
	else 
		>> node_066 
		[RegisterVar3 |-] 
		if [RegisterVar3 -= 3] 
			return 
		else 
			repeat 
		endif 
	endif 
	return 
endf 

def node_048
	if self.distance_2d_to_target().leq(650) 
	elif self.distance_2d_to_target().leq(1000) 
		random (50) >> node_059 
		elser (50) >> node_058 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (20) >> node_145 
					reset 
		elser (40) >> node_052 
		elser (40) >> node_058 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (20) >> node_145 
					reset 
		elser (80) >> node_058 
		endr 
	elif self.distance_2d_to_target().leq(2000) 
		random (20) >> node_145 
					reset 
		elser (80) >> node_066 
					repeat 
		endr 
	else 
		>> node_066 
		[RegisterVar3 |-] 
		if [RegisterVar3 -= 3] 
			return 
		else 
			repeat 
		endif 
	endif 
	return 
endf 

def node_049
	if self.distance_2d_to_target().leq(650) 
	elif self.distance_2d_to_target().leq(1000) 
		random (30) >> node_059 
		elser (70) >> node_058 
		endr 
	elif self.distance_2d_to_target().leq(1200) 
		random (20) >> node_145 
					reset 
		elser (30) >> node_052 
		elser (50) >> node_058 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (20) >> node_145 
					reset 
		elser (80) >> node_058 
		endr 
	elif self.distance_2d_to_target().leq(2000) 
		random (20) >> node_145 
					reset 
		elser (80) >> node_066 
					repeat 
		endr 
	else 
		>> node_066 
		[RegisterVar3 |-] 
		if [RegisterVar3 -= 3] 
			return 
		else 
			repeat 
		endif 
	endif 
	return 
endf 

def node_050
	if self.distance_2d_to_target().leq(800) 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_058 
	elif self.distance_2d_to_target().leq(1200) 
		>> node_058 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_058 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_066 
		repeat 
	else 
		>> node_066 
		[RegisterVar3 |-] 
		if [RegisterVar3 -= 3] 
			return 
		else 
			repeat 
		endif 
	endif 
	return 
endf 

def node_051
	-> odogaron.dash(1,2,0,850,1500) 
	return 
endf 

def node_052
	if self.angle_2d_cw_between(0,180) 
		-> odogaron.long_point_step_to_front_r() 
	else 
		-> odogaron.long_point_step_to_front_l() 
	endif 
	return 
endf 

def node_053
	>> node_066 
	if self.distance_2d_to_target().leq(800) 
		if self.angle_2d_cw_between(0,180) 
			-> odogaron.short_point_step_to_front_r() 
		else 
			-> odogaron.short_point_step_to_front_l() 
		endif 
	elif self.distance_2d_to_target().leq(1200) 
		if self.angle_2d_cw_between(0,180) 
			-> odogaron.long_point_step_to_front_r() 
		else 
			-> odogaron.long_point_step_to_front_l() 
		endif 
	else 
	endif 
	return 
endf 

def node_054
	if self.angle_2d_cw_between(0,180) 
		-> odogaron.long_point_step_to_front_r() 
		if self.angle_2d_cw_between(180,15) 
			-> odogaron.short_point_step_to_front_l() 
		else 
			-> odogaron.short_point_step_to_front_r() 
		endif 
	else 
		-> odogaron.long_point_step_to_front_l() 
		if self.angle_2d_cw_between(345,180) 
			-> odogaron.short_point_step_to_front_r() 
		else 
			-> odogaron.short_point_step_to_front_l() 
		endif 
	endif 
	return 
endf 

def node_055
	if self.angle_2d_cw_between(0,180) 
		-> odogaron.short_point_step_to_front_r() 
	else 
		-> odogaron.short_point_step_to_front_l() 
	endif 
	return 
endf 

def node_056
	if self.angle_2d_cw_between(0,180) 
		-> odogaron.short_point_step_to_front_r() 
		-> odogaron.short_point_step_to_front_l() 
	else 
		-> odogaron.short_point_step_to_front_l() 
		-> odogaron.short_point_step_to_front_r() 
	endif 
	return 
endf 

def node_057
	-> odogaron.back_step_to_front() 
	return 
endf 

def node_058
	-> odogaron.step_to_side() 
	return 
endf 

def node_059
	if self.angle_2d_cw_between(0,180) 
		-> odogaron.long_point_step_to_side_r() 
	else 
		-> odogaron.long_point_step_to_side_l() 
	endif 
	return 
endf 

def node_060
	-> odogaron.step_to_side() 
	if self.distance_2d_to_target().leq(800) 
		if self.angle_2d_cw_between(0,180) 
			-> odogaron.short_point_step_to_side_r() 
		else 
			-> odogaron.short_point_step_to_side_l() 
		endif 
	elif self.distance_2d_to_target().leq(1200) 
		if self.angle_2d_cw_between(0,180) 
			-> odogaron.long_point_step_to_side_r() 
		else 
			-> odogaron.long_point_step_to_side_l() 
		endif 
	else 
	endif 
	return 
endf 

def node_061
	if self.angle_2d_cw_between(0,180) 
		-> odogaron.long_point_step_to_front_r() 
		if self.angle_2d_cw_between(180,15) 
			-> odogaron.short_point_step_to_side_l() 
		else 
			-> odogaron.short_point_step_to_side_r() 
		endif 
	else 
		-> odogaron.long_point_step_to_front_l() 
		if self.angle_2d_cw_between(345,180) 
			-> odogaron.short_point_step_to_side_r() 
		else 
			-> odogaron.short_point_step_to_side_l() 
		endif 
	endif 
	return 
endf 

def node_062
	if self.angle_2d_cw_between(0,180) 
		-> odogaron.short_point_step_to_side_r() 
	else 
		-> odogaron.short_point_step_to_side_l() 
	endif 
	return 
endf 

def node_063
	if self.angle_2d_cw_between(0,180) 
		-> odogaron.long_point_step_to_side_r() 
	else 
		-> odogaron.long_point_step_to_side_l() 
	endif 
	return 
endf 

def node_064
	if self.angle_2d_cw_between(0,180) 
		-> odogaron.short_point_step_to_front_r() 
		-> odogaron.short_point_step_to_side_l() 
	else 
		-> odogaron.short_point_step_to_front_l() 
		-> odogaron.short_point_step_to_side_r() 
	endif 
	return 
endf 

def node_065
	-> odogaron.back_step_to_side() 
	return 
endf 

def node_066
	-> odogaron.dash(1,2,0,1250,1500) 
	return 
endf 

def node_067
	if self.distance_3d_to_target().leq(250) 
	elif self.distance_3d_to_target().leq(500) 
		if self.angle_2d_cw_between(45,150) 
			-> odogaron.side_step_l() 
		elif self.angle_2d_cw_between(210,315) 
			-> odogaron.side_step_r() 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_068
	if function#103(1) 
		if self.distance_2d_to_target().leq(750) 
		elif self.distance_2d_to_target().leq(1500) 
			if function#109() 
			elif self.enraged() 
			elif self.target.bleed() 
				if self.fatigued() 
					random (35) -> odogaron.threat_side_walk() 
					elser (65) 
					endr 
				else 
				endif 
			elif self.fatigued() 
				random (35) -> odogaron.threat_side_walk() 
				elser (65) 
				endr 
			else 
				random (25) -> odogaron.threat_side_walk() 
				elser (75) 
				endr 
			endif 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_069
	-> odogaron.to_front_idle() 
	return 
endf 

def node_070
	-> odogaron.to_front_idle_l() 
	return 
endf 

def node_071
	-> odogaron.to_front_idle_l() 
	return 
endf 

def node_072
	-> odogaron.to_side_idle() 
	return 
endf 

def node_073
	-> odogaron.to_side_idle_l() 
	return 
endf 

def node_074
	-> odogaron.to_side_idle_l() 
	return 
endf 

def node_075
	if self.current_quest().is_rank(rank.MR) 
		>> node_078 
	else 
		if function#B9() 
			>> node_078 
		elif self.current_quest().is_rank(rank.HR) 
			>> node_077 
		else 
			>> node_076 
		endif 
	endif 
	return 
endf 

def node_076
	if function#109() 
		>> node_081 
	elif self.fatigued() 
		>> node_082 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_081 
		else 
			>> node_081 
		endif 
	elif self.target.bleed() 
		>> node_081 
	else 
		>> node_080 
	endif 
	return 
endf 

def node_077
	if function#109() 
		>> node_081 
	elif self.fatigued() 
		>> node_082 
	elif function#7D() 
		>> node_081 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_081 
		else 
			>> node_081 
		endif 
	elif self.target.bleed() 
		>> node_081 
	else 
		>> node_080 
	endif 
	return 
endf 

def node_078
	if function#109() 
		>> node_081 
	elif self.fatigued() 
		>> node_082 
	elif function#7D() 
		>> node_081 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_081 
		else 
			>> node_081 
		endif 
	elif self.target.bleed() 
		>> node_081 
	else 
		>> node_080 
	endif 
	return 
endf 

def node_079
	>> node_041 
	-> odogaron.quick_bite() @ comboSetting:1 
	-> odogaron.back_step_to_side() 
	return 
endf 

def node_080
	>> node_041 
	random (0) 
				-> odogaron.quick_bite() @ comboSetting:1 
				-> odogaron.combo_quick_bite_to_scratch_l() 
	elser (100) 
				-> odogaron.quick_bite() @ comboSetting:1 
				-> odogaron.combo_quick_bite_to_scratch_r() 
	endr 
	>> node_073 
	return 
endf 

def node_081
	>> node_041 
	random (0) 
				-> odogaron.quick_bite() @ comboSetting:1 
				-> odogaron.combo_quick_bite_to_scratch_l() @ comboSetting:1 
				-> odogaron.combo_scratch_to_tail_somer() 
	elser (100) 
				-> odogaron.quick_bite() @ comboSetting:1 
				-> odogaron.combo_quick_bite_to_scratch_r() @ comboSetting:1 
				-> odogaron.combo_scratch_to_tail_somer() 
	endr 
	>> node_072 
	return 
endf 

def node_082
	>> node_041 
	-> odogaron.quick_bite() 
	>> node_072 
	return 
endf 

def node_083
	if self.current_quest().is_rank(rank.MR) 
		>> node_086 
	else 
		if function#B9() 
			>> node_086 
		elif self.current_quest().is_rank(rank.HR) 
			>> node_085 
		else 
			>> node_084 
		endif 
	endif 
	return 
endf 

def node_084
	if function#109() 
		>> node_088 
	elif self.fatigued() 
		>> node_090 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_088 
		else 
			>> node_088 
		endif 
	elif self.target.bleed() 
		>> node_088 
	else 
		>> node_087 
	endif 
	return 
endf 

def node_085
	if function#109() 
		>> node_089 
	elif self.fatigued() 
		>> node_090 
	elif function#7D() 
		>> node_088 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_088 
		else 
			>> node_088 
		endif 
	elif self.target.bleed() 
		>> node_088 
	else 
		>> node_087 
	endif 
	return 
endf 

def node_086
	if function#109() 
		>> node_089 
	elif self.fatigued() 
		>> node_090 
	elif function#7D() 
		>> node_089 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_089 
		else 
			>> node_088 
		endif 
	elif self.target.bleed() 
		>> node_088 
	else 
		>> node_087 
	endif 
	return 
endf 

def node_087
	>> node_041 
	>> node_027 
	-> odogaron.scratch_l_hand() @ comboSetting:1 
	-> odogaron.back_step_to_side() 
	return 
endf 

def node_088
	>> node_041 
	>> node_027 
	-> odogaron.scratch_l_hand() @ comboSetting:1 
	-> odogaron.combo_scratch_to_scratch_r() 
	>> node_073 
	return 
endf 

def node_089
	>> node_041 
	>> node_027 
	-> odogaron.scratch_l_hand() @ comboSetting:1 
	-> odogaron.combo_scratch_to_scratch_r() @ comboSetting:1 
	-> odogaron.back_step_to_side() 
	return 
endf 

def node_090
	>> node_041 
	>> node_027 
	-> odogaron.scratch_l_hand() 
	>> node_072 
	return 
endf 

def node_091
	if self.current_quest().is_rank(rank.MR) 
		>> node_094 
	else 
		if function#B9() 
			>> node_094 
		elif self.current_quest().is_rank(rank.HR) 
			>> node_093 
		else 
			>> node_092 
		endif 
	endif 
	return 
endf 

def node_092
	if function#109() 
		>> node_095 
	elif self.fatigued() 
		if function#103() 
			random (35) >> node_075 
			elser (35) >> node_083 
			elser (30) >> node_111 
			endr 
		else 
			random (35) >> node_119 
			elser (35) >> node_137 
			elser (30) >> node_111 
			endr 
		endif 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_095 
		else 
			>> node_095 
		endif 
	elif self.target.bleed() 
		>> node_095 
	else 
		>> node_095 
	endif 
	return 
endf 

def node_093
	if function#109() 
		>> node_097 
	elif self.fatigued() 
		if function#103() 
			random (35) >> node_075 
			elser (35) >> node_083 
			elser (30) >> node_111 
			endr 
		else 
			random (35) >> node_119 
			elser (35) >> node_137 
			elser (30) >> node_111 
			endr 
		endif 
	elif function#7D() 
		>> node_095 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_095 
		else 
			>> node_095 
		endif 
	elif self.target.bleed() 
		>> node_095 
	else 
		>> node_095 
	endif 
	return 
endf 

def node_094
	if function#109() 
		>> node_097 
	elif self.fatigued() 
		if function#103() 
			random (35) >> node_075 
			elser (35) >> node_083 
			elser (30) >> node_111 
			endr 
		else 
			random (35) >> node_119 
			elser (35) >> node_137 
			elser (30) >> node_111 
			endr 
		endif 
	elif function#7D() 
		>> node_096 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_096 
		else 
			>> node_095 
		endif 
	elif self.target.bleed() 
		>> node_095 
	else 
		>> node_095 
	endif 
	return 
endf 

def node_095
	>> node_041 
	-> odogaron.tail_somersault() 
	>> node_072 
	return 
endf 

def node_096
	>> node_041 
	-> odogaron.tail_somersault() @ comboSetting:1 
	-> odogaron.jump_claw() 
	-> odogaron.killer_bite() 
	>> node_069 
	return 
endf 

def node_097
	>> node_041 
	-> odogaron.tail_somersault() @ comboSetting:1 
	-> odogaron.jump_claw() 
	-> odogaron.killer_bite_sp() 
	>> node_069 
	return 
endf 

def node_098
	>> node_041 
	-> odogaron.tail_somersault() 
	>> node_072 
	return 
endf 

def node_099
	if function#101() 
		if self.current_quest().is_rank(rank.MR) 
			>> node_286 
		else 
			if function#B9() 
				>> node_102 
			elif self.current_quest().is_rank(rank.HR) 
				>> node_101 
			else 
				>> node_100 
			endif 
		endif 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
		if function#103() 
			random (20) >> node_075 
			elser (20) >> node_083 
			elser (20) >> node_091 
			elser (20) >> node_111 
			elser (20) >> node_106 
			endr 
		else 
			random (25) >> node_119 
			elser (25) >> node_137 
			elser (25) >> node_111 
			elser (25) >> node_106 
			endr 
		endif 
	endif 
	return 
endf 

def node_100
	if function#109() 
		>> node_104 
	elif function#7D() 
		>> node_104 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_104 
		else 
			self.targetEnemy(target_em.random_player_or_cat) 
			if function#103() 
				random (20) >> node_075 
				elser (20) >> node_083 
				elser (20) >> node_091 
				elser (20) >> node_111 
				elser (20) >> node_106 
				endr 
			else 
				random (25) >> node_119 
				elser (25) >> node_137 
				elser (25) >> node_111 
				elser (25) >> node_106 
				endr 
			endif 
		endif 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
		if function#103() 
			random (20) >> node_075 
			elser (20) >> node_083 
			elser (20) >> node_091 
			elser (20) >> node_111 
			elser (20) >> node_106 
			endr 
		else 
			random (25) >> node_119 
			elser (25) >> node_137 
			elser (25) >> node_111 
			elser (25) >> node_106 
			endr 
		endif 
	endif 
	return 
endf 

def node_101
	if function#109() 
		>> node_105 
	elif function#7D() 
		>> node_105 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_105 
		else 
			>> node_104 
		endif 
	elif self.target.bleed() 
		>> node_104 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
		if function#103() 
			random (20) >> node_075 
			elser (20) >> node_083 
			elser (20) >> node_091 
			elser (20) >> node_111 
			elser (20) >> node_106 
			endr 
		else 
			random (25) >> node_119 
			elser (25) >> node_137 
			elser (25) >> node_111 
			elser (25) >> node_106 
			endr 
		endif 
	endif 
	return 
endf 

def node_102
	if function#109() 
		>> node_105 
	elif function#7D() 
		>> node_105 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_105 
		else 
			>> node_104 
		endif 
	elif self.target.bleed() 
		>> node_104 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
		if function#103() 
			random (20) >> node_075 
			elser (20) >> node_083 
			elser (20) >> node_091 
			elser (20) >> node_111 
			elser (20) >> node_106 
			endr 
		else 
			random (25) >> node_119 
			elser (25) >> node_137 
			elser (25) >> node_111 
			elser (25) >> node_106 
			endr 
		endif 
	endif 
	return 
endf 

def node_103
	-> odogaron.triangle_kick_jump() 
	>> node_065 
	return 
endf 

def node_104
	-> odogaron.triangle_kick_jump() 
	if function#101() 
		-> odogaron.triangle_kick_jump() 
		>> node_073 
	else 
		>> node_065 
	endif 
	return 
endf 

def node_105
	-> odogaron.triangle_kick_jump() 
	if function#101() 
		-> odogaron.triangle_kick_jump() 
		if function#101() 
			-> odogaron.triangle_kick_jump() 
			>> node_073 
		else 
			>> node_073 
		endif 
	else 
		>> node_065 
	endif 
	return 
endf 

def node_106
	if self.current_quest().is_rank(rank.MR) 
		>> node_109 
	else 
		if function#B9() 
			>> node_109 
		elif self.current_quest().is_rank(rank.HR) 
			>> node_108 
		else 
			>> node_107 
		endif 
	endif 
	return 
endf 

def node_107
	if function#109() 
		>> node_110 
	elif self.fatigued() 
		if function#103() 
			random (35) >> node_075 
			elser (35) >> node_083 
			elser (30) >> node_111 
			endr 
		else 
			random (35) >> node_119 
			elser (35) >> node_137 
			elser (30) >> node_111 
			endr 
		endif 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_110 
		else 
			>> node_110 
		endif 
	elif self.target.bleed() 
		>> node_110 
	else 
		>> node_110 
	endif 
	return 
endf 

def node_108
	if function#109() 
		>> node_110 
	elif self.fatigued() 
		if function#103() 
			random (35) >> node_075 
			elser (35) >> node_083 
			elser (30) >> node_111 
			endr 
		else 
			random (35) >> node_119 
			elser (35) >> node_137 
			elser (30) >> node_111 
			endr 
		endif 
	elif function#7D() 
		>> node_110 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_110 
		else 
			>> node_110 
		endif 
	elif self.target.bleed() 
		>> node_110 
	else 
		>> node_110 
	endif 
	return 
endf 

def node_109
	if function#109() 
		>> node_110 
	elif self.fatigued() 
		if function#103() 
			random (35) >> node_075 
			elser (35) >> node_083 
			elser (30) >> node_111 
			endr 
		else 
			random (35) >> node_119 
			elser (35) >> node_137 
			elser (30) >> node_111 
			endr 
		endif 
	elif function#7D() 
		>> node_110 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_110 
		else 
			>> node_110 
		endif 
	elif self.target.bleed() 
		>> node_110 
	else 
		>> node_110 
	endif 
	return 
endf 

def node_110
	>> node_041 
	-> odogaron.claw_attack() 
	>> node_057 
	return 
endf 

def node_111
	if self.current_quest().is_rank(rank.MR) 
		>> node_114 
	else 
		if function#B9() 
			>> node_114 
		elif self.current_quest().is_rank(rank.HR) 
			>> node_113 
		else 
			>> node_112 
		endif 
	endif 
	return 
endf 

def node_112
	if function#109() 
		>> node_115 
	elif self.fatigued() 
		>> node_118 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_115 
		else 
			>> node_115 
		endif 
	elif self.target.bleed() 
		>> node_115 
	else 
		>> node_115 
	endif 
	return 
endf 

def node_113
	if function#109() 
		>> node_117 
	elif self.fatigued() 
		>> node_118 
	elif function#7D() 
		>> node_115 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_115 
		else 
			>> node_115 
		endif 
	elif self.target.bleed() 
		>> node_115 
	else 
		>> node_115 
	endif 
	return 
endf 

def node_114
	if function#109() 
		>> node_117 
	elif self.fatigued() 
		>> node_118 
	elif function#7D() 
		>> node_116 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_116 
		else 
			>> node_115 
		endif 
	elif self.target.bleed() 
		>> node_115 
	else 
		>> node_115 
	endif 
	return 
endf 

def node_115
	>> node_041 
	-> odogaron.killer_bite() 
	>> node_057 
	return 
endf 

def node_116
	>> node_041 
	-> odogaron.killer_bite() @ comboSetting:1 
	-> odogaron.combo_killer_bite_to_tail_somer() @ comboSetting:1 
	-> odogaron.jump_claw() 
	>> node_073 
	return 
endf 

def node_117
	>> node_046 
	-> odogaron.killer_bite_sp() @ comboSetting:1 
	-> odogaron.combo_killer_bite_sp_to_tail_somer() @ comboSetting:1 
	-> odogaron.jump_claw() 
	>> node_073 
	return 
endf 

def node_118
	>> node_041 
	-> odogaron.killer_bite() 
	>> node_069 
	return 
endf 

def node_119
	>> node_046 
	if self.angle_2d_cw_between(270,90) 
		>> node_120 
	else 
		>> node_129 
	endif 
	return 
endf 

def node_120
	if self.current_quest().is_rank(rank.MR) 
		>> node_123 
	else 
		if function#B9() 
			>> node_123 
		elif self.current_quest().is_rank(rank.HR) 
			>> node_122 
		else 
			>> node_121 
		endif 
	endif 
	return 
endf 

def node_121
	if function#109() 
		>> node_127 
	elif self.fatigued() 
		>> node_128 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_126 
		else 
			>> node_126 
		endif 
	elif self.target.bleed() 
		>> node_126 
	else 
		>> node_125 
	endif 
	return 
endf 

def node_122
	if function#109() 
		>> node_127 
	elif self.fatigued() 
		>> node_128 
	elif function#7D() 
		>> node_126 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_126 
		else 
			>> node_126 
		endif 
	elif self.target.bleed() 
		>> node_126 
	else 
		>> node_125 
	endif 
	return 
endf 

def node_123
	if function#109() 
		>> node_127 
	elif self.fatigued() 
		>> node_128 
	elif function#7D() 
		>> node_126 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_126 
		else 
			>> node_126 
		endif 
	elif self.target.bleed() 
		>> node_126 
	else 
		>> node_125 
	endif 
	return 
endf 

def node_124
	-> odogaron.quick_claw_attack() @ comboSetting:1 
	-> odogaron.back_step_to_front() 
	return 
endf 

def node_125
	-> odogaron.quick_claw_attack() @ comboSetting:1 
	-> odogaron.round_bite() 
	>> node_070 
	return 
endf 

def node_126
	-> odogaron.quick_claw_attack() @ comboSetting:1 
	-> odogaron.round_bite() @ comboSetting:1 
	-> odogaron.combo_round_bite_to_killer_bite() 
	>> node_070 
	return 
endf 

def node_127
	-> odogaron.quick_claw_attack() @ comboSetting:1 
	-> odogaron.round_bite() @ comboSetting:1 
	-> odogaron.combo_round_bite_to_killer_bite_sp() 
	>> node_070 
	return 
endf 

def node_128
	-> odogaron.quick_claw_attack() 
	>> node_069 
	return 
endf 

def node_129
	if self.current_quest().is_rank(rank.MR) 
		>> node_132 
	else 
		if function#B9() 
			>> node_132 
		elif self.current_quest().is_rank(rank.HR) 
			>> node_131 
		else 
			>> node_130 
		endif 
	endif 
	return 
endf 

def node_130
	if function#109() 
		>> node_135 
	elif self.fatigued() 
		>> node_136 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_135 
		else 
			>> node_135 
		endif 
	elif self.target.bleed() 
		>> node_135 
	else 
		>> node_134 
	endif 
	return 
endf 

def node_131
	if function#109() 
		>> node_135 
	elif self.fatigued() 
		>> node_136 
	elif function#7D() 
		>> node_135 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_135 
		else 
			>> node_135 
		endif 
	elif self.target.bleed() 
		>> node_135 
	else 
		>> node_134 
	endif 
	return 
endf 

def node_132
	if function#109() 
		>> node_135 
	elif self.fatigued() 
		>> node_136 
	elif function#7D() 
		>> node_135 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_135 
		else 
			>> node_135 
		endif 
	elif self.target.bleed() 
		>> node_135 
	else 
		>> node_134 
	endif 
	return 
endf 

def node_133
	-> odogaron.quick_tail() @ comboSetting:1 
	-> odogaron.back_step_to_front() 
	return 
endf 

def node_134
	-> odogaron.quick_tail() @ comboSetting:1 
	-> odogaron.combo_quick_tail_to_scratch_r() 
	>> node_073 
	return 
endf 

def node_135
	-> odogaron.quick_tail() @ comboSetting:1 
	-> odogaron.combo_quick_tail_to_scratch_r() @ comboSetting:1 
	-> odogaron.combo_scratch_to_tail_somer() 
	>> node_072 
	return 
endf 

def node_136
	-> odogaron.quick_tail() 
	>> node_069 
	return 
endf 

def node_137
	if self.current_quest().is_rank(rank.MR) 
		>> node_140 
	else 
		if function#B9() 
			>> node_140 
		elif self.current_quest().is_rank(rank.HR) 
			>> node_139 
		else 
			>> node_138 
		endif 
	endif 
	return 
endf 

def node_138
	if function#109() 
		>> node_142 
	elif self.fatigued() 
		>> node_144 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_142 
		else 
			>> node_142 
		endif 
	elif self.target.bleed() 
		>> node_142 
	else 
		>> node_141 
	endif 
	return 
endf 

def node_139
	if function#109() 
		>> node_143 
	elif self.fatigued() 
		>> node_144 
	elif function#7D() 
		>> node_142 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_142 
		else 
			>> node_142 
		endif 
	elif self.target.bleed() 
		>> node_142 
	else 
		>> node_141 
	endif 
	return 
endf 

def node_140
	if function#109() 
		>> node_143 
	elif self.fatigued() 
		>> node_144 
	elif function#7D() 
		>> node_143 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_143 
		else 
			>> node_142 
		endif 
	elif self.target.bleed() 
		>> node_142 
	else 
		>> node_141 
	endif 
	return 
endf 

def node_141
	>> node_046 
	-> odogaron.round_bite() @ comboSetting:1 
	-> odogaron.back_step_to_front() 
	return 
endf 

def node_142
	>> node_046 
	-> odogaron.round_bite() @ comboSetting:1 
	-> odogaron.round_bite() 
	>> node_070 
	return 
endf 

def node_143
	>> node_046 
	-> odogaron.round_bite() @ comboSetting:1 
	-> odogaron.round_bite() @ comboSetting:1 
	-> odogaron.back_step_to_front() 
	*&
	return 
endf 

def node_144
	>> node_046 
	-> odogaron.round_bite() 
	>> node_069 
	return 
endf 

def node_145
	if self.current_quest().is_rank(rank.MR) 
		>> node_148 
	else 
		if function#B9() 
			>> node_148 
		elif self.current_quest().is_rank(rank.HR) 
			>> node_147 
		else 
			>> node_146 
		endif 
	endif 
	return 
endf 

def node_146
	if function#109() 
		>> node_152 
	elif self.fatigued() 
		>> node_153 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_151 
		else 
			>> node_151 
		endif 
	elif self.target.bleed() 
		>> node_151 
	else 
		>> node_150 
	endif 
	return 
endf 

def node_147
	if function#109() 
		>> node_152 
	elif self.fatigued() 
		>> node_153 
	elif function#7D() 
		>> node_151 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_151 
		else 
			>> node_151 
		endif 
	elif self.target.bleed() 
		>> node_151 
	else 
		>> node_150 
	endif 
	return 
endf 

def node_148
	if function#109() 
		>> node_152 
	elif self.fatigued() 
		>> node_153 
	elif function#7D() 
		>> node_151 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_151 
		else 
			>> node_151 
		endif 
	elif self.target.bleed() 
		>> node_151 
	else 
		>> node_150 
	endif 
	return 
endf 

def node_149
	-> odogaron.jump_claw() 
	>> node_065 
	return 
endf 

def node_150
	-> odogaron.jump_claw() @ comboSetting:1 
	-> odogaron.round_bite() 
	>> node_070 
	return 
endf 

def node_151
	-> odogaron.jump_claw() @ comboSetting:1 
	-> odogaron.round_bite() @ comboSetting:1 
	-> odogaron.combo_round_bite_to_killer_bite() 
	>> node_069 
	return 
endf 

def node_152
	-> odogaron.jump_claw() @ comboSetting:1 
	-> odogaron.round_bite() @ comboSetting:1 
	-> odogaron.combo_round_bite_to_killer_bite_sp() 
	>> node_069 
	return 
endf 

def node_153
	-> odogaron.jump_claw() 
	>> node_072 
	return 
endf 

def node_154
	if function#B9() 
		>> node_155 
	else 
		random (50) 
					if function#104(1) 
					else 
						if function#107() 
						else 
							if function#105() 
								>> node_157 
								>> node_158 
								>> node_159 
								>> node_160 
								reset 
							else 
							endif 
						endif 
					endif 
		elser (50) 
		endr 
	endif 
	return 
endf 

def node_155
	if function#104(1) 
	else 
		if function#107() 
		else 
			if function#105() 
				>> node_157 
				>> node_158 
				>> node_159 
				>> node_160 
				reset 
			else 
			endif 
		endif 
	endif 
	return 
endf 

def node_156
	if [RegisterVar0 += 0] 
		if function#104(1) 
		else 
			if function#107() 
			else 
				if function#105() 
					if self.distance_3d_recalc_to_target().leq(5000) 
						[RegisterVar0 |-] 
						>> node_157 
						>> node_158 
						>> node_159 
						>> node_160 
						reset 
					else 
					endif 
				else 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_157
	>> node_161 
	return 
endf 

def node_158
	-> odogaron.corpse_carry_start() 
	return 
endf 

def node_159
	if function#104() 
		if function#106(1) 
			-> odogaron.corpse_carry_walk() 
			function#54() 
			function#52(0,2) 
			self.targetArea(target_area.nearest_entrance) 
			-> odogaron.corpse_carry_walk() 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_160
	if function#104() 
		-> odogaron.corpse_carry_end() 
	else 
	endif 
	function#54() 
	return 
endf 

def node_161
	if self.distance_3d_to_target().leq(1200) 
	else 
		-> odogaron.dash(1,2,0,1000,3000) 
		repeat 
	endif 
	return 
endf 

def node_162
	if self.distance_3d_to_target().leq(600) 
	else 
		-> odogaron.corpse_carry_walk(1,2,0,500,2000) 
		repeat 
	endif 
	return 
endf 

def node_163
	if function#B9() 
		>> node_164 
	else 
		random (50) 
					if function#104(1) 
					else 
						if function#105(1) 
							>> node_165 
							>> node_166 
							reset 
						else 
						endif 
					endif 
		elser (50) 
		endr 
	endif 
	return 
endf 

def node_164
	if function#104(1) 
	else 
		if function#105(1) 
			>> node_165 
			>> node_166 
			reset 
		else 
		endif 
	endif 
	return 
endf 

def node_165
	>> node_167 
	return 
endf 

def node_166
	>> node_037 
	-> odogaron.food_carry_start() 
	return 
endf 

def node_167
	if self.distance_3d_to_target().leq(900) 
	else 
		-> odogaron.dash(1,2,0,800,3000) 
		repeat 
	endif 
	return 
endf 

def node_168
	-> odogaron.food_carry_end() 
	-> odogaron.food_eat() 
	return 
endf 

def node_169
	if function#6B(3000) 
		self.targetEnemy(26) 
		>> node_173 
		>> node_174 
		>> node_175 
		reset 
	else 
	endif 
	return 
endf 

def node_170
	if function#6B(3000) 
		self.targetEnemy(26) 
		>> node_173 
		>> node_174 
		>> node_175 
		conclude 
	else 
	endif 
	return 
endf 

def node_171
	if function#6B(20000) 
		self.targetEnemy(26) 
		>> node_173 
		>> node_174 
		>> node_175 
		reset 
	else 
	endif 
	return 
endf 

def node_172
	if function#6B(20000) 
		self.targetEnemy(26) 
		>> node_173 
		>> node_174 
		>> node_175 
		conclude 
	else 
	endif 
	return 
endf 

def node_173
	-> odogaron.sniff_s() 
	return 
endf 

def node_174
	if self.distance_3d_to_target().leq(1000) 
	else 
		-> odogaron.dash(0,2,0,0,1000) 
		repeat 
	endif 
	return 
endf 

def node_175
	>> node_037 
	-> odogaron.meat_eat() 
	return 
endf 

def node_176
	if function#108(0,4) 
		>> node_178 
		>> node_179 
		>> node_180 
		reset 
	else 
	endif 
	return 
endf 

def node_177
	if function#108(0,4) 
		>> node_178 
		>> node_179 
		>> node_180 
		conclude 
	else 
	endif 
	return 
endf 

def node_178
	-> odogaron.sniff_s() 
	return 
endf 

def node_179
	if self.in_map(st.Rotten_Vale).in_area(9) 
		>> node_181 
	elif function#102() 
		>> node_182 
		if function#108(0,4) 
			>> node_181 
		else 
		endif 
	else 
		>> node_181 
	endif 
	return 
endf 

def node_180
	>> node_037 
	-> odogaron.corpse_eat() 
	return 
endf 

def node_181
	if self.distance_3d_to_target().leq(1200) 
	else 
		-> odogaron.dash(1,2,0,1000,3000) 
		repeat 
	endif 
	return 
endf 

def node_182
	if self.distance_3d_to_target().leq(600) 
	else 
		-> odogaron.dash(1,2,0,500,3000) 
		repeat 
	endif 
	return 
endf 

def node_183
	if function#108(15000,1) 
		>> node_185 
		>> node_186 
		>> node_187 
		reset 
	else 
	endif 
	return 
endf 

def node_184
	if function#108(15000,1) 
		>> node_185 
		>> node_186 
		>> node_187 
		conclude 
	else 
	endif 
	return 
endf 

def node_185
	-> odogaron.sniff_s() 
	return 
endf 

def node_186
	>> node_188 
	return 
endf 

def node_187
	>> node_037 
	-> odogaron.food_eat() 
	return 
endf 

def node_188
	if self.distance_3d_to_target().leq(800) 
	else 
		-> odogaron.dash(1,2,0,700,3000) 
		repeat 
	endif 
	return 
endf 

def node_189
	self.targetArea(22) @ parameter2:300 
	>> node_021 
	return 
endf 

def node_190
	-> odogaron.killer_bite() 
	>> node_069 
	return 
endf 

def node_191
	-> odogaron.ride_rage_head_lv2() 
	return 
endf 

def node_192
	-> odogaron.ride_rage_body() 
	return 
endf 

def node_193
	-> odogaron.ride_rage_body_lv2() 
	return 
endf 

def node_194
	-> odogaron.tail_somersault() 
	>> node_072 
	return 
endf 

def node_195
	-> odogaron.ride_rage_tail_lv2() 
	return 
endf 

def node_196
	self.targetArea(7) 
	if self.distance_3d_to_target().leq(450) 
		>> node_197 
	else 
	endif 
	>> node_198 
	return 
endf 

def node_197
	-> odogaron.back_step() 
	return 
endf 

def node_198
	if self.distance_3d_to_target().leq(600) 
	else 
		-> odogaron.dash(1,2,0,500,1000) 
		repeat 
	endif 
	return 
endf 

def node_199
	-> odogaron.ride_rage_crash_head() 
	return 
endf 

def node_200
	-> odogaron.ride_rage_crash_head_lv2() 
	return 
endf 

def node_201
	-> odogaron.ride_rage_crash_body() 
	return 
endf 

def node_202
	-> odogaron.ride_rage_crash_body_lv2() 
	return 
endf 

def node_203
	-> odogaron.ride_rage_crash_tail() 
	return 
endf 

def node_204
	-> odogaron.ride_rage_crash_tail_lv2() 
	return 
endf 

def node_205
	-> odogaron.threat() 
	return 
endf 

def node_206
	-> odogaron.ride_tired() 
	return 
endf 

def node_207
	-> odogaron.walk(1,2,0,500,1000) 
	return 
endf 

def node_208
	-> odogaron.dash(1,2,0,500,1500) 
	return 
endf 

def node_209
	-> odogaron.search() 
	return 
endf 

def node_210
	-> odogaron.search() 
	return 
endf 

def node_211
	-> odogaron.marking() 
	return 
endf 

def node_212
	-> odogaron.sniff_s() 
	return 
endf 

def node_213
	-> odogaron.sniff_l() 
	return 
endf 

def node_214
	-> odogaron.drink() 
	return 
endf 

def node_215
	-> odogaron.search() 
	return 
endf 

def node_216
	-> odogaron.sleep() 
	return 
endf 

def node_217
	if self.distance_3d_to_target().leq(800) 
		>> node_029 
	elif self.distance_3d_to_target().leq(1200) 
		>> node_031 
	else 
	endif 
	return 
endf 

def node_218
	if self.distance_2d_to_target().leq(1000) 
		return 
	else 
		-> odogaron.dash(2,6,0,1000,800) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else 
		-> odogaron.dash(2,6,0,1000,800) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else 
		-> odogaron.dash(2,6,0,1000,800) 
	endif 
	return 
endf 

def node_219
	-> odogaron.lost_search_short() 
	return 
endf 

def node_220
	-> odogaron.search() 
	return 
endf 

def node_221
	-> odogaron.search() 
	-> odogaron.search() 
	return 
endf 

def node_222
	-> odogaron.search() 
	return 
endf 

def node_223
	-> odogaron.search() 
	return 
endf 

def node_224
	-> odogaron.sniff_s() 
	return 
endf 

def node_225
	-> odogaron.sniff_l() 
	return 
endf 

def node_226
	if self.enraged() 
		-> odogaron.dash(2,1,0,500,650) 
	else 
		-> odogaron.walk(2,1,0,500,650) 
	endif 
	return 
endf 

def node_227
	if self.enraged() 
		-> odogaron.dash(2,1,0,1000,650) 
	else 
		-> odogaron.walk(2,1,0,1000,650) 
	endif 
	return 
endf 

def node_228
	if self.enraged() 
		-> odogaron.peep_grass_search() 
	else 
		-> odogaron.peep_grass_search() 
	endif 
	return 
endf 

def node_229
	if self.target(10) 
		-> odogaron.dash(2,0,0,1000) 
	else 
	endif 
	>> node_023 
	-> odogaron.killer_bite() 
	-> odogaron.to_front_idle() 
	return 
endf 

def node_230
	-> odogaron.tired() 
	return 
endf 

def node_231
	if self.distance_3d_to_target().leq(600) 
	else 
		-> odogaron.dying_walk(1,2,0,500,1500) 
		repeat 
	endif 
	return 
endf 

def node_232
	-> odogaron.dying_walk(1,2,0,500,1500) 
	return 
endf 

def node_233
	if function#7C() 
		conclude 
	else 
		if function#C9() 
			-> odogaron.dying_sleep() 
		else 
			function#CA() 
		endif 
	endif 
	return 
endf 

def node_234
	if function#104(1) 
		-> odogaron.search() 
	else 
		-> odogaron.threat_short() 
	endif 
	return 
endf 

def node_235
	if function#104(1) 
		-> odogaron.search() 
	else 
		-> odogaron.threat_short() 
	endif 
	return 
endf 

def node_236
	random (35) 
				self.targetArea(21) @ parameter2:450 
	elser (35) 
				self.targetArea(22) @ parameter2:450 
	elser (15) 
				self.targetArea(21) @ parameter2:600 
	elser (15) 
				self.targetArea(22) @ parameter2:600 
	endr 
	return 
endf 

def node_237
	random (50) 
				-> odogaron.threat() 
	elser (50) 
	endr 
	return 
endf 

def node_238
	-> odogaron.threat() 
	return 
endf 

def node_239
	>> node_023 
	if self.fatigued() 
		>> node_009 
	else 
		random (30) -> odogaron.lost_search_short() 
		elser (20) -> odogaron.lost_search() 
		elser (30) -> odogaron.sniff_s() 
		elser (20) -> odogaron.sniff_l() 
		elser (0) -> odogaron.threat_short() 
		endr 
	endif 
	return 
endf 

def node_240
	if self.targetEnemy(target_em.any_monster) 
		random (20) >> node_023 
		elser (80) 
		endr 
	else 
	endif 
	random (30) -> odogaron.lost_search_short() 
	elser (20) -> odogaron.lost_search() 
	elser (30) -> odogaron.sniff_s() 
	elser (20) -> odogaron.sniff_l() 
	elser (0) -> odogaron.threat_short() 
	endr 
	return 
endf 

def node_241
	>> node_023 
	random (30) -> odogaron.lost_search_short() 
	elser (20) -> odogaron.lost_search() 
	elser (30) -> odogaron.sniff_s() 
	elser (20) -> odogaron.sniff_l() 
	elser (0) -> odogaron.threat_short() 
	endr 
	return 
endf 

def node_242
	>> node_037 
	-> odogaron.sniff_l() 
	return 
endf 

def node_243
	self.targetEnemy(58) 
	random (10) >> node_244 
	elser (90) 
	endr 
	self.targetEnemy(22) @ parameter2:2000 
	random (40) >> node_037 
	elser (60) 
	endr 
	random (70) -> odogaron.search() 
	elser (30) -> odogaron.sniff_l() 
	endr 
	return 
endf 

def node_244
	-> odogaron.walk(1,2,0,600,1500) 
	return 
endf 

def node_245
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Deviljho) 
						if self.target(49) 
							[RegisterVar1 ++] 
							self.force_area_change2() 
						else 
							random (30) >> node_247 
							elser (20) >> node_251 
							elser (50) >> node_249 
							elser (0) >> node_248 
							endr 
						endif 
					elif self.target_is(em.Savage_Deviljho) 
						if self.target(49) 
							[RegisterVar1 ++] 
							self.force_area_change2() 
						else 
							random (30) >> node_247 
							elser (20) >> node_251 
							elser (50) >> node_249 
							elser (0) >> node_248 
							endr 
						endif 
					elif function#30(2) 
						if self.target.in_combat() 
							random (0) >> node_247 
							elser (0) >> node_251 
							elser (0) >> node_249 
							elser (100) >> node_248 
							endr 
						else 
							random (0) >> node_247 
							elser (0) >> node_251 
							elser (0) >> node_250 
							elser (100) >> node_248 
							endr 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (0) >> node_247 
							elser (0) >> node_251 
							elser (100) >> node_249 
							elser (0) >> node_248 
							endr 
						else 
							random (0) >> node_247 
							elser (70) >> node_251 
							elser (30) >> node_250 
							elser (0) >> node_248 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (0) >> node_247 
							elser (20) >> node_251 
							elser (80) >> node_249 
							elser (0) >> node_248 
							endr 
						else 
							random (0) >> node_247 
							elser (60) >> node_251 
							elser (20) >> node_250 
							elser (20) >> node_248 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_246
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.distance_2d_to_target().leq(3000) 
				if self.vertical_distance_to_target().leq(1000) 
					if self.target_is(em.Deviljho) 
						if self.target(49) 
							[RegisterVar1 ++] 
							self.force_area_change2() 
						else 
							random (50) >> node_247 
							elser (20) >> node_251 
							elser (30) >> node_249 
							elser (0) >> node_248 
							endr 
						endif 
					elif self.target_is(em.Savage_Deviljho) 
						if self.target(49) 
							[RegisterVar1 ++] 
							self.force_area_change2() 
						else 
							random (50) >> node_247 
							elser (20) >> node_251 
							elser (30) >> node_249 
							elser (0) >> node_248 
							endr 
						endif 
					elif function#30(2) 
						if self.target.in_combat() 
							random (30) >> node_247 
							elser (0) >> node_251 
							elser (0) >> node_250 
							elser (70) >> node_248 
							endr 
						else 
							random (30) >> node_247 
							elser (0) >> node_251 
							elser (0) >> node_250 
							elser (70) >> node_248 
							endr 
						endif 
					elif function#30(4) 
						if self.target.in_combat() 
							random (30) >> node_247 
							elser (0) >> node_251 
							elser (70) >> node_250 
							elser (0) >> node_248 
							endr 
						else 
							random (50) >> node_247 
							elser (0) >> node_251 
							elser (50) >> node_250 
							elser (0) >> node_248 
							endr 
						endif 
					else 
						if self.target.in_combat() 
							random (30) >> node_247 
							elser (20) >> node_251 
							elser (30) >> node_250 
							elser (20) >> node_248 
							endr 
						else 
							random (30) >> node_247 
							elser (20) >> node_251 
							elser (50) >> node_250 
							elser (0) >> node_248 
							endr 
						endif 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_247
	return 
endf 

def node_248
	if self.in_map(st.Special_Arena).in_area(-1) 
		>> node_250 
	elif self.in_map(st.Challenge_Arena).in_area(-1) 
		>> node_250 
	else 
		if [RegisterVar1 -= 8] 
			[RegisterVar1 ++] 
			self.force_area_change2() 
		elif [RegisterVar1 -= 5] 
			random (30) 
						[RegisterVar1 ++] 
						self.force_area_change2() 
			elser (70) 
			endr 
		else 
		endif 
		[RegisterVar1 |-] 
		if self.target.in_combat() 
			>> node_250 
			[RegisterVar1 |-] 
		else 
			[RegisterVar1 |-] 
			>> node_251 
		endif 
		self.targetEnemy(target_em.closest_entity) 
		if self.distance_2d_to_target().leq(3000) 
			if self.vertical_distance_to_target().leq(1000) 
				if function#5F() 
					repeat 
				elif self.in_combat() 
				else 
					repeat 
				endif 
			else 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_249
	>> node_250 
	>> node_250 
	random (70) 
	elser (30) 
				return 
	endr 
	>> node_250 
	random (70) 
	elser (30) 
				return 
	endr 
	>> node_250 
	return 
endf 

def node_250
	>> node_015 
	self.targetEnemy(target_em.closest_entity) 
	if function#103() 
		random (30) >> node_252 
		elser (30) >> node_253 
		elser (40) >> node_254 
		endr 
	else 
		random (50) >> node_252 
		elser (50) >> node_253 
		endr 
	endif 
	return 
endf 

def node_251
	>> node_015 
	self.targetEnemy(target_em.closest_entity) 
	>> node_023 
	if self.in_combat() 
		>> node_014 
	else 
		if self.target.in_combat() 
			>> node_014 
		else 
			>> node_001 
		endif 
	endif 
	return 
endf 

def node_252
	>> node_045 
	self.targetEnemy(target_em.closest_entity) 
	if function#109() 
		-> odogaron.killer_bite_sp() 
	else 
		-> odogaron.killer_bite() 
	endif 
	>> node_069 
	return 
endf 

def node_253
	>> node_045 
	self.targetEnemy(target_em.closest_entity) 
	-> odogaron.claw_attack() 
	>> node_069 
	return 
endf 

def node_254
	>> node_045 
	self.targetEnemy(target_em.closest_entity) 
	-> odogaron.tail_somersault() 
	>> node_072 
	return 
endf 

def node_255
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5D() 
		>> node_257 
	elif self.target(3) 
		>> node_258 
	elif self.target(4) 
		>> node_258 
	elif self.target(0) 
		if self.target(0) @ parameter2:1 
			>> node_261 
		else 
			>> node_262 
		endif 
	elif self.target(55) 
	elif self.target(14) 
		>> node_263 
	elif self.target(11) 
		>> node_264 
	elif self.target(12) 
	else 
		>> node_265 
	endif 
	return 
endf 

def node_256
	if [RegisterVar2 -= 10] 
		[RegisterVar2 ++] 
	elif [RegisterVar2 -= 1] 
		[RegisterVar2 |-] 
	else 
	endif 
	return 
endf 

def node_257
	if self.distance_2d_to_target().leq(1500) 
		if self.angle_2d_cw_between(300,60) 
		else 
			function#5E() 
			>> node_007 
		endif 
	else 
		if self.angle_2d_cw_between(300,60) 
			function#5E() 
			>> node_007 
		else 
			function#5E() 
			>> node_008 
		endif 
	endif 
	return 
endf 

def node_258
	>> node_259 
	>> node_260 
	reset 
endf 

def node_259
	self.targetArea(19) 
	if self.distance_3d_to_target().leq(1000) 
	else 
		>> node_016 
	endif 
	return 
endf 

def node_260
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_023 
	>> node_007 
	return 
endf 

def node_261
	>> node_266 
	if self.distance_2d_to_target().leq(1000) 
		if self.target(0) 
			if self.above_target() 
				-> odogaron.jump_attack() 
			else 
				-> odogaron.fall_attack() 
			endif 
			>> node_269 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_262
	>> node_266 
	if self.distance_2d_to_target().leq(1000) 
		if self.target(0) 
			if self.above_target() 
				-> odogaron.jump_attack() 
			else 
				-> odogaron.dash(1,2,0,0,1500) 
			endif 
			>> node_269 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_263
	>> node_266 
	if self.distance_2d_to_target().leq(2000) 
		if self.target(14) 
			if self.above_target() 
				-> odogaron.jump_attack() 
			else 
				-> odogaron.fall_attack() 
			endif 
			>> node_269 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_264
	>> node_268 
	return 
endf 

def node_265
	if self.vertical_distance_to_target().leq(450) 
	elif self.target(52) 
		>> node_268 
	else 
		>> node_268 
	endif 
	return 
endf 

def node_266
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			>> node_267 
		endif 
	else 
		>> node_267 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			>> node_267 
		endif 
	else 
		>> node_267 
	endif 
	if self.distance_2d_to_target().leq(600) 
		if self.vertical_distance_to_target().leq(1500) 
		else 
			>> node_267 
		endif 
	else 
		>> node_267 
	endif 
	return 
endf 

def node_267
	-> odogaron.dash(1,2,0,500,1500) 
	return 
endf 

def node_268
	if self.distance_3d_to_target().leq(400) 
	else 
		-> odogaron.dash(1,2,0,300,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> odogaron.dash(1,2,0,500,1500) 
	endif 
	if self.distance_3d_to_target().leq(600) 
	else 
		-> odogaron.dash(1,2,0,500,1500) 
	endif 
	return 
endf 

def node_269
	if self.flying() 
	else 
		if function#11(450) 
		elif function#11(750) 
			if self.fatigued() 
			else 
				>> node_270 
				random (50) 
							reset 
				elser (50) 
				endr 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_270
	>> node_266 
	-> odogaron.tail_somersault() 
	return 
endf 

def node_271
	if function#104(1) 
	else 
		if function#107() 
		else 
			if function#105() 
				>> node_157 
				>> node_158 
				>> node_159 
				>> node_160 
				reset 
			else 
			endif 
		endif 
	endif 
	return 
endf 

def node_272
	if function#104(1) 
	else 
		if function#105(1) 
			>> node_165 
			>> node_166 
			>> node_274 
			reset 
		else 
		endif 
	endif 
	return 
endf 

def node_273
	if [RegisterVar0 += 0] 
		if function#104(1) 
		else 
			if function#107() 
			else 
				if function#105() 
					if self.distance_3d_recalc_to_target().leq(5000) 
						[RegisterVar0 |-] 
						if function#109() 
						else 
							>> node_176 
						endif 
						>> node_178 
						>> node_157 
						>> node_158 
						>> node_159 
						>> node_160 
						>> node_176 
						reset 
					else 
					endif 
				else 
				endif 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_274
	if function#104(1) 
		if function#109() 
		else 
			random (90) >> node_294 
						if function#108(15000,1) 
							>> node_187 
							conclude 
						else 
						endif 
			elser (10) 
			endr 
		endif 
	else 
	endif 
	return 
endf 

def node_275
	>> node_276 
	if function#109() 
		reset 
	else 
	endif 
	return 
endf 

def node_276
	if function#109() 
	else 
		>> node_176 
	endif 
	return 
endf 

def node_277
	if function#109() 
	else 
		if self.fatigued() 
		else 
			>> node_279 
			>> node_280 
		endif 
	endif 
	return 
endf 

def node_278
	if function#105() 
		>> node_178 
		>> node_179 
		>> node_180 
		conclude 
	else 
	endif 
	return 
endf 

def node_279
	if function#108(15000,1) 
		>> node_185 
		>> node_186 
		>> node_187 
		conclude 
	else 
	endif 
	return 
endf 

def node_280
	if function#105(1) 
		>> node_185 
		>> node_165 
		>> node_166 
		>> node_294 
		if function#108(15000,1) 
			>> node_187 
			conclude 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_281
	if function#104(1) 
	else 
		if function#105(2) 
			>> node_282 
			-> odogaron.meat_catch() 
		else 
		endif 
	endif 
	return 
endf 

def node_282
	if self.distance_2d_to_target().leq(400) 
		-> odogaron.back_step_to_front() 
	else 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		>> node_022 
	else 
		-> odogaron.dash() 
	endif 
	return 
endf 

def node_283
	if function#109() 
		>> node_081 
	elif self.fatigued() 
		>> node_082 
	elif function#7D() 
		>> node_081 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_081 
		else 
			>> node_081 
		endif 
	elif self.target.bleed() 
		>> node_081 
	else 
		>> node_080 
	endif 
	return 
endf 

def node_284
	if function#109() 
		>> node_089 
	elif self.fatigued() 
		>> node_090 
	elif function#7D() 
		>> node_089 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_089 
		else 
			>> node_088 
		endif 
	elif self.target.bleed() 
		>> node_088 
	else 
		>> node_087 
	endif 
	return 
endf 

def node_285
	if function#109() 
		>> node_097 
	elif self.fatigued() 
		if function#103() 
			random (35) >> node_075 
			elser (35) >> node_083 
			elser (30) >> node_111 
			endr 
		else 
			random (35) >> node_119 
			elser (35) >> node_137 
			elser (30) >> node_111 
			endr 
		endif 
	elif function#7D() 
		>> node_096 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_096 
		else 
			>> node_095 
		endif 
	elif self.target.bleed() 
		>> node_095 
	else 
		>> node_095 
	endif 
	return 
endf 

def node_286
	if function#109() 
		>> node_105 
	elif function#7D() 
		>> node_105 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_105 
		else 
			>> node_104 
		endif 
	elif self.target.bleed() 
		>> node_104 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
		if function#103() 
			random (20) >> node_075 
			elser (20) >> node_083 
			elser (20) >> node_091 
			elser (20) >> node_111 
			elser (20) >> node_106 
			endr 
		else 
			random (25) >> node_119 
			elser (25) >> node_137 
			elser (25) >> node_111 
			elser (25) >> node_106 
			endr 
		endif 
	endif 
	return 
endf 

def node_287
	if function#109() 
		>> node_110 
	elif self.fatigued() 
		if function#103() 
			random (35) >> node_075 
			elser (35) >> node_083 
			elser (30) >> node_111 
			endr 
		else 
			random (35) >> node_119 
			elser (35) >> node_137 
			elser (30) >> node_111 
			endr 
		endif 
	elif function#7D() 
		>> node_110 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_110 
		else 
			>> node_110 
		endif 
	elif self.target.bleed() 
		>> node_110 
	else 
		>> node_110 
	endif 
	return 
endf 

def node_288
	if function#109() 
		>> node_117 
	elif self.fatigued() 
		>> node_118 
	elif function#7D() 
		>> node_116 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_116 
		else 
			>> node_115 
		endif 
	elif self.target.bleed() 
		>> node_115 
	else 
		>> node_115 
	endif 
	return 
endf 

def node_289
	>> node_046 
	if self.angle_2d_cw_between(270,90) 
		>> node_290 
	else 
		>> node_291 
	endif 
	return 
endf 

def node_290
	if function#109() 
		>> node_127 
	elif self.fatigued() 
		>> node_128 
	elif function#7D() 
		>> node_126 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_126 
		else 
			>> node_126 
		endif 
	elif self.target.bleed() 
		>> node_126 
	else 
		>> node_125 
	endif 
	return 
endf 

def node_291
	if function#109() 
		>> node_135 
	elif self.fatigued() 
		>> node_136 
	elif function#7D() 
		>> node_135 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_135 
		else 
			>> node_135 
		endif 
	elif self.target.bleed() 
		>> node_135 
	else 
		>> node_134 
	endif 
	return 
endf 

def node_292
	if function#109() 
		>> node_143 
	elif self.fatigued() 
		>> node_144 
	elif function#7D() 
		>> node_143 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_143 
		else 
			>> node_142 
		endif 
	elif self.target.bleed() 
		>> node_142 
	else 
		>> node_141 
	endif 
	return 
endf 

def node_293
	if function#109() 
		>> node_152 
	elif self.fatigued() 
		>> node_153 
	elif function#7D() 
		>> node_151 
	elif self.enraged() 
		if self.target.bleed() 
			>> node_151 
		else 
			>> node_151 
		endif 
	elif self.target.bleed() 
		>> node_151 
	else 
		>> node_150 
	endif 
	return 
endf 

def node_294
	-> odogaron.food_carry_end() 
	return 
endf 

