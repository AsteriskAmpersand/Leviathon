importactions Barnos as barnos

def node_000
	conclude 
endf 

def node_001
	if self.flying() 
		-> action#22() 
	else 
		-> action#21() 
	endif 
	return 
endf 

def node_002
	if self.flying() 
		-> action#24() 
	else 
		-> action#23() 
	endif 
	return 
endf 

def node_003
	if self.flying() 
		-> action#27() 
	else 
		-> action#26() 
	endif 
	return 
endf 

def node_004
	if self.flying() 
		-> action#0E() 
	else 
	endif 
	-> action#2A() 
	return 
endf 

def node_005
	if self.flying() 
		-> action#43() 
	endif 
	-> action#28() 
	>> node_007 
	return 
endf 

def node_006
	if self.flying() 
		-> action#07() 
	else 
		-> action#05() 
	endif 
	return 
endf 

def node_007
	if self.flying() 
	elif function#40() 
		-> action#09() 
	else 
		-> action#08() 
	endif 
	return 
endf 

def node_008
	if self.flying() 
		-> action#0D() 
	endif 
	return 
endf 

def node_009
	if self.flying() 
		-> action#2F() 
	else 
		-> action#2E() 
	endif 
	return 
endf 

def node_010
	if function#51() 
		>> node_011 
	endif 
	return 
endf 

def node_011
	>> node_006 
	>> node_001 
	return 
endf 

def node_012
	if self.distance_3d_to_target().leq(1000) 
		return 
	else 
		if self.hookable() 
			-> action#14(2,0,0,2000) 
		else 
			-> action#13(2,0,0,2000) 
		endif 
		repeat 
	endif 
	return 
endf 

def node_013
	function#52() 
	self.targetEnemy(16) 
	-> action#13(1,0,0,1000) 
	-> action#16() 
	-> action#20() 
	>> node_002 
	>> node_004 
	function#54() 
	>> node_007 
	return 
endf 

def node_014
	>> node_007 
	-> action#04() 
	return 
endf 

def node_015
	if self.hookable() 
		>> node_002 
		>> node_001 
		-> action#20() 
	endif 
	return 
endf 

def node_016
	function#52() 
	self.targetEnemy(16) 
	-> action#14() 
	function#54() 
	return 
endf 

def node_017
	-> action#13(2,6,0,1000,1000) 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else 
		repeat 
	endif 
	return 
endf 

def node_018
	if self.distance_2d_to_target().gt(800) 
		function#74(0,300) 
		-> action#0F() 
		function#74(180,300) 
		-> action#0F() 
	else 
		function#74(0,500) 
		-> action#0F() 
		function#74(180,500) 
		-> action#0F() 
	endif 
	if self.vertical_distance_to_target().leq(100) -> action#1C() 
	endif 
	return 
endf 

def node_019
	function#74(0,100) 
	-> action#18() 
	function#74(180,100) 
	-> action#18() 
	return 
endf 

def node_020
	random (50) 
				function#74(0,500) 
				if function#2D() -> action#17(2,0,0,1000) 
				else -> action#18(2,0,0,1000) 
				endif 
	elser (50) 
				function#74(180,500) 
				if function#2D() -> action#17(2,0,0,1000) 
				else -> action#18(2,0,0,1000) 
				endif 
	endr 
	return 
endf 

def node_021
	if self.angular_15(60,0) >> node_006 
	endif 
	return 
endf 

def node_022
	if self.flying() 
		-> action#22() 
	else 
	endif 
	return 
endf 

def node_023
	if self.distance_2d_to_target().gt(1000) -> action#0F() 
	endif 
	-> action#17() 
	if self.vertical_distance_to_target().gt(300) -> action#1E() 
	endif 
	>> node_006 
	-> action#42() 
	return 
endf 

def node_024
	if self.flying() 
		-> action#17(6,0,0,300) 
		if self.vertical_distance_to_target().gt(300) -> action#1E() 
		endif 
		>> node_021 
		-> action#43() 
	else 
		>> node_001 
	endif 
	return 
endf 

def node_025
	if self.flying() 
		-> action#18(6,0,0,500) 
		if self.vertical_distance_to_target().gt(400) -> action#1E() 
		endif 
		>> node_021 
		-> action#43() 
	else 
		>> node_001 
	endif 
	return 
endf 

def node_026
	>> node_021 
	-> action#45() 
	return 
endf 

def node_027
	>> node_024 
	>> node_021 
	-> action#42() 
	>> node_001 
	return 
endf 

def node_028
	>> node_026 
	>> node_021 
	-> action#42() 
	>> node_001 
	return 
endf 

def node_029
	random (0) >> node_023 
	elser (100) >> node_024 
	endr 
	return 
endf 

def node_030
	if [RegisterVar1 == 0] 
		>> node_006 
		>> node_001 
		[RegisterVar1 ++] 
	endif 
	return 
endf 

def node_031
	if function#2D(2) >> node_033 
	else >> node_032 
	endif 
	return 
endf 

def node_032
	if function#32() 
		random (80) >> node_024 
		elser (20) >> node_001 
		elser (0) >> node_026 
		endr 
	else 
		random (0) >> node_024 
		elser (20) >> node_001 
		elser (80) >> node_026 
		endr 
	endif 
	return 
endf 

def node_033
	random (40) >> node_025 
	elser (15) >> node_001 
	elser (45) >> node_026 
				-> action#1C() 
	endr 
	return 
endf 

