importactions Gastodon as gastodon

def node_000
	>> node_002 @ unknExtra2:16 
	reset 
endf 

def node_001
endf 

def node_002
	if function#D6() 
		>> node_004 
		>> node_014 
	else 
		>> node_014 
	endif 
	return 
endf 

def node_003
endf 

def node_004
	>> node_005 
	return 
endf 

def node_005
	if [RegisterVar1 *= 3] 
		>> node_006 
		return 
	else 
		random (10) >> node_007 
		elser (90) >> node_010 
		endr 
		return 
	endif 
	reset 
endf 

def node_006
	function#DD(500) 
	function#E2() 
	if function#D2(3) 
	else 
		function#D2(4) 
	endif 
	return 
endf 

def node_007
	function#DD(500) 
	function#EB(300) 
	function#DE(3500) 
	function#E2() 
	if function#D2(1) 
	else 
		>> node_008 
	endif 
	return 
endf 

def node_008
	if function#E8(7) 
		>> node_009 
	else 
		function#DD(500) 
		random (60) 
					function#E2() 
		elser (40) 
					function#DE(3500) 
					function#EB(1000) 
					function#E2(2) 
		endr 
		if function#D2(4) 
		else 
			function#E4(4) 
			function#D2(4) 
		endif 
	endif 
	return 
endf 

def node_009
	function#DD(500) 
	function#E6() 
	random (60) 
				function#E2() 
	elser (40) 
				function#DE(3500) 
				function#EB(1000) 
				function#E2(2) 
	endr 
	if function#D2(4) 
	else 
		function#E4(4) 
		function#D2(4) 
	endif 
	return 
endf 

def node_010
	function#DD(500) 
	function#DE(3000) 
	function#E2() 
	function#F1(2) 
	if function#D2(2) 
	else 
		>> node_011 
	endif 
	return 
endf 

def node_011
	function#E2() 
	function#F1() 
	if function#D2(2) 
	else 
		>> node_006 
	endif 
	return 
endf 

def node_012
	function#DD(500) 
	function#EB(300) 
	function#E2() 
	function#F0(3) 
	if function#D2(2) 
	else 
		function#E2() 
		function#F0(2) 
		if function#D2(2) 
		else 
			>> node_047 
		endif 
	endif 
	return 
endf 

def node_013
endf 

def node_014
	if function#D4(7) 
		>> node_019 
	elif [RegisterVar4 *= 0] 
		>> node_019 
	else 
		>> node_040 
		>> node_062 
		if function#D4(4) 
			>> node_015 
		elif function#D4(3) 
			>> node_016 
		elif function#D4(1) 
			>> node_017 
		elif function#D4(2) 
			>> node_018 
		elif function#D4(8) 
			>> node_042 
		elif function#D4(10) 
			function#DA() 
			>> node_083 
		else 
			function#DA() 
			>> node_083 
		endif 
	endif 
	reset 
endf 

def node_015
	>> node_054 
	if function#F7() 
		>> node_030 
		repeat 
	else 
		>> node_029 
		repeat 
	endif 
	reset 
endf 

def node_016
	>> node_055 
	if function#F7() 
		>> node_030 
		repeat 
	else 
		>> node_029 
		repeat 
	endif 
	reset 
endf 

def node_017
	>> node_057 
	if function#F7() 
		>> node_030 
		repeat 
	else 
		>> node_029 
		repeat 
	endif 
	reset 
endf 

def node_018
	>> node_056 
	if function#F7() 
		>> node_030 
		repeat 
	else 
		>> node_029 
		repeat 
	endif 
	reset 
endf 

def node_019
	if function#DB(7) 
		if function#D4(8) 
			>> node_046 
		elif [RegisterVar4 *= 0] 
			>> node_046 
		elif function#D4(5) 
			>> node_044 
		elif function#D4(9) 
			>> node_043 
		else 
			>> node_058 
			if function#F7() 
				>> node_032 
				repeat 
			else 
				>> node_031 
				repeat 
			endif 
		endif 
	else 
		>> node_050 
	endif 
	reset 
endf 

def node_020
	if function#DB(7) 
		if function#FC() 
			return 
		else 
			>> node_054 
			if function#F7() 
				>> node_032 
				repeat 
			else 
				>> node_031 
				repeat 
			endif 
		endif 
	else 
		>> node_050 
	endif 
	reset 
endf 

def node_021
	>> node_027 
	>> node_067 
	>> node_069 
	>> node_073 
	>> node_081 
	>> node_064 
	function#DA() 
	reset 
endf 

def node_022
	>> node_027 
	>> node_067 
	>> node_069 
	>> node_081 
	>> node_065 
	function#DA() 
	reset 
endf 

def node_023
	>> node_027 
	>> node_067 
	>> node_069 
	>> node_073 
	>> node_082 
	>> node_064 
	function#DA() 
	reset 
endf 

def node_024
	>> node_027 
	>> node_067 
	>> node_069 
	>> node_084 
	>> node_064 
	function#DA() 
	reset 
endf 

def node_025
	>> node_081 
	function#D3() 
	reset 
endf 

def node_026
	>> node_095 
	function#D3() 
	reset 
endf 

def node_027
	if function#45() 
		>> node_093 
	endif 
	return 
endf 

def node_028
	if [RegisterVar2 -= 10] 
		function#F3() 
		>> node_077 
	else 
		>> node_078 
		>> node_066 
	endif 
	reset 
endf 

def node_029
	>> node_048 
	>> node_077 
	reset 
endf 

def node_030
	>> node_048 
	>> node_052 
	>> node_079 
	reset 
endf 

def node_031
	>> node_077 
	return 
endf 

def node_032
	>> node_052 
	>> node_079 
	return 
endf 

def node_033
	if function#D8() 
		if self.distance_3d_recalc_to_target().leq(250) 
			>> node_094 
			function#F3() 
		else 
			function#F2() 
			>> node_080 
			repeat 
		endif 
	endif 
	return 
endf 

def node_034
	if self.distance_3d_recalc_to_target().leq(600) 
		>> node_087 
	else 
		>> node_078 
	endif 
	reset 
endf 

def node_035
	>> node_048 
	function#D3() 
	>> node_077 
	reset 
endf 

def node_036
	function#D3() 
	>> node_077 
	reset 
endf 

def node_037
	>> node_048 
	>> node_079 
	function#D3() 
	reset 
endf 

def node_038
	if self.distance_2d_recalc_to_target().leq(500) 
		>> node_024 
	elif function#F7() 
		>> node_030 
	else 
		>> node_035 
	endif 
	reset 
endf 

def node_039
endf 

def node_040
	if [RegisterVar3 -= 1] 
		return 
	endif 
	function#DF(30) 
	function#EB(1000) 
	function#DE(1500) 
	if function#D2(8) 
		if function#D8() 
			function#F2() 
			if self.distance_3d_to_target().leq(800) 
				>> node_085 
				>> node_088 
				>> node_092 
				function#F3() 
			else 
				>> node_085 
				>> node_088 
				>> node_087 
				function#F3() 
			endif 
			>> node_068 
			function#E5() 
			reset 
		else 
			function#E5() 
			return 
		endif 
	else 
		return 
	endif 
	reset 
endf 

def node_041
endf 

def node_042
	>> node_059 
	if self.distance_3d_recalc_to_target().leq(300) 
		>> node_025 
	elif function#F7() 
		>> node_032 
	else 
		>> node_036 
	endif 
	reset 
endf 

def node_043
	if self.distance_3d_to_target().leq(1500) 
		>> node_038 
	elif function#F7() 
		>> node_030 
	else 
		>> node_035 
	endif 
	reset 
endf 

def node_044
	if self.distance_3d_recalc_to_target().leq(450) 
		>> node_026 
	elif self.distance_3d_recalc_to_target().leq(1000) 
		>> node_037 
	elif function#F7() 
		>> node_030 
	else 
		>> node_035 
	endif 
	reset 
endf 

def node_045
endf 

def node_046
	if function#FC() 
		function#E7(2) 
		>> node_071 
		>> node_042 
	else 
		>> node_070 
		>> node_012 
		>> node_020 
	endif 
	reset 
endf 

def node_047
	function#DA() 
	>> node_086 
	return 
endf 

def node_048
	function#DE(1500) 
	function#E2() 
	if function#D2(8) 
		>> node_060 
	endif 
	return 
endf 

def node_049
	if function#D6() 
		>> node_027 
		>> node_081 
		>> node_067 
		>> node_069 
		>> node_071 
		reset 
	endif 
	return 
endf 

def node_050
	>> node_027 
	>> node_081 
	>> node_067 
	>> node_069 
	>> node_071 
	reset 
endf 

def node_051
	if function#46() @ unknExtra2:1 
		>> node_086 
		function#DA() 
	else 
		return 
	endif 
	reset 
endf 

def node_052
	>> node_053 
	function#DF(25) 
	function#EB(800) 
	function#DD(300) 
	function#DE(2500) 
	function#E2() 
	function#E0() 
	if function#D2(1) 
		>> node_033 
		function#DA() 
	endif 
	return 
	reset 
endf 

def node_053
	function#DF(25) 
	function#EB(800) 
	function#DD(300) 
	function#DE(2000) 
	function#E2() 
	function#E0() 
	if function#D2(2) 
		>> node_033 
		function#DA() 
	endif 
	return 
	reset 
endf 

def node_054
	if [RegisterVar5 -= 5] 
		>> node_021 
	endif 
	if self.distance_3d_recalc_to_target().leq(500) 
		>> node_072 
		if self.distance_2d_recalc_to_target().leq(400) 
			>> node_021 
		endif 
	endif 
	return 
endf 

def node_055
	if self.distance_3d_recalc_to_target().leq(500) 
		if self.distance_2d_recalc_to_target().leq(300) 
			>> node_022 
		endif 
	endif 
	return 
endf 

def node_056
	if [RegisterVar5 -= 5] 
		if [RegisterVar6 -= 3] 
			>> node_023 
		else 
			>> node_074 
			>> node_021 
		endif 
	endif 
	if self.distance_3d_recalc_to_target().leq(500) 
		>> node_072 
		if self.distance_2d_recalc_to_target().leq(400) 
			if [RegisterVar6 -= 3] 
				>> node_023 
			else 
				>> node_074 
				>> node_021 
			endif 
		endif 
	endif 
	return 
endf 

def node_057
	if self.distance_3d_recalc_to_target().leq(500) 
		if self.distance_2d_recalc_to_target().leq(200) 
			>> node_021 
		endif 
	endif 
	return 
endf 

def node_058
	if self.distance_3d_recalc_to_target().leq(500) 
		if self.distance_2d_recalc_to_target().leq(250) 
			>> node_024 
		endif 
	endif 
	return 
endf 

def node_059
	function#DE(1300) 
	function#DF(30) 
	function#E2() 
	if function#D2(8) 
		>> node_061 
	endif 
	return 
endf 

def node_060
	if function#D8() 
		function#F2() 
		function#E5() 
		>> node_028 
	else 
		function#E5() 
	endif 
	return 
endf 

def node_061
	if function#D8() 
		function#F2() 
		function#E5() 
		>> node_034 
	else 
		function#E5() 
	endif 
	return 
endf 

def node_062
	if function#D4(8) 
		if function#D4(7) 
		else 
			function#E5() 
		endif 
	else 
	endif 
	return 
endf 

def node_063
endf 

def node_064
	[RegisterVar1 |-] 
	return 
endf 

def node_065
	[RegisterVar1 ++] 
	return 
endf 

def node_066
	[RegisterVar2 += 0] 
	return 
endf 

def node_067
	[RegisterVar2 ++] 
	return 
endf 

def node_068
	[RegisterVar3 |-] 
	return 
endf 

def node_069
	[RegisterVar3 ++] 
	return 
endf 

def node_070
	[RegisterVar4 |-] 
	return 
endf 

def node_071
	[RegisterVar4 ++] 
	return 
endf 

def node_072
	[RegisterVar5 |-] 
	return 
endf 

def node_073
	[RegisterVar5 ++] 
	return 
endf 

def node_074
	[RegisterVar6 |-] 
	return 
endf 

def node_075
	[RegisterVar6 ++] 
	return 
endf 

def node_076
endf 

def node_077
	-> action#06(2,1,0,300,150) 
	>> node_049 
	>> node_051 
	return 
endf 

def node_078
	-> action#07(2,8,0,200,2) 
	>> node_049 
	>> node_051 
	return 
endf 

def node_079
	-> action#05(2,0,0,400) 
	>> node_049 
	>> node_051 
	return 
endf 

def node_080
	-> action#08(2,1,0,200,150) 
	>> node_049 
	>> node_051 
	return 
endf 

def node_081
	-> action#4B() 
	return 
endf 

def node_082
	-> action#4B(8,0,0,6) 
	return 
endf 

def node_083
	-> action#4B() 
	return 
endf 

def node_084
	-> action#4C(8,0,0,3) 
	return 
endf 

def node_085
	if self.angle_2d_cw_between(120,210) 
		-> action#3C() 
	endif 
	return 
endf 

def node_086
	if function#D4(8) 
		-> action#52(8,0,0,5) 
	else 
		-> action#52(8,0,0,1) 
	endif 
	return 
endf 

def node_087
	-> action#54() 
	return 
endf 

def node_088
	function#D3() 
	-> action#53() 
	return 
endf 

def node_089
	-> action#55() 
	return 
endf 

def node_090
	-> action#3D() 
	return 
endf 

def node_091
	-> action#3E() 
	return 
endf 

def node_092
	if self.angle_2d_cw_between(20,180) 
		>> node_091 
	elif self.angle_2d_cw_between(180,340) 
		>> node_090 
	else 
		>> node_089 
	endif 
	return 
endf 

def node_093
	-> action#4F() 
	return 
endf 

def node_094
	-> action#4F(8,0,0,7) 
	return 
endf 

def node_095
	-> action#50(3,0,0,2) 
	return 
endf 

