importactions Barnos as barnos
importlibrary Global as Global

def node_000
	>> Global.node_007 
	if function#36() >> node_001 
	elif function#36(4,2000) >> node_002 
	elif function#36(4,2100) >> node_003 
	elif function#36(4,2500) >> node_004 
	elif function#36(4,3000) >> node_005 
	else >> node_006 
	endif 
	reset 
endf 

def node_001
	>> node_011 
	return 
endf 

def node_002
	if function#B0(3) >> node_009 
	elif function#B0(1) >> node_007 
	elif function#B0(2) >> node_010 
	else >> node_011 
	endif 
	return 
endf 

def node_003
	if function#B0(3) >> node_008 
	elif function#B0(1) >> node_008 
	elif function#B0(2) >> node_008 
	else >> node_011 
	endif 
	return 
endf 

def node_004
	if function#B0(3) >> node_010 
	elif function#B0(1) >> node_010 
	elif function#B0(2) >> node_010 
	else >> node_011 
	endif 
	return 
endf 

def node_005
	if function#B0(3) >> node_008 
	elif function#B0(1) >> node_008 
	elif function#B0(2) >> node_008 
	else >> node_011 
	endif 
	return 
endf 

def node_006
	if function#B0(3) >> node_010 
	elif function#B0(1) >> node_010 
	elif function#B0(2) >> node_010 
	else >> node_011 
	endif 
	return 
endf 

def node_007
	if [RegisterVar0 += 0] >> node_012 
	else >> node_015 
	endif 
	return 
endf 

def node_008
	>> node_013 
	self.targetEnemy(42) 
	if self.distance_2d_to_target().gt(10000) 
		-> action#1A() 
	elif function#B0(2) 
		function#74(315,4000) 
		-> action#1A(6,0,0,500) 
		function#74(225,4000) 
		-> action#1A(6,0,0,500) 
		function#74(135,4000) 
		-> action#1A(6,0,0,500) 
	else 
		function#74(135,4000) 
		-> action#1A(6,0,0,500) 
		function#74(225,4000) 
		-> action#1A(6,0,0,500) 
		function#74(315,4000) 
		-> action#1A(6,0,0,500) 
	endif 
	return 
endf 

def node_009
	if [RegisterVar0 += 0] >> node_012 
	else >> node_015 
	endif 
	return 
endf 

def node_010
	self.targetEnemy(42) 
	if self.distance_2d_to_target().gt(10000) 
		-> action#1B() 
	elif function#B0(2) 
		function#74(0,3000) 
		-> action#1B(6,0,0,500) 
		function#74(90,3000) 
		-> action#1B(6,0,0,500) 
		function#74(180,3000) 
		-> action#1B(6,0,0,500) 
		function#74(270,3000) 
		-> action#1B(6,0,0,500) 
	else 
		function#74(270,3000) 
		-> action#1B(6,0,0,500) 
		function#74(180,3000) 
		-> action#1B(6,0,0,500) 
		function#74(90,3000) 
		-> action#1B(6,0,0,500) 
		function#74(0,3000) 
		-> action#1B(6,0,0,500) 
	endif 
	return 
endf 

def node_011
	random (50) -> action#22() 
	elser (50) -> action#24() 
	endr 
	return 
endf 

def node_012
	function#52() 
	self.targetEnemy(16) 
	-> action#07() 
	-> action#15(6,0,0,800) 
	function#54() 
	[RegisterVar0 |-] 
	return 
endf 

def node_013
	if function#B0(2) 
	else 
		if [RegisterVar2 += 0] 
			function#52(4) 
			self.targetEnemy(16) 
			-> action#07() 
			-> action#15(6,0,0,800) 
			[RegisterVar2 |-] 
		endif 
	endif 
	return 
endf 

def node_014
	self.targetEnemy(42) 
	-> action#1B() 
	>> node_012 
	return 
endf 

def node_015
	function#52(32) 
	self.targetEnemy(16) 
	-> action#13(6,0,0,500) 
	function#54() 
	>> node_016 
	return 
endf 

def node_016
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.distance_3d_to_target().leq(2000) >> node_017 
	else >> node_018 
	endif 
	return 
endf 

def node_017
	if self.target(7) >> Global.node_002 
	else 
		random (10) 
		elser (50) >> Global.node_019 
		elser (20) >> Global.node_026 
		elser (20) >> Global.node_024 
					>> Global.node_006 
					>> Global.node_001 
		endr 
	endif 
	return 
endf 

def node_018
	random (20) >> node_019 
	elser (20) >> Global.node_002 
	elser (60) 
	endr 
	return 
endf 

def node_019
	self.targetEnemy(target_em.random_player_or_cat) 
	if self.distance_2d_to_target().leq(500) 
		>> Global.node_006 
		>> Global.node_001 
	endif 
	return 
endf 

