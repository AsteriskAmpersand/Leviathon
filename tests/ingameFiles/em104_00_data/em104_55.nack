importactions Safi'jiiva as safi'jiiva

def node_000
	self.targetEnemy(50) 
	if function#B0(1) 
		>> node_082 
	else 
		if self.in_map(st.Secluded_Valley).in_area(3) 
			>> node_135 
		else 
			>> node_124 
		endif 
	endif 
	conclude 
endf 

def node_001
	if self.flying() 
		-> safi'jiiva.landing() 
	else 
	endif 
	return 
endf 

def node_002
	if self.flying() 
	else 
		-> safi'jiiva.take_off() 
	endif 
	return 
endf 

def node_003
	if function#110() 
	else 
		-> safi'jiiva.switch_idle_to_combat() 
	endif 
	return 
endf 

def node_004
	if function#110() 
		-> safi'jiiva.switch_idle_normal_c() 
	else 
	endif 
	return 
endf 

def node_005
	if self.flying() 
		-> safi'jiiva.turn_fly() 
	elif function#110() 
		-> safi'jiiva.quick_turn() 
	else 
		-> safi'jiiva.turn() 
	endif 
	return 
endf 

def node_006
	if self.angle_2d_cw_between(10,350) 
		if self.flying() 
			-> safi'jiiva.turn_fly() 
		elif function#110() 
			-> safi'jiiva.quick_turn() 
		else 
			-> safi'jiiva.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_007
	if self.angle_2d_cw_between(30,330) 
		if self.flying() 
			-> safi'jiiva.turn_fly() 
		elif function#110() 
			-> safi'jiiva.quick_turn() 
		else 
			-> safi'jiiva.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_008
	if self.angle_2d_cw_between(45,315) 
		if self.flying() 
			-> safi'jiiva.turn_fly() 
		elif function#110() 
			-> safi'jiiva.quick_turn() 
		else 
			-> safi'jiiva.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_009
	if self.angle_2d_cw_between(60,300) 
		if self.flying() 
			-> safi'jiiva.turn_fly() 
		elif function#110() 
			-> safi'jiiva.quick_turn() 
		else 
			-> safi'jiiva.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_010
	if self.angle_2d_cw_between(90,270) 
		if self.flying() 
			-> safi'jiiva.turn_fly() 
		elif function#110() 
			-> safi'jiiva.quick_turn() 
		else 
			-> safi'jiiva.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_011
	if self.angle_2d_cw_between(120,240) 
		if self.flying() 
			-> safi'jiiva.turn_fly() 
		elif function#110() 
			-> safi'jiiva.quick_turn() 
		else 
			-> safi'jiiva.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_012
	if self.angle_2d_cw_between(150,210) 
		if self.flying() 
			-> safi'jiiva.turn_fly() 
		elif function#110() 
			-> safi'jiiva.quick_turn() 
		else 
			-> safi'jiiva.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_013
	>> node_001 
	>> node_003 
	-> safi'jiiva.dash(5) 
	return 
endf 

def node_014
	>> node_001 
	>> node_003 
	-> safi'jiiva.dash(5,1,0,0,1000) 
	return 
endf 

def node_015
	>> node_001 
	>> node_003 
	-> safi'jiiva.dash(0,1,0,0,1000) 
	return 
endf 

def node_016
	>> node_001 
	>> node_003 
	-> safi'jiiva.dash(0,1,0,0,1500) 
	return 
endf 

def node_017
	>> node_001 
	>> node_003 
	-> safi'jiiva.dash(0,1,0,0,2000) 
	return 
endf 

def node_018
	>> node_001 
	>> node_003 
	-> safi'jiiva.dash(0,1,0,0,2500) 
	return 
endf 

def node_019
	>> node_001 
	>> node_003 
	-> safi'jiiva.dash(0,1,0,0,3000) 
	return 
endf 

def node_020
	>> node_001 
	function#102() 
	>> node_007 
	if self.distance_2d_to_target().gt(1000) 
		>> node_014 
		repeat 
	else 
	endif 
	return 
endf 

def node_021
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> node_014 
		repeat 
	else 
	endif 
	return 
endf 

def node_022
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_turn() 
	return 
endf 

def node_023
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_step() 
	return 
endf 

def node_024
	>> node_001 
	>> node_003 
	-> safi'jiiva.front_step() 
	return 
endf 

def node_025
	>> node_001 
	>> node_003 
	-> safi'jiiva.side_step() 
	return 
endf 

def node_026
	if self.flying() 
		-> safi'jiiva.idle_wait_fly() 
	else 
		-> safi'jiiva.idle_wait() 
	endif 
	return 
endf 

def node_027
	>> node_001 
	>> node_003 
	-> safi'jiiva.chance_short() 
	return 
endf 

def node_028
	>> node_001 
	>> node_003 
	-> safi'jiiva.chance_long() 
	return 
endf 

def node_029
	>> node_001 
	>> node_003 
	-> safi'jiiva.threat_short() 
	return 
endf 

def node_030
	>> node_001 
	>> node_003 
	-> safi'jiiva.discover() 
	return 
endf 

def node_031
	>> node_001 
	>> node_003 
	-> safi'jiiva.refresh() 
	return 
endf 

def node_032
	>> node_001 
	>> node_003 
	-> safi'jiiva.tired() 
	return 
endf 

def node_033
	>> node_001 
	>> node_003 
	[RegisterVar4 ++] 
	[RegisterVar12 ++] 
	[RegisterVar13 ++] 
	[RegisterVar14 ++] 
	[RegisterVar15 ++] 
	[RegisterVar16 ++] 
	[RegisterVar17 ++] 
	[RegisterVar18 ++] 
	-> safi'jiiva.energy_charge_combat() 
	return 
endf 

def node_034
	>> node_001 
	>> node_003 
	[RegisterVar4 ++] 
	[RegisterVar12 ++] 
	[RegisterVar13 ++] 
	[RegisterVar14 ++] 
	[RegisterVar15 ++] 
	[RegisterVar16 ++] 
	[RegisterVar17 ++] 
	[RegisterVar18 ++] 
	-> safi'jiiva.energy_charge_long() 
	return 
endf 

def node_035
	>> node_001 
	>> node_003 
	-> safi'jiiva.recover_parts_head() 
	return 
endf 

def node_036
	>> node_001 
	>> node_003 
	-> safi'jiiva.recover_parts_tail() 
	return 
endf 

def node_037
	>> node_001 
	>> node_003 
	-> safi'jiiva.search() 
	return 
endf 

def node_038
	>> node_001 
	>> node_003 
	-> safi'jiiva.search_lost() 
	return 
endf 

def node_039
	>> node_001 
	>> node_003 
	-> safi'jiiva.search_angry() 
	return 
endf 

def node_040
	>> node_001 
	>> node_003 
	-> safi'jiiva.neck_sweep() 
	return 
endf 

def node_041
	if self.angle_2d_cw_between(45,315) 
		>> node_040 
	else 
	endif 
	return 
endf 

def node_042
	if self.angle_2d_cw_between(90,270) 
		>> node_040 
	else 
	endif 
	return 
endf 

def node_043
	>> node_001 
	>> node_003 
	-> safi'jiiva.headbutt() 
	return 
endf 

def node_044
	>> node_001 
	>> node_003 
	self.targetEnemy(9) @ parameter2:500 
	-> safi'jiiva.headbutt() 
	-> safi'jiiva.back_turn() 
	-> safi'jiiva.explosive_breath() 
	>> node_144 
	return 
endf 

def node_045
	>> node_001 
	>> node_003 
	-> safi'jiiva.short_roar() 
	return 
endf 

def node_046
	>> node_001 
	>> node_003 
	-> safi'jiiva.bite() 
	return 
endf 

def node_047
	>> node_001 
	>> node_003 
	-> safi'jiiva.bite() @ comboSetting:1 
	-> safi'jiiva.back_turn() 
	-> safi'jiiva.straight_breath() 
	return 
endf 

def node_048
	>> node_001 
	>> node_003 
	-> safi'jiiva.breath_front_to_side_l() 
	return 
endf 

def node_049
	>> node_001 
	>> node_003 
	-> safi'jiiva.breath_front_to_side_r() 
	return 
endf 

def node_050
	if self.angle_2d_cw_between(0,180) 
		>> node_048 
	else 
		>> node_049 
	endif 
	*&
	return 
endf 

def node_051
	>> node_001 
	>> node_003 
	-> safi'jiiva.explosive_breath() 
	return 
endf 

def node_052
	>> node_001 
	>> node_003 
	-> safi'jiiva.bite() @ comboSetting:1 
	-> safi'jiiva.breath_front_to_side_l() 
	return 
endf 

def node_053
	>> node_001 
	>> node_003 
	-> safi'jiiva.bite() @ comboSetting:1 
	-> safi'jiiva.breath_front_to_side_r() 
	return 
endf 

def node_054
	if self.angle_2d_cw_between(0,180) 
		>> node_052 
	else 
		>> node_053 
	endif 
	*&
	return 
endf 

def node_055
	>> node_001 
	>> node_003 
	-> safi'jiiva.quick_back_fist_l() 
	return 
endf 

def node_056
	>> node_001 
	>> node_003 
	-> safi'jiiva.quick_back_fist_r() 
	return 
endf 

def node_057
	>> node_001 
	>> node_003 
	self.targetEnemy(9) @ parameter2:500 
	-> safi'jiiva.quick_back_fist_l() 
	-> safi'jiiva.back_turn() 
	-> safi'jiiva.breath_front_to_side_l() 
	>> node_144 
	return 
endf 

def node_058
	>> node_001 
	>> node_003 
	self.targetEnemy(9) @ parameter2:500 
	-> safi'jiiva.quick_back_fist_r() @ comboSetting:1 
	-> safi'jiiva.back_turn() 
	-> safi'jiiva.breath_front_to_side_r() 
	>> node_144 
	return 
endf 

def node_059
	>> node_001 
	>> node_003 
	-> safi'jiiva.side_scratch_l() 
	return 
endf 

def node_060
	>> node_001 
	>> node_003 
	-> safi'jiiva.side_scratch_r() 
	return 
endf 

def node_061
	>> node_001 
	>> node_003 
	self.targetEnemy(11) @ parameter2:500 
	-> safi'jiiva.side_scratch_l() @ comboSetting:1 
	-> safi'jiiva.neck_sweep() 
	>> node_144 
	return 
endf 

def node_062
	>> node_001 
	>> node_003 
	self.targetEnemy(12) @ parameter2:500 
	-> safi'jiiva.side_scratch_r() @ comboSetting:1 
	-> safi'jiiva.neck_sweep() 
	>> node_144 
	return 
endf 

def node_063
	>> node_001 
	>> node_003 
	-> safi'jiiva.side_scratch_l() @ comboSetting:1 
	-> safi'jiiva.front_leg_slap_high_l() 
	return 
endf 

def node_064
	>> node_001 
	>> node_003 
	-> safi'jiiva.side_scratch_r() @ comboSetting:1 
	-> safi'jiiva.front_leg_slap_high_r() 
	return 
endf 

def node_065
	>> node_001 
	>> node_003 
	-> safi'jiiva.side_scratch_l() @ comboSetting:1 
	-> safi'jiiva.front_leg_slap_high_after_recover_l() 
	return 
endf 

def node_066
	>> node_001 
	>> node_003 
	-> safi'jiiva.side_scratch_r() @ comboSetting:1 
	-> safi'jiiva.front_leg_slap_high_after_recover_r() 
	return 
endf 

def node_067
	>> node_001 
	>> node_003 
	self.targetEnemy(9) @ parameter2:500 
	-> safi'jiiva.side_scratch_l() @ comboSetting:1 
	-> safi'jiiva.back_turn() 
	-> safi'jiiva.breath_front_to_side_l() 
	>> node_144 
	return 
endf 

def node_068
	>> node_001 
	>> node_003 
	self.targetEnemy(9) @ parameter2:500 
	-> safi'jiiva.side_scratch_r() @ comboSetting:1 
	-> safi'jiiva.back_turn() 
	-> safi'jiiva.breath_front_to_side_r() 
	>> node_144 
	return 
endf 

def node_069
	>> node_001 
	>> node_003 
	-> safi'jiiva.front_leg_slap_l() 
	return 
endf 

def node_070
	>> node_001 
	>> node_003 
	-> safi'jiiva.front_leg_slap_r() 
	return 
endf 

def node_071
	if self.angle_2d_cw_between(0,180) 
		>> node_069 
	else 
		>> node_070 
	endif 
	*&
	return 
endf 

def node_072
	>> node_001 
	>> node_003 
	-> safi'jiiva.front_leg_slap_high_l() 
	return 
endf 

def node_073
	>> node_001 
	>> node_003 
	-> safi'jiiva.front_leg_slap_high_r() 
	return 
endf 

def node_074
	>> node_001 
	>> node_003 
	-> safi'jiiva.front_leg_slap_high_after_recover_l() 
	return 
endf 

def node_075
	>> node_001 
	>> node_003 
	-> safi'jiiva.front_leg_slap_high_after_recover_r() 
	return 
endf 

def node_076
	>> node_001 
	>> node_003 
	-> safi'jiiva.quick_stomp_l() 
	return 
endf 

def node_077
	>> node_001 
	>> node_003 
	-> safi'jiiva.quick_stomp_r() 
	return 
endf 

def node_078
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_kick_l() 
	return 
endf 

def node_079
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_kick_r() 
	return 
endf 

def node_080
	>> node_001 
	>> node_003 
	self.targetEnemy(10) @ parameter2:500 
	-> safi'jiiva.back_kick_l() @ comboSetting:1 
	-> safi'jiiva.neck_sweep() 
	>> node_144 
	return 
endf 

def node_081
	>> node_001 
	>> node_003 
	self.targetEnemy(10) @ parameter2:500 
	-> safi'jiiva.back_kick_r() @ comboSetting:1 
	-> safi'jiiva.neck_sweep() 
	>> node_144 
	return 
endf 

def node_082
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_kick_l() @ comboSetting:1 
	-> safi'jiiva.back_leg_stomp_high_l() 
	return 
endf 

def node_083
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_kick_r() @ comboSetting:1 
	-> safi'jiiva.back_leg_stomp_high_r() 
	return 
endf 

def node_084
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_kick_l() @ comboSetting:1 
	-> safi'jiiva.back_leg_stomp_high_after_recover_l() 
	return 
endf 

def node_085
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_kick_r() @ comboSetting:1 
	-> safi'jiiva.back_leg_stomp_high_after_recover_r() 
	return 
endf 

def node_086
	>> node_001 
	>> node_003 
	-> safi'jiiva.breath_side_to_back_l() 
	return 
endf 

def node_087
	>> node_001 
	>> node_003 
	-> safi'jiiva.breath_side_to_back_r() 
	return 
endf 

def node_088
	if self.angle_2d_cw_between(0,180) 
		>> node_086 
	else 
		>> node_087 
	endif 
	*&
	return 
endf 

def node_089
	>> node_001 
	>> node_003 
	self.targetEnemy(11) @ parameter2:500 
	-> safi'jiiva.side_step() @ comboSetting:1 
	-> safi'jiiva.breath_side_to_back_l() 
	>> node_144 
	return 
endf 

def node_090
	>> node_001 
	>> node_003 
	self.targetEnemy(12) @ parameter2:500 
	-> safi'jiiva.side_step() @ comboSetting:1 
	-> safi'jiiva.breath_side_to_back_r() 
	>> node_144 
	return 
endf 

def node_091
	if self.angle_2d_cw_between(0,180) 
		>> node_089 
	else 
		>> node_090 
	endif 
	*&
	return 
endf 

def node_092
	>> node_001 
	>> node_003 
	self.targetEnemy(11) @ parameter2:500 
	-> safi'jiiva.back_kick_l() @ comboSetting:1 
	-> safi'jiiva.side_step() @ comboSetting:1 
	-> safi'jiiva.breath_side_to_back_l() 
	>> node_144 
	return 
endf 

def node_093
	>> node_001 
	>> node_003 
	self.targetEnemy(12) @ parameter2:500 
	-> safi'jiiva.back_kick_r() @ comboSetting:1 
	-> safi'jiiva.side_step() @ comboSetting:1 
	-> safi'jiiva.breath_side_to_back_r() 
	>> node_144 
	return 
endf 

def node_094
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_leg_stomp_high_l() 
	return 
endf 

def node_095
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_leg_stomp_high_r() 
	return 
endf 

def node_096
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_leg_stomp_high_after_recover_l() 
	return 
endf 

def node_097
	>> node_001 
	>> node_003 
	-> safi'jiiva.back_leg_stomp_high_after_recover_r() 
	return 
endf 

def node_098
	>> node_001 
	>> node_003 
	-> safi'jiiva.tail_tap() 
	return 
endf 

def node_099
	>> node_001 
	>> node_003 
	-> safi'jiiva.tail_tap() 
	-> safi'jiiva.front_step() @ comboSetting:1 
	-> safi'jiiva.straight_breath() 
	return 
endf 

def node_100
	>> node_001 
	>> node_003 
	-> safi'jiiva.tail_swing_twice() 
	return 
endf 

def node_101
	>> node_001 
	>> node_003 
	-> safi'jiiva.tail_swing_twice() @ comboSetting:1 
	-> safi'jiiva.tail_slap_2() 
	return 
endf 

def node_102
	>> node_001 
	>> node_003 
	-> safi'jiiva.tail_slap_2() 
	return 
endf 

def node_103
	>> node_001 
	>> node_003 
	-> safi'jiiva.tail_sweep_2_l() 
	return 
endf 

def node_104
	>> node_001 
	>> node_003 
	-> safi'jiiva.tail_sweep_2_r() 
	return 
endf 

def node_105
	if self.angle_2d_cw_between(0,180) 
		>> node_103 
	else 
		>> node_104 
	endif 
	*&
	return 
endf 

def node_106
	>> node_001 
	>> node_003 
	-> safi'jiiva.tail_swing_twice() @ comboSetting:1 
	-> safi'jiiva.tail_sweep_2_l() 
	return 
endf 

def node_107
	>> node_001 
	>> node_003 
	-> safi'jiiva.tail_swing_twice() @ comboSetting:1 
	-> safi'jiiva.tail_sweep_2_r() 
	return 
endf 

def node_108
	if self.angle_2d_cw_between(0,180) 
		>> node_106 
	else 
		>> node_107 
	endif 
	*&
	return 
endf 

def node_109
	>> node_001 
	>> node_003 
	-> safi'jiiva.quick_body_press() 
	return 
endf 

def node_110
	>> node_001 
	>> node_003 
	-> safi'jiiva.jab_breath() 
	return 
endf 

def node_111
	>> node_001 
	>> node_003 
	-> safi'jiiva.side_step() @ comboSetting:1 
	-> safi'jiiva.jab_breath() 
	return 
endf 

def node_112
	>> node_001 
	>> node_003 
	>> node_011 
	-> safi'jiiva.straight_breath() 
	return 
endf 

def node_113
	>> node_001 
	>> node_003 
	-> safi'jiiva.side_step() @ comboSetting:1 
	-> safi'jiiva.straight_breath() 
	return 
endf 

def node_114
	>> node_001 
	>> node_003 
	>> node_009 
	if function#120() 
		self.targetEnemy(21) @ parameter2:1500 
	else 
	endif 
	-> safi'jiiva.search_breath_1() 
	return 
endf 

def node_115
	>> node_001 
	>> node_003 
	>> node_012 
	if self.angle_2d_ccw_between(45,0) 
		if self.distance_3d_to_target().leq(1800) 
			-> safi'jiiva.short_sweep_breath_2() 
		else 
			-> safi'jiiva.short_sweep_breath() 
		endif 
	else 
		-> safi'jiiva.short_sweep_breath() 
	endif 
	return 
endf 

def node_116
	>> node_001 
	>> node_003 
	>> node_009 
	-> safi'jiiva.continue_sweep_breath_l() 
	return 
endf 

def node_117
	>> node_001 
	>> node_003 
	>> node_009 
	-> safi'jiiva.continue_sweep_breath_r() 
	return 
endf 

def node_118
	>> node_001 
	>> node_003 
	>> node_009 
	if self.angle_2d_cw_between(0,180) 
		-> safi'jiiva.continue_sweep_breath_l() 
	else 
		-> safi'jiiva.continue_sweep_breath_r() 
	endif 
	return 
endf 

def node_119
	>> node_001 
	>> node_003 
	-> safi'jiiva.continue_bite() 
	return 
endf 

def node_120
	>> node_001 
	>> node_003 
	-> safi'jiiva.continue_bite_2() 
	return 
endf 

def node_121
	>> node_001 
	>> node_003 
	>> node_006 
	-> safi'jiiva.breath_walk() 
	return 
endf 

def node_122
	>> node_001 
	>> node_003 
	-> safi'jiiva.rush_2() 
	return 
endf 

def node_123
	>> node_001 
	>> node_003 
	if function#111() 
		-> safi'jiiva.rush_2() @ comboSetting:1 
		-> safi'jiiva.side_step() @ comboSetting:1 
		-> safi'jiiva.rush_2() 
	else 
		-> safi'jiiva.rush_2() @ comboSetting:1 
		-> safi'jiiva.side_step() 
	endif 
	return 
endf 

def node_124
	>> node_001 
	>> node_003 
	>> node_006 
	-> safi'jiiva.catch_attack_adjust() 
	if self.target.pinned() 
		>> node_125 
	else 
		-> safi'jiiva.catch_attack_miss() 
	endif 
	return 
endf 

def node_125
	if function#101() 
		function#113() 
	else 
		function#102() 
	endif 
	-> safi'jiiva.catch_attack_throw() 
	>> node_144 
	>> node_126 
	return 
endf 

def node_126
	if function#117() 
		>> node_114 
	else 
	endif 
	return 
endf 

def node_127
	>> node_001 
	>> node_003 
	-> safi'jiiva.reset_attack() 
	return 
endf 

def node_128
	>> node_001 
	>> node_003 
	-> safi'jiiva.berserk_start() 
	return 
endf 

def node_129
	>> node_001 
	>> node_003 
	-> safi'jiiva.berserk_end() 
	return 
endf 

def node_130
	>> node_001 
	>> node_003 
	-> safi'jiiva.short_rush_drift() 
	return 
endf 

def node_131
	>> node_001 
	>> node_003 
	-> safi'jiiva.dash(1,0,0,2500) 
	-> safi'jiiva.short_rush_drift() 
	return 
endf 

def node_132
	>> node_001 
	>> node_003 
	-> safi'jiiva.breath_and_tail_sweep_l() 
	return 
endf 

def node_133
	>> node_001 
	>> node_003 
	-> safi'jiiva.breath_and_tail_sweep_r() 
	return 
endf 

def node_134
	if self.angle_2d_cw_between(0,180) 
		>> node_132 
	else 
		>> node_133 
	endif 
	*&
	return 
endf 

def node_135
	>> node_001 
	>> node_003 
	function#102() 
	-> safi'jiiva.fall_stone_breath() 
	>> node_144 
	return 
endf 

def node_136
	>> node_001 
	>> node_003 
	-> safi'jiiva.ride_rampage() 
	return 
endf 

def node_137
	>> node_001 
	>> node_003 
	-> safi'jiiva.damage_ride_chance() 
	return 
endf 

def node_138
	function#102() 
	>> node_002 
	-> safi'jiiva.special_breath() 
	>> node_144 
	return 
endf 

def node_139
endf 

def node_140
	[$U ++] 
	>> node_225 
	>> node_144 
	if self.target(4) 
		>> node_143 
	elif self.target(3) 
		>> node_143 
	elif self.flying() 
		>> node_149 
	else 
		>> node_146 
	endif 
	return 
endf 

def node_141
	>> node_144 
	if self.flying() 
		>> node_027 
	else 
		>> node_241 
		>> node_146 
	endif 
	return 
endf 

def node_142
	[$U ++] 
	self.targetEnemy(21) @ parameter2:1500 
	if self.target(4) 
		>> node_143 
	elif self.target(3) 
		>> node_143 
	elif self.flying() 
		>> node_149 
	else 
		>> node_146 
	endif 
	return 
endf 

def node_143
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> node_013 
		repeat 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_029 
	endif 
	return 
endf 

def node_144
	if function#5D() 
		function#5E() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_145 
	else 
		if function#120() 
			self.targetEnemy(21) @ parameter2:1500 
		elif function#117() 
			function#10E() 
		else 
			self.targetEnemy(50) 
		endif 
	endif 
	if self.target(58) 
		self.targetEnemy(21) @ parameter2:1500 
	else 
	endif 
	return 
endf 

def node_145
	if self.angle_2d_cw_between(270,90) 
		>> node_037 
	else 
		>> node_038 
	endif 
	return 
endf 

def node_146
	if function#B0(1) 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			>> node_151 
		else 
			if function#10F() 
				>> node_205 
			else 
				>> node_151 
			endif 
		endif 
	else 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			>> node_147 
			>> node_151 
		else 
			>> node_148 
			>> node_231 
			if self.enraged() 
				if function#117() 
					>> node_205 
				else 
					>> node_162 
				endif 
			else 
				>> node_151 
			endif 
		endif 
	endif 
	return 
endf 

def node_147
	if self.quest_id(51605) 
		if function#119(3,15) 
			if [RegisterVar0 -= 1] 
				function#114() 
				>> node_030 
				conclude 
			else 
			endif 
		elif function#119(3,120) 
			function#11A() 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_148
	if self.quest_id(51605) 
		if function#119(3,15) 
			function#114() 
			>> node_030 
			conclude 
		elif function#119(3,120) 
			function#11A() 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_149
	>> node_150 
	>> node_001 
	>> node_027 
	return 
endf 

def node_150
	if function#B0(1) 
	elif self.in_map(st.Secluded_Valley).in_area(1) 
	elif [RegisterVar10 -= 3] 
		>> node_001 
		[RegisterVar10 ++] 
		[RegisterVar10 |-] 
		if [RegisterVar19 -= 1] 
			[RegisterVar0 ++] 
		elif function#111() 
			[RegisterVar0 ++] 
			[RegisterVar3 ++] 
			>> node_129 
		else 
		endif 
	elif [RegisterVar10 -= 2] 
		[RegisterVar10 |-] 
		>> node_026 
		>> node_138 
		[RegisterVar3 ++] 
		[RegisterVar10 ++] 
		[RegisterVar10 |-] 
		if [RegisterVar19 -= 1] 
			[RegisterVar0 ++] 
		elif function#111() 
			[RegisterVar0 ++] 
			>> node_129 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_151
	[RegisterVar5 |-] 
	>> node_152 
	>> node_155 
	>> node_156 
	>> node_166 
	>> node_172 
	[RegisterVar11 ++] 
	if [RegisterVar1 += 0] 
		if [RegisterVar2 += 0] 
			>> node_192 
			>> node_160 
			return 
		else 
		endif 
	else 
	endif 
	[RegisterVar8 ++] 
	>> node_161 
	>> node_178 
	if [RegisterVar3 -= 1] 
		[RegisterVar3 ++] 
		>> node_179 
	else 
		>> node_180 
	endif 
	if function#B0(1) 
		>> node_192 
		>> node_027 
	else 
		>> node_158 
	endif 
	>> node_160 
	return 
endf 

def node_152
	if function#101() 
		[RegisterVar6 ++] 
		[RegisterVar7 ++] 
	else 
		if [RegisterVar6 -= 1] 
			[RegisterVar7 |-] 
		else 
			[RegisterVar7 |-] 
			[RegisterVar7 |-] 
			[RegisterVar7 |-] 
		endif 
	endif 
	if self.in_map(st.Secluded_Valley).in_area(1) 
		if [RegisterVar7 -= 15] 
			>> node_153 
		else 
		endif 
	elif self.in_map(st.Secluded_Valley).in_area(2) 
		if [RegisterVar7 -= 30] 
			>> node_153 
		else 
		endif 
	elif self.in_map(st.Secluded_Valley).in_area(3) 
		if [RegisterVar7 -= 30] 
			>> node_153 
		else 
		endif 
	else 
		[RegisterVar7 ++] 
	endif 
	return 
endf 

def node_153
	function#102() 
	if function#101(1) 
		>> node_154 
	elif function#101(2) 
		>> node_130 
	else 
	endif 
	[RegisterVar7 ++] 
	>> node_144 
	return 
endf 

def node_154
	if self.angle_2d_cw_between(0,60) 
		>> node_014 
	elif self.angle_2d_cw_between(60,135) 
		self.targetEnemy(12) @ parameter2:1000 
		>> node_023 
	elif self.angle_2d_cw_between(135,225) 
		self.targetEnemy(9) @ parameter2:1000 
		>> node_023 
	elif self.angle_2d_cw_between(225,300) 
		self.targetEnemy(11) @ parameter2:1000 
		>> node_023 
	else 
		>> node_014 
	endif 
	return 
endf 

def node_155
	[RegisterVar4 |-] 
	if self.in_map(st.Secluded_Valley).in_area(1) 
		if [RegisterVar4 -= 10] 
			[RegisterVar4 ++] 
			if self.distance_2d_to_target().leq(1500) 
				>> node_040 
			else 
				>> node_007 
			endif 
		else 
			*&
		endif 
	else 
		if [RegisterVar4 -= 4] 
			[RegisterVar4 ++] 
			if self.distance_2d_to_target().leq(1500) 
				>> node_040 
			elif self.distance_2d_to_target().leq(3000) 
				random (0) 
				elser (30) >> node_024 
				elser (40) >> node_123 
				elser (30) >> node_071 
				elser (0) 
				endr 
			else 
				random (0) 
				elser (20) >> node_014 
				elser (50) >> node_123 
				elser (30) >> node_019 
							>> node_071 
				elser (0) 
				endr 
			endif 
		else 
		endif 
	endif 
	return 
endf 

def node_156
	if [RegisterVar11 -= 1] 
		[RegisterVar11 ++] 
		>> node_029 
	elif function#B0(1) 
	else 
		if self.target(58) 
			self.targetEnemy(67) @ parameter2:1 
		else 
		endif 
		if self.distance_2d_to_target().leq(1300) 
		elif self.distance_2d_to_target().leq(3000) 
			if self.target.helpless_0() 
			else 
				random (0) 
				elser (75) >> node_110 
				elser (25) >> node_112 
				elser (0) 
							// -Illegal Context was commented out 'endif '
				endr 
			else 
			endif 
		endif 
		return 
		// -Illegal Context was commented out 'endf '
	endif // -Added by the Decompiler to ammend syntactically malformed thk
endf // -Added by the Decompiler to ammend syntactically malformed thk

def node_157
	self.targetEnemy(67) 
	if self.target.helpless_0() 
		>> node_192 
		return 
	else 
	endif 
	self.targetEnemy(67) @ parameter2:1 
	if self.target.helpless_0() 
		>> node_192 
		return 
	else 
	endif 
	self.targetEnemy(67) @ parameter2:2 
	if self.target.helpless_0() 
		>> node_192 
		return 
	else 
	endif 
	self.targetEnemy(67) @ parameter2:3 
	if self.target.helpless_0() 
		>> node_192 
		return 
	else 
	endif 
	return 
endf 

def node_158
	self.targetEnemy(67) 
	if self.target.helpless_0() 
		>> node_192 
		return 
	else 
	endif 
	self.targetEnemy(67) @ parameter2:1 
	if self.target.helpless_0() 
		>> node_192 
		return 
	else 
	endif 
	self.targetEnemy(67) @ parameter2:2 
	if self.target.helpless_0() 
		>> node_192 
		return 
	else 
	endif 
	self.targetEnemy(67) @ parameter2:3 
	if self.target.helpless_0() 
		>> node_192 
		return 
	else 
	endif 
	random (50) >> node_159 
	elser (50) 
	elser (0) 
	endr 
	return 
endf 

def node_159
	self.targetEnemy(50) 
	if self.in_map(st.Secluded_Valley).in_area(1) 
		>> node_202 
	else 
		if [RegisterVar4 -= 4] 
			>> node_202 
		else 
		endif 
	endif 
	return 
endf 

def node_160
	if [RegisterVar5 -= 2] 
		[RegisterVar5 ++] 
		[RegisterVar6 |-] 
		[RegisterVar7 ++] 
	else 
		[RegisterVar5 ++] 
	endif 
	return 
endf 

def node_161
	if function#112() 
	else 
		[RegisterVar13 ++] 
	endif 
	if function#112(11) 
	else 
		[RegisterVar14 ++] 
	endif 
	if function#112(5) 
	else 
		[RegisterVar15 ++] 
	endif 
	if function#112(6) 
	else 
		[RegisterVar16 ++] 
	endif 
	if function#112(7) 
	else 
		[RegisterVar17 ++] 
	endif 
	if function#112(8) 
	else 
		[RegisterVar18 ++] 
	endif 
	return 
endf 

def node_162
	>> node_164 
	>> node_199 
	>> node_166 
	>> node_172 
	[RegisterVar11 ++] 
	if [RegisterVar1 += 0] 
		if [RegisterVar2 += 0] 
			>> node_215 
			return 
		else 
		endif 
	else 
	endif 
	[RegisterVar8 ++] 
	>> node_161 
	>> node_178 
	if [RegisterVar3 -= 1] 
		[RegisterVar3 ++] 
		>> node_179 
	else 
		>> node_180 
	endif 
	>> node_163 
	return 
endf 

def node_163
	self.targetEnemy(67) 
	if self.target.helpless_0() 
		>> node_215 
		return 
	else 
	endif 
	self.targetEnemy(67) @ parameter2:1 
	if self.target.helpless_0() 
		>> node_215 
		return 
	else 
	endif 
	self.targetEnemy(67) @ parameter2:2 
	if self.target.helpless_0() 
		>> node_215 
		return 
	else 
	endif 
	self.targetEnemy(67) @ parameter2:3 
	if self.target.helpless_0() 
		>> node_215 
		return 
	else 
	endif 
	self.targetEnemy(67) 
	>> node_215 
	return 
endf 

def node_164
	if self.target_on_part(0) 
	elif self.target_on_part(1) 
	elif self.target_on_part(2) 
	else 
		if [RegisterVar7 -= 4] 
			[RegisterVar7 ++] 
			>> node_165 
		else 
			[RegisterVar7 |-] 
		endif 
	endif 
	return 
endf 

def node_165
	if self.enraged() 
		if function#B0(1) 
		elif self.in_map(st.Secluded_Valley).in_area(1) 
		elif [RegisterVar10 -= 2] 
			function#10C() 
			>> node_030 => reset 
		elif [RegisterVar19 -= 1] 
			function#10C() 
			>> node_030 => reset 
		else 
			[RegisterVar10 |-] 
			>> node_138 
			[RegisterVar3 ++] 
			[RegisterVar10 ++] 
			[RegisterVar10 |-] 
			if function#111() 
				[RegisterVar0 ++] 
				>> node_129 
			else 
			endif 
			function#10C() 
			>> node_030 => reset 
		endif 
	else 
	endif 
	return 
endf 

def node_166
	[RegisterVar1 ++] 
	>> node_167 
	if [RegisterVar1 += 0] 
		>> node_168 
	endif 
	if [RegisterVar1 += 0] 
		>> node_169 
	endif 
	if [RegisterVar1 += 0] 
		>> node_170 
	endif 
	return 
endf 

def node_167
	[RegisterVar11 ++] 
	if function#103(0,4) 
		[RegisterVar1 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,4) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,4) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,4) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,4) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,4) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_168
	[RegisterVar11 ++] 
	if function#103(0,3) 
		[RegisterVar1 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,3) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,3) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,3) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,3) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,3) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_169
	[RegisterVar11 ++] 
	if function#103(0,2) 
		[RegisterVar1 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,2) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,2) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,2) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,2) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,2) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_170
	[RegisterVar11 ++] 
	if function#103(0,1) 
		[RegisterVar1 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,1) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,1) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,1) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,1) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,1) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_171
	if [RegisterVar11 += 0] 
		[RegisterVar1 ++] 
	elif [RegisterVar11 += 1] 
		random (50) 
					[RegisterVar1 ++] 
		elser (50) 
		endr 
	elif [RegisterVar11 += 2] 
		random (33) 
					[RegisterVar1 ++] 
		elser (67) 
		endr 
	elif [RegisterVar11 += 3] 
		random (25) 
					[RegisterVar1 ++] 
		elser (75) 
		endr 
	elif [RegisterVar11 += 4] 
		random (20) 
					[RegisterVar1 ++] 
		elser (80) 
		endr 
	elif [RegisterVar11 += 5] 
		random (17) 
					[RegisterVar1 ++] 
		elser (83) 
		endr 
	else 
	endif 
	return 
endf 

def node_172
	[RegisterVar2 ++] 
	>> node_173 
	if [RegisterVar2 += 0] 
		>> node_174 
	endif 
	if [RegisterVar2 += 0] 
		>> node_175 
	endif 
	if [RegisterVar2 += 0] 
		>> node_176 
	endif 
	return 
endf 

def node_173
	[RegisterVar11 ++] 
	if function#103(0,2) 
	elif function#103(0,1) 
		[RegisterVar2 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,2) 
	elif function#103(1,1) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,2) 
	elif function#103(2,1) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,2) 
	elif function#103(3,1) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,2) 
	elif function#103(4,1) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,2) 
	elif function#103(5,1) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_174
	[RegisterVar11 ++] 
	if function#103(0,3) 
	elif function#103(0,2) 
		[RegisterVar2 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,3) 
	elif function#103(1,2) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,3) 
	elif function#103(2,2) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,3) 
	elif function#103(3,2) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,3) 
	elif function#103(4,2) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,3) 
	elif function#103(5,2) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_175
	[RegisterVar11 ++] 
	if function#103(0,4) 
	elif function#103(0,3) 
		[RegisterVar2 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,4) 
	elif function#103(1,3) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,4) 
	elif function#103(2,3) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,4) 
	elif function#103(3,3) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,4) 
	elif function#103(4,3) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,4) 
	elif function#103(5,3) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_176
	[RegisterVar11 ++] 
	if function#103(0,4) 
		[RegisterVar2 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,4) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,4) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,4) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,4) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,4) 
		>> node_177 
		if [RegisterVar2 += 0] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar2 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_177
	if [RegisterVar11 += 0] 
		[RegisterVar2 ++] 
	elif [RegisterVar11 += 1] 
		random (50) 
					[RegisterVar2 ++] 
		elser (50) 
		endr 
	elif [RegisterVar11 += 2] 
		random (33) 
					[RegisterVar2 ++] 
		elser (67) 
		endr 
	elif [RegisterVar11 += 3] 
		random (25) 
					[RegisterVar2 ++] 
		elser (75) 
		endr 
	elif [RegisterVar11 += 4] 
		random (20) 
					[RegisterVar2 ++] 
		elser (80) 
		endr 
	elif [RegisterVar11 += 5] 
		random (17) 
					[RegisterVar2 ++] 
		elser (83) 
		endr 
	else 
	endif 
	return 
endf 

def node_178
	[RegisterVar3 ++] 
	if [RegisterVar1 += 1] 
		if [RegisterVar2 += 1] 
			[RegisterVar3 |-] 
		else 
		endif 
	elif [RegisterVar1 += 2] 
		if [RegisterVar2 += 2] 
			[RegisterVar3 |-] 
		else 
		endif 
	elif [RegisterVar1 += 3] 
		if [RegisterVar2 += 3] 
			[RegisterVar3 |-] 
		else 
		endif 
	elif [RegisterVar1 += 4] 
		if [RegisterVar2 += 4] 
			[RegisterVar3 |-] 
		else 
		endif 
	elif [RegisterVar1 += 5] 
		if [RegisterVar2 += 5] 
			[RegisterVar3 |-] 
		else 
		endif 
	elif [RegisterVar1 += 6] 
		if [RegisterVar2 += 6] 
			[RegisterVar3 |-] 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_179
	if function#111() 
		random (0) 
		elser (50) >> node_181 
					>> node_185 
		elser (50) >> node_185 
		elser (0) 
		endr 
	else 
		random (0) 
		elser (25) >> node_181 
					>> node_182 
		elser (15) >> node_182 
		elser (40) >> node_181 
					>> node_185 
		elser (20) >> node_185 
		elser (0) 
		endr 
	endif 
	return 
endf 

def node_180
	if function#111() 
		random (0) 
		elser (50) >> node_183 
					>> node_185 
		elser (50) >> node_184 
					>> node_185 
		elser (0) 
		endr 
	else 
		random (0) 
		elser (25) >> node_183 
					>> node_181 
		elser (15) >> node_183 
					>> node_182 
		elser (40) >> node_183 
					>> node_181 
					>> node_185 
		elser (20) >> node_183 
					>> node_185 
		elser (0) 
		endr 
	endif 
	return 
endf 

def node_181
	if [RegisterVar1 += 1] 
		>> node_043 
	elif [RegisterVar1 += 2] 
		>> node_055 
	elif [RegisterVar1 += 3] 
		>> node_056 
	elif [RegisterVar1 += 4] 
		>> node_076 
	elif [RegisterVar1 += 5] 
		>> node_077 
	elif [RegisterVar1 += 6] 
		>> node_098 
	else 
	endif 
	return 
endf 

def node_182
	if [RegisterVar1 += 1] 
		>> node_046 
	elif [RegisterVar1 += 2] 
		>> node_059 
	elif [RegisterVar1 += 3] 
		>> node_060 
	elif [RegisterVar1 += 4] 
		>> node_078 
	elif [RegisterVar1 += 5] 
		>> node_079 
	elif [RegisterVar1 += 6] 
		>> node_100 
	else 
	endif 
	return 
endf 

def node_183
	if [RegisterVar2 += 1] 
		>> node_043 
	elif [RegisterVar2 += 2] 
		>> node_055 
	elif [RegisterVar2 += 3] 
		>> node_056 
	elif [RegisterVar2 += 4] 
		>> node_076 
	elif [RegisterVar2 += 5] 
		>> node_077 
	elif [RegisterVar2 += 6] 
		>> node_098 
	else 
	endif 
	return 
endf 

def node_184
	if [RegisterVar2 += 1] 
		>> node_046 
	elif [RegisterVar2 += 2] 
		>> node_059 
	elif [RegisterVar2 += 3] 
		>> node_060 
	elif [RegisterVar2 += 4] 
		>> node_078 
	elif [RegisterVar2 += 5] 
		>> node_079 
	elif [RegisterVar2 += 6] 
		>> node_100 
	else 
	endif 
	return 
endf 

def node_185
	if [RegisterVar1 += 1] 
		if function#112() 
			>> node_186 
		else 
			>> node_046 
		endif 
	elif [RegisterVar1 += 2] 
		if function#112(5) 
			>> node_187 
		else 
			>> node_059 
		endif 
	elif [RegisterVar1 += 3] 
		if function#112(6) 
			>> node_188 
		else 
			>> node_060 
		endif 
	elif [RegisterVar1 += 4] 
		if function#112(7) 
			>> node_189 
		else 
			>> node_078 
		endif 
	elif [RegisterVar1 += 5] 
		if function#112(8) 
			>> node_190 
		else 
			>> node_079 
		endif 
	elif [RegisterVar1 += 6] 
		if function#112(11) 
			>> node_191 
		else 
			>> node_100 
		endif 
	else 
	endif 
	return 
endf 

def node_186
	if [RegisterVar12 -= 1] 
		if function#111() 
			>> node_051 
			[RegisterVar12 ++] 
			[RegisterVar13 ++] 
			>> node_035 
		elif [RegisterVar13 -= 1] 
			>> node_051 
			[RegisterVar12 ++] 
			[RegisterVar13 ++] 
			>> node_035 
		else 
			[RegisterVar13 |-] 
			>> node_054 
			>> node_027 
		endif 
	else 
		[RegisterVar12 |-] 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			>> node_054 
			>> node_027 
		else 
			random (0) 
			elser (50) >> node_054 
			elser (30) >> node_044 
			elser (20) >> node_047 
			elser (0) 
			endr 
		endif 
	endif 
	return 
endf 

def node_187
	if [RegisterVar12 -= 1] 
		if function#111() 
			>> node_065 
			[RegisterVar12 ++] 
			[RegisterVar15 ++] 
		elif [RegisterVar15 -= 1] 
			>> node_065 
			[RegisterVar12 ++] 
			[RegisterVar15 ++] 
		else 
			[RegisterVar15 |-] 
			>> node_063 
			>> node_028 
		endif 
	else 
		[RegisterVar12 |-] 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			>> node_061 
			>> node_027 
		else 
			random (0) 
			elser (70) >> node_061 
			elser (30) >> node_067 
			elser (0) 
			endr 
		endif 
	endif 
	return 
endf 

def node_188
	if [RegisterVar12 -= 1] 
		if function#111() 
			>> node_066 
			[RegisterVar12 ++] 
			[RegisterVar16 ++] 
		elif [RegisterVar16 -= 1] 
			>> node_066 
			[RegisterVar12 ++] 
			[RegisterVar16 ++] 
		else 
			[RegisterVar16 |-] 
			>> node_064 
			>> node_028 
		endif 
	else 
		[RegisterVar12 |-] 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			>> node_062 
			>> node_027 
		else 
			random (0) 
			elser (70) >> node_062 
			elser (30) >> node_068 
			elser (0) 
			endr 
		endif 
	endif 
	return 
endf 

def node_189
	if [RegisterVar12 -= 1] 
		if function#111() 
			>> node_084 
			[RegisterVar12 ++] 
			[RegisterVar17 ++] 
		elif [RegisterVar17 -= 1] 
			>> node_084 
			[RegisterVar12 ++] 
			[RegisterVar17 ++] 
		else 
			[RegisterVar17 |-] 
			>> node_082 
			>> node_028 
		endif 
	else 
		[RegisterVar12 |-] 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			>> node_080 
			>> node_027 
		else 
			random (0) 
			elser (70) >> node_080 
			elser (30) >> node_092 
			elser (0) 
			endr 
		endif 
	endif 
	return 
endf 

def node_190
	if [RegisterVar12 -= 1] 
		if function#111() 
			>> node_085 
			[RegisterVar12 ++] 
			[RegisterVar18 ++] 
		elif [RegisterVar18 -= 1] 
			>> node_085 
			[RegisterVar12 ++] 
			[RegisterVar18 ++] 
		else 
			[RegisterVar18 |-] 
			>> node_083 
			>> node_028 
		endif 
	else 
		[RegisterVar12 |-] 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			>> node_081 
			>> node_027 
		else 
			random (0) 
			elser (70) >> node_081 
			elser (30) >> node_093 
			elser (0) 
			endr 
		endif 
	endif 
	return 
endf 

def node_191
	if [RegisterVar12 -= 1] 
		if function#111() 
			>> node_102 
			[RegisterVar12 ++] 
			[RegisterVar14 ++] 
			>> node_036 
		elif [RegisterVar14 -= 1] 
			>> node_102 
			[RegisterVar12 ++] 
			[RegisterVar14 ++] 
			>> node_036 
		else 
			[RegisterVar14 |-] 
			random (0) 
			elser (60) >> node_101 
			elser (40) >> node_108 
			elser (0) 
			endr 
			>> node_027 
		endif 
	else 
		[RegisterVar12 |-] 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			random (0) 
			elser (60) >> node_101 
			elser (40) >> node_108 
			elser (0) 
			endr 
			>> node_027 
		else 
			random (0) 
			elser (20) >> node_099 
			elser (50) >> node_101 
			elser (30) >> node_108 
			elser (0) 
			endr 
		endif 
	endif 
	return 
endf 

def node_192
	if self.target(58) 
		self.targetEnemy(67) @ parameter2:1 
		random (80) 
		elser (20) >> node_198 
		elser (0) 
		endr 
	else 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		>> node_193 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_194 
	else 
		if self.target.helpless_0() 
			[RegisterVar8 ++] 
			>> node_197 
		else 
			if [RegisterVar8 += 0] 
				[RegisterVar8 |-] 
				>> node_195 
			else 
				[RegisterVar8 ++] 
				>> node_196 
			endif 
		endif 
	endif 
	return 
endf 

def node_193
	if function#103(6,1) 
		if [RegisterVar8 += 0] 
			[RegisterVar8 |-] 
			>> node_109 
		else 
			[RegisterVar8 ++] 
			if self.in_map(st.Secluded_Valley).in_area(1) 
				>> node_112 
			else 
				>> node_113 
			endif 
		endif 
	else 
		random (70) >> node_112 
		elser (30) 
					>> node_041 
					>> node_051 
		endr 
	endif 
	return 
endf 

def node_194
	if self.angle_2d_cw_between(0,60) 
		random (20) >> node_050 
		elser (25) >> node_115 
		elser (30) >> node_112 
		elser (25) >> node_071 
		endr 
	elif self.angle_2d_cw_between(60,135) 
		random (15) >> node_086 
		elser (35) >> node_115 
		elser (50) >> node_112 
		elser (0) 
		endr 
	elif self.angle_2d_cw_between(135,150) 
		random (15) >> node_086 
		elser (40) >> node_103 
		elser (20) >> node_112 
		elser (25) >> node_110 
		elser (0) 
		endr 
	elif self.angle_2d_cw_between(150,210) 
		random (50) >> node_102 
		elser (50) >> node_105 
		endr 
	elif self.angle_2d_cw_between(210,225) 
		random (15) >> node_087 
		elser (40) >> node_104 
		elser (20) >> node_112 
		elser (25) >> node_110 
		elser (0) 
		endr 
	elif self.angle_2d_cw_between(225,300) 
		random (15) >> node_087 
		elser (35) >> node_115 
		elser (50) >> node_112 
		elser (0) 
		endr 
	else 
		random (20) >> node_050 
		elser (25) >> node_115 
		elser (30) >> node_112 
		elser (25) >> node_071 
		endr 
	endif 
	return 
endf 

def node_195
	random (0) 
	elser (75) >> node_110 
				>> node_112 
	elser (25) >> node_112 
	elser (0) 
	endr 
	return 
endf 

def node_196
	random (0) 
	elser (40) >> node_112 
	elser (30) >> node_110 
				>> node_114 
	elser (20) >> node_114 
	elser (10) >> node_118 
	elser (0) 
	endr 
	return 
endf 

def node_197
	random (0) 
	elser (80) >> node_114 
	elser (20) >> node_118 
	elser (0) 
	endr 
	return 
endf 

def node_198
	if self.target_on_part(0) 
		random (50) >> node_136 
		elser (50) >> node_046 
		elser (0) >> node_045 
		elser (0) 
		endr 
	elif self.target_on_part(1) 
		random (50) >> node_136 
		elser (50) >> node_109 
		elser (0) >> node_028 
		elser (0) 
		endr 
	elif self.target_on_part(2) 
		random (30) >> node_136 
		elser (35) >> node_100 
		elser (35) >> node_102 
		elser (0) >> node_098 
		elser (0) 
		endr 
	else 
		>> node_136 
	endif 
	return 
endf 

def node_199
	if self.target(58) 
		self.targetEnemy(67) @ parameter2:1 
	else 
	endif 
	>> node_200 
	if self.distance_2d_to_target().leq(1500) 
	else 
		>> node_201 
	endif 
	return 
endf 

def node_200
	if function#103(6,1) 
		if [RegisterVar9 -= 1] 
			[RegisterVar9 ++] 
			>> node_127 
		else 
			[RegisterVar9 |-] 
			>> node_022 
			>> node_051 
		endif 
	else 
	endif 
	return 
endf 

def node_201
	random (0) 
	elser (45) >> node_123 
	elser (35) >> node_041 
				>> node_016 
				>> node_120 
	elser (10) >> node_041 
				>> node_015 
				>> node_127 
	elser (10) >> node_041 
				>> node_118 
	elser (0) 
	endr 
	return 
endf 

def node_202
	if self.target(58) 
		self.targetEnemy(67) @ parameter2:1 
	else 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		>> node_203 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_204 
		>> node_027 
	else 
		if [RegisterVar8 += 0] 
			[RegisterVar8 |-] 
			>> node_195 
		else 
			[RegisterVar8 ++] 
			>> node_196 
			>> node_027 
		endif 
	endif 
	return 
endf 

def node_203
	if function#103(6,1) 
		if [RegisterVar8 += 0] 
			[RegisterVar8 |-] 
			>> node_109 
		else 
			[RegisterVar8 ++] 
			if self.in_map(st.Secluded_Valley).in_area(1) 
				>> node_112 
			else 
				>> node_113 
			endif 
			>> node_027 
		endif 
	else 
		random (70) >> node_112 
					>> node_027 
		elser (30) 
					>> node_041 
					>> node_051 
					>> node_027 
		endr 
	endif 
	return 
endf 

def node_204
	if self.angle_2d_cw_between(0,60) 
		random (35) >> node_050 
		elser (25) >> node_115 
		elser (20) >> node_112 
		elser (20) >> node_071 
		endr 
	elif self.angle_2d_cw_between(60,135) 
		random (40) >> node_086 
		elser (35) >> node_115 
		elser (25) >> node_112 
		elser (0) 
		endr 
	elif self.angle_2d_cw_between(135,150) 
		random (40) >> node_086 
		elser (40) >> node_103 
		elser (20) >> node_112 
		elser (0) >> node_110 
		elser (0) 
		endr 
	elif self.angle_2d_cw_between(150,210) 
		random (50) >> node_102 
		elser (50) >> node_105 
		endr 
	elif self.angle_2d_cw_between(210,225) 
		random (40) >> node_087 
		elser (40) >> node_104 
		elser (20) >> node_112 
		elser (0) >> node_110 
		elser (0) 
		endr 
	elif self.angle_2d_cw_between(225,300) 
		random (40) >> node_087 
		elser (35) >> node_115 
		elser (25) >> node_112 
		elser (0) 
		endr 
	else 
		random (35) >> node_050 
		elser (25) >> node_115 
		elser (20) >> node_112 
		elser (20) >> node_071 
		endr 
	endif 
	return 
endf 

def node_205
	[RegisterVar7 ++] 
	if [RegisterVar4 -= 3] 
		>> node_206 
	else 
		[RegisterVar4 |-] 
	endif 
	>> node_144 
	>> node_215 
	return 
endf 

def node_206
	>> node_207 
	if [RegisterVar1 += 0] 
		return 
	else 
	endif 
	[RegisterVar4 ++] 
	>> node_212 
	return 
endf 

def node_207
	[RegisterVar1 ++] 
	>> node_208 
	if [RegisterVar1 += 0] 
		>> node_209 
	endif 
	if [RegisterVar1 += 0] 
		>> node_210 
	endif 
	if [RegisterVar1 += 0] 
		>> node_211 
	endif 
	return 
endf 

def node_208
	[RegisterVar11 ++] 
	if function#103(6,4) 
		[RegisterVar1 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,4) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,4) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,4) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,4) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,4) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_209
	[RegisterVar11 ++] 
	if function#103(6,3) 
		[RegisterVar1 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,3) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,3) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,3) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,3) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,3) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_210
	[RegisterVar11 ++] 
	if function#103(6,2) 
		[RegisterVar1 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,2) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,2) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,2) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,2) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,2) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_211
	[RegisterVar11 ++] 
	if function#103(6,1) 
		[RegisterVar1 |-] 
		[RegisterVar11 |-] 
	endif 
	if function#103(1,1) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(2,1) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(3,1) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(4,1) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	if function#103(5,1) 
		>> node_171 
		if [RegisterVar1 += 0] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar1 |-] 
			[RegisterVar11 |-] 
		else 
		endif 
	endif 
	return 
endf 

def node_212
	if function#111() 
		>> node_214 
	else 
		>> node_213 
	endif 
	return 
endf 

def node_213
	if [RegisterVar1 += 1] 
		>> node_109 
	elif [RegisterVar1 += 2] 
		>> node_055 
	elif [RegisterVar1 += 3] 
		>> node_056 
	elif [RegisterVar1 += 4] 
		>> node_076 
	elif [RegisterVar1 += 5] 
		>> node_077 
	elif [RegisterVar1 += 6] 
		>> node_098 
	else 
	endif 
	return 
endf 

def node_214
	if [RegisterVar1 += 1] 
		>> node_109 
	elif [RegisterVar1 += 2] 
		if function#112(5) 
			>> node_187 
		else 
			>> node_059 
		endif 
	elif [RegisterVar1 += 3] 
		if function#112(6) 
			>> node_188 
		else 
			>> node_060 
		endif 
	elif [RegisterVar1 += 4] 
		if function#112(7) 
			>> node_189 
		else 
			>> node_078 
		endif 
	elif [RegisterVar1 += 5] 
		if function#112(8) 
			>> node_190 
		else 
			>> node_079 
		endif 
	elif [RegisterVar1 += 6] 
		if function#112(11) 
			>> node_191 
		else 
			>> node_100 
		endif 
	else 
	endif 
	return 
endf 

def node_215
	if self.target(58) 
		>> node_198 
		self.targetEnemy(67) @ parameter2:1 
	else 
	endif 
	if self.distance_2d_to_target().leq(700) 
		>> node_216 
	elif self.distance_2d_to_target().leq(1300) 
		random (50) >> node_219 
		elser (50) >> node_220 
		endr 
	elif self.distance_2d_to_target().leq(2000) 
		>> node_221 
	elif self.distance_2d_to_target().leq(3000) 
		>> node_222 
	else 
		>> node_223 
	endif 
	return 
endf 

def node_216
	if self.target(55) 
		[RegisterVar9 ++] 
		>> node_127 
	elif [RegisterVar9 -= 2] 
		[RegisterVar9 ++] 
		>> node_127 
	elif [RegisterVar9 -= 1] 
		[RegisterVar9 |-] 
		random (0) 
		elser (50) >> node_124 
		elser (50) >> node_022 
					>> node_051 
		elser (0) 
		endr 
	else 
		[RegisterVar9 |-] 
		random (0) >> node_109 
		elser (20) >> node_119 
		elser (45) >> node_217 
		elser (35) >> node_218 
		elser (0) 
		endr 
	endif 
	return 
endf 

def node_217
	>> node_022 
	random (0) 
	elser (10) >> node_045 
	elser (15) >> node_050 
	elser (30) >> node_120 
	elser (20) >> node_071 
	elser (10) >> node_051 
	elser (15) >> node_110 
	elser (0) >> node_121 
	elser (0) >> node_112 
	elser (0) >> node_115 
	elser (0) 
	endr 
	return 
endf 

def node_218
	>> node_025 
	random (0) 
	elser (0) >> node_050 
	elser (15) >> node_088 
	elser (5) >> node_071 
	elser (40) >> node_110 
	elser (20) >> node_112 
	elser (20) >> node_115 
	elser (0) 
	endr 
	return 
endf 

def node_219
	if self.angle_2d_cw_between(30,90) 
		if function#112(5) 
			[RegisterVar12 ++] 
			[RegisterVar15 ++] 
			>> node_074 
		else 
			>> node_072 
		endif 
	elif self.angle_2d_cw_between(90,150) 
		if function#112(7) 
			[RegisterVar12 ++] 
			[RegisterVar17 ++] 
			>> node_096 
		else 
			>> node_094 
		endif 
	elif self.angle_2d_cw_between(150,210) 
		if function#112(11) 
			[RegisterVar12 ++] 
			[RegisterVar14 ++] 
			>> node_102 
			>> node_036 
		else 
			>> node_102 
		endif 
	elif self.angle_2d_cw_between(210,270) 
		if function#112(8) 
			[RegisterVar12 ++] 
			[RegisterVar18 ++] 
			>> node_097 
		else 
			>> node_095 
		endif 
	elif self.angle_2d_cw_between(270,330) 
		if function#112(6) 
			[RegisterVar12 ++] 
			[RegisterVar16 ++] 
			>> node_075 
		else 
			>> node_073 
		endif 
	else 
		>> node_119 
		>> node_224 
	endif 
	return 
endf 

def node_220
	random (0) 
	elser (0) >> node_120 
	elser (20) >> node_071 
	elser (0) >> node_042 
				>> node_109 
	elser (5) >> node_042 
				>> node_045 
	elser (30) >> node_041 
				>> node_043 
	elser (30) >> node_041 
				>> node_046 
	elser (15) >> node_022 
				>> node_050 
	elser (0) 
	endr 
	return 
endf 

def node_221
	>> node_041 
	random (0) 
	elser (15) >> node_043 
	elser (15) >> node_046 
	elser (5) >> node_045 
	elser (0) >> node_050 
	elser (20) >> node_120 
				>> node_224 
	elser (15) >> node_071 
	elser (5) >> node_110 
	elser (0) >> node_121 
	elser (5) >> node_112 
				>> node_224 
	elser (10) >> node_114 
				>> node_224 
	elser (10) >> node_115 
	elser (0) 
	endr 
	return 
endf 

def node_222
	>> node_010 
	random (0) 
	elser (30) >> node_016 
				>> node_120 
	elser (15) >> node_124 
	elser (20) >> node_071 
	elser (5) >> node_110 
	elser (15) >> node_007 
				>> node_121 
	elser (0) >> node_112 
	elser (10) >> node_114 
	elser (5) >> node_118 
	elser (0) 
	endr 
	return 
endf 

def node_223
	>> node_010 
	random (0) 
	elser (20) >> node_016 
				>> node_120 
	elser (25) >> node_017 
				>> node_124 
	elser (25) >> node_019 
				>> node_071 
	elser (10) >> node_110 
	elser (0) >> node_007 
				>> node_121 
	elser (5) >> node_112 
	elser (10) >> node_114 
	elser (5) >> node_118 
	elser (0) 
	endr 
	return 
endf 

def node_224
	if function#10F() 
		if [RegisterVar6 -= 2] 
			[RegisterVar6 ++] 
			>> node_028 
		else 
			[RegisterVar6 |-] 
			>> node_027 
		endif 
	else 
	endif 
	return 
endf 

def node_225
	if function#B0(1) 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			>> node_229 
		elif self.in_map(st.Secluded_Valley).in_area(2) 
			>> node_230 
		else 
		endif 
	else 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			>> node_226 
		elif self.in_map(st.Secluded_Valley).in_area(2) 
			>> node_227 
		elif self.in_map(st.Secluded_Valley).in_area(3) 
			>> node_228 
		else 
		endif 
	endif 
	return 
endf 

def node_226
	if self.hp_percent().gt(69) 
		>> node_271 
		[RegisterVar0 |-] 
		function#105(70) 
		function#11F(100) 
		>> node_033 
	elif self.hp_percent().gt(89) 
		>> node_271 
	else 
	endif 
	return 
endf 

def node_227
	if self.hp_percent().gt(49) 
		>> node_272 
		if [RegisterVar10 -= 3] 
			[RegisterVar10 ++] 
			[RegisterVar10 |-] 
		else 
			[RegisterVar10 |-] 
			>> node_138 
			[RegisterVar10 ++] 
			[RegisterVar10 |-] 
		endif 
		if function#11B() 
			function#105(100) 
			function#11F(25) 
		else 
			function#105(70) 
			function#11F(35) 
		endif 
		>> node_033 
	elif self.hp_percent().gt(69) 
		>> node_272 
	else 
	endif 
	return 
endf 

def node_228
	if self.hp_percent().gt(39) 
		if function#108() 
		else 
			if function#11C() 
				function#105(80) 
				function#11F(25) 
			else 
				function#105(35) 
				function#11F(35) 
			endif 
			>> node_033 
			[RegisterVar10 ++] 
			[RegisterVar10 |-] 
			[RegisterVar3 |-] 
			>> node_135 
		else 
		endif 
	else 
	endif 
	return 
endf 

def node_229
	if [RegisterVar0 -= 2] 
		function#109() 
		conclude 
	elif [RegisterVar0 -= 1] 
		if self.hp_percent().gt(89) 
			function#109() 
			conclude 
		else 
		endif 
	else 
		if self.hp_percent().gt(69) 
			function#105(100) 
			function#11F(100) 
			>> node_033 
			[RegisterVar0 |-] 
			>> node_027 
		else 
		endif 
	endif 
	return 
endf 

def node_230
	if self.hp_percent().gt(79) 
		[RegisterVar0 |-] 
		>> node_138 
		>> node_276 
	elif [RegisterVar0 -= 1] 
		>> node_028 
		>> node_138 
		>> node_276 
	else 
	endif 
	return 
endf 

def node_231
	if self.in_map(st.Secluded_Valley).in_area(3) 
		if function#108() 
			if self.hp_percent().gt(29) 
				if function#104(2) 
					if function#11B(1,8000) 
						>> node_237 
						return 
					else 
						>> node_239 
						return 
					else 
					endif 
				else 
					>> node_236 
					return 
				endif 
			else 
			endif 
		else 
		endif 
		[RegisterVar0 |-] 
		if function#111() 
			>> node_233 
			if function#111() 
				>> node_232 
			else 
			endif 
		else 
			>> node_235 
		endif 
	else 
	endif 
	return 
endf 

def node_232
	self.targetEnemy(48) 
	if self.distance_3d_to_target().leq(1000) 
	elif self.distance_3d_to_target().leq(1700) 
		random (30) >> node_134 
		elser (70) 
		endr 
	elif self.distance_3d_to_target().leq(2500) 
		random (40) >> node_130 
		elser (60) 
		endr 
	elif self.distance_3d_to_target().leq(5000) 
		random (30) >> node_131 
		elser (70) 
		endr 
	else 
	endif 
	>> node_144 
	return 
endf 

def node_233
	>> node_273 
	if [RegisterVar19 -= 10] 
		if [RegisterVar0 *= 12] 
			>> node_234 
		endif 
	elif [RegisterVar19 -= 8] 
		if [RegisterVar0 *= 11] 
			>> node_234 
		endif 
	elif [RegisterVar19 -= 6] 
		if [RegisterVar0 *= 10] 
			>> node_234 
		endif 
	elif [RegisterVar19 -= 4] 
		if [RegisterVar0 *= 9] 
			>> node_234 
		endif 
	elif [RegisterVar19 -= 3] 
		if [RegisterVar0 *= 8] 
			>> node_234 
		endif 
	elif [RegisterVar19 -= 2] 
		if [RegisterVar0 *= 7] 
			>> node_234 
		endif 
	elif [RegisterVar19 -= 1] 
		if [RegisterVar0 *= 6] 
			>> node_234 
		endif 
	else 
		if [RegisterVar0 *= 5] 
			>> node_234 
		endif 
	endif 
	[RegisterVar19 ++] 
	return 
endf 

def node_234
	[RegisterVar19 ++] 
	if self.target_on_part(0) 
	elif self.target_on_part(1) 
	elif self.target_on_part(2) 
	else 
		if [RegisterVar10 -= 2] 
			[RegisterVar10 ++] 
			[RegisterVar10 |-] 
			if [RegisterVar3 += 0] 
				[RegisterVar3 |-] 
				>> node_135 
			elif function#11E(97) 
				>> node_135 
			else 
			endif 
		else 
		endif 
		[RegisterVar10 |-] 
		>> node_138 
		[RegisterVar10 ++] 
		[RegisterVar10 |-] 
		[RegisterVar3 ++] 
		[RegisterVar0 ++] 
		>> node_129 
	endif 
	return 
endf 

def node_235
	if [RegisterVar0 *= 6] 
		[RegisterVar0 ++] 
		>> node_128 
	endif 
	return 
endf 

def node_236
	if function#111() 
		[RegisterVar0 ++] 
		>> node_129 
	else 
	endif 
	return 
endf 

def node_237
	[RegisterVar0 |-] 
	[RegisterVar19 ++] 
	[RegisterVar19 |-] 
	[RegisterVar19 |-] 
	if function#111() 
		>> node_238 
		>> node_232 
	else 
		[RegisterVar0 ++] 
		>> node_128 
	endif 
	return 
endf 

def node_238
	if [RegisterVar0 -= 2] 
		if self.target_on_part(0) 
			>> node_127 
		elif self.target_on_part(1) 
			>> node_127 
		elif self.target_on_part(2) 
			>> node_127 
		else 
			if [RegisterVar10 -= 2] 
				[RegisterVar10 ++] 
				[RegisterVar10 |-] 
				if [RegisterVar3 += 0] 
					[RegisterVar3 |-] 
					>> node_135 
				elif function#11E(97) 
					>> node_135 
				else 
				endif 
			else 
			endif 
			[RegisterVar10 |-] 
			>> node_138 
			[RegisterVar10 ++] 
			[RegisterVar10 |-] 
			[RegisterVar3 ++] 
			[RegisterVar0 ++] 
		endif 
	elif [RegisterVar0 -= 1] 
		>> node_127 
	else 
	endif 
	return 
endf 

def node_239
	[RegisterVar0 |-] 
	[RegisterVar19 ++] 
	[RegisterVar19 |-] 
	if function#111() 
		>> node_240 
		>> node_232 
	else 
		[RegisterVar0 ++] 
		>> node_128 
	endif 
	return 
endf 

def node_240
	if [RegisterVar0 -= 10] 
		if self.target_on_part(0) 
		elif self.target_on_part(1) 
		elif self.target_on_part(2) 
		else 
			if [RegisterVar10 -= 2] 
				[RegisterVar10 ++] 
				[RegisterVar10 |-] 
				if [RegisterVar3 += 0] 
					[RegisterVar3 |-] 
					>> node_135 
				elif function#11E(97) 
					>> node_135 
				else 
				endif 
			else 
			endif 
			[RegisterVar10 |-] 
			>> node_138 
			[RegisterVar10 ++] 
			[RegisterVar10 |-] 
			[RegisterVar3 ++] 
			[RegisterVar0 ++] 
		endif 
	elif [RegisterVar0 -= 9] 
		>> node_127 
	else 
	endif 
	return 
endf 

def node_241
	if [$U += 0] 
		[$U |-] 
		>> node_137 
	else 
		random (50) 
					>> node_136 
		elser (50) 
		endr 
	endif 
	return 
endf 

def node_242
	if [RegisterVar10 += 0] 
		[RegisterVar10 |-] 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			if function#106() 
				function#11F(1) 
			else 
				function#11F(15) 
			endif 
		elif self.in_map(st.Secluded_Valley).in_area(2) 
			if function#B0(1) 
				function#11F(100) 
			elif function#107() 
				function#11F(1) 
			else 
				function#11F(15) 
			endif 
		elif self.in_map(st.Secluded_Valley).in_area(3) 
			if function#108() 
				function#11F(1) 
			else 
				function#11F(15) 
			endif 
		else 
			function#11F(15) 
		endif 
		function#105() 
		>> node_034 
	else 
		>> node_244 
	endif 
	return 
endf 

def node_243
	>> node_244 
	return 
endf 

def node_244
	self.targetEnemy(48) 
	if self.distance_3d_to_target().gt(10000) 
		random (0) 
		elser (40) >> node_037 
		elser (20) >> node_038 
		elser (40) >> node_039 
		elser (0) 
		endr 
	else 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			if self.distance_3d_to_target().leq(1000) 
				random (0) 
				elser (50) >> node_041 
							>> node_109 
				elser (50) >> node_119 
				elser (0) 
				endr 
			elif self.distance_3d_to_target().leq(2000) 
				random (0) 
				elser (40) >> node_115 
				elser (40) >> node_120 
				elser (20) >> node_051 
				elser (0) 
				endr 
			else 
				>> node_010 
				>> node_118 
			endif 
		else 
			if self.distance_3d_to_target().leq(1000) 
				>> node_109 
			elif self.distance_3d_to_target().leq(2000) 
				random (0) 
				elser (40) >> node_115 
				elser (40) >> node_120 
				elser (20) >> node_051 
				elser (0) 
				endr 
			elif self.distance_3d_to_target().leq(5000) 
				random (0) 
				elser (50) >> node_123 
				elser (50) >> node_118 
				elser (0) 
				endr 
			else 
				random (0) 
				elser (50) >> node_122 
				elser (50) >> node_014 
				elser (0) 
				endr 
				>> node_039 
			endif 
		endif 
	endif 
	if function#101() 
	else 
		>> node_020 
	endif 
	return 
endf 

def node_245
	>> node_030 
	return 
endf 

def node_246
	>> node_030 
	return 
endf 

def node_247
	>> node_275 
	if self.in_map(st.Secluded_Valley).in_area(1) 
	else 
		[RegisterVar4 ++] 
		[RegisterVar5 ++] 
		[RegisterVar6 ++] 
		[RegisterVar7 ++] 
		[RegisterVar9 ++] 
		function#10C() 
	endif 
	if self.flying() 
	else 
		>> node_030 
	endif 
	return 
endf 

def node_248
	>> node_275 
	if self.in_map(st.Secluded_Valley).in_area(1) 
	else 
		[RegisterVar4 ++] 
		[RegisterVar5 ++] 
		[RegisterVar6 ++] 
		[RegisterVar7 ++] 
		[RegisterVar9 ++] 
	endif 
	return 
endf 

def node_249
	>> node_038 
	return 
endf 

def node_250
	>> node_013 
	return 
endf 

def node_251
	>> node_252 
	if self.in_map(st.Secluded_Valley).in_area(1) 
		>> node_253 
		>> node_255 
	elif self.in_map(st.Secluded_Valley).in_area(2) 
		>> node_254 
		>> node_256 
	else 
	endif 
	return 
endf 

def node_252
	[RegisterVar0 ++] 
	[RegisterVar1 ++] 
	[RegisterVar2 ++] 
	[RegisterVar3 ++] 
	[RegisterVar4 ++] 
	[RegisterVar5 ++] 
	[RegisterVar6 ++] 
	[RegisterVar7 ++] 
	[RegisterVar8 ++] 
	[RegisterVar9 ++] 
	[RegisterVar10 ++] 
	[RegisterVar11 ++] 
	[RegisterVar12 ++] 
	[RegisterVar13 ++] 
	[RegisterVar14 ++] 
	[RegisterVar15 ++] 
	[RegisterVar16 ++] 
	[RegisterVar17 ++] 
	[RegisterVar18 ++] 
	[RegisterVar19 ++] 
	[$U ++] 
	>> node_274 
	return 
endf 

def node_253
	>> node_273 
	if function#11B(4,5000) 
		if [RegisterVar19 -= 1] 
			function#116(2) 
		else 
			function#116(1) 
		endif 
	else 
		if [RegisterVar19 -= 2] 
			function#116(2) 
		elif [RegisterVar19 -= 1] 
			function#116(1) 
		else 
			function#116() 
		endif 
	endif 
	[RegisterVar19 ++] 
	return 
endf 

def node_254
	>> node_273 
	if function#11D(4,3000) 
		if [RegisterVar19 -= 1] 
			function#116(2) 
		else 
			function#116(1) 
		endif 
	elif function#11C(4,5000) 
		if [RegisterVar19 -= 2] 
			function#116(2) 
		elif [RegisterVar19 -= 1] 
			function#116(1) 
		else 
			function#116() 
		endif 
	else 
		if [RegisterVar19 -= 3] 
			function#116(2) 
		elif [RegisterVar19 -= 2] 
			function#116(1) 
		else 
			function#116() 
		endif 
	endif 
	[RegisterVar19 ++] 
	return 
endf 

def node_255
	>> node_001 
	>> node_003 
	function#10A() 
	-> safi'jiiva.area_move_1_to_2() 
	self.targetEnemy(48) 
	if self.distance_3d_to_target().leq(5000) 
		>> node_242 
	else 
	endif 
	return 
endf 

def node_256
	>> node_001 
	>> node_003 
	function#10B() 
	-> safi'jiiva.area_move_2_to_3() 
	self.targetEnemy(48) 
	if self.distance_3d_to_target().leq(5000) 
		>> node_242 
	else 
	endif 
	return 
endf 

def node_257
	self.targetEnemy(13) 
	if self.flying() 
		>> node_027 
	elif self.target(4) 
		>> node_021 
	else 
		if self.in_map(st.Secluded_Valley).in_area(1) 
			if self.distance_2d_to_target().leq(1000) 
				random (0) 
				elser (50) >> node_109 
				elser (50) >> node_119 
				elser (0) 
				endr 
			else 
				>> node_110 
				>> node_027 
			endif 
		else 
			if self.distance_2d_to_target().leq(1000) 
				>> node_022 
			else 
				>> node_014 
			endif 
			random (0) 
			elser (50) >> node_109 
			elser (50) >> node_120 
			elser (0) 
			endr 
		endif 
		random (50) 
		elser (50) >> node_038 
		elser (0) 
		endr 
	endif 
	return 
endf 

def node_258
	>> node_029 
	return 
endf 

def node_259
	function#CA() 
	return 
endf 

def node_260
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_029 
	return 
endf 

def node_261
	>> node_264 
	>> node_020 
	>> node_242 
	>> node_027 
	return 
endf 

def node_262
	>> node_264 
	>> node_242 
	>> node_027 
	return 
endf 

def node_263
	>> node_264 
	if function#11E(11) 
		>> node_027 
	elif function#11E(12) 
		>> node_027 
	else 
	endif 
	>> node_020 
	>> node_242 
	>> node_027 
	return 
endf 

def node_264
	if [RegisterVar10 -= 2] 
		[RegisterVar3 ++] 
	else 
	endif 
	[RegisterVar4 ++] 
	[RegisterVar5 ++] 
	[RegisterVar6 ++] 
	[RegisterVar8 ++] 
	if [RegisterVar11 += 0] 
		[RegisterVar11 |-] 
	else 
	endif 
	return 
endf 

def node_265
	>> node_275 
	if self.flying() 
	else 
		>> node_031 
	endif 
	return 
endf 

def node_266
	if self.quest_id(51605) 
		>> node_267 
	elif self.quest_id(23161) 
		>> node_267 
	else 
	endif 
	return 
endf 

def node_267
	>> node_001 
	>> node_003 
	function#115() 
	self.targetEnemy(38) 
	-> safi'jiiva.repelled_take_off() 
	return 
endf 

def node_268
	if self.in_map(st.Secluded_Valley).in_area(-1) 
		>> node_001 
		>> node_003 
		>> node_030 
		self.targetEnemy(38) 
		-> safi'jiiva.repelled_take_off() 
		-> safi'jiiva.repelled_move() 
	else 
	endif 
	return 
endf 

def node_269
	>> node_271 
	[RegisterVar0 |-] 
	function#105(70) 
	function#11F(100) 
	>> node_033 
	if function#B0(1) 
		>> node_027 
	else 
	endif 
	return 
endf 

def node_270
	>> node_271 
	function#102() 
	>> node_130 
	[RegisterVar0 |-] 
	function#105(70) 
	function#11F(100) 
	>> node_033 
	if function#B0(1) 
		>> node_027 
	else 
	endif 
	return 
endf 

def node_271
	if function#106() 
		function#109() 
		conclude 
	else 
	endif 
	return 
endf 

def node_272
	if function#107() 
		function#109() 
		conclude 
	else 
	endif 
	return 
endf 

def node_273
	[RegisterVar19 ++] 
	if self.part(1).is_broken(1) 
		[RegisterVar19 |-] 
	endif 
	if self.part(1).is_broken(2) 
		[RegisterVar19 |-] 
	endif 
	if self.part(2).is_broken(1) 
		[RegisterVar19 |-] 
	endif 
	if self.part(3).is_broken(1) 
		[RegisterVar19 |-] 
	endif 
	if self.part(4).is_broken(1) 
		[RegisterVar19 |-] 
	endif 
	if self.part(5).is_broken(1) 
		[RegisterVar19 |-] 
	endif 
	if self.part(6).is_broken(1) 
		[RegisterVar19 |-] 
	endif 
	if self.part(7).is_broken(1) 
		[RegisterVar19 |-] 
	endif 
	if self.part(8).is_broken(1) 
		[RegisterVar19 |-] 
	endif 
	if self.part(9).is_broken(1) 
		[RegisterVar19 |-] 
	endif 
	if self.part(0).is_broken(1) 
		[RegisterVar19 |-] 
	endif 
	return 
endf 

def node_274
	function#10D() 
	return 
endf 

def node_275
	if function#11E(97) 
		if function#B0(1) 
			if [RegisterVar0 -= 1] 
				>> node_001 
				>> node_276 
			else 
			endif 
		elif self.flying() 
		elif self.in_map(st.Secluded_Valley).in_area(2) 
			[RegisterVar10 ++] 
			[RegisterVar10 |-] 
			[RegisterVar10 |-] 
			[RegisterVar10 |-] 
		else 
			[RegisterVar10 ++] 
			[RegisterVar10 |-] 
			[RegisterVar3 ++] 
			[RegisterVar0 ++] 
		endif 
	elif function#11E(104) 
		[RegisterVar10 ++] 
		[RegisterVar10 |-] 
		[RegisterVar10 |-] 
	else 
	endif 
	return 
endf 

def node_276
	function#115() 
	self.targetEnemy(38) 
	-> safi'jiiva.repelled_threat() 
	conclude 
endf 

def node_277
endf 

