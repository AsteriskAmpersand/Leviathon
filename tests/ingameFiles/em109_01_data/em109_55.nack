importactions Viper_TobiKadachi as viper_tobikadachi

def node_000
	conclude 
endf 

def node_001
	self.targetArea(14) 
	if self.distance_3d_to_target().gt(600) 
		>> node_039 
		repeat 
	else 
		>> node_117 
	endif 
	return 
endf 

def node_002
	self.targetArea(14) 
	if self.distance_3d_to_target().gt(600) 
		>> node_039 
		repeat 
	else 
		>> node_117 
	endif 
	return 
endf 

def node_003
	self.targetArea(19) 
	if self.distance_3d_to_target().gt(1000) 
		>> node_039 
		repeat 
	else 
		>> node_117 
	endif 
	return 
endf 

def node_004
	if self.targetEnemy(target_em.any_monster) 
		if self.target(13) 
		else 
			if self.vertical_distance_to_target().leq(1000) 
				if self.distance_3d_to_target().leq(3000) 
					if self.target_is(em.Anjanath) 
						>> node_007 
					elif self.target_is(em.Fulgur_Anjanath) 
						>> node_007 
					elif function#30(2) 
						>> node_006 
					else 
						>> node_005 
					endif 
				else 
				endif 
			else 
			endif 
		endif 
	else 
	endif 
	return 
endf 

def node_005
	if self.target.in_combat() 
		random (35) >> node_008 
		elser (10) >> node_009 
		elser (55) >> node_015 
		elser (0) >> node_011 
		endr 
	else 
		random (30) >> node_008 
		elser (10) >> node_009 
		elser (60) >> node_015 
		elser (0) >> node_011 
		endr 
	endif 
	return 
endf 

def node_006
	if self.target.in_combat() 
		random (0) >> node_008 
		elser (35) >> node_009 
		elser (55) 
					[RegisterVar0 |-] 
					>> node_012 
					>> node_010 
		elser (10) >> node_013 
		endr 
	else 
		random (0) >> node_008 
		elser (55) >> node_009 
		elser (10) >> node_010 
					>> node_013 
		elser (35) >> node_013 
		endr 
	endif 
	return 
endf 

def node_007
	if self.target(39) 
		>> node_006 
	else 
		if self.in_combat() 
			if self.target.in_combat() 
				random (75) >> node_008 
				elser (15) >> node_009 
				elser (10) >> node_010 
				elser (0) >> node_011 
				endr 
			else 
				random (40) >> node_008 
				elser (60) >> node_009 
				elser (0) >> node_010 
				elser (0) >> node_011 
				endr 
			endif 
		else 
			if self.target.in_combat() 
				random (10) >> node_008 
				elser (5) >> node_009 
				elser (65) >> node_010 
				elser (20) 
							[RegisterVar0 |-] 
							>> node_012 
							>> node_010 
				endr 
			else 
				random (10) >> node_008 
				elser (5) >> node_009 
				elser (65) >> node_010 
				elser (20) >> node_013 
				endr 
			endif 
		endif 
	endif 
	return 
endf 

def node_008
	return 
endf 

def node_009
	>> node_053 
	>> node_118 
	return 
endf 

def node_010
	if self.vertical_distance_to_target().gt(500) 
		>> node_070 
	else 
		if self.distance_3d_to_target().leq(700) 
			random (50) >> node_018 
			elser (50) >> node_019 
			endr 
		else 
			random (40) >> node_017 
			elser (30) >> node_018 
			elser (30) >> node_019 
			endr 
		endif 
	endif 
	return 
endf 

def node_011
	if [RegisterVar0 /= 2] 
		[RegisterVar0 |-] 
	else 
		[RegisterVar0 ++] 
		self.force_area_change2() 
	endif 
	return 
endf 

def node_012
	if [RegisterVar0 /= 1] 
	else 
		[RegisterVar0 ++] 
		self.force_area_change2() 
	endif 
	return 
endf 

def node_013
	self.force_area_change2() 
	return 
endf 

def node_014
	>> node_058 
	>> node_117 
	return 
endf 

def node_015
	if self.vertical_distance_to_target().gt(500) 
		>> node_070 
	else 
		if self.distance_3d_to_target().leq(700) 
			random (50) >> node_018 
			elser (50) >> node_019 
			endr 
		else 
			random (40) >> node_017 
			elser (30) >> node_018 
			elser (30) >> node_019 
			endr 
		endif 
	endif 
	return 
endf 

def node_016
	>> node_074 
	return 
endf 

def node_017
	if self.distance_2d_to_target().leq(3000) 
	else 
		>> node_037 
	endif 
	>> node_057 
	if self.part(3).is_broken(1) 
		>> node_214 
	elif self.enraged() 
		>> node_215 
	else 
		>> node_213 
	endif 
	return 
endf 

def node_018
	if self.distance_2d_to_target().leq(800) 
	else 
		>> node_035 
	endif 
	if self.part(3).is_broken(1) 
		>> node_229 
	else 
		>> node_228 
	endif 
	return 
endf 

def node_019
	if self.angle_2d_cw_between(135,225) 
	else 
		>> node_020 
	endif 
	if self.part(3).is_broken(1) 
		>> node_221 
	else 
		>> node_220 
	endif 
	return 
endf 

def node_020
	if self.distance_2d_to_target().leq(900) 
	else 
		>> node_035 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		if self.angle_2d_cw_between(80,280) 
			>> node_153 
		else 
			>> node_152 
		endif 
	else 
	endif 
	return 
endf 

def node_021
	if function#7F(3) 
		random (30) >> node_022 
		elser (30) >> node_023 
		elser (40) >> node_025 
		endr 
	elif function#7F(7) 
		random (30) >> node_022 
		elser (30) >> node_023 
		elser (40) >> node_025 
		endr 
	else 
		random (30) >> node_024 
		elser (30) >> node_025 
		elser (40) >> node_023 
		endr 
	endif 
	reset 
	return 
endf 

def node_022
	if self.part(0).is_broken(1) 
		>> node_231 
	else 
		>> node_170 
	endif 
	return 
endf 

def node_023
	if self.angle_2d_cw_between(0,180) 
		if self.part(0).is_broken(1) 
			>> node_217 
		else 
			>> node_216 
		endif 
	else 
		if self.part(0).is_broken(1) 
			>> node_219 
		else 
			>> node_218 
		endif 
	endif 
	return 
endf 

def node_024
	if self.part(3).is_broken(1) 
		>> node_221 
	else 
		>> node_220 
	endif 
	return 
endf 

def node_025
	if self.part(3).is_broken(1) 
		>> node_229 
	else 
		>> node_228 
	endif 
	return 
endf 

def node_026
	if function#E8(1) 
		function#E9() 
	else 
		self.targetArea(1) 
	endif 
	>> node_029 
	return 
endf 

def node_027
	if function#E8() 
		function#E9() 
	else 
		self.targetArea(1) 
	endif 
	>> node_029 
	return 
endf 

def node_028
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#E8(2) 
		function#E9() 
	else 
	endif 
	>> node_029 
	return 
endf 

def node_029
	-> viper_tobikadachi.dash(2,1,0,1000,500) 
	if self.distance_3d_to_target().leq(500) 
	else 
		repeat 
	endif 
	return 
endf 

def node_030
	-> viper_tobikadachi.dash(2,1,0,1000,1000) 
	if self.distance_2d_to_target().leq(1000) 
	else 
		repeat 
	endif 
	return 
endf 

def node_031
	-> viper_tobikadachi.dash(2,1,0,500,500) 
	return 
endf 

def node_032
	-> viper_tobikadachi.dash(2,1,0,1500,500) 
	return 
endf 

def node_033
	-> viper_tobikadachi.dash(2,1,0,1000,700) 
	return 
endf 

def node_034
	-> viper_tobikadachi.dash(2,1,0,3000,500) 
	return 
endf 

def node_035
	-> viper_tobikadachi.dash(2,1,0,1500,700) 
	if self.distance_2d_to_target().leq(700) 
		return 
	else -> viper_tobikadachi.dash(2,1,0,1500,700) 
	endif 
	if self.distance_2d_to_target().leq(700) 
		return 
	else -> viper_tobikadachi.dash(2,1,0,1500,700) 
	endif 
	if self.distance_2d_to_target().leq(700) 
		return 
	else -> viper_tobikadachi.dash(2,1,0,1500,700) 
	endif 
	if self.distance_2d_to_target().leq(700) 
		return 
	else -> viper_tobikadachi.dash(2,1,0,1500,700) 
	endif 
	return 
endf 

def node_036
	-> viper_tobikadachi.dash(2,1,0,1500,1000) 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else -> viper_tobikadachi.dash(2,1,0,1500,1000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else -> viper_tobikadachi.dash(2,1,0,1500,1000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else -> viper_tobikadachi.dash(2,1,0,1500,1000) 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else -> viper_tobikadachi.dash(2,1,0,1500,1000) 
	endif 
	return 
endf 

def node_037
	-> viper_tobikadachi.dash(2,1,0,2500,2500) 
	if self.distance_2d_to_target().leq(2500) 
		return 
	else -> viper_tobikadachi.dash(2,1,0,2500,2500) 
	endif 
	if self.distance_2d_to_target().leq(2500) 
		return 
	else -> viper_tobikadachi.dash(2,1,0,2500,2500) 
	endif 
	return 
endf 

def node_038
	-> viper_tobikadachi.dash(2,1,5,500,500) 
	return 
endf 

def node_039
	-> viper_tobikadachi.dash(2,1,5,1500,500) 
	return 
endf 

def node_040
	if self.target(0) @ parameter2:1 
		-> viper_tobikadachi.dash(2,1,0,1000,700) 
	else 
		-> viper_tobikadachi.dash(2,1,0,1000,450) 
	endif 
	if self.distance_3d_to_target().gt(450) 
		if self.target(0) @ parameter2:1 
			-> viper_tobikadachi.dash(2,1,0,1000,700) 
		else 
			-> viper_tobikadachi.dash(2,1,0,1000,450) 
		endif 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		if self.target(0) @ parameter2:1 
			-> viper_tobikadachi.dash(2,1,0,1000,700) 
		else 
			-> viper_tobikadachi.dash(2,1,0,1000,450) 
		endif 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		if self.target(0) @ parameter2:1 
			-> viper_tobikadachi.dash(2,1,0,1000,700) 
		else 
			-> viper_tobikadachi.dash(2,1,0,1000,450) 
		endif 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		if self.target(0) @ parameter2:1 
			-> viper_tobikadachi.dash(2,1,0,1000,700) 
		else 
			-> viper_tobikadachi.dash(2,1,0,1000,450) 
		endif 
	else 
	endif 
	return 
endf 

def node_041
	-> viper_tobikadachi.dash(2,1,0,1000,300) 
	if self.distance_3d_to_target().gt(450) 
		-> viper_tobikadachi.dash(2,1,0,1000,300) 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		-> viper_tobikadachi.dash(2,1,0,1000,300) 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		-> viper_tobikadachi.dash(2,1,0,1000,300) 
	else 
	endif 
	if self.distance_3d_to_target().gt(450) 
		-> viper_tobikadachi.dash(2,1,0,1000,300) 
	else 
	endif 
	return 
endf 

def node_042
	if self.fatigued() 
		-> viper_tobikadachi.tired_walk(1,0,0,1000) 
	else 
		-> viper_tobikadachi.walk(1,0,0,1000) 
	endif 
	return 
endf 

def node_043
	if self.fatigued() 
		-> viper_tobikadachi.tired_walk(2,1,0,500,300) 
	else 
		-> viper_tobikadachi.walk(2,1,0,500,300) 
	endif 
	return 
endf 

def node_044
	if self.fatigued() 
		-> viper_tobikadachi.tired_walk(2,1,0,1500,1000) 
	else 
		-> viper_tobikadachi.walk(2,1,0,1500,1000) 
	endif 
	return 
endf 

def node_045
	if self.fatigued() 
		-> viper_tobikadachi.tired_walk(2,1,0,1000,700) 
	else 
		-> viper_tobikadachi.walk(2,1,0,1000,700) 
	endif 
	return 
endf 

def node_046
	if self.fatigued() 
		-> viper_tobikadachi.tired_walk(2,1,5,500,300) 
	else 
		-> viper_tobikadachi.walk(2,1,5,500,300) 
	endif 
	return 
endf 

def node_047
	if self.fatigued() 
		-> viper_tobikadachi.tired_walk(2,1,5,1500,1000) 
	else 
		-> viper_tobikadachi.walk(2,1,5,1500,1000) 
	endif 
	return 
endf 

def node_048
	if self.fatigued() 
		-> viper_tobikadachi.tired_walk(2,1,5,1500,300) 
	else 
		-> viper_tobikadachi.walk(2,1,5,1500,300) 
	endif 
	return 
endf 

def node_049
	if self.angle_2d_cw_between(30,330) 
		-> viper_tobikadachi.turn() 
	else 
	endif 
	return 
endf 

def node_050
	if self.angle_2d_cw_between(30,330) 
		if self.distance_2d_to_target().leq(400) 
			-> viper_tobikadachi.back_turn() 
		else 
			-> viper_tobikadachi.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_051
	if self.angle_2d_cw_between(60,300) 
		if self.distance_2d_to_target().leq(400) 
			-> viper_tobikadachi.back_turn() 
		else 
			-> viper_tobikadachi.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_052
	if self.angle_2d_cw_between(90,270) 
		if self.distance_2d_to_target().leq(400) 
			-> viper_tobikadachi.back_turn() 
		else 
			-> viper_tobikadachi.turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_053
	if self.angle_2d_cw_between(30,330) 
		if self.distance_2d_to_target().leq(400) 
			-> viper_tobikadachi.back_turn() 
		else 
			-> viper_tobikadachi.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_054
	if self.angle_2d_cw_between(60,300) 
		if self.distance_2d_to_target().leq(400) 
			-> viper_tobikadachi.back_turn() 
		else 
			-> viper_tobikadachi.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_055
	if self.angle_2d_cw_between(90,270) 
		if self.distance_2d_to_target().leq(400) 
			-> viper_tobikadachi.back_turn() 
		else 
			-> viper_tobikadachi.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_056
	if self.angle_2d_cw_between(130,230) 
		if 
			-> viper_tobikadachi.back_turn() 
		else 
			-> viper_tobikadachi.quick_turn() 
		endif 
	else 
	endif 
	return 
endf 

def node_057
	-> viper_tobikadachi.quick_turn() 
	return 
endf 

def node_058
	-> viper_tobikadachi.back_turn() 
	return 
endf 

def node_059
	>> node_171 
	return 
endf 

def node_060
	if self.angle_2d_cw_between(130,230) 
		>> node_152 
	else 
	endif 
	return 
endf 

def node_061
	if self.target(4) 
		>> node_117 
	elif self.distance_2d_to_target().leq(700) 
		if self.angle_2d_cw_between(225,135) 
			>> node_163 
		else 
			>> node_152 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_152 
	else 
		-> viper_tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_062
	if self.target(4) 
		>> node_117 
	elif self.distance_2d_to_target().leq(700) 
		if self.angle_2d_cw_between(40,110) 
			>> node_153 
		elif self.angle_2d_cw_between(250,320) 
			>> node_153 
		else 
			>> node_152 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_152 
	else 
		-> viper_tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_063
	if self.target(4) 
		>> node_117 
	elif self.distance_2d_to_target().leq(900) 
		if self.angle_2d_cw_between(80,280) 
			>> node_153 
		else 
			>> node_152 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_152 
	else 
		-> viper_tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_064
	if self.target(4) 
		>> node_117 
	elif self.distance_2d_to_target().leq(700) 
		if self.angle_2d_cw_between(70,290) 
			>> node_153 
		else 
			>> node_152 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_152 
	else 
		-> viper_tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_065
	if self.target(4) 
		>> node_117 
	elif self.distance_2d_to_target().leq(500) 
		if self.angle_2d_cw_between(225,135) 
			>> node_153 
		else 
			>> node_152 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_152 
	else 
		-> viper_tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_066
	if self.enraged() 
		if self.part(0).is_broken(1) 
			>> node_227 
		else 
			>> node_225 
		endif 
	else 
		>> node_163 
	endif 
	return 
endf 

def node_067
	>> node_153 
	return 
endf 

def node_068
	if self.target(4) 
		>> node_117 
	elif self.distance_2d_to_target().leq(700) 
		if self.angle_2d_cw_between(225,135) 
			>> node_153 
		else 
			>> node_152 
		endif 
	elif self.distance_2d_to_target().leq(1000) 
		>> node_152 
	else 
		-> viper_tobikadachi.dash(2,1,0,1000,1000) 
		repeat 
	endif 
	return 
endf 

def node_069
	>> node_054 
	if self.distance_2d_to_target().leq(800) 
		>> node_171 
	elif self.distance_2d_to_target().gt(2500) 
		>> node_037 
	else 
	endif 
	>> node_177 
	return 
endf 

def node_070
	>> node_053 
	>> node_179 
	return 
endf 

def node_071
	>> node_057 
	>> node_180 
	return 
endf 

def node_072
	>> node_062 
	if self.part(0).is_broken(1) 
		>> node_230 
	else 
		>> node_162 
	endif 
	>> node_061 
	return 
endf 

def node_073
	if self.distance_2d_to_target().leq(1200) 
		if self.angle_2d_cw_between(225,135) 
		else 
			>> node_062 
		endif 
	else 
		>> node_036 
	endif 
	if self.part(0).is_broken(1) 
		>> node_231 
	else 
		>> node_170 
	endif 
	return 
endf 

def node_074
	>> node_062 
	>> node_154 
	return 
endf 

def node_075
	if self.angle_2d_cw_between(135,225) 
	else 
		>> node_063 
	endif 
	if self.part(3).is_broken(1) 
		>> node_221 
	else 
		>> node_220 
	endif 
	return 
endf 

def node_076
	>> node_062 
	if self.angle_2d_cw_between(0,180) 
		>> node_161 
	else 
		>> node_160 
	endif 
	return 
endf 

def node_077
	>> node_062 
	if self.part(3).is_broken(1) 
		>> node_223 
	else 
		>> node_222 
	endif 
	return 
endf 

def node_078
	>> node_055 
	if self.distance_2d_to_target().leq(600) 
		>> node_059 
	elif self.distance_2d_to_target().gt(2500) 
		>> node_037 
	else 
	endif 
	if self.part(0).is_broken(1) 
		>> node_232 
	else 
		>> node_178 
	endif 
	>> node_062 
	return 
endf 

def node_079
	>> node_065 
	>> node_080 
	return 
endf 

def node_080
	if self.angle_2d_cw_between(0,180) 
		if self.part(0).is_broken(1) 
			>> node_217 
		else 
			>> node_216 
		endif 
	else 
		if self.part(0).is_broken(1) 
			>> node_219 
		else 
			>> node_218 
		endif 
	endif 
	return 
endf 

def node_081
	if self.distance_2d_to_target().leq(800) 
	else 
		>> node_062 
	endif 
	if self.part(3).is_broken(1) 
		>> node_229 
	else 
		>> node_228 
	endif 
	return 
endf 

def node_082
	if self.distance_2d_to_target().leq(1200) 
		if self.enraged() 
			random (35) >> node_109 
			elser (65) 
			endr 
		elif self.fatigued() 
			random (7) >> node_109 
			elser (93) 
			endr 
		else 
			random (13) >> node_109 
			elser (87) 
			endr 
		endif 
	else 
	endif 
	return 
endf 

def node_083
	>> node_087 
	if self.angle_2d_cw_between(110,250) 
		>> node_075 
	else 
	endif 
	return 
endf 

def node_084
	if self.distance_2d_to_target().leq(3000) 
	else 
		>> node_037 
	endif 
	>> node_057 
	if self.part(3).is_broken(1) 
		>> node_214 
	elif self.enraged() 
		>> node_215 
	else 
		>> node_213 
	endif 
	return 
endf 

def node_085
	if self.distance_2d_to_target().gt(600) 
		>> node_062 
	elif self.angle_2d_cw_between(320,40) 
		>> node_062 
	elif self.angle_2d_cw_between(140,220) 
		>> node_062 
	endif 
	>> node_208 
	return 
endf 

def node_086
	random (90) 
				>> node_085 
	elser (10) 
	endr 
	>> node_072 
	return 
endf 

def node_087
	random (90) 
				>> node_085 
	elser (10) 
	endr 
	>> node_077 
	return 
endf 

def node_088
	if self.distance_2d_to_target().leq(600) 
		random (90) 
		elser (10) 
					>> node_085 
		endr 
	else 
	endif 
	>> node_073 
	return 
endf 

def node_089
	if self.distance_2d_to_target().leq(600) 
		random (90) 
		elser (10) 
					>> node_085 
		endr 
	else 
	endif 
	>> node_075 
	return 
endf 

def node_090
	if self.distance_2d_to_target().leq(600) 
		random (90) 
		elser (10) 
					>> node_085 
		endr 
	else 
	endif 
	>> node_079 
	return 
endf 

def node_091
	if self.distance_2d_to_target().leq(600) 
		random (90) 
		elser (10) 
					>> node_085 
		endr 
	else 
	endif 
	>> node_081 
	return 
endf 

def node_092
	>> node_094 
	>> node_097 
	if self.part(3).is_broken(1) 
		>> node_210 
	else 
		>> node_209 
	endif 
	return 
endf 

def node_093
	if self.quest_id(66862) 
		>> node_096 
	else 
		>> node_095 
	endif 
	>> node_098 
	if self.part(3).is_broken(1) 
		>> node_212 
	else 
		>> node_211 
	endif 
	return 
endf 

def node_094
	if self.distance_2d_to_target().leq(800) 
		if self.enraged() 
			if self.hp_percent().gt(50) 
				random (50) >> node_204 
				elser (50) >> node_200 
				endr 
			else 
				random (50) >> node_204 
				elser (50) >> node_200 
				endr 
			endif 
		else 
			if self.hp_percent().gt(50) 
				random (50) >> node_200 
				elser (50) >> node_204 
				endr 
			else 
				random (100) >> node_200 
				elser (0) >> node_204 
				endr 
			endif 
		endif 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_200 
	elif self.distance_2d_to_target().leq(3500) 
		if self.hp_percent().gt(50) 
			>> node_202 
		else 
			if self.enraged() 
				>> node_202 
			else 
				>> node_036 
				>> node_200 
			endif 
		endif 
	else 
		if self.hp_percent().gt(50) 
			>> node_037 
			>> node_202 
		else 
			if self.enraged() 
				>> node_037 
				>> node_202 
			else 
				>> node_036 
				>> node_200 
			endif 
		endif 
	endif 
	return 
endf 

def node_095
	if self.distance_2d_to_target().leq(800) 
		if self.enraged() 
			if self.hp_percent().gt(50) 
				random (50) >> node_205 
				elser (50) >> node_201 
				endr 
			else 
				random (50) >> node_205 
				elser (50) >> node_201 
				endr 
			endif 
		else 
			if self.hp_percent().gt(50) 
				random (50) >> node_201 
				elser (50) >> node_205 
				endr 
			else 
				random (100) >> node_201 
				elser (0) >> node_205 
				endr 
			endif 
		endif 
	elif self.distance_2d_to_target().leq(1500) 
		>> node_201 
	elif self.distance_2d_to_target().leq(3500) 
		if self.hp_percent().gt(50) 
			>> node_203 
		else 
			if self.enraged() 
				>> node_203 
			else 
				>> node_036 
				>> node_201 
			endif 
		endif 
	else 
		if self.hp_percent().gt(50) 
			>> node_037 
			>> node_203 
		else 
			if self.enraged() 
				>> node_037 
				>> node_203 
			else 
				>> node_036 
				>> node_201 
			endif 
		endif 
	endif 
	return 
endf 

def node_096
	if self.distance_2d_to_target().leq(1200) 
		if self.enraged() 
			if self.hp_percent().gt(50) 
				random (50) >> node_205 
				elser (50) >> node_201 
				endr 
			else 
				random (50) >> node_205 
				elser (50) >> node_201 
				endr 
			endif 
		else 
			if self.hp_percent().gt(50) 
				random (50) >> node_201 
				elser (50) >> node_205 
				endr 
			else 
				random (100) >> node_201 
				elser (0) >> node_205 
				endr 
			endif 
		endif 
	elif self.distance_2d_to_target().leq(2250) 
		>> node_201 
	elif self.distance_2d_to_target().leq(5250) 
		if self.hp_percent().gt(50) 
			>> node_203 
		else 
			if self.enraged() 
				>> node_203 
			else 
				>> node_036 
				>> node_201 
			endif 
		endif 
	else 
		if self.hp_percent().gt(50) 
			>> node_037 
			>> node_203 
		else 
			if self.enraged() 
				>> node_037 
				>> node_203 
			else 
				>> node_036 
				>> node_201 
			endif 
		endif 
	endif 
	return 
endf 

def node_097
	if self.enraged() 
		if self.hp_percent().gt(50) 
			random (50) >> node_099 
			elser (50) 
			endr 
		else 
			random (30) >> node_099 
			elser (70) 
			endr 
		endif 
	else 
		if self.hp_percent().gt(50) 
			random (50) >> node_099 
			elser (50) 
			endr 
		else 
			random (0) >> node_099 
			elser (100) 
			endr 
		endif 
	endif 
	return 
endf 

def node_098
	if self.enraged() 
		if self.hp_percent().gt(50) 
			random (50) >> node_100 
			elser (50) 
			endr 
		else 
			random (30) >> node_100 
			elser (70) 
			endr 
		endif 
	else 
		if self.hp_percent().gt(50) 
			random (50) >> node_100 
			elser (50) 
			endr 
		else 
			random (0) >> node_100 
			elser (100) 
			endr 
		endif 
	endif 
	return 
endf 

def node_099
	if self.distance_2d_to_target().leq(1000) 
		>> node_206 
	else 
	endif 
	return 
endf 

def node_100
	if self.distance_2d_to_target().leq(1000) 
		>> node_207 
	else 
	endif 
	return 
endf 

def node_101
	>> node_072 
	if self.enraged() 
		random (50) >> node_092 
		elser (50) >> node_093 
		endr 
	else 
		random (90) >> node_092 
		elser (10) >> node_093 
		endr 
	endif 
	return 
endf 

def node_102
	if self.enraged() 
		random (55) >> node_092 
		elser (45) >> node_093 
		endr 
	else 
		random (55) >> node_092 
		elser (45) >> node_093 
		endr 
	endif 
	return 
endf 

def node_103
	>> node_157 
	if function#EA() 
		>> node_182 
	elif function#EA(1) 
		if self.part(3).is_broken(1) 
			>> node_182 
		else 
			>> node_181 
		endif 
	endif 
	return 
endf 

def node_104
	>> node_183 
	return 
endf 

def node_105
	if function#101(3) 
		function#E9() 
		-> viper_tobikadachi.dash(1,0,0,500) 
		self.targetEnemy(target_em.random_player_or_cat) 
	else 
	endif 
	return 
endf 

def node_106
	if function#EA() 
		>> node_104 
	elif function#EA(1) 
		>> node_103 
	endif 
	return 
endf 

def node_107
	if self.part(3).is_broken(1) 
		>> node_221 
	else 
		>> node_220 
	endif 
	return 
endf 

def node_108
	>> node_146 
	return 
endf 

def node_109
	if function#EB() 
		function#E9() 
		>> node_155 
		if self.part(1).is_broken(1) 
			random (30) 
						>> node_159 
			elser (70) 
			endr 
		else 
		endif 
		reset 
	else 
	endif 
	return 
endf 

def node_110
	if function#E7() 
		>> node_112 
	else 
	endif 
	return 
endf 

def node_111
	return 
endf 

def node_112
	>> node_156 
	return 
endf 

def node_113
	if self.angular_18(270,90) 
		>> node_112 
		>> node_029 
		reset 
	else 
	endif 
	return 
endf 

def node_114
	>> node_142 
	return 
endf 

def node_115
	>> node_142 
	return 
endf 

def node_116
	>> node_141 
	return 
endf 

def node_117
	>> node_144 
	return 
endf 

def node_118
	>> node_145 
	return 
endf 

def node_119
	>> node_193 
	return 
endf 

def node_120
	if function#EA(1) 
		if function#E7() 
			>> node_186 
		else 
			>> node_189 
		endif 
	else 
	endif 
	return 
endf 

def node_121
	>> node_184 
	return 
endf 

def node_122
	>> node_055 
	>> node_187 
	return 
endf 

def node_123
	random (50) 
				>> node_144 
	elser (50) 
	endr 
	return 
endf 

def node_124
	>> node_147 
	return 
endf 

def node_125
	>> node_148 
	return 
endf 

def node_126
	>> node_149 
	return 
endf 

def node_127
	>> node_150 
	return 
endf 

def node_128
	>> node_049 
	>> node_151 
	return 
endf 

def node_129
	>> node_062 
	>> node_194 
	return 
endf 

def node_130
	>> node_195 
	return 
endf 

def node_131
	>> node_196 
	return 
endf 

def node_132
	>> node_190 
	return 
endf 

def node_133
	>> node_050 
	>> node_192 
	return 
endf 

def node_134
	return 
endf 

def node_135
	-> viper_tobikadachi.turn() 
	>> node_143 
	return 
endf 

def node_136
	>> node_191 
	return 
endf 

def node_137
	>> node_199 
	return 
endf 

def node_138
	>> node_198 
	return 
endf 

def node_139
	random (35) 
				>> node_109 
	elser (65) 
	endr 
	return 
endf 

def node_140
	-> viper_tobikadachi.idle() 
	return 
endf 

def node_141
	-> viper_tobikadachi.discover() 
	return 
endf 

def node_142
	-> viper_tobikadachi.search() 
	return 
endf 

def node_143
	-> viper_tobikadachi.marking() 
	return 
endf 

def node_144
	-> viper_tobikadachi.threat() 
	return 
endf 

def node_145
	-> viper_tobikadachi.threat_short() 
	return 
endf 

def node_146
	-> viper_tobikadachi.tired() 
	return 
endf 

def node_147
	-> viper_tobikadachi.sniff_s() 
	return 
endf 

def node_148
	-> viper_tobikadachi.sniff_l() 
	return 
endf 

def node_149
	-> viper_tobikadachi.lost_search_short() 
	return 
endf 

def node_150
	-> viper_tobikadachi.lost_search() 
	return 
endf 

def node_151
	-> viper_tobikadachi.peep_grass_search() 
	return 
endf 

def node_152
	-> viper_tobikadachi.side_turn() 
	return 
endf 

def node_153
	-> viper_tobikadachi.side_turn_to_idle() 
	return 
endf 

def node_154
	-> viper_tobikadachi.side_walk(2,0,0,500) 
	return 
endf 

def node_155
	>> node_110 
	-> viper_tobikadachi.seamless_jump_to_climb() 
	return 
endf 

def node_156
	if function#E7() 
		-> viper_tobikadachi.jump_to_ground() 
	else 
		>> node_117 
	endif 
	return 
endf 

def node_157
	if function#E7() 
		-> viper_tobikadachi.climb_idle_switch() 
	else 
		>> node_117 
	endif 
	return 
endf 

def node_158
	if function#E7() 
		-> viper_tobikadachi.climb_life_search() 
	else 
		>> node_117 
	endif 
	return 
endf 

def node_159
	if function#E7() 
		-> viper_tobikadachi.climb_balance_break() 
	else 
		>> node_117 
	endif 
	return 
endf 

def node_160
	-> viper_tobikadachi.side_step_l() 
	return 
endf 

def node_161
	-> viper_tobikadachi.side_step_r() 
	return 
endf 

def node_162
	-> viper_tobikadachi.side_bite() 
	return 
endf 

def node_163
	-> viper_tobikadachi.side_bite_to_idle() 
	return 
endf 

def node_164
	>> node_110 
	-> viper_tobikadachi.side_bite_to_idle() 
	return 
endf 

def node_165
	>> node_110 
	-> action#2B() 
	return 
endf 

def node_166
	>> node_110 
	-> action#2C() 
	return 
endf 

def node_167
	>> node_110 
	-> action#2D() 
	return 
endf 

def node_168
	>> node_110 
	-> action#2E() 
	return 
endf 

def node_169
	>> node_110 
	-> action#2F() 
	return 
endf 

def node_170
	-> viper_tobikadachi.side_rush_bite() 
	return 
endf 

def node_171
	-> viper_tobikadachi.back_step() 
	return 
endf 

def node_172
	>> node_110 
	-> viper_tobikadachi.reposition_attack_l() 
	return 
endf 

def node_173
	>> node_110 
	-> viper_tobikadachi.reposition_attack_r() 
	return 
endf 

def node_174
	>> node_110 
	-> viper_tobikadachi.reposition_attack_r() 
	return 
endf 

def node_175
	>> node_110 
	-> action#37() 
	return 
endf 

def node_176
	>> node_110 
	-> action#38() 
	return 
endf 

def node_177
	>> node_110 
	-> viper_tobikadachi.long_glide_attack() 
	return 
endf 

def node_178
	-> viper_tobikadachi.long_bite_attack() 
	return 
endf 

def node_179
	-> viper_tobikadachi.jump_attack() 
	return 
endf 

def node_180
	-> viper_tobikadachi.fall_attack() 
	return 
endf 

def node_181
	if function#E7() 
		-> viper_tobikadachi.climb_glide_shock() 
	else 
		>> node_072 
	endif 
	return 
endf 

def node_182
	if function#E7() 
		-> viper_tobikadachi.climb_glide_attack() 
	else 
		>> node_072 
	endif 
	return 
endf 

def node_183
	if function#E7() 
		-> viper_tobikadachi.climb_glide_quick() 
	else 
		>> node_072 
	endif 
	return 
endf 

def node_184
	if function#E7() 
		-> viper_tobikadachi.climb_charge_start() 
	else 
		-> viper_tobikadachi.charge_start() 
	endif 
	return 
endf 

def node_185
	if function#E7() 
		-> viper_tobikadachi.climb_charge_max() 
	else 
		-> viper_tobikadachi.charge_max() 
	endif 
	return 
endf 

def node_186
	if function#E7() 
		-> viper_tobikadachi.climb_charge_refresh() 
	else 
		-> viper_tobikadachi.charge_refresh() 
	endif 
	return 
endf 

def node_187
	>> node_110 
	-> viper_tobikadachi.charge_start() 
	return 
endf 

def node_188
	>> node_110 
	-> viper_tobikadachi.charge_max() 
	return 
endf 

def node_189
	>> node_110 
	-> viper_tobikadachi.charge_refresh() 
	return 
endf 

def node_190
	-> viper_tobikadachi.sleep() 
	return 
endf 

def node_191
	if function#C9() 
		-> viper_tobikadachi.dying_sleep(3,0,0,150) 
	else 
		function#CA() 
	endif 
	return 
endf 

def node_192
	-> viper_tobikadachi.drink() 
	return 
endf 

def node_193
	-> viper_tobikadachi.refresh() 
	return 
endf 

def node_194
	-> viper_tobikadachi.predator_attack() 
	return 
endf 

def node_195
	-> viper_tobikadachi.food_carry_start() 
	return 
endf 

def node_196
	-> viper_tobikadachi.food_carry_end_to_eat() 
	return 
endf 

def node_197
	-> viper_tobikadachi.food_eat() 
	return 
endf 

def node_198
	-> viper_tobikadachi.hungry_desire_change_action() 
	return 
endf 

def node_199
	-> viper_tobikadachi.sunbath() 
	return 
endf 

def node_200
	-> viper_tobikadachi.short_glide() 
	return 
endf 

def node_201
	-> viper_tobikadachi.short_glide_to_tail_smash() 
	return 
endf 

def node_202
	if self.distance_2d_to_target().leq(1400) 
		-> viper_tobikadachi.back_turn() 
	else 
	endif 
	-> viper_tobikadachi.long_glide() 
	return 
endf 

def node_203
	if self.distance_2d_to_target().leq(1400) 
		-> viper_tobikadachi.back_turn() 
	else 
	endif 
	-> viper_tobikadachi.long_glide_to_tail_smash() 
	return 
endf 

def node_204
	-> viper_tobikadachi.turn_ground_to_glide() 
	return 
endf 

def node_205
	-> viper_tobikadachi.turn_ground_to_glide_to_tail_smash() 
	return 
endf 

def node_206
	-> viper_tobikadachi.turn_glide_to_glide() 
	return 
endf 

def node_207
	-> viper_tobikadachi.turn_glide_to_glide_to_tail_smash() 
	return 
endf 

def node_208
	-> viper_tobikadachi.turn_ground_to_ground() 
	return 
endf 

def node_209
	-> viper_tobikadachi.glide_tail_attack() 
	return 
endf 

def node_210
	-> viper_tobikadachi.broken_glide_tail_attack() 
	return 
endf 

def node_211
	-> viper_tobikadachi.glide_tail_smash() 
	return 
endf 

def node_212
	-> viper_tobikadachi.broken_glide_tail_smash() 
	return 
endf 

def node_213
	-> viper_tobikadachi.poison_needle() 
	return 
endf 

def node_214
	-> viper_tobikadachi.broken_poison_needle() 
	return 
endf 

def node_215
	-> viper_tobikadachi.angry_poison_needle() 
	return 
endf 

def node_216
	-> viper_tobikadachi.combo_bite_l() 
	return 
endf 

def node_217
	-> viper_tobikadachi.broken_combo_bite_l() 
	return 
endf 

def node_218
	-> viper_tobikadachi.combo_bite_r() 
	return 
endf 

def node_219
	-> viper_tobikadachi.broken_combo_bite_r() 
	return 
endf 

def node_220
	-> viper_tobikadachi.poison_side_tail_attack() 
	return 
endf 

def node_221
	-> viper_tobikadachi.broken_poison_side_tail_attack() 
	return 
endf 

def node_222
	-> viper_tobikadachi.poison_side_quick_tail() 
	return 
endf 

def node_223
	-> viper_tobikadachi.broken_poison_side_quick_tail() 
	return 
endf 

def node_224
	-> viper_tobikadachi.poison_side_head() 
	return 
endf 

def node_225
	-> viper_tobikadachi.poison_side_head_to_idle() 
	return 
endf 

def node_226
	-> viper_tobikadachi.broken_poison_side_head() 
	return 
endf 

def node_227
	-> viper_tobikadachi.broken_poison_side_head_to_idle() 
	return 
endf 

def node_228
	-> viper_tobikadachi.poison_discharge() 
	return 
endf 

def node_229
	-> viper_tobikadachi.broken_poison_discharge() 
	return 
endf 

def node_230
	-> viper_tobikadachi.broken_side_bite() 
	return 
endf 

def node_231
	-> viper_tobikadachi.broken_side_rush_bite() 
	return 
endf 

def node_232
	-> viper_tobikadachi.broken_long_bite_attack() 
	return 
endf 

