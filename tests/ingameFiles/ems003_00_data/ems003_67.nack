importactions Kelbi as kelbi

def node_000
	>> node_030 
	if [RegisterVar0 -= 1] 
		>> node_002 
	elif [RegisterVar1 -= 1] 
		>> node_023 
	else 
		>> node_028 
	endif 
	reset 
endf 

def node_001
endf 

def node_002
	self.targetUnknown(48,0) 
	if self.target(20) 
		self.targetUnknown(0,0) 
		>> node_003 
		>> node_006 
	else 
		self.targetUnknown(0,0) 
		>> node_005 
		>> node_007 
	endif 
	return 
endf 

def node_003
	function#DD(600) 
	function#DE(2500) 
	function#E2(2) 
	if function#D2(4) 
	else 
		>> node_004 
	endif 
	return 
endf 

def node_004
	function#DD(600) 
	function#DE(5000) 
	function#E2(2) 
	if function#D2(4) 
	else 
		function#E4(4) 
		repeat 
	endif 
	return 
endf 

def node_005
	function#E2() 
	function#EC(3) 
	if function#D2(11) 
	else 
		>> node_047 
	endif 
	return 
endf 

def node_006
	>> node_030 
	>> node_036 
	if self.distance_3d_to_target().leq(300) 
		>> node_012 
		[RegisterVar5 ++] 
		function#DA() 
	else 
		>> node_008 
		>> node_011 
		repeat 
	endif 
	return 
endf 

def node_007
	>> node_030 
	>> node_041 
	if self.distance_3d_to_target().leq(300) 
		>> node_009 
		function#DA() 
	else 
		>> node_010 
		repeat 
	endif 
	return 
endf 

def node_008
	>> node_050 
	return 
endf 

def node_009
	>> node_034 
	>> node_056 
	return 
endf 

def node_010
	>> node_051 
	return 
endf 

def node_011
	if [RegisterVar5 %= 1] 
		random (2) >> node_016 
		elser (4) >> node_017 
		elser (4) >> node_018 
		elser (90) 
		endr 
	endif 
	return 
endf 

def node_012
	if [RegisterVar5 *= 0] 
		>> node_015 
	elif function#3C(1) 
		>> node_013 
	else 
		>> node_014 
	endif 
	return 
endf 

def node_013
	random (5) >> node_017 
	elser (20) >> node_021 
	elser (5) >> node_016 
	elser (70) >> node_015 
	endr 
	return 
endf 

def node_014
	random (5) >> node_017 
	elser (5) >> node_018 
	elser (5) >> node_016 
	elser (85) >> node_015 
	endr 
	return 
endf 

def node_015
	random (75) >> node_020 
	elser (25) >> node_019 
	endr 
	return 
endf 

def node_016
	>> node_033 
	>> node_053 
	[RegisterVar5 |-] 
	return 
endf 

def node_017
	>> node_033 
	>> node_055 
	[RegisterVar5 |-] 
	return 
endf 

def node_018
	>> node_033 
	>> node_054 
	[RegisterVar5 |-] 
	return 
endf 

def node_019
	>> node_033 
	>> node_059 
	return 
endf 

def node_020
	>> node_033 
	>> node_057 
	return 
endf 

def node_021
	>> node_033 
	>> node_058 
	return 
endf 

def node_022
endf 

def node_023
	>> node_030 
	>> node_024 
	>> node_026 
	reset 
endf 

def node_024
	function#DE(3000) 
	function#E2(2) 
	function#EA(3) 
	if function#D2(1) 
	else 
		>> node_025 
	endif 
	return 
endf 

def node_025
	function#E2() 
	if function#D2(4) 
	else 
		function#E4(1) 
		function#E4(4) 
		function#E7(1) 
		function#E7(4) 
		>> node_055 
	endif 
	return 
endf 

def node_026
	>> node_030 
	>> node_036 
	if self.distance_3d_to_target().leq(150) 
		>> node_012 
		[RegisterVar5 ++] 
		function#DA() 
	else 
		>> node_050 
		>> node_011 
		repeat 
	endif 
	return 
endf 

def node_027
endf 

def node_028
	>> node_047 
	reset 
endf 

def node_029
endf 

def node_030
	if function#FA() 
		>> node_047 
	endif 
	return 
endf 

def node_031
endf 

def node_032
	if function#46() @ unknExtra2:1 
		>> node_048 
		function#DA() 
	else 
		return 
	endif 
	reset 
endf 

def node_033
	if function#45() 
		>> node_062 
	endif 
	return 
endf 

def node_034
	if function#45() 
		>> node_063 
	endif 
	return 
endf 

def node_035
endf 

def node_036
	>> node_037 
	return 
endf 

def node_037
	function#DE(3500) 
	function#EB(2000) 
	function#DF(80) 
	if function#D2(8) 
		>> node_038 
		function#E5() 
	endif 
	return 
endf 

def node_038
	if function#D8() 
		>> node_039 
	endif 
	return 
endf 

def node_039
	>> node_033 
	if self.angle_2d_ccw_between(90,0) 
		>> node_064 
		>> node_065 
		>> node_040 
	else 
		>> node_053 
		>> node_040 
	endif 
	return 
endf 

def node_040
	if self.distance_3d_to_target().leq(3500) 
		>> node_060 
	else 
		>> node_056 
	endif 
	return 
endf 

def node_041
	>> node_042 
	return 
endf 

def node_042
	function#DE(3500) 
	function#EB(2000) 
	function#DF(80) 
	if function#D2(8) 
		>> node_043 
		function#E5() 
	endif 
	return 
endf 

def node_043
	if function#D8() 
		>> node_044 
	endif 
	return 
endf 

def node_044
	>> node_034 
	if self.angle_2d_ccw_between(90,0) 
		>> node_064 
		>> node_065 
		>> node_045 
	else 
		>> node_053 
		>> node_045 
	endif 
	return 
endf 

def node_045
	if self.distance_3d_to_target().leq(3500) 
		>> node_060 
	else 
		>> node_056 
	endif 
	return 
endf 

def node_046
endf 

def node_047
	>> node_060 
	return 
endf 

def node_048
	>> node_061 
	return 
endf 

def node_049
endf 

def node_050
	-> action#08(2,1,0,300,300) 
	>> node_032 
	return 
endf 

def node_051
	-> action#09(2,1,0,500,500) 
	>> node_032 
	return 
endf 

def node_052
	-> action#0B(6,0,0,500) 
	>> node_032 
	return 
endf 

def node_053
	-> action#02() 
	return 
endf 

def node_054
	-> action#03() 
	return 
endf 

def node_055
	-> action#04() 
	return 
endf 

def node_056
	-> action#06() 
	return 
endf 

def node_057
	-> action#1F() 
	-> action#20() 
	return 
endf 

def node_058
	-> action#1D() 
	return 
endf 

def node_059
	-> action#25() 
	return 
endf 

def node_060
	-> action#26() 
	return 
endf 

def node_061
	-> action#27() 
	return 
endf 

def node_062
	-> action#28() 
	return 
endf 

def node_063
	-> action#0D() 
	return 
endf 

def node_064
	-> action#07() 
	return 
endf 

def node_065
	-> action#23() 
	return 
endf 

