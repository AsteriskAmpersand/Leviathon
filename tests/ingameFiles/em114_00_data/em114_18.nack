importactions Radobaan as radobaan
importlibrary Global as Global

def node_000 : 1
	>> Global.node_008 
	self.targetEnemy(13) 
	if self.target(4) 
		>> Global.node_010 
	else 
		if self.enraged() 
			>> node_005 
		else 
			>> node_001 
		endif 
	endif 
	conclude 
endf 

def node_001 : 2
	>> node_002 
	>> node_003 
	>> node_004 
	return 
endf 

def node_002 : 3
	if self.distance_3d_to_target().leq(800) 
		-> radobaan.back_turn() 
	elif self.angle_2d_cw_between(30,330) 
		-> radobaan.quick_turn() 
	else 
	endif 
	return 
endf 

def node_003 : 4
	self.targetEnemy(13) 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else 
		>> node_006 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else 
		>> node_006 
	endif 
	if self.distance_2d_to_target().leq(1000) 
		return 
	else 
		>> node_006 
	endif 
	return 
endf 

def node_004 : 5
	self.targetEnemy(48) 
	if self.target(7) 
		>> node_007 
	elif self.target(10) 
		>> node_009 
	elif self.distance_3d_to_target().gt(1000) 
		>> node_007 
	elif self.angle_2d_cw_between(45,315) 
		>> node_007 
	else 
		>> node_008 
	endif 
	return 
endf 

def node_005 : 6
	>> Global.node_037 
	return 
endf 

def node_006 : 8
	if self.fatigued() 
		-> radobaan.tired_dash(2,1,5,1500,900) 
	else 
		-> radobaan.dash(2,1,5,1500,900) 
	endif 
	return 
endf 

def node_007 : 9
	-> radobaan.sniff_s() 
	-> radobaan.search() 
	return 
endf 

def node_008 : 10
	if function#5F() 
		-> radobaan.search() 
	else 
		-> radobaan.threat_short() 
	endif 
	return 
endf 

def node_009 : 11
	self.targetEnemy(9) @ parameter2:1000 
	>> Global.node_025 
	return 
endf 

