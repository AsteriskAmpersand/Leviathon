importactions Mosswine as mosswine
importlibrary Global as Global

def node_000
	>> Global.node_000 
	>> node_001 
	*&
	if [RegisterVar4 *= 0] 
		if [RegisterVar18 += 0] 
			[RegisterVar18 ++] 
			>> node_011 
			>> node_020 
		else 
			>> node_037 
		endif 
	else 
		>> node_002 
		>> node_009 
		>> node_003 
		>> node_004 
	endif 
	reset 
endf 

def node_001
	if function#3F() 
		>> node_010 
	else 
	endif 
	return 
endf 

def node_002
	if function#4D(1) 
		self.targetEnemy(36) 
	else 
		function#52() 
		self.targetEnemy(16) 
	endif 
	return 
endf 

def node_003
	>> Global.node_002 
	if self.distance_3d_to_target().leq(150) 
	else 
		-> action#0D(1,2,0,150,200) 
		repeat 
	endif 
	return 
endf 

def node_004
	function#54() 
	function#4E() 
	>> node_007 
	>> node_005 
	>> node_006 
	*&
	return 
endf 

def node_005
	-> action#0B() 
	return 
endf 

def node_006
	-> action#08() 
	return 
endf 

def node_007
	if self.angle_2d_cw_between(20,340) 
		-> action#05() 
	else 
	endif 
	return 
endf 

def node_008
	function#50() 
	function#4E() 
	return 
endf 

def node_009
	>> node_007 
	-> action#06() 
	return 
endf 

def node_010
	if function#51(0,3000) 
		if function#3F() 
			-> action#15() 
		else 
		endif 
		repeat 
	else 
		-> action#14() 
	endif 
	return 
endf 

def node_011
	>> node_012 
	[RegisterVar0 ++] 
	[RegisterVar1 ++] 
	[RegisterVar2 ++] 
	>> node_052 
	>> node_054 
	>> node_055 
	>> node_057 
	>> node_058 
	>> node_059 
	>> node_060 
	>> node_061 
	>> node_062 
	>> node_063 
	>> node_064 
	>> node_065 
	>> node_066 
	>> node_067 
	*&
	>> node_079 
	>> node_036 
	return 
endf 

def node_012
	function#E4(4) 
	function#E4(1) 
	function#E4(2) 
	function#E4(11) 
	function#E7(1) 
	function#E7(11) 
	function#E7(2) 
	function#E7(3) 
	function#E7(4) 
	function#E7(5) 
	return 
endf 

def node_013
	if function#46() @ unknExtra2:1 
		>> node_019 
		function#DA() 
		if [RegisterVar11 += 0] 
			>> node_060 
		else 
			if [RegisterVar14 += 0] 
				>> node_034 
			elif [RegisterVar14 += 1] 
				>> node_036 
			else 
				>> node_036 
			endif 
		endif 
	else 
		return 
	endif 
	reset 
endf 

def node_014
	function#DA() 
	>> node_019 
	return 
endf 

def node_015
	-> action#03(2,6,0,100,100) 
	>> node_013 
	return 
endf 

def node_016
	-> action#04(2,0,0,100) 
	>> node_013 
	return 
endf 

def node_017
	-> action#29() 
	return 
endf 

def node_018
	-> action#0D(2,6,0,100,100) 
	>> node_013 
	return 
endf 

def node_019
	-> action#06() 
	return 
endf 

def node_020
	-> action#07() 
	return 
endf 

def node_021
	-> action#0A() 
	return 
endf 

def node_022
	-> action#08() 
	return 
endf 

def node_023
	if function#44() 
		>> node_022 
	else 
		-> action#27() 
	endif 
	return 
endf 

def node_024
	-> action#2A() 
	return 
endf 

def node_025
	-> action#2B() 
	return 
endf 

def node_026
	-> action#2C() 
	return 
endf 

def node_027
	-> action#2D() 
	return 
endf 

def node_028
	>> node_052 
	>> node_068 
	return 
endf 

def node_029
	>> node_052 
	>> node_068 
	>> node_068 
	return 
endf 

def node_030
	>> node_052 
	>> node_068 
	>> node_068 
	>> node_068 
	return 
endf 

def node_031
	if [RegisterVar3 += 1] 
		>> node_026 
	elif [RegisterVar3 += 2] 
		>> node_025 
	elif [RegisterVar3 += 3] 
		>> node_027 
	endif 
	>> node_052 
	return 
endf 

def node_032
	function#DE(2000) 
	function#E2() 
	if function#D2(8) 
		if self.distance_2d_to_target().leq(1500) 
			function#E5() 
			>> node_017 
		endif 
	endif 
	return 
endf 

def node_033
	if self.distance_3d_to_target().leq(200) 
		>> node_048 
	else 
		>> node_018 
		>> node_030 
		>> node_043 
		if [RegisterVar5 *= 0] 
			>> node_045 
		else 
			>> node_041 
			if [RegisterVar11 += 0] 
				>> node_047 
			endif 
		endif 
	endif 
	*&
	return 
endf 

def node_034
	if [RegisterVar15 -= 3] 
		random (90) 
					>> node_051 
					function#DA() 
					>> node_063 
					>> node_079 
					>> node_064 
					return 
		elser (10) 
		endr 
	endif 
	function#DA() 
	function#DD(300) 
	function#DE(3000) 
	function#E2(1) 
	if [RegisterVar15 += 0] 
		function#DF(80) 
	endif 
	if function#D2(4) 
		>> node_063 
		>> node_080 
		>> node_060 
	else 
		function#DD(300) 
		function#DE(3000) 
		function#E2(1) 
		if function#D2(4) 
			>> node_063 
			>> node_080 
			>> node_060 
		else 
			>> node_051 
			if [RegisterVar14 *= 0] 
				>> node_036 
			endif 
			>> node_063 
			>> node_079 
			>> node_064 
		endif 
	endif 
	return 
endf 

def node_035
	if self.distance_3d_to_target().leq(200) 
		>> node_049 
	else 
		>> node_015 
		>> node_028 
		>> node_046 
		if [RegisterVar5 *= 0] 
			>> node_045 
		else 
			>> node_041 
			if [RegisterVar11 += 0] 
				>> node_047 
			endif 
		endif 
	endif 
	*&
	return 
endf 

def node_036
	function#DD(3000) 
	function#DE(10000) 
	function#E2(2) 
	if function#D2(3) 
		>> node_060 
	else 
		function#DD(3000) 
		function#DE(20000) 
		function#E2(2) 
		function#D2(3) 
		>> node_060 
	endif 
	return 
endf 

def node_037
	if [RegisterVar14 += 0] 
		if [RegisterVar15 += 0] 
			>> node_034 
			>> node_033 
		else 
			>> node_033 
			if [RegisterVar14 *= 0] 
				>> node_036 
				>> node_035 
			endif 
		endif 
	elif [RegisterVar14 += 1] 
		>> node_035 
	elif [RegisterVar14 += 2] 
		>> node_039 
	endif 
	*&
	*&
	return 
endf 

def node_038
	function#DD() 
	function#DE(500) 
	function#E2() 
	function#F0() 
	function#F1() 
	if function#D2(2) 
		if [RegisterVar14 += 2] 
			>> node_062 
			>> node_063 
			>> node_079 
			>> node_079 
			>> node_064 
			>> node_031 
			>> node_040 
		endif 
	else 
		if [RegisterVar14 += 2] 
			>> node_063 
			>> node_064 
		endif 
	endif 
	return 
endf 

def node_039
	if [RegisterVar13 += 0] 
		self.targetEnemy(9) @ parameter2:100 
		>> node_031 
		>> node_021 
		function#D3() 
		>> node_078 
	else 
		if self.distance_3d_to_target().leq(200) 
			>> node_031 
			>> node_014 
			>> node_062 
			>> node_063 
			>> node_079 
			>> node_064 
			function#DA() 
			>> node_036 
		else 
			if [RegisterVar13 *= 40] 
				>> node_062 
				>> node_031 
				-> action#06() 
				>> node_038 
				if [RegisterVar14 %= 2] 
					>> node_062 
					>> node_063 
					>> node_079 
					>> node_064 
					return 
				endif 
				return 
			endif 
			>> node_016 
			>> node_029 
			>> node_078 
		endif 
	endif 
	return 
endf 

def node_040
	if [RegisterVar11 *= 0] 
		>> node_060 
	endif 
	function#DD(3000) 
	function#DA() 
	function#DE(20000) 
	function#E2(2) 
	function#D2(3) 
	*&
	return 
endf 

def node_041
	function#DD() 
	function#DE(500) 
	function#E2() 
	function#F0() 
	function#F1() 
	if function#D2(2) 
		>> node_060 
		>> node_076 
		>> node_076 
	endif 
	return 
endf 

def node_042
	function#DA() 
	>> node_060 
	>> node_062 
	>> node_063 
	>> node_079 
	>> node_079 
	>> node_064 
	>> node_031 
	>> node_020 
	>> node_040 
	return 
endf 

def node_043
	if [RegisterVar11 += 0] 
		return 
	endif 
	*&
	if self.targetEnemy(48) 
		if self.distance_3d_recalc_to_target().leq(1500) 
			>> node_071 
			if [RegisterVar11 *= 0] 
				function#D3() 
				return 
			endif 
			*&
			if [RegisterVar6 -= 50] 
				if [RegisterVar7 /= 3] 
					random (16) 
								>> node_044 
					elser (84) 
					endr 
				elif [RegisterVar7 /= 6] 
					random (8) 
								>> node_044 
					elser (92) 
					endr 
				elif [RegisterVar7 /= 9] 
					random (4) 
								>> node_044 
					elser (96) 
					endr 
				else 
					random (1) 
								>> node_044 
					elser (99) 
					endr 
				endif 
			endif 
		endif 
		function#D3() 
	endif 
	return 
endf 

def node_044
	>> node_070 
	>> node_072 
	return 
endf 

def node_045
	>> node_031 
	self.targetEnemy(9) @ parameter2:100 
	>> node_020 
	>> node_023 
	function#D3() 
	>> node_054 
	>> node_055 
	return 
endf 

def node_046
	if [RegisterVar11 += 0] 
		return 
	endif 
	*&
	if self.targetEnemy(48) 
		if self.distance_3d_recalc_to_target().leq(1500) 
			>> node_071 
			if [RegisterVar6 -= 80] 
				if [RegisterVar7 /= 2] 
					random (4) 
								>> node_044 
					elser (96) 
					endr 
				elif [RegisterVar7 /= 3] 
					random (3) 
								>> node_044 
					elser (97) 
					endr 
				elif [RegisterVar7 /= 4] 
					random (2) 
								>> node_044 
					elser (98) 
					endr 
				else 
					random (1) 
								>> node_044 
					elser (99) 
					endr 
				endif 
			endif 
		endif 
		function#D3() 
	endif 
	return 
endf 

def node_047
	if [RegisterVar14 += 1] 
		if [RegisterVar11 += 0] 
			function#DD(300) 
			function#DE(1000) 
			function#E2() 
			function#DF(80) 
			function#EA(1) 
			if function#D2(1) 
				-> action#06() 
				>> node_060 
				>> node_076 
			endif 
		endif 
	endif 
	return 
endf 

def node_048
	if [RegisterVar11 += 0] 
		>> node_031 
		>> node_014 
		>> node_034 
	elif [RegisterVar11 += 1] 
		>> node_050 
	else 
		>> node_042 
	endif 
	return 
endf 

def node_049
	if [RegisterVar11 += 0] 
		>> node_031 
		>> node_014 
		>> node_034 
	elif [RegisterVar11 += 1] 
		>> node_050 
	else 
		>> node_042 
	endif 
	return 
endf 

def node_050
	>> node_031 
	>> node_022 
	function#DA() 
	>> node_060 
	return 
endf 

def node_051
	function#E4(4) 
	function#E4(1) 
	return 
endf 

def node_052
	[RegisterVar3 ++] 
	return 
endf 

def node_053
	[RegisterVar4 ++] 
	return 
endf 

def node_054
	[RegisterVar5 ++] 
	return 
endf 

def node_055
	[RegisterVar6 ++] 
	return 
endf 

def node_056
	[RegisterVar7 ++] 
	return 
endf 

def node_057
	[RegisterVar8 ++] 
	return 
endf 

def node_058
	[RegisterVar9 ++] 
	return 
endf 

def node_059
	[RegisterVar10 ++] 
	return 
endf 

def node_060
	[RegisterVar11 ++] 
	return 
endf 

def node_061
	[RegisterVar12 ++] 
	return 
endf 

def node_062
	[RegisterVar13 ++] 
	return 
endf 

def node_063
	[RegisterVar14 ++] 
	return 
endf 

def node_064
	[RegisterVar15 ++] 
	return 
endf 

def node_065
	[RegisterVar16 ++] 
	return 
endf 

def node_066
	[RegisterVar17 ++] 
	return 
endf 

def node_067
	[RegisterVar18 ++] 
	return 
endf 

def node_068
	[RegisterVar3 |-] 
	return 
endf 

def node_069
	[RegisterVar4 |-] 
	return 
endf 

def node_070
	[RegisterVar5 |-] 
	return 
endf 

def node_071
	[RegisterVar6 |-] 
	return 
endf 

def node_072
	[RegisterVar7 |-] 
	return 
endf 

def node_073
	[RegisterVar8 |-] 
	return 
endf 

def node_074
	[RegisterVar9 |-] 
	return 
endf 

def node_075
	[RegisterVar10 |-] 
	return 
endf 

def node_076
	[RegisterVar11 |-] 
	return 
endf 

def node_077
	[RegisterVar12 |-] 
	return 
endf 

def node_078
	[RegisterVar13 |-] 
	return 
endf 

def node_079
	[RegisterVar14 |-] 
	return 
endf 

def node_080
	[RegisterVar15 |-] 
	return 
endf 

def node_081
	[RegisterVar16 |-] 
	return 
endf 

def node_082
	[RegisterVar17 |-] 
	return 
endf 

def node_083
	[RegisterVar18 |-] 
	return 
endf 

