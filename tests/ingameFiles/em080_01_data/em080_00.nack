importactions Acidic_Glavenus as acidic_glavenus
importlibrary Global as Global

def node_000 : 236
	>> Global.node_001 
	>> node_054 
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#101(1) 
		>> Global.node_096 
		>> node_001 
	elif function#101(2) 
		[RegisterVar0 |-] 
		if function#103(3) 
			>> node_004 
		else 
			>> node_003 
		endif 
	else 
		>> Global.node_096 
		>> node_002 
	endif 
	reset 
endf 

def node_001 : 253
	if self.distance_3d_to_target().leq(500) 
		if self.enraged() 
			>> node_010 
		elif self.fatigued() 
			>> node_015 
		else 
			>> node_005 
		endif 
	elif self.distance_3d_to_target().leq(1000) 
		if self.enraged() 
			>> node_011 
		elif self.fatigued() 
			>> node_016 
		else 
			>> node_006 
		endif 
	elif self.distance_3d_to_target().leq(1500) 
		if self.enraged() 
			>> node_012 
		elif self.fatigued() 
			>> node_017 
		else 
			>> node_007 
		endif 
	elif self.distance_3d_to_target().leq(2500) 
		if self.enraged() 
			>> node_013 
		elif self.fatigued() 
			>> node_018 
		else 
			>> node_008 
		endif 
	else 
		if self.enraged() 
			>> node_014 
		elif self.fatigued() 
			>> node_019 
		else 
			>> node_009 
		endif 
	endif 
	>> node_051 
	reset 
endf 

def node_002 : 254
	if self.distance_3d_to_target().leq(500) 
		if self.enraged() 
			>> node_026 
		elif self.fatigued() 
			>> node_031 
		else 
			>> node_021 
		endif 
	elif self.distance_3d_to_target().leq(1000) 
		if self.enraged() 
			>> node_027 
		elif self.fatigued() 
			>> node_032 
		else 
			>> node_022 
		endif 
	elif self.distance_3d_to_target().leq(1500) 
		if self.enraged() 
			>> node_028 
		elif self.fatigued() 
			>> node_033 
		else 
			>> node_023 
		endif 
	elif self.distance_3d_to_target().leq(2500) 
		if self.enraged() 
			>> node_029 
		elif self.fatigued() 
			>> node_034 
		else 
			>> node_024 
		endif 
	else 
		if self.enraged() 
			>> node_030 
		elif self.fatigued() 
			>> node_035 
		else 
			>> node_025 
		endif 
	endif 
	reset 
endf 

def node_003 : 255
	if self.distance_3d_to_target().leq(500) 
		if self.enraged() 
			>> node_041 
		elif self.fatigued() 
			>> node_046 
		else 
			>> node_036 
		endif 
	elif self.distance_3d_to_target().leq(1000) 
		if self.enraged() 
			>> node_042 
		elif self.fatigued() 
			>> node_047 
		else 
			>> node_037 
		endif 
	elif self.distance_3d_to_target().leq(1500) 
		if self.enraged() 
			>> node_043 
		elif self.fatigued() 
			>> node_048 
		else 
			>> node_038 
		endif 
	elif self.distance_3d_to_target().leq(2500) 
		if self.enraged() 
			>> node_044 
		elif self.fatigued() 
			>> node_049 
		else 
			>> node_039 
		endif 
	else 
		if self.enraged() 
			>> node_045 
		elif self.fatigued() 
			>> node_050 
		else 
			>> node_040 
		endif 
	endif 
	reset 
endf 

def node_004 : 288
	if self.distance_2d_to_target().leq(1000) 
		random (40) >> Global.node_084 
		elser (60) 
		endr 
	else 
	endif 
	if self.distance_2d_to_target().leq(750) 
		random (15) >> Global.node_089 
		elser (45) >> Global.node_088 
		elser (40) 
		endr 
	elif self.distance_2d_to_target().leq(1500) 
		random (15) >> Global.node_089 
		elser (45) >> Global.node_083 
		elser (40) 
		endr 
	else 
	endif 
	>> Global.node_090 
	reset 
endf 

def node_005 : 237
	random (5) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (10) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_006 : 238
	random (5) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (20) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (20) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_007 : 239
	random (10) >> Global.node_060 
	elser (15) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (25) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (0) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_008 : 240
	random (70) >> Global.node_055 
				return 
	elser (30) >> Global.node_073 
	endr 
	random (20) >> Global.node_060 
	elser (0) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (10) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_009 : 241
	>> Global.node_010 
	return 
endf 

def node_010 : 242
	random (10) >> Global.node_059 
	elser (10) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (10) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (20) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_011 : 243
	random (10) >> Global.node_059 
	elser (10) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (20) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (20) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_012 : 244
	random (10) >> Global.node_060 
	elser (10) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (30) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (15) >> Global.node_054 
	elser (0) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_013 : 245
	random (70) >> Global.node_055 
				return 
	elser (30) >> Global.node_073 
	endr 
	random (20) >> Global.node_060 
	elser (0) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (25) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (10) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_014 : 246
	>> Global.node_010 
	return 
endf 

def node_015 : 247
	random (5) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (35) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_016 : 248
	random (25) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (20) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_017 : 249
	random (10) >> Global.node_060 
	elser (20) >> Global.node_065 
	elser (45) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (0) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_018 : 250
	random (70) >> Global.node_055 
				return 
	elser (30) >> Global.node_073 
	endr 
	random (20) >> Global.node_060 
	elser (0) >> Global.node_065 
	elser (45) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_019 : 251
	>> Global.node_010 
	return 
endf 

def node_020 : 287
endf 

def node_021 : 256
	random (5) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (10) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_022 : 271
	random (5) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (20) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (20) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_023 : 258
	random (10) >> Global.node_060 
	elser (15) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (25) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (0) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_024 : 259
	random (70) >> Global.node_055 
				return 
	elser (30) >> Global.node_073 
	endr 
	random (20) >> Global.node_060 
	elser (0) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (10) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_025 : 260
	>> Global.node_010 
	return 
endf 

def node_026 : 261
	random (10) >> Global.node_059 
	elser (10) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (10) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (20) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_027 : 262
	random (10) >> Global.node_059 
	elser (10) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (20) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (20) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_028 : 263
	random (10) >> Global.node_060 
	elser (10) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (30) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (15) >> Global.node_054 
	elser (0) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_029 : 264
	random (70) >> Global.node_055 
				return 
	elser (30) >> Global.node_073 
	endr 
	random (20) >> Global.node_060 
	elser (0) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (25) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (10) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_030 : 265
	>> Global.node_010 
	return 
endf 

def node_031 : 266
	random (5) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (35) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_032 : 267
	random (25) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (20) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_033 : 268
	random (10) >> Global.node_060 
	elser (20) >> Global.node_065 
	elser (45) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (0) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_034 : 269
	random (70) >> Global.node_055 
				return 
	elser (30) >> Global.node_073 
	endr 
	random (20) >> Global.node_060 
	elser (0) >> Global.node_065 
	elser (45) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_035 : 270
	>> Global.node_010 
	return 
endf 

def node_036 : 272
	random (5) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (10) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_037 : 273
	random (5) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (20) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (20) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_038 : 274
	random (10) >> Global.node_060 
	elser (15) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (25) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (0) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_039 : 275
	random (70) >> Global.node_055 
				return 
	elser (30) >> Global.node_073 
	endr 
	random (20) >> Global.node_060 
	elser (0) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (10) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_040 : 276
	>> Global.node_010 
	return 
endf 

def node_041 : 277
	random (10) >> Global.node_059 
	elser (10) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (10) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (20) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_042 : 278
	random (10) >> Global.node_059 
	elser (10) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (20) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (20) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_043 : 279
	random (10) >> Global.node_060 
	elser (10) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (30) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (15) >> Global.node_054 
	elser (0) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_044 : 280
	random (70) >> Global.node_055 
				return 
	elser (30) >> Global.node_073 
	endr 
	random (20) >> Global.node_060 
	elser (0) >> Global.node_065 
	elser (25) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (25) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (10) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_045 : 281
	>> Global.node_010 
	return 
endf 

def node_046 : 282
	random (5) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (35) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (10) >> Global.node_052 
	endr 
	return 
endf 

def node_047 : 283
	random (25) >> Global.node_059 
	elser (15) >> Global.node_065 
	elser (20) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (20) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_048 : 284
	random (10) >> Global.node_060 
	elser (20) >> Global.node_065 
	elser (45) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (0) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_049 : 285
	random (70) >> Global.node_055 
				return 
	elser (30) >> Global.node_073 
	endr 
	random (20) >> Global.node_060 
	elser (0) >> Global.node_065 
	elser (45) >> Global.node_066 
	elser (0) >> Global.node_073 
	elser (15) >> Global.node_053 
	elser (10) >> Global.node_054 
	elser (10) >> Global.node_050 
	elser (0) >> Global.node_051 
	elser (0) >> Global.node_052 
	endr 
	return 
endf 

def node_050 : 286
	>> Global.node_010 
	return 
endf 

def node_051 : 232
	[RegisterVar2 ++] 
	if [RegisterVar2 <= 4] 
		>> Global.node_095 
	else 
	endif 
	return 
endf 

def node_052 : 252
endf 

def node_053 : 94
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_055 
	reset 
endf 

def node_054 : 193
	>> node_125 
	if self.target(4) 
		>> node_126 => reset 
	elif self.target(3) 
		>> node_126 => reset 
	elif self.target(55) 
		>> node_136 => reset 
	elif function#41() 
		>> Global.node_018 => reset 
	elif self.target(12) 
		>> node_132 => reset 
	elif self.target(14) 
		>> node_129 => reset 
	elif self.target(11) 
		>> node_111 => reset 
	elif self.target(0) @ parameter2:1 
		>> node_128 => reset 
	elif self.target(0) 
		>> node_130 => reset 
	elif [RegisterVar4 == 1] 
		>> node_111 => reset 
	endif 
	return 
endf 

def node_055 : 101
	if function#103() 
		if function#101(2) 
			>> node_057 
		else 
			>> node_063 
		endif 
	else 
		>> node_078 
	endif 
	reset 
endf 

def node_056 : 92
	[RegisterVar1 |-] 
	if self.angle_2d_cw_between(0,165) 
		>> node_121 
	elif self.angle_2d_cw_between(195,360) 
		>> node_120 
	else 
		random (50) >> node_121 
		elser (50) >> node_120 
		endr 
	endif 
	reset 
endf 

def node_057 : 210
	*&
	if self.distance_3d_to_target().leq(500) 
		>> node_058 
	elif self.distance_3d_to_target().leq(1100) 
		>> node_059 
	elif self.distance_3d_to_target().leq(1800) 
		>> node_060 
	elif self.distance_3d_to_target().leq(2500) 
		>> node_061 
	else 
		>> node_062 
	endif 
	reset 
endf 

def node_058 : 211
	>> node_056 
	reset 
endf 

def node_059 : 214
	random (70) >> node_104 
	elser (30) >> node_056 
	endr 
	reset 
endf 

def node_060 : 224
	>> node_074 
	reset 
endf 

def node_061 : 220
	>> node_111 
	reset 
endf 

def node_062 : 223
	>> node_111 
	reset 
endf 

def node_063 : 123
	self.targetEnemy(target_em.random_player_or_cat) 
	>> node_051 
	if self.distance_3d_to_target().leq(500) 
		>> node_064 
	elif self.distance_3d_to_target().leq(1100) 
		>> node_065 
	elif self.distance_3d_to_target().leq(1800) 
		>> node_066 
	elif self.distance_3d_to_target().leq(2500) 
		>> node_067 
	else 
		>> node_068 
	endif 
	reset 
endf 

def node_064 : 124
	random (80) >> node_070 
	elser (20) >> node_071 
	endr 
	reset 
endf 

def node_065 : 128
	>> node_070 
	reset 
endf 

def node_066 : 137
	>> node_075 
	reset 
endf 

def node_067 : 138
	random (70) >> node_092 
	elser (30) >> node_111 
	endr 
	reset 
endf 

def node_068 : 139
	>> node_111 
	reset 
endf 

def node_069 : 227
	if self.angle_2d_cw_between(0,180) 
		>> node_088 
	elif self.angle_2d_cw_between(180,0) 
		>> node_089 
	else 
		random (50) >> node_088 
		elser (50) >> node_089 
		endr 
	endif 
	reset 
endf 

def node_070 : 140
	if self.angle_2d_cw_between(270,90) 
		random (50) >> node_093 
		elser (50) >> node_087 
		endr 
	else 
		random (20) -> acidic_glavenus.back_turn() 
		elser (80) -> acidic_glavenus.turn_tail_attack_l() 
		endr 
	endif 
	reset 
endf 

def node_071 : 145
	if self.angle_2d_cw_between(60,165) 
		random (70) -> acidic_glavenus.turn_bite() 
		elser (30) -> acidic_glavenus.bite() 
		endr 
	elif self.angle_2d_cw_between(195,300) 
		random (70) -> acidic_glavenus.turn_bite() 
		elser (30) -> acidic_glavenus.bite() 
		endr 
	else 
		random (80) -> acidic_glavenus.bite() 
		elser (20) -> acidic_glavenus.dash_bite() 
		endr 
	endif 
	reset 
endf 

def node_072 : 147
	>> node_104 
	reset 
endf 

def node_073 : 148
	>> node_104 
	reset 
endf 

def node_074 : 146
	random (30) >> node_103 
	elser (70) >> node_104 
	endr 
	reset 
endf 

def node_075 : 151
	random (60) >> node_092 
	elser (40) >> node_094 
	endr 
	reset 
endf 

def node_076 : 152
	>> node_102 
	reset 
endf 

def node_077 : 153
	>> node_096 
	reset 
endf 

def node_078 : 102
	if function#103(1) 
		if self.distance_3d_to_target().leq(500) 
			>> node_079 
		elif self.distance_3d_to_target().leq(1000) 
			>> node_081 
		elif self.distance_3d_to_target().leq(1800) 
			>> node_083 
		elif self.distance_3d_to_target().leq(2500) 
			>> node_085 
		else 
			>> node_086 
		endif 
	else 
		if self.distance_3d_to_target().leq(500) 
			>> node_080 
		elif self.distance_3d_to_target().leq(1000) 
			>> node_082 
		elif self.distance_3d_to_target().leq(1800) 
			>> node_084 
		elif self.distance_3d_to_target().leq(2500) 
			>> node_085 
		else 
			>> node_086 
		endif 
	endif 
	reset 
endf 

def node_079 : 103
	if self.angle_2d_cw_between(30,135) 
		random (50) >> node_119 
		elser (25) >> node_116 
		elser (25) >> node_117 
		endr 
	elif self.angle_2d_cw_between(225,330) 
		random (70) >> node_113 
		elser (30) >> node_116 
		endr 
	elif self.angle_2d_cw_between(135,225) 
		random (50) >> node_114 
		elser (20) >> node_113 
		elser (30) >> node_112 
		endr 
	else 
		random (50) >> node_115 
		elser (50) >> node_116 
		endr 
	endif 
	reset 
endf 

def node_080 : 194
	if self.angle_2d_cw_between(225,330) 
		random (50) >> node_119 
		elser (25) >> node_116 
		elser (25) >> node_118 
		endr 
	elif self.angle_2d_cw_between(30,135) 
		random (70) >> node_113 
		elser (30) >> node_116 
		endr 
	elif self.angle_2d_cw_between(135,225) 
		random (50) >> node_114 
		elser (20) >> node_113 
		elser (30) >> node_112 
		endr 
	else 
		random (50) >> node_115 
		elser (50) >> node_116 
		endr 
	endif 
	reset 
endf 

def node_081 : 104
	if self.angle_2d_cw_between(30,135) 
		random (50) >> node_119 
		elser (10) >> node_116 
		elser (10) >> node_115 
		elser (30) >> node_117 
		endr 
	elif self.angle_2d_cw_between(225,330) 
		random (70) >> node_113 
		elser (20) >> node_115 
		elser (10) >> node_116 
		endr 
	elif self.angle_2d_cw_between(135,225) 
		random (50) >> node_114 
		elser (20) >> node_113 
		elser (30) >> node_112 
		endr 
	else 
		random (70) >> node_115 
		elser (30) >> node_116 
		endr 
	endif 
	reset 
endf 

def node_082 : 195
	if self.angle_2d_cw_between(225,330) 
		random (50) >> node_119 
		elser (10) >> node_116 
		elser (10) >> node_115 
		elser (30) >> node_118 
		endr 
	elif self.angle_2d_cw_between(30,135) 
		random (70) >> node_113 
		elser (20) >> node_115 
		elser (10) >> node_116 
		endr 
	elif self.angle_2d_cw_between(135,225) 
		random (50) >> node_114 
		elser (20) >> node_113 
		elser (30) >> node_112 
		endr 
	else 
		random (70) >> node_115 
		elser (30) >> node_116 
		endr 
	endif 
	reset 
endf 

def node_083 : 105
	if self.angle_2d_cw_between(30,135) 
		random (20) >> node_115 
		elser (80) >> node_117 
		endr 
	elif self.angle_2d_cw_between(225,330) 
		random (70) >> node_113 
		elser (30) >> node_115 
		endr 
	elif self.angle_2d_cw_between(135,225) 
		random (50) >> node_114 
		elser (20) >> node_113 
		elser (30) >> node_112 
		endr 
	else 
		random (90) >> node_115 
		elser (10) >> node_122 
		endr 
	endif 
	reset 
endf 

def node_084 : 196
	if self.angle_2d_cw_between(225,330) 
		random (20) >> node_115 
		elser (80) >> node_118 
		endr 
	elif self.angle_2d_cw_between(30,135) 
		random (70) >> node_113 
		elser (30) >> node_115 
		endr 
	elif self.angle_2d_cw_between(135,225) 
		random (50) >> node_114 
		elser (20) >> node_113 
		elser (30) >> node_112 
		endr 
	else 
		random (90) >> node_115 
		elser (10) >> node_122 
		endr 
	endif 
	reset 
endf 

def node_085 : 106
	>> node_056 
	reset 
endf 

def node_086 : 107
	>> node_056 
	reset 
endf 

def node_087 : 154
	-> acidic_glavenus.step_back_short() 
	reset 
endf 

def node_088 : 155
	-> acidic_glavenus.step_side_r() 
	reset 
endf 

def node_089 : 156
	-> acidic_glavenus.step_side_l() 
	reset 
endf 

def node_090 : 172
	-> acidic_glavenus.catch_bite_near() 
	if self.target.pinned() 
		>> node_091 
	else 
		-> acidic_glavenus.catch_bite_near_miss() 
	endif 
	reset 
endf 

def node_091 : 173
	self.targetArea(3) 
	-> acidic_glavenus.catch_throw() 
	-> acidic_glavenus.catch_corner_bite() 
	reset 
endf 

def node_092 : 174
	-> acidic_glavenus.tail_fire_attack() 
	reset 
endf 

def node_093 : 176
	-> acidic_glavenus.tail_fire_attack_back() 
	reset 
endf 

def node_094 : 177
	-> acidic_glavenus.nagiharai() 
	reset 
endf 

def node_095 : 178
	-> acidic_glavenus.tail_vertical_attack() 
	reset 
endf 

def node_096 : 179
	if self.enraged() 
		-> acidic_glavenus.jump_tail_attack2_start() 
	else 
		-> acidic_glavenus.jump_tail_attack() 
	endif 
	reset 
endf 

def node_097 : 180
	-> acidic_glavenus.special_attack() 
	reset 
endf 

def node_098 : 181
	-> acidic_glavenus.wait() 
	reset 
endf 

def node_099 : 198
	-> acidic_glavenus.bite() 
	reset 
endf 

def node_100 : 199
	-> acidic_glavenus.turn_bite() 
	reset 
endf 

def node_101 : 228
	-> acidic_glavenus.dash_bite() 
	reset 
endf 

def node_102 : 229
	-> acidic_glavenus.dash_bite2() 
	reset 
endf 

def node_103 : 114
	if self.angle_2d_cw_between(180,0) 
		-> acidic_glavenus.asyu_move_nagiharai_r() 
	else 
		-> acidic_glavenus.asyu_move_nagiharai() 
	endif 
	reset 
endf 

def node_104 : 115
	-> acidic_glavenus.asyu_move_bite() 
	reset 
endf 

def node_105 : 95
	*&
	if self.distance_3d_to_target().leq(300) 
		>> node_106 
	elif self.distance_3d_to_target().leq(700) 
		>> node_107 
	elif self.distance_3d_to_target().leq(1100) 
		>> node_107 
	elif self.distance_3d_to_target().leq(1800) 
		>> node_108 
	elif self.distance_3d_to_target().leq(2500) 
		>> node_109 
	else 
		>> node_110 
	endif 
	reset 
endf 

def node_106 : 100
	random (40) -> acidic_glavenus.step_side_l() 
	elser (40) -> acidic_glavenus.step_side_r() 
	elser (20) -> acidic_glavenus.step_back_short() 
	endr 
	reset 
endf 

def node_107 : 96
	if [RegisterVar1 <= 1] 
		random (30) >> node_104 
		elser (30) >> node_103 
		elser (40) >> node_056 
		endr 
	else 
		random (50) >> node_104 
		elser (30) >> node_103 
		elser (10) -> acidic_glavenus.dash_bite() 
		elser (10) >> node_093 
		endr 
		*&
	endif 
	reset 
endf 

def node_108 : 97
	random (50) >> node_103 
	elser (50) >> node_104 
	endr 
	reset 
endf 

def node_109 : 98
	random (30) -> acidic_glavenus.jump_tail_attack() 
	elser (70) >> node_111 
	endr 
	reset 
endf 

def node_110 : 99
	>> node_111 
	reset 
endf 

def node_111 : 8
	>> Global.node_096 
	if self.fatigued() 
		-> acidic_glavenus.tired_dash(1,0,2,1000) @ unknExtra0:3000 
	else 
		-> acidic_glavenus.dash(1,0,2,1000) @ unknExtra0:3000 
	endif 
	reset 
endf 

def node_112 : 230
	-> acidic_glavenus.back_turn_e_f() 
	reset 
endf 

def node_113 : 231
	-> acidic_glavenus.quick_turn_e_f() 
	reset 
endf 

def node_114 : 109
	-> acidic_glavenus.switch_tail_attack() 
	reset 
endf 

def node_115 : 110
	-> acidic_glavenus.two_combo_tail_attack_start() 
	reset 
endf 

def node_116 : 111
	-> acidic_glavenus.two_combo_tail_attack_one_shot() 
	reset 
endf 

def node_117 : 112
	-> acidic_glavenus.switch_bite_after_r() 
	reset 
endf 

def node_118 : 113
	-> acidic_glavenus.switch_move_bite_before() 
	reset 
endf 

def node_119 : 116
	-> acidic_glavenus.asyu_special_attack() 
	reset 
endf 

def node_120 : 117
	-> acidic_glavenus.idle_to_idle_sword_f() 
	return 
endf 

def node_121 : 118
	-> acidic_glavenus.idle_to_idle_sword_e() 
	return 
endf 

def node_122 : 119
	-> acidic_glavenus.idle_sword_to_idle() 
	return 
endf 

def node_123 : 120
	-> acidic_glavenus.tail_sharpen_to_idle_sword() 
	return 
endf 

def node_124 : 197
	[RegisterVar2 |-] 
	-> acidic_glavenus.tail_sharpen() 
	return 
endf 

def node_125 : 183
	[RegisterVar4 |-] 
	self.targetEnemy(target_em.random_player_or_cat) 
	if function#5D() 
		function#5E() 
		self.targetEnemy(target_em.random_player_or_cat) 
		>> node_131 
		self.targetArea(4) 
	else 
		self.targetEnemy(target_em.random_player_or_cat) 
	endif 
	if self.vertical_distance_to_target().gt(400) 
		[RegisterVar4 ++] 
	elif self.target(52) 
		[RegisterVar4 ++] 
	else 
		[RegisterVar4 |-] 
	endif 
	return 
endf 

def node_126 : 184
	self.targetArea(19) 
	>> Global.node_096 
	if self.distance_3d_to_target().gt(1000) 
		>> Global.node_010 
		repeat 
	else 
		self.targetEnemy(target_em.random_player_or_cat) >> Global.node_008 
		*&
		random (37) -> acidic_glavenus.combat_search() 
		elser (23) -> acidic_glavenus.threat() 
		elser (40) -> acidic_glavenus.wait() 
		endr 
	endif 
	return 
endf 

def node_127 : 185
	>> Global.node_096 
	if function#7F(3) 
		>> Global.node_069 
	elif function#7F(7) 
		>> Global.node_069 
	else 
	endif 
	>> node_111 
	return 
endf 

def node_128 : 186
	>> Global.node_096 
	if self.above_target() 
		if self.distance_2d_to_target().gt(3000) 
			-> acidic_glavenus.dash(1,0,0,2500) 
		else 
			-> acidic_glavenus.back_turn() 
		endif 
		random (40) >> node_111 
		elser (60) >> node_133 
		endr 
	else 
		if self.distance_2d_to_target().gt(1500) 
			-> acidic_glavenus.dash(1,0,0,800) 
		else 
			>> node_134 
		endif 
	endif 
	return 
endf 

def node_129 : 187
	>> Global.node_096 
	if self.distance_2d_to_target().gt(3000) 
		-> acidic_glavenus.dash() 
	else 
		-> acidic_glavenus.back_turn() 
	endif 
	>> node_133 
	return 
endf 

def node_130 : 293
	if self.below_target() 
		self.targetArea(77) 
		>> node_135 
		>> node_111 
	else 
		>> node_128 
	endif 
	*&
	return 
endf 

def node_131 : 188
	if self.angle_2d_cw_between(90,270) 
		-> acidic_glavenus.combat_search() 
	elif self.distance_3d_to_target().gt(3000) 
		-> acidic_glavenus.combat_search() 
	else 
		-> acidic_glavenus.combat_search() 
	endif 
	return 
endf 

def node_132 : 189
	if function#103() 
		>> node_094 
	else 
		>> node_115 
	endif 
	return 
endf 

def node_133 : 190
	>> node_135 
	-> acidic_glavenus.jump_attack_high() 
	return 
endf 

def node_134 : 191
	>> node_135 
	-> acidic_glavenus.jump_attack() 
	return 
endf 

def node_135 : 192
	if self.angle_2d_cw_between(50,310) 
		-> acidic_glavenus.quick_turn() 
	else 
		*&
	endif 
	return 
endf 

def node_136 : 289
	if self.enraged() 
		>> node_137 
	elif self.fatigued() 
		>> node_138 
	else 
		>> node_139 
	endif 
	return 
endf 

def node_137 : 290
	if function#7F(2) 
		random (25) -> acidic_glavenus.jump_attack() 
		elser (10) -> acidic_glavenus.turn_tail_attack_l() 
		elser (15) -> acidic_glavenus.nagiharai() 
		elser (5) -> acidic_glavenus.back_turn() 
		elser (10) -> acidic_glavenus.bite() 
		elser (10) -> acidic_glavenus.tail_fire_attack_back() 
		elser (5) -> acidic_glavenus.step_side_l() 
		elser (5) -> acidic_glavenus.step_side_r() 
		elser (15) -> acidic_glavenus.turn_bite() 
		endr 
	elif function#7F(6) 
		random (25) -> acidic_glavenus.jump_attack() 
		elser (10) -> acidic_glavenus.turn_tail_attack_l() 
		elser (15) -> acidic_glavenus.nagiharai() 
		elser (5) -> acidic_glavenus.back_turn() 
		elser (10) -> acidic_glavenus.bite() 
		elser (10) -> acidic_glavenus.tail_fire_attack_back() 
		elser (5) -> acidic_glavenus.step_side_l() 
		elser (5) -> acidic_glavenus.step_side_r() 
		elser (15) -> acidic_glavenus.turn_bite() 
		endr 
	elif function#7F(8) 
		random (25) -> acidic_glavenus.jump_attack() 
		elser (10) -> acidic_glavenus.turn_tail_attack_l() 
		elser (15) -> acidic_glavenus.nagiharai() 
		elser (5) -> acidic_glavenus.back_turn() 
		elser (10) -> acidic_glavenus.bite() 
		elser (10) -> acidic_glavenus.tail_fire_attack_back() 
		elser (5) -> acidic_glavenus.step_side_l() 
		elser (5) -> acidic_glavenus.step_side_r() 
		elser (15) -> acidic_glavenus.turn_bite() 
		endr 
	elif function#7F(9) 
		random (25) -> acidic_glavenus.jump_attack() 
		elser (10) -> acidic_glavenus.turn_tail_attack_l() 
		elser (15) -> acidic_glavenus.nagiharai() 
		elser (5) -> acidic_glavenus.back_turn() 
		elser (10) -> acidic_glavenus.bite() 
		elser (10) -> acidic_glavenus.tail_fire_attack_back() 
		elser (5) -> acidic_glavenus.step_side_l() 
		elser (5) -> acidic_glavenus.step_side_r() 
		elser (15) -> acidic_glavenus.turn_bite() 
		endr 
	else 
		random (10) -> acidic_glavenus.turn_tail_attack_l() 
		elser (10) -> acidic_glavenus.nagiharai() 
		elser (10) -> acidic_glavenus.back_turn() 
		elser (15) -> acidic_glavenus.bite() 
		elser (15) -> acidic_glavenus.tail_fire_attack_back() 
		elser (10) -> acidic_glavenus.step_side_l() 
		elser (10) -> acidic_glavenus.step_side_r() 
		elser (20) -> acidic_glavenus.turn_bite() 
		endr 
	endif 
	return 
endf 

def node_138 : 291
	random (5) -> acidic_glavenus.jump_attack() 
	elser (10) -> acidic_glavenus.nagiharai() 
	elser (20) -> acidic_glavenus.turn_bite() 
	elser (10) -> acidic_glavenus.bite() 
	elser (5) -> acidic_glavenus.step_side_l() 
	elser (5) -> acidic_glavenus.step_side_r() 
	elser (10) -> acidic_glavenus.back_turn() 
	elser (15) -> acidic_glavenus.tired_wait() 
	elser (10) -> acidic_glavenus.turn_tail_attack_l() 
	elser (10) -> acidic_glavenus.tail_fire_attack_back() 
	endr 
	return 
endf 

def node_139 : 292
	if function#7F(2) 
		random (20) -> acidic_glavenus.jump_attack() 
		elser (10) -> acidic_glavenus.turn_tail_attack_l() 
		elser (15) -> acidic_glavenus.nagiharai() 
		elser (5) -> acidic_glavenus.back_turn() 
		elser (10) -> acidic_glavenus.bite() 
		elser (10) -> acidic_glavenus.tail_fire_attack_back() 
		elser (5) -> acidic_glavenus.step_side_l() 
		elser (5) -> acidic_glavenus.step_side_r() 
		elser (5) -> acidic_glavenus.step_back_short() 
		elser (15) -> acidic_glavenus.turn_bite() 
		endr 
	elif function#7F(6) 
		random (20) -> acidic_glavenus.jump_attack() 
		elser (10) -> acidic_glavenus.turn_tail_attack_l() 
		elser (15) -> acidic_glavenus.nagiharai() 
		elser (5) -> acidic_glavenus.back_turn() 
		elser (10) -> acidic_glavenus.bite() 
		elser (10) -> acidic_glavenus.tail_fire_attack_back() 
		elser (5) -> acidic_glavenus.step_side_l() 
		elser (5) -> acidic_glavenus.step_side_r() 
		elser (5) -> acidic_glavenus.step_back_short() 
		elser (15) -> acidic_glavenus.turn_bite() 
		endr 
	elif function#7F(8) 
		random (20) -> acidic_glavenus.jump_attack() 
		elser (10) -> acidic_glavenus.turn_tail_attack_l() 
		elser (15) -> acidic_glavenus.nagiharai() 
		elser (5) -> acidic_glavenus.back_turn() 
		elser (10) -> acidic_glavenus.bite() 
		elser (10) -> acidic_glavenus.tail_fire_attack_back() 
		elser (5) -> acidic_glavenus.step_side_l() 
		elser (5) -> acidic_glavenus.step_side_r() 
		elser (5) -> acidic_glavenus.step_back_short() 
		elser (15) -> acidic_glavenus.turn_bite() 
		endr 
	elif function#7F(9) 
		random (20) -> acidic_glavenus.jump_attack() 
		elser (10) -> acidic_glavenus.turn_tail_attack_l() 
		elser (15) -> acidic_glavenus.nagiharai() 
		elser (5) -> acidic_glavenus.back_turn() 
		elser (10) -> acidic_glavenus.bite() 
		elser (10) -> acidic_glavenus.tail_fire_attack_back() 
		elser (5) -> acidic_glavenus.step_side_l() 
		elser (5) -> acidic_glavenus.step_side_r() 
		elser (5) -> acidic_glavenus.step_back_short() 
		elser (15) -> acidic_glavenus.turn_bite() 
		endr 
	else 
		random (15) -> acidic_glavenus.turn_tail_attack_l() 
		elser (10) -> acidic_glavenus.nagiharai() 
		elser (10) -> acidic_glavenus.back_turn() 
		elser (15) -> acidic_glavenus.bite() 
		elser (15) -> acidic_glavenus.tail_fire_attack_back() 
		elser (5) -> acidic_glavenus.step_side_l() 
		elser (5) -> acidic_glavenus.step_side_r() 
		elser (10) -> acidic_glavenus.step_back_short() 
		elser (15) -> acidic_glavenus.turn_bite() 
		endr 
	endif 
	return 
endf 

